{"version":3,"sources":["../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-array/src/fsum.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/merge.js","../node_modules/polylabel/polylabel.js","../node_modules/tinyqueue/index.js","../node_modules/d3-hierarchy/src/lcg.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/pack/index.js","../../../../../src/.internal/charts/map/MapSeries.ts","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../../../../../src/.internal/charts/map/MapLine.ts","../node_modules/d3-geo/src/interpolate.js","../../../../../src/.internal/charts/map/MapLineSeries.ts","../node_modules/d3-geo/src/graticule.js","../../../../../src/.internal/charts/map/GraticuleSeries.ts","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/projection/mercator.js","../../../../../src/.internal/charts/map/MapChartDefaultTheme.ts","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/bounds.js","../../../../../src/.internal/charts/map/MapUtils.ts","../../../../../src/.internal/charts/map/MapChart.ts","../../../../../src/.internal/charts/map/MapPointSeries.ts","../../../../../src/.internal/charts/map/MapPolygon.ts","../../../../../src/.internal/charts/map/MapPolygonSeries.ts","../../../../../src/.internal/charts/map/ClusteredPointSeries.ts","../node_modules/d3-geo/src/projection/azimuthal.js","../../../../../src/.internal/charts/map/ZoomControl.ts","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/naturalEarth1.js"],"names":["constantZero","x","optional","f","required","Error","Adder","constructor","this","_partials","Float64Array","_n","add","p","i","j","y","hi","lo","Math","abs","valueOf","n","range","start","stop","step","arguments","length","max","ceil","Array","merge","arrays","from","array","flatten","Queue","require","polylabel","polygon","precision","debug","minX","minY","maxX","maxY","width","height","cellSize","min","h","degeneratePoleOfInaccessibility","distance","cellQueue","undefined","compareMax","push","Cell","bestCell","area","points","len","a","b","getCentroidCell","bboxCell","d","numProbes","cell","pop","console","log","round","poleOfInaccessibility","inside","minDistSq","Infinity","k","ring","getSegDistSq","sqrt","pointToPolygonDist","SQRT2","px","py","dx","dy","t","default","module","exports","TinyQueue","data","compare","defaultCompare","_down","item","_up","top","bottom","peek","pos","parent","current","halfLength","left","best","right","m","s","packEncloseRandom","circles","random","e","shuffle","B","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","r","x1","y1","r1","x2","y2","r2","x21","y21","r21","l","c","x3","y3","r3","a2","a3","b2","b3","c2","c3","d1","d2","d3","ab","xa","xb","ya","yb","A","C","place","intersects","score","node","_","next","Node","circle","previous","packSiblingsRandom","aa","ca","sj","sk","pack","defaultRadius","value","radius","padding","root","lcg","eachBefore","radiusLeaf","eachAfter","packChildrenRandom","translateChild","size","constant","children","MapSeries","Series","Object","defineProperty","_afterNew","fields","_setRawDefault","on","geoJSON","_prevSettings","clear","super","_handleDirties","get","_geoJSONparsed","_parseGeoJSON","_prepareChildren","_valuesDirty","isDirty","chart","exclude","_centerLocation","$array","id","dataItem","getDataItemById","_excludeDataItem","_excluded","_unexcludeDataItem","include","dataItems","indexOf","_notIncludeDataItem","_unNotIncludeDataItem","_notIncluded","_removeGeometry","_addGeometry","checkInclude","includes","excludes","features","type","geometry","geodataNames","idField","feature","properties","name","_types","dataObject","dataContext","geometryType","set","processDataItem","madeFromGeoData","$object","events","isEnabled","dispatch","target","_placeBulletsContainer","_chart","moveValue","bulletsContainer","_removeBulletsContainer","projection","geoPath","getPrivate","series","_geometries","markDirtyGeometries","_dispose","removeValue","_onDataClear","_markDirtyKey","classNames","concat","className","epsilon","epsilon2","pi","PI","halfPi","quarterPi","tau","degrees","radians","atan","atan2","cos","exp","hypot","floor","sin","pow","sign","tan","asin","haversin","noop","streamGeometry","stream","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","Sphere","sphere","Point","coordinates","point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","lengthSum","lambda0","sinPhi0","cosPhi0","lengthStream","lengthPointFirst","lengthLineEnd","lambda","phi","lengthPoint","sinPhi","cosPhi","delta","cosDelta","z","MapLine","Graphics","_beforeChanged","_projectionDirty","clipAngle","_clear","segments","display","segment","gp0","p0","convert","longitude","latitude","lineTo","gp","pn","_display","context","markDirtyProjection","markDirty","_clearDirty","_getTooltipPoint","tooltipX","tooltipY","$type","Percent","geoPoint","positionToGeoPoint","position","lineType","distanceAB","pointA","pointB","totalDistance","geoLength","currentDistance","positionA","positionB","location","positionAB","p1","invert","x0","y0","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","interpolate","geoInterpolate","MapLineSeries","addDisposer","ListTemplate","Template","new","_new","_root","mapLines","template","makeMapLine","mapLine","make","_setDataItem","_handlePointsToConnect","setPrivate","pointsToConnect","markDirtyValues","coords","setRaw","disposeDataItem","dispose","graticuleX","map","graticuleY","graticule","X1","X0","Y1","Y0","X","Y","DX","DY","lines","filter","outline","slice","reverse","extent","extentMajor","extentMinor","stepMajor","stepMinor","GraticuleSeries","makeDataItem","_dataItem","_generate","_updateChildren","geoGraticule","geoBounds","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","line","rejoin","shift","result","Intersection","other","entry","o","v","compareIntersection","startInside","subject","clip","forEach","pointEqual","sort","link","isSubject","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","pointVisible","clipLine","sink","ringBuffer","clipBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","normal","angle","winding","sum","point0","phi0","lambda1","sinPhi1","cosPhi1","point1","phi1","absDelta","antimeridian","arc","intersection","phiArc","polygonContains","clipRejoin","pointLine","clean","ringSegments","validSegment","NaN","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","direction","circleStream","t0","t1","cosRadius","sinRadius","circleRadius","acos","rotate","center","apply","clipMax","clipMin","clipRectangle","visible","a1","corner","comparePoint","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","ax","ay","transformer","methods","TransformStream","key","prototype","boundsStream","bounds","fit","fitBounds","clipExtent","scale","translate","geoStream","fitExtent","w","fitSize","fitWidth","fitHeight","cosMinDistance","project","delta2","resampleLineTo","c0","c1","depth","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample","resampleNone","transformRadians","scaleTranslateRotate","sx","sy","alpha","transform","scaleTranslate","cosAlpha","sinAlpha","ai","bi","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity","recenter","reset","transformRotate","cr","smallRadius","notHemisphere","intersect","two","n1","n2","n2n2","n1n2","determinant","n1xn2","u","uu","t2","q","polar","q1","code","v0","v00","point2","clipCircle","reflectX","reflectY","mercatorRaw","reclip","forward","mercatorProjection","MapChartDefaultTheme","Theme","setupDefaultRules","ic","interfaceColors","rule","bind","setAll","geoMercator","panX","panY","pinchZoom","zoomStep","zoomLevel","rotationX","rotationY","rotationZ","maxZoomLevel","minZoomLevel","wheelY","wheelX","animationEasing","$ease","wheelEasing","wheelDuration","wheelSensitivity","maxPanOut","centerMapOnZoomOut","role","setColor","affectsBounds","clipFront","clipBack","autoScale","minDistance","scatterDistance","scatterRadius","stopClusterZoom","isMeasured","fillOpacity","strokeWidth","strokeOpacity","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","areaPointFirst","areaPoint","Z0","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lengthRing","cacheDigits","cacheAppend","cacheRadius","cacheCircle","PathString","digits","_append","append","RangeError","strings","appendRound","W0","W1","phi00","z0","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","areaRing","dLambda","sdLambda","adLambda","deltaSum","ranges","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","inflection","phii","lambdai","rangeCompare","rangeContains","merged","deltaMax","getGeoCircle","geoCircle","getGeoCentroid","geoCentroid","getGeoArea","geoArea","getGeoBounds","getGeoRectangle","north","east","south","west","multiPolygon","stepLong","stepLat","ln","surface","ll","lt","normalizeGeoPoint","wrapAngleTo180","$math","latitude180","MapChart","SerialChart","_makeGeoPath","path","projectionStream","contextStream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","setPrivateRaw","seriesContainer","toGlobal","_geoCentroid","_geoBounds","_handleSetWheel","chartContainer","_wheelDp","event","wheelEvent","originalEvent","$utils","preventDefault","toLocal","_handleWheelZoom","deltaY","_handleWheelRotateY","_handleWheelRotateX","deltaX","_disposers","innerWidth","innerHeight","previousGeometries","_geometryColection","_fitMap","prev","hw","hh","centerLocation","xy","xx","yy","_dirtyGeometries","each","_pw","_ph","newScale","_centerX","_centerY","_mapBounds","zoomControl","_disposeProperty","isType","bullets","bullet","sprite","once","minusButton","plusButton","_setUpTouch","$mapUtils","prevGeoBounds","_prevGeoBounds","_dispatchBounds","_mapFitted","homeGeoPoint","goHome","duration","zoomToGeoPoint","_afterChanged","cancelTouch","_defaultThemes","_settings","themeTags","Rectangle","fill","Color","fromHex","_handleChartDown","_handleChartUp","_handleChartMove","license","registry","licenses","match","_licenseApplied","_showBranding","_downZoomLevel","downPoints","_downPoints","count","downPoint","_downTranslateX","_downTranslateY","_downRotationX","_downRotationY","_downRotationZ","downId","_getDownPointId","movePoint","_movePoints","bg","enableType","_za","_txa","_tya","_rxa","_rya","l0","l1","_pLon","_pLat","_event","_handlePinch","movePoints","downPoint0","downPoint1","movePoint0","movePoint1","initialDistance","level","moveCenter","downCenter","tx","ty","_getDownPoint","downPointId","pointerId","local","disableType","ww","downLocation","easing","animate","newZoomLevel","zoomToPoint","zoomToGeoBounds","mapBounds","zl","readerAlert","_t","locale","zoomIn","zoomOut","getArea","MapPointSeries","_positionBullets","_makeBullets","bulletFunction","_setBulletParent","_makeBullet","_positionBullet","lineDataItem","fixed","lineId","lineDI","_lineChangedDp","polygonDataItem","polygonId","polygonDI","positionOnLine","visualCentroid","geoPoint0","geoPoint1","_positionBulletReal","index","_index","zoomToDataItem","zoomToDataItems","di","MapPolygon","isHover","showTooltip","biggestArea","$polylabel","MapPolygonSeries","mapPolygons","makeMapPolygon","mapPolygon","rx","ry","getPolygonByPoint","found","displayObject","_renderer","getObjectAtPoint","getPolygonByGeoPoint","ClusteredPointSeries","d3hierarchy","_spiral","_previousZL","clusterDelay","_clusterDP","setTimeout","_doTheCluster","clusteredDataItems","groups","groupId","_scatterIndex","_scatters","_clusterIndex","_clusters","_key","group","_scatterGroup","_clusterGroup","zoomToCluster","cluster","_clusterDataItem","bulletMethod","sumX","sumY","clusteredDataItem","DataItem","Container","walkChildren","child","Component","averageX","averageY","prevLen","Label","text","markDirtyText","diPoint","scatter","_scatterDataItem","previousCircles","spiralPoint","previousCircle","ZoomControl","ZoomTools","addTag","isPrivateDirty","orthographicRaw","sc","cc","equirectangularRaw","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0","r0y","parallels","conicProjection","lower48Point","alaskaPoint","hawaiiPoint","lower48","conicEqualArea","alaska","hawaii","pointStream","albersUsa","streams","multiplex","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","naturalEarth1Raw","phi4"],"mappings":"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","file":"static/js/9.2a5f9405.chunk.js","sourcesContent":["export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423\nexport class Adder {\n  constructor() {\n    this._partials = new Float64Array(32);\n    this._n = 0;\n  }\n  add(x) {\n    const p = this._partials;\n    let i = 0;\n    for (let j = 0; j < this._n && j < 32; j++) {\n      const y = p[j],\n        hi = x + y,\n        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);\n      if (lo) p[i++] = lo;\n      x = hi;\n    }\n    p[i] = x;\n    this._n = i + 1;\n    return this;\n  }\n  valueOf() {\n    const p = this._partials;\n    let n = this._n, x, y, lo, hi = 0;\n    if (n > 0) {\n      hi = p[--n];\n      while (n > 0) {\n        x = hi;\n        y = p[--n];\n        hi = x + y;\n        lo = y - (hi - x);\n        if (lo) break;\n      }\n      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {\n        y = lo * 2;\n        x = hi + y;\n        if (y == x - hi) hi = x;\n      }\n    }\n    return hi;\n  }\n}\n\nexport function fsum(values, valueof) {\n  const adder = new Adder();\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        adder.add(value);\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        adder.add(value);\n      }\n    }\n  }\n  return +adder;\n}\n\nexport function fcumsum(values, valueof) {\n  const adder = new Adder();\n  let index = -1;\n  return Float64Array.from(values, valueof === undefined\n      ? v => adder.add(+v || 0)\n      : v => adder.add(+valueof(v, ++index, values) || 0)\n  );\n}\n","export default function range(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","function* flatten(arrays) {\n  for (const array of arrays) {\n    yield* array;\n  }\n}\n\nexport default function merge(arrays) {\n  return Array.from(flatten(arrays));\n}\n","'use strict';\n\nvar Queue = require('tinyqueue');\n\nif (Queue.default) Queue = Queue.default; // temporary webpack fix\n\nmodule.exports = polylabel;\nmodule.exports.default = polylabel;\n\nfunction polylabel(polygon, precision, debug) {\n    precision = precision || 1.0;\n\n    // find the bounding box of the outer ring\n    var minX, minY, maxX, maxY;\n    for (var i = 0; i < polygon[0].length; i++) {\n        var p = polygon[0][i];\n        if (!i || p[0] < minX) minX = p[0];\n        if (!i || p[1] < minY) minY = p[1];\n        if (!i || p[0] > maxX) maxX = p[0];\n        if (!i || p[1] > maxY) maxY = p[1];\n    }\n\n    var width = maxX - minX;\n    var height = maxY - minY;\n    var cellSize = Math.min(width, height);\n    var h = cellSize / 2;\n\n    if (cellSize === 0) {\n        var degeneratePoleOfInaccessibility = [minX, minY];\n        degeneratePoleOfInaccessibility.distance = 0;\n        return degeneratePoleOfInaccessibility;\n    }\n\n    // a priority queue of cells in order of their \"potential\" (max distance to polygon)\n    var cellQueue = new Queue(undefined, compareMax);\n\n    // cover polygon with initial cells\n    for (var x = minX; x < maxX; x += cellSize) {\n        for (var y = minY; y < maxY; y += cellSize) {\n            cellQueue.push(new Cell(x + h, y + h, h, polygon));\n        }\n    }\n\n    // take centroid as the first best guess\n    var bestCell = getCentroidCell(polygon);\n\n    // special case for rectangular polygons\n    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);\n    if (bboxCell.d > bestCell.d) bestCell = bboxCell;\n\n    var numProbes = cellQueue.length;\n\n    while (cellQueue.length) {\n        // pick the most promising cell from the queue\n        var cell = cellQueue.pop();\n\n        // update the best cell if we found a better one\n        if (cell.d > bestCell.d) {\n            bestCell = cell;\n            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);\n        }\n\n        // do not drill down further if there's no chance of a better solution\n        if (cell.max - bestCell.d <= precision) continue;\n\n        // split the cell into four cells\n        h = cell.h / 2;\n        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));\n        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));\n        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));\n        numProbes += 4;\n    }\n\n    if (debug) {\n        console.log('num probes: ' + numProbes);\n        console.log('best distance: ' + bestCell.d);\n    }\n\n    var poleOfInaccessibility = [bestCell.x, bestCell.y];\n    poleOfInaccessibility.distance = bestCell.d;\n    return poleOfInaccessibility;\n}\n\nfunction compareMax(a, b) {\n    return b.max - a.max;\n}\n\nfunction Cell(x, y, h, polygon) {\n    this.x = x; // cell center x\n    this.y = y; // cell center y\n    this.h = h; // half the cell size\n    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon\n    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell\n}\n\n// signed distance from point to polygon outline (negative if point is outside)\nfunction pointToPolygonDist(x, y, polygon) {\n    var inside = false;\n    var minDistSq = Infinity;\n\n    for (var k = 0; k < polygon.length; k++) {\n        var ring = polygon[k];\n\n        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {\n            var a = ring[i];\n            var b = ring[j];\n\n            if ((a[1] > y !== b[1] > y) &&\n                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;\n\n            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));\n        }\n    }\n\n    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);\n}\n\n// get polygon centroid\nfunction getCentroidCell(polygon) {\n    var area = 0;\n    var x = 0;\n    var y = 0;\n    var points = polygon[0];\n\n    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {\n        var a = points[i];\n        var b = points[j];\n        var f = a[0] * b[1] - b[0] * a[1];\n        x += (a[0] + b[0]) * f;\n        y += (a[1] + b[1]) * f;\n        area += f * 3;\n    }\n    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);\n    return new Cell(x / area, y / area, 0, polygon);\n}\n\n// get squared distance from a point to a segment\nfunction getSegDistSq(px, py, a, b) {\n\n    var x = a[0];\n    var y = a[1];\n    var dx = b[0] - x;\n    var dy = b[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = b[0];\n            y = b[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = px - x;\n    dy = py - y;\n\n    return dx * dx + dy * dy;\n}\n","\nexport default class TinyQueue {\n    constructor(data = [], compare = defaultCompare) {\n        this.data = data;\n        this.length = this.data.length;\n        this.compare = compare;\n\n        if (this.length > 0) {\n            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n        }\n    }\n\n    push(item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    }\n\n    pop() {\n        if (this.length === 0) return undefined;\n\n        const top = this.data[0];\n        const bottom = this.data.pop();\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = bottom;\n            this._down(0);\n        }\n\n        return top;\n    }\n\n    peek() {\n        return this.data[0];\n    }\n\n    _up(pos) {\n        const {data, compare} = this;\n        const item = data[pos];\n\n        while (pos > 0) {\n            const parent = (pos - 1) >> 1;\n            const current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    }\n\n    _down(pos) {\n        const {data, compare} = this;\n        const halfLength = this.length >> 1;\n        const item = data[pos];\n\n        while (pos < halfLength) {\n            let left = (pos << 1) + 1;\n            let best = data[left];\n            const right = left + 1;\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","// https://en.wikipedia.org/wiki/Linear_congruential_generator#Parameters_in_common_use\nconst a = 1664525;\nconst c = 1013904223;\nconst m = 4294967296; // 2^32\n\nexport default function() {\n  let s = 1;\n  return () => (s = (a * s + c) % m) / m;\n}\n","import {shuffle} from \"../array.js\";\nimport lcg from \"../lcg.js\";\n\nexport default function(circles) {\n  return packEncloseRandom(circles, lcg());\n}\n\nexport function packEncloseRandom(circles, random) {\n  var i = 0, n = (circles = shuffle(Array.from(circles), random)).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + Math.max(a.r, b.r, 1) * 1e-9, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(Math.abs(A) > 1e-6 ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","export default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n\nexport function shuffle(array, random) {\n  let m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import array from \"../array.js\";\nimport lcg from \"../lcg.js\";\nimport {packEncloseRandom} from \"./enclose.js\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packSiblingsRandom(circles, random) {\n  if (!(n = (circles = array(circles)).length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = packEncloseRandom(a, random);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packSiblingsRandom(circles, lcg());\n  return circles;\n}\n","import {optional} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\nimport lcg from \"../lcg.js\";\nimport {packSiblingsRandom} from \"./siblings.js\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    const random = lcg();\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildrenRandom(padding, 0.5, random))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildrenRandom(constantZero, 1, random))\n          .eachAfter(packChildrenRandom(padding, root.r / Math.min(dx, dy), random))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildrenRandom(padding, k, random) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packSiblingsRandom(children, random);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","import type { MapChart } from \"./MapChart\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\nexport interface IMapSeriesDataItem extends ISeriesDataItem {\n\tgeometry?: GeoJSON.Geometry;\n\tgeometryType?: GeoJSON.GeoJsonGeometryTypes;\n\tvalue?: number;\n}\n\nexport interface IMapSeriesSettings extends ISeriesSettings {\n\n\t/**\n\t * All map series will determine the actual bounds shown in the [[MapChart]].\n\t *\n\t * If we need a series to be ignored while calculating the bounds, we can set\n\t * this to `false`.\n\t *\n\t * Especially useful for background series.\n\t *\n\t * @default true\n\t * @since 5.2.36\n\t */\n\taffectsBounds?: boolean;\n\n\t/**\n\t * Map data in GeoJSON format.\n\t */\n\tgeoJSON?: GeoJSON.GeoJSON;\n\n\t/**\n\t * An array of map object ids from geodata to include in the map.\n\t *\n\t * If set, only those objects listed in `include` will be shown.\n\t */\n\tinclude?: Array<string>;\n\n\t/**\n\t * An array of map object ids from geodata to omit when showing the map.\n\t */\n\texclude?: Array<string>;\n\n\t/**\n\t * A field in series `data` that will hold map object's numeric value.\n\t *\n\t * It can be used in a number of places, e.g. tooltips, heat rules, etc.\n\t */\n\tvalueField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryField?: string;\n\n\t/**\n\t * @ignore\n\t */\n\tgeometryTypeField?: string;\n\n\t/**\n\t * Names of geodata items, such as countries, to replace by from loaded\n\t * geodata.\n\t *\n\t * Can be used to override built-in English names for countries.\n\t *\n\t * ```TypeScript\n\t * import am5geodata_lang_ES from '@amcharts5-geodata/lang/es';\n\t * // ...\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t * ```JavaScript\n\t * map.geodataNames = am5geodata_lang_ES;\n\t * ```\n\t *\n\t * @since 5.1.13\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-translations/} for more info\n\t */\n\tgeodataNames?: { [index: string]: string };\n\n}\n\nexport interface IMapSeriesPrivate extends ISeriesPrivate {\n}\n\nexport interface IMapSeriesEvents extends ISeriesEvents {\n\n\t/**\n\t * Invoked when geodata is finished loading and processed.\n\t */\n\tgeodataprocessed: {};\n\n}\n\n/**\n * Base class for map series.\n */\nexport abstract class MapSeries extends Series {\n\tpublic static className: string = \"MapSeries\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([MapSeries.className]);\n\n\tdeclare public chart: MapChart | undefined;\n\tdeclare public _settings: IMapSeriesSettings;\n\tdeclare public _privateSettings: IMapSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapSeriesDataItem;\n\tdeclare public _events: IMapSeriesEvents;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [];\n\n\tpublic _geometries: Array<GeoJSON.Geometry> = [];\n\tprotected _geoJSONparsed: boolean = false;\n\n\tprotected _excluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\tprotected _notIncluded: Array<DataItem<IMapSeriesDataItem>> = [];\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"geometry\", \"geometryType\");\n\t\tthis._setRawDefault(\"geometryField\", \"geometry\");\n\t\tthis._setRawDefault(\"geometryTypeField\", \"geometryType\");\n\t\tthis._setRawDefault(\"idField\", \"id\");\n\n\t\tthis.on(\"geoJSON\", (geoJSON) => {\n\t\t\tlet previous = this._prevSettings.geoJSON;\n\t\t\tif (previous && previous != geoJSON) {\n\t\t\t\tthis.data.clear();\n\t\t\t}\n\t\t})\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _handleDirties() {\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tlet previous = this._prevSettings.geoJSON;\n\n\t\tif (previous && previous != geoJSON) {\n\t\t\tthis._prevSettings.geoJSON = undefined;\n\t\t\tthis._geoJSONparsed = false;\n\t\t}\n\n\t\tif (!this._geoJSONparsed) {\n\t\t\tthis._parseGeoJSON();\n\t\t\tthis._geoJSONparsed = true;\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._handleDirties();\n\t\t}\n\n\t\tif (this.get(\"geoJSON\") && (this.isDirty(\"geoJSON\") || this.isDirty(\"include\") || this.isDirty(\"exclude\"))) {\n\n\t\t\tthis._handleDirties();\n\n\t\t\tconst chart = this.chart;\n\n\t\t\tconst exclude = this.get(\"exclude\");\n\n\t\t\tif (exclude) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(exclude, (id) => {\n\t\t\t\t\tconst dataItem = this.getDataItemById(id);\n\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\tthis._excludeDataItem(dataItem)\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!exclude || exclude.length == 0) {\n\t\t\t\t$array.each(this._excluded, (dataItem) => {\n\t\t\t\t\tthis._unexcludeDataItem(dataItem)\n\t\t\t\t})\n\t\t\t\tthis._excluded = [];\n\t\t\t}\n\n\t\t\tconst include = this.get(\"include\");\n\t\t\tif (include) {\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart._centerLocation = null;\n\t\t\t\t}\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst id = dataItem.get(\"id\");\n\t\t\t\t\tif (id && include.indexOf(id) == -1) {\n\t\t\t\t\t\tthis._notIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (!include) {\n\t\t\t\t$array.each(this._notIncluded, (dataItem) => {\n\t\t\t\t\tthis._unNotIncludeDataItem(dataItem);\n\t\t\t\t})\n\t\t\t\tthis._notIncluded = [];\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._excluded, dataItem);\n\t}\n\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t\t$array.move(this._notIncluded, dataItem);\n\t}\n\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\tprotected checkInclude(id: string, includes: string[] | undefined, excludes?: string[] | undefined): boolean {\n\t\tif (includes) {\n\t\t\tif (includes.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (includes.indexOf(id) == -1) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (excludes && excludes.length > 0) {\n\t\t\tif (excludes.indexOf(id) != -1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _parseGeoJSON() {\n\n\t\tconst geoJSON = this.get(\"geoJSON\");\n\t\tif (geoJSON) {\n\n\t\t\tlet features!: any[];\n\n\t\t\tif (geoJSON.type == \"FeatureCollection\") {\n\t\t\t\tfeatures = geoJSON.features;\n\t\t\t}\n\t\t\telse if (geoJSON.type == \"Feature\") {\n\t\t\t\tfeatures = [geoJSON];\n\t\t\t}\n\t\t\telse if ([\"Point\", \"LineString\", \"Polygon\", \"MultiPoint\", \"MultiLineString\", \"MultiPolygon\"].indexOf(geoJSON.type) != -1) {\n\t\t\t\tfeatures = [{ geometry: geoJSON }];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconsole.log(\"nothing found in geoJSON\");\n\t\t\t}\n\n\t\t\tconst geodataNames = this.get(\"geodataNames\");\n\t\t\tif (features) {\n\n\t\t\t\tconst idField = this.get(\"idField\", \"id\");\n\n\t\t\t\tfor (let i = 0, len = features.length; i < len; i++) {\n\t\t\t\t\tlet feature: any = features[i];\n\t\t\t\t\tlet geometry: any = feature.geometry;\n\n\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\tlet type = geometry.type;\n\t\t\t\t\t\tlet id: string = feature[idField];\n\n\t\t\t\t\t\tif (geodataNames && geodataNames[id]) {\n\t\t\t\t\t\t\tfeature.properties.name = geodataNames[id];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._types.indexOf(type) != -1) {\n\t\t\t\t\t\t\t//if (!this.checkInclude(id, this.get(\"include\"), this.get(\"exclude\"))) {\n\t\t\t\t\t\t\t//\tcontinue;\n\t\t\t\t\t\t\t//}\n\n\t\t\t\t\t\t\tlet dataItem: any;\n\n\t\t\t\t\t\t\tif (id != null) {\n\t\t\t\t\t\t\t\t// find data object in user-provided data\n\t\t\t\t\t\t\t\tdataItem = $array.find(this.dataItems, (value: any) => {\n\t\t\t\t\t\t\t\t\treturn value.get(\"id\") == id;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlet dataObject: any;\n\n\t\t\t\t\t\t\tif (dataItem) {\n\t\t\t\t\t\t\t\tdataObject = dataItem.dataContext;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// create one if not found\n\t\t\t\t\t\t\tif (!dataItem) {\n\t\t\t\t\t\t\t\tdataObject = { geometry: geometry, geometryType: type, madeFromGeoData: true };\n\t\t\t\t\t\t\t\tdataObject[idField] = id;\n\t\t\t\t\t\t\t\tthis.data.push(dataObject);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// in case found\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t// if user-provided object doesn't have points data provided in any way:\n\t\t\t\t\t\t\t\tif (!dataObject.geometry) {\n\t\t\t\t\t\t\t\t\tdataObject.geometry = geometry;\n\t\t\t\t\t\t\t\t\tdataObject.geometryType = type;\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t\t\t\t\t\t\t\tdataItem.set(\"geometryType\", type);\n\t\t\t\t\t\t\t\t\tthis.processDataItem(dataItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// copy properties data to datacontext\n\t\t\t\t\t\t\t$object.softCopyProperties(feature.properties, dataObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst type = \"geodataprocessed\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract markDirtyProjection(): void\n\n\tpublic _placeBulletsContainer(_chart: MapChart) {\n\t\tthis.children.moveValue(this.bulletsContainer);\n\t}\n\n\tpublic _removeBulletsContainer() {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic projection(): GeoProjection | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.get(\"projection\");\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic geoPath(): GeoPath | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\treturn chart.getPrivate(\"geoPath\");\n\t\t}\n\t}\n\n\tprotected _addGeometry(geometry: any, series: MapSeries) {\n\t\tif (geometry && series.get(\"affectsBounds\", true)) {\n\t\t\tthis._geometries.push(geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _removeGeometry(geometry: any) {\n\t\tif (geometry) {\n\t\t\t$array.remove(this._geometries, geometry);\n\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tchart.markDirtyGeometries();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _dispose() {\n\t\tsuper._dispose();\n\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.removeValue(this);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tsuper._onDataClear();\n\t\tthis._geoJSONparsed = false;\n\t\tthis._markDirtyKey(\"exclude\");\n\t}\t\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var hypot = Math.hypot;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import {Adder} from \"d3-array\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar lengthSum,\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum = new Adder();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length.js\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import type { MapLineSeries, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $type from \"../../core/util/Type\";\nimport { Percent } from \"../../core/util/Percent\";\n\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate, IGraphicsEvents } from \"../../core/render/Graphics\";\nimport { geoLength, geoInterpolate, geoDistance } from \"d3-geo\";\n\nexport interface IMapLineSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n}\n\nexport interface IMapLinePrivate extends IGraphicsPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tseries: MapLineSeries;\n}\n\nexport interface IMapLineEvents extends IGraphicsEvents {\n\n\t/**\n\t * Invoked when line is redrawn\n\t */\n\tlinechanged: {};\n}\n\n/**\n * A line object in a [[MapLineSeries]].\n */\nexport class MapLine extends Graphics {\n\n\tdeclare public _settings: IMapLineSettings;\n\tdeclare public _privateSettings: IMapLinePrivate;\n\tdeclare public _events: IMapLineEvents;\n\n\tpublic static className: string = \"MapLine\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapLine.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\t\tif (series) {\n\t\t\t\t\tconst chart = series.chart;\n\t\t\t\t\tif (chart) {\n\t\t\t\t\t\tconst projection = chart.get(\"projection\");\n\t\t\t\t\t\tlet clipAngle: number | null = null;\n\n\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\tclipAngle = projection.clipAngle();\n\t\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\t\t\t\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\t\t\t\tif (geoPath && dataItem) {\n\t\t\t\t\t\t\tthis._clear = true;\n\t\t\t\t\t\t\tif (dataItem.get(\"lineType\", series.get(\"lineType\")) == \"straight\") {\n\n\t\t\t\t\t\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\t\tlet coordinates = geometry.coordinates;\n\t\t\t\t\t\t\t\t\tif (coordinates) {\n\n\t\t\t\t\t\t\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\t\t\t\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\t\t\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\t\t\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\t\t\t\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\t\t\t\t\t\t\t\tif (segment.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp0 = segment[0];\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst p0 = chart.convert({ longitude: gp0[0], latitude: gp0[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(p0.x, p0.y);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (let p = 0; p < segment.length; p++) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst gp = segment[p];\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst pn = chart.convert({ longitude: gp[0], latitude: gp[1] })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay.lineTo(pn.x, pn.y);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\t\t\tif (projection && series.get(\"clipBack\") === false) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(180);\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\t\t\tgeoPath.context(null);\n\n\t\t\t\t\t\t\t\t\tif (projection && projection.clipAngle) {\n\t\t\t\t\t\t\t\t\t\tprojection.clipAngle(clipAngle as any);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst type = \"linechanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipX = this.get(\"tooltipX\");\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\n\t\tlet x = 0;\n\t\tlet y = 0;\n\n\t\tif ($type.isNumber(tooltipX)) {\n\t\t\tx = tooltipX;\n\t\t}\n\n\t\tif ($type.isNumber(tooltipY)) {\n\t\t\ty = tooltipY;\n\t\t}\n\n\t\tif (tooltipX instanceof Percent) {\n\t\t\tconst geoPoint = this.positionToGeoPoint(tooltipX.value)\n\t\t\tconst series = this.getPrivate(\"series\");\n\t\t\tif (series) {\n\t\t\t\tconst chart = series.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst point = chart.convert(geoPoint);\n\t\t\t\t\tx = point.x;\n\t\t\t\t\ty = point.y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn { x, y };\n\t}\n\n\t/**\n\t * Converts relative position along the line (0-1) into pixel coordinates.\n\t *\n\t * @param position  Position (0-1)\n\t * @return Coordinates\n\t */\n\tpublic positionToGeoPoint(position: number): IGeoPoint {\n\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tconst series = this.getPrivate(\"series\");\n\t\tconst chart = series.chart;\n\t\tconst dataItem = this.dataItem as DataItem<IMapLineSeriesDataItem>;\n\n\t\tif (geometry && series && chart && dataItem) {\n\t\t\tconst lineType = dataItem.get(\"lineType\", series.get(\"lineType\"));\n\t\t\tlet totalDistance: number = geoLength(geometry);\n\t\t\tlet currentDistance: number = 0;\n\n\t\t\tlet distanceAB: number;\n\t\t\tlet positionA: number = 0;\n\t\t\tlet positionB: number = 0;\n\t\t\tlet pointA!: [number, number];\n\t\t\tlet pointB!: [number, number];\n\n\t\t\tlet coordinates = geometry.coordinates;\n\t\t\tif (coordinates) {\n\t\t\t\tlet segments!: number[][][];\n\n\t\t\t\tif (geometry.type == \"LineString\") {\n\t\t\t\t\tsegments = [coordinates] as number[][][];\n\t\t\t\t}\n\t\t\t\telse if (geometry.type == \"MultiLineString\") {\n\t\t\t\t\tsegments = coordinates as number[][][];\n\t\t\t\t}\n\n\t\t\t\tfor (let s = 0; s < segments.length; s++) {\n\t\t\t\t\tlet segment = segments[s];\n\t\t\t\t\tif (segment.length > 1) {\n\t\t\t\t\t\tfor (let p = 1; p < segment.length; p++) {\n\t\t\t\t\t\t\tpointA = segment[p - 1] as [number, number];\n\t\t\t\t\t\t\tpointB = segment[p] as [number, number];\n\n\t\t\t\t\t\t\tpositionA = currentDistance / totalDistance;\n\t\t\t\t\t\t\tdistanceAB = geoDistance(pointA, pointB);\n\t\t\t\t\t\t\tcurrentDistance += distanceAB;\n\t\t\t\t\t\t\tpositionB = currentDistance / totalDistance;\n\n\t\t\t\t\t\t\tif (positionA <= position && positionB > position) {\n\t\t\t\t\t\t\t\ts = segments.length;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (segment.length == 1) {\n\t\t\t\t\t\tpointA = segment[0] as [number, number];\n\t\t\t\t\t\tpointB = segment[0] as [number, number];\n\t\t\t\t\t\tpositionA = 0;\n\t\t\t\t\t\tpositionB = 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (pointA && pointB) {\n\t\t\t\t\tlet positionAB: number = (position - positionA) / (positionB - positionA);\n\t\t\t\t\tlet location: number[];\n\n\t\t\t\t\tif (lineType == \"straight\") {\n\t\t\t\t\t\tlet p0 = chart.convert({ longitude: pointA[0], latitude: pointA[1] });\n\t\t\t\t\t\tlet p1 = chart.convert({ longitude: pointB[0], latitude: pointB[1] });\n\n\t\t\t\t\t\tlet x = p0.x + (p1.x - p0.x) * positionAB;\n\t\t\t\t\t\tlet y = p0.y + (p1.y - p0.y) * positionAB;\n\n\t\t\t\t\t\treturn chart.invert({ x: x, y: y });\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tlocation = geoInterpolate(pointA, pointB)(positionAB);\n\t\t\t\t\t\treturn { longitude: location[0], latitude: location[1] }\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math.js\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import type { IMapPointSeriesDataItem } from \"./MapPointSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapLine } from \"./MapLine\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Template } from \"../../core/util/Template\";\n\nimport * as $array from \"../../core/util/Array\";\n\n/**\n * @ignore\n */\nexport interface IMapLineSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapLineSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapLine]] object.\n\t */\n\tmapLine?: MapLine;\n\n\t/**\n\t * GeoJSON geometry of the line.\n\t */\n\tgeometry?: GeoJSON.LineString | GeoJSON.MultiLineString;\n\n\t/**\n\t * An array of data items from [[MapPointSeries]] to use as line end-points. Note, fixed points can not be used here.\n\t */\n\tpointsToConnect?: Array<DataItem<IMapPointSeriesDataItem>>;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t *\n\t * @default \"curved\"\n\t * @since 5.2.32\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n}\n\nexport interface IMapLineSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true` will hide line segments that are in the invisible range\n\t * of the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A line type.\n\t *\n\t * * `\"curved\"` (default) - connects points using shortest distance, which will result in curved lines based on map projection.\n\t * * `\"straight\"` - connects points using visually straight lines, and will not cross the -180/180 longitude.\n\t *\n\t * @default \"curved\"\n\t * @since 5.2.24\n\t */\n\tlineType?: \"curved\" | \"straight\"\n\n\n\t/**\n\t * @ignore\n\t */\n\tlineTypeField?: string;\n}\n\n/**\n * Creates a map series for displaying lines on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-line-series/} for more info\n * @important\n */\nexport class MapLineSeries extends MapSeries {\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"lineType\");\n\t\tthis._setRawDefault(\"lineTypeField\", \"lineType\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapLine(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapLine {\n\t\tconst mapLine = this.children.push(this.mapLines.make());\n\t\tmapLine._setDataItem(dataItem);\n\t\tthis.mapLines.push(mapLine);\n\t\treturn mapLine;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all lines in series.\n\t *\n\t * `mapLines.template` can also be used to configure lines.\n\t *\n\t * @default new ListTemplate<MapLine>\n\t */\n\tpublic readonly mapLines: ListTemplate<MapLine> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapLine._new(this._root, {}, [this.mapLines.template])\n\t));\n\n\tpublic static className: string = \"MapLineSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapLineSeries.className]);\n\n\tdeclare public _settings: IMapLineSeriesSettings;\n\tdeclare public _privateSettings: IMapLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapLineSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"LineString\", \"MultiLineString\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tmapLine.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapLines.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapLine = dataItem.get(\"mapLine\");\n\t\tif (!mapLine) {\n\t\t\tmapLine = this.makeMapLine(dataItem);\n\t\t}\n\n\t\tthis._handlePointsToConnect(dataItem);\n\t\tdataItem.on(\"pointsToConnect\", () => {\n\t\t\tthis._handlePointsToConnect(dataItem);\n\t\t})\n\n\t\tdataItem.set(\"mapLine\", mapLine);\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\n\t\tmapLine.setPrivate(\"series\", this);\n\t}\n\n\tprotected _handlePointsToConnect(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\tif (pointsToConnect) {\n\t\t\t$array.each(pointsToConnect, (point) => {\n\n\t\t\t\tpoint.on(\"geometry\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"longitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\n\t\t\t\tpoint.on(\"latitude\", () => {\n\t\t\t\t\tthis.markDirtyValues(dataItem);\n\t\t\t\t})\n\t\t\t})\n\n\t\t\tthis.markDirtyValues(dataItem);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\t\tif (mapLine) {\n\t\t\t\tconst pointsToConnect = dataItem.get(\"pointsToConnect\");\n\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\tlet coordinates: Array<Array<number>> = [];\n\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\tconst longitude = point.get(\"longitude\");\n\t\t\t\t\t\tconst latitude = point.get(\"latitude\");\n\t\t\t\t\t\tif (longitude != null && latitude != null) {\n\t\t\t\t\t\t\tcoordinates.push([longitude, latitude]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tconst geometry = point.get(\"geometry\");\n\t\t\t\t\t\t\tif (geometry) {\n\t\t\t\t\t\t\t\tconst coords = geometry.coordinates;\n\t\t\t\t\t\t\t\tif (coords) {\n\t\t\t\t\t\t\t\t\tcoordinates.push([coords[0] as any, coords[1] as any]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tlet geometry: any = { type: \"LineString\", coordinates: coordinates };\n\n\t\t\t\t\tdataItem.setRaw(\"geometry\", geometry);\n\t\t\t\t\tmapLine.set(\"geometry\", geometry);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tmapLine.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tthis.mapLines.removeValue(mapLine);\n\t\t\tmapLine.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapLine = dataItem.get(\"mapLine\");\n\t\tif (mapLine) {\n\t\t\tmapLine.setPrivate(\"visible\", true);\n\t\t}\n\t}\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math.js\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import { MapLineSeries, IMapLineSeriesSettings, IMapLineSeriesPrivate, IMapLineSeriesDataItem } from \"./MapLineSeries\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport { geoGraticule } from \"d3-geo\";\n\nexport interface IGraticuleSeriesDataItem extends IMapLineSeriesDataItem {\n}\n\nexport interface IGraticuleSeriesPrivate extends IMapLineSeriesPrivate {\n}\n\nexport interface IGraticuleSeriesSettings extends IMapLineSeriesSettings {\n\tclipExtent?: boolean;\n\n\t/**\n\t * Place a grid line every Xth latitude/longitude.\n\t *\n\t * @default 10\n\t */\n\tstep?: number;\n}\n\n/**\n * A [[MapChart]] series to draw a map grid.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/graticule-series/} for more info\n * @important\n */\nexport class GraticuleSeries extends MapLineSeries {\n\n\tpublic static className: string = \"GraticuleSeries\";\n\tpublic static classNames: Array<string> = MapLineSeries.classNames.concat([GraticuleSeries.className]);\n\n\tdeclare public _settings: IGraticuleSeriesSettings;\n\tdeclare public _privateSettings: IGraticuleSeriesPrivate;\n\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.dataItems.push(this._dataItem);\n\t\tthis._generate();\n\t}\n\n\tpublic _updateChildren() {\n\t\tsuper._updateChildren();\n\n\t\tif (this.isDirty(\"step\")) {\n\t\t\tthis._generate();\n\t\t}\n\n\t\tif (this.isDirty(\"clipExtent\")) {\n\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tchart.events.on(\"geoboundschanged\", () => {\n\t\t\t\t\t\tthis._generate();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tthis._generate();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _generate() {\n\t\tlet graticule = geoGraticule();\n\n\t\tif (graticule) {\n\t\t\tif (this.get(\"clipExtent\")) {\n\t\t\t\tconst chart = this.chart;\n\t\t\t\tif (chart) {\n\t\t\t\t\tconst geoBounds = chart.geoBounds();\n\t\t\t\t\tif (geoBounds) {\n\t\t\t\t\t\tgraticule.extent([[geoBounds.left, geoBounds.bottom], [geoBounds.right, geoBounds.top]]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst step = this.get(\"step\", 10);\n\t\t\tgraticule.stepMinor([360, 360]);\n\t\t\tgraticule.stepMajor([step, step]);\n\t\t\tthis._dataItem.set(\"geometry\", graticule());\n\t\t}\n\t}\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose.js\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n  return [lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    lambda += deltaLambda;\n    if (abs(lambda) > pi) lambda -= Math.round(lambda / tau) * tau;\n    return [lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import noop from \"../noop.js\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y, m) {\n      line.push([x, y, m]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math.js\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual.js\";\nimport {epsilon} from \"../math.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    if (pointEqual(p0, p1)) {\n      if (!p0[2] && !p1[2]) {\n        stream.lineStart();\n        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n        stream.lineEnd();\n        return;\n      }\n      // handle degenerate cases by moving the point\n      p1[0] += 2 * epsilon;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math.js\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import {Adder} from \"d3-array\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, epsilon2, halfPi, pi, quarterPi, sign, sin, tau} from \"./math.js\";\n\nfunction longitude(point) {\n  return abs(point[0]) <= pi ? point[0] : sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  var sum = new Adder();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon2) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {epsilon, halfPi} from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index.js\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math.js\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math.js\";\nimport {rotateRadians} from \"./rotation.js\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(2),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import {abs, epsilon} from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","export default x => x;\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import noop from \"../noop.js\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {default as geoStream} from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian.js\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math.js\";\nimport {transformer} from \"../transform.js\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math.js\";\nimport {rotateRadians} from \"../rotation.js\";\nimport {transformer} from \"../transform.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\nimport resample from \"./resample.js\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    x *= sx; y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate angle\n      sx = 1, // reflectX\n      sy = 1, // reflectX\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function(_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function(_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian.js\";\nimport {circleStream} from \"../circle.js\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 2 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2))\n            point1[2] = 1;\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1], 2);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1], 3);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import { Theme } from \"../../core/Theme\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport { geoMercator } from \"d3-geo\";\r\n\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class MapChartDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/map\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"MapChart\").setAll({\r\n\t\t\tprojection: geoMercator(),\r\n\t\t\tpanX: \"translateX\",\r\n\t\t\tpanY: \"translateY\",\r\n\t\t\tpinchZoom: true,\r\n\t\t\tzoomStep: 2,\r\n\t\t\tzoomLevel: 1,\r\n\t\t\trotationX: 0,\r\n\t\t\trotationY: 0,\r\n\t\t\trotationZ: 0,\r\n\t\t\tmaxZoomLevel: 32,\r\n\t\t\tminZoomLevel: 1,\r\n\t\t\twheelY: \"zoom\",\r\n\t\t\twheelX: \"none\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic),\r\n\t\t\twheelEasing: $ease.out($ease.cubic),\r\n\t\t\twheelDuration: 0,\r\n\t\t\twheelSensitivity: 1,\r\n\t\t\tmaxPanOut: 0.4,\r\n\t\t\tcenterMapOnZoomOut: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapLine\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"MapPolygonSeries\").setAll({\r\n\t\t\taffectsBounds: true\r\n\t\t})\r\n\r\n\r\n\t\tr(\"MapPointSeries\").setAll({\r\n\t\t\taffectsBounds: false,\r\n\t\t\tclipFront: false,\r\n\t\t\tclipBack: true,\r\n\t\t\tautoScale: false\r\n\t\t})\r\n\r\n\t\tr(\"ClusteredPointSeries\").setAll({\r\n\t\t\tminDistance: 20,\r\n\t\t\tscatterDistance: 3,\r\n\t\t\tscatterRadius: 8,\r\n\t\t\tstopClusterZoom: 0.95\r\n\t\t})\r\n\r\n\t\tr(\"MapLineSeries\").setAll({\r\n\t\t\taffectsBounds: false\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"MapPolygon\");\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tprecision: 0.5,\r\n\t\t\t\tisMeasured: false,\r\n\t\t\t\trole: \"figure\",\r\n\t\t\t\tfillOpacity: 1,\r\n\t\t\t\tposition: \"absolute\",\r\n\t\t\t\tstrokeWidth: 0.2,\r\n\t\t\t\tstrokeOpacity: 1\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"primaryButton\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"background\");\r\n\t\t}\r\n\r\n\r\n\t\tr(\"Button\", [\"zoomtools\", \"home\"]).setAll({\r\n\t\t\tvisible: false\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/map: Series\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"GraticuleSeries\").setAll({\r\n\t\t\tstep: 10\r\n\t\t});\r\n\t}\r\n}\r\n","import {Adder} from \"d3-array\";\nimport {abs} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar areaSum = new Adder(),\n    areaRingSum = new Adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum = new Adder();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum = new Adder();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import {sqrt} from \"../math.js\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import {Adder} from \"d3-array\";\nimport {sqrt} from \"../math.js\";\nimport noop from \"../noop.js\";\n\nvar lengthSum = new Adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum = new Adder();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","// Simple caching for constant-radius points.\nlet cacheDigits, cacheAppend, cacheRadius, cacheCircle;\n\nexport default class PathString {\n  constructor(digits) {\n    this._append = digits == null ? append : appendRound(digits);\n    this._radius = 4.5;\n    this._ = \"\";\n  }\n  pointRadius(_) {\n    this._radius = +_;\n    return this;\n  }\n  polygonStart() {\n    this._line = 0;\n  }\n  polygonEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line === 0) this._ += \"Z\";\n    this._point = NaN;\n  }\n  point(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._append`M${x},${y}`;\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._append`L${x},${y}`;\n        break;\n      }\n      default: {\n        this._append`M${x},${y}`;\n        if (this._radius !== cacheRadius || this._append !== cacheAppend) {\n          const r = this._radius;\n          const s = this._;\n          this._ = \"\"; // stash the old string so we can cache the circle path fragment\n          this._append`m0,${r}a${r},${r} 0 1,1 0,${-2 * r}a${r},${r} 0 1,1 0,${2 * r}z`;\n          cacheRadius = r;\n          cacheAppend = this._append;\n          cacheCircle = this._;\n          this._ = s;\n        }\n        this._ += cacheCircle;\n        break;\n      }\n    }\n  }\n  result() {\n    const result = this._;\n    this._ = \"\";\n    return result.length ? result : null;\n  }\n}\n\nfunction append(strings) {\n  let i = 1;\n  this._ += strings[0];\n  for (const j = strings.length; i < j; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  const d = Math.floor(digits);\n  if (!(d >= 0)) throw new RangeError(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  if (d !== cacheDigits) {\n    const k = 10 ** d;\n    cacheDigits = d;\n    cacheAppend = function append(strings) {\n      let i = 1;\n      this._ += strings[0];\n      for (const j = strings.length; i < j; ++i) {\n        this._ += Math.round(arguments[i] * k) / k + strings[i];\n      }\n    };\n  }\n  return cacheAppend;\n}\n","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n","import {Adder} from \"d3-array\";\nimport {asin, atan2, cos, degrees, epsilon, epsilon2, hypot, radians, sin, sqrt} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = hypot(cx, cy, cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2.add(v * cx);\n  Y2.add(v * cy);\n  Z2.add(v * cz);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 = 0;\n  X2 = new Adder();\n  Y2 = new Adder();\n  Z2 = new Adder();\n  stream(object, centroidStream);\n\n  var x = +X2,\n      y = +Y2,\n      z = +Z2,\n      m = hypot(x, y, z);\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = hypot(x, y, z);\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / m) * degrees];\n}\n","import {Adder} from \"d3-array\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math.js\";\nimport noop from \"./noop.js\";\nimport stream from \"./stream.js\";\n\nexport var areaRingSum = new Adder();\n\n// hello?\n\nvar areaSum = new Adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum = new Adder();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum = new Adder();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {Adder} from \"d3-array\";\nimport {areaStream, areaRingSum} from \"./area.js\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian.js\";\nimport {abs, degrees, epsilon, radians} from \"./math.js\";\nimport stream from \"./stream.js\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum,\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum = new Adder();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport * as $math from \"../../core/util/Math\";\nimport { geoCircle, geoCentroid, geoBounds, geoArea } from \"d3-geo\";\n\n/**\n * Returns a GeoJSON representation of a circle, suitable for use as `geometry` value\n * in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   geoPoint  Coordinates\n * @param   radius    Circle radius in degrees\n * @return            Polygon geometry\n */\nexport function getGeoCircle(geoPoint: IGeoPoint, radius: number): GeoJSON.Polygon {\n\treturn geoCircle().center([geoPoint.longitude, geoPoint.latitude]).radius(radius)();\n}\n\n/**\n * Returns geo centroid of a geometry\n */\nexport function getGeoCentroid(geometry: GeoJSON.GeometryObject): IGeoPoint {\n\tconst centroid = geoCentroid(geometry);\n\treturn { longitude: centroid[0], latitude: centroid[1] };\n}\n\n/**\n * Returns geo area of a geometry\n */\nexport function getGeoArea(geometry: GeoJSON.GeometryObject): number {\n\treturn geoArea(geometry);\n}\n\n/**\n * Returns bounds of a geometry\n */\nexport function getGeoBounds(geometry: GeoJSON.GeometryObject): { left: number, right: number, top: number, bottom: number } {\n\tconst bounds = geoBounds(geometry);\n\n\tif (bounds) {\n\t\tconst geoBounds = { left: bounds[0][0], right: bounds[1][0], top: bounds[1][1], bottom: bounds[0][1] };\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\t\treturn geoBounds;\n\t}\n\treturn { left: 0, right: 0, top: 0, bottom: 0 };\n}\n\n/**\n * Returns a GeoJSON representation of a rectangle, suitable for use\n * as `geometry` value in a [[MapPolygon]] in a [[MapPolygonSeries]].\n * \n * @param   north  North latitude\n * @param   east   East longitude\n * @param   south  South latitude\n * @param   west   West longitude\n * @return         polygon geometry\n */\nexport function getGeoRectangle(north: number, east: number, south: number, west: number): GeoJSON.MultiPolygon {\n\n\tlet multiPolygon: Array<Array<Array<[number, number]>>> = [];\n\n\tif (west <= -180) {\n\t\twest = -179.9999;\n\t}\n\tif (south <= -90) {\n\t\tsouth = -89.9999;\n\t}\n\tif (north >= 90) {\n\t\tnorth = 89.9999;\n\t}\n\tif (east >= 180) {\n\t\teast = 179.9999;\n\t}\n\n\n\tlet stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));\n\tlet stepLat = (north - south) / Math.ceil((north - south) / 90);\n\n\tfor (let ln = west; ln < east; ln = ln + stepLong) {\n\t\tlet surface: Array<[number, number]> = [];\n\t\tmultiPolygon.push([surface]);\n\n\t\tif (ln + stepLong > east) {\n\t\t\tstepLong = east - ln;\n\t\t}\n\n\t\tfor (let ll = ln; ll <= ln + stepLong; ll = ll + 5) {\n\t\t\tsurface.push([ll, north]);\n\t\t}\n\n\t\tfor (let lt = north; lt >= south; lt = lt - stepLat) {\n\t\t\tsurface.push([ln + stepLong, lt]);\n\t\t}\n\n\t\tfor (let ll = ln + stepLong; ll >= ln; ll = ll - 5) {\n\t\t\tsurface.push([ll, south]);\n\t\t}\n\n\t\tfor (let lt = south; lt <= north; lt = lt + stepLat) {\n\t\t\tsurface.push([ln, lt]);\n\t\t}\n\t}\n\n\treturn { type: \"MultiPolygon\", coordinates: multiPolygon };\n}\n\n/**\n * Update longitudes and latitudes that wrap around -180/180 and -90/90 values.\n * \n * @param   geoPoint  Input coordinates\n * @return            Updated coordinates\n */\nexport function normalizeGeoPoint(geoPoint: IGeoPoint): IGeoPoint {\n\tlet longitude = wrapAngleTo180(geoPoint.longitude);\n\tlet latitude = Math.asin(Math.sin((geoPoint.latitude * $math.RADIANS))) * $math.DEGREES;\n\n\tlet latitude180 = wrapAngleTo180(geoPoint.latitude);\n\n\tif (Math.abs(latitude180) > 90) {\n\t\tlongitude = wrapAngleTo180(longitude + 180);\n\t}\n\n\tgeoPoint.longitude = longitude;\n\tgeoPoint.latitude = latitude;\n\n\treturn geoPoint;\n}\n\n/**\n * @ignore\n */\nexport function wrapAngleTo180(angle: number): number {\n\tangle = angle % 360;\n\n\tif (angle > 180) {\n\t\tangle -= 360;\n\t}\n\tif (angle < -180) {\n\t\tangle += 360;\n\t}\n\n\treturn angle;\n}","import type { MapSeries } from \"./MapSeries\";\nimport type { MapPointSeries } from \"./MapPointSeries\";\nimport type { GeoProjection, GeoPath } from \"d3-geo\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { ZoomControl } from \"./ZoomControl\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IMapPolygonSeriesDataItem } from \"./MapPolygonSeries\";\n\nimport { MapChartDefaultTheme } from \"./MapChartDefaultTheme\";\nimport { SerialChart, ISerialChartPrivate, ISerialChartSettings, ISerialChartEvents } from \"../../core/render/SerialChart\";\nimport { Rectangle } from \"../../core/render/Rectangle\";\nimport { geoPath } from \"d3-geo\";\nimport { Color } from \"../../core/util/Color\";\nimport { registry } from \"../../core/Registry\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $mapUtils from \"./MapUtils\";\nimport * as $object from \"../../core/util/Object\";\nimport * as $utils from \"../../core/util/Utils\";\n\nimport type { IDisposer } from \"../../core/util/Disposer\";\nimport type { ISpritePointerEvent } from \"../../core/render/Sprite\";\n\n\nexport interface IMapChartSettings extends ISerialChartSettings {\n\n\t/**\n\t * A projection to use when plotting the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Projections} for more info\n\t */\n\tprojection?: GeoProjection;\n\n\t/**\n\t * Current zoom level.\n\t */\n\tzoomLevel?: number;\n\n\t/**\n\t * current x position of a map\n\t */\n\ttranslateX?: number;\n\n\t/**\n\t * current y position of a map\n\t */\n\ttranslateY?: number;\n\n\t/**\n\t * Vertical centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationY?: number;\n\n\t/**\n\t * Horizontal centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationX?: number;\n\n\t/**\n\t * Depth centering of the map.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Centering_the_map} for more info\n\t */\n\trotationZ?: number;\n\n\t/**\n\t * Highest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 32\n\t */\n\tmaxZoomLevel?: number;\n\n\t/**\n\t * Lowest zoom level map is allowed to zoom in to.\n\t *\n\t * @deault 1\n\t */\n\tminZoomLevel?: number;\n\n\t/**\n\t * Increment zoom level by `zoomStep` when user zooms in via [[ZoomControl]] or\n\t * API.\n\t *\n\t * @default 2\n\t */\n\tzoomStep?: number;\n\n\t/**\n\t * Defines what happens when map is being dragged horizontally.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateX\"\n\t */\n\tpanX?: \"none\" | \"rotateX\" | \"translateX\";\n\n\t/**\n\t * Defines what happens when map is being dragged vertically.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning} for more info\n\t * @default \"translateY\"\n\t */\n\tpanY?: \"none\" | \"rotateY\" | \"translateY\";\n\n\t/**\n\t * Enables pinch-zooming of the map on multi-touch devices.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Pinch_zoom} for more info\n\t * @default true\n\t */\n\tpinchZoom?: boolean;\n\n\t/**\n\t * Defines what happens when horizontal mouse wheel (only some mouses do have such a wheel)\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"none\"\n\t */\n\twheelX?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Defines what happens when mouse wheel is turned.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Mouse_wheel_behavior} for more info\n\t * @default \"zoom\"\n\t */\n\twheelY?: \"none\" | \"zoom\" | \"rotateX\" | \"rotateY\";\n\n\t/**\n\t * Sensitivity of a mouse wheel.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t *\n\t * @default 1\n\t */\n\twheelSensitivity?: number;\n\n\t/**\n\t * Duration of mouse-wheel action animation, in milliseconds.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t */\n\twheelDuration?: number;\n\n\t/**\n\t * An easing function to use for mouse wheel action animations.\n\t *\n\t * NOTE: this setting is ignored when `wheelX` or `wheelY` is set to `\"zoom\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\twheelEasing?: (t: Time) => Time;\n\n\t/**\n\t * Duration of zoom/pan animations, in milliseconds.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * An easing function to use for zoom/pan animations.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/animations/#Easing_functions} for more info\n\t * @default am5.ease.out($ease.cubic)\n\t */\n\tanimationEasing?: (t: Time) => Time;\n\n\n\t/**\n\t * A [[ZoomControl]] instance.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/#Zoom_control} for more info\n\t */\n\tzoomControl?: ZoomControl;\n\n\t/**\n\t * Initial/home zoom level.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeZoomLevel?: number;\n\n\t/**\n\t * Initial/home rotationX.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationX?: number;\n\n\t/**\n\t * Initial/home rotationY.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeRotationY?: number;\n\n\t/**\n\t * Initial coordinates to center map on load or `goHome()` call.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Initial_position_and_zoom} for more info\n\t */\n\thomeGeoPoint?: IGeoPoint;\n\n\t/**\n\t * How much of a map can go outside the viewport.\n\t *\n\t * @default 0.4\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Panning_outside_viewport} for more info\n\t */\n\tmaxPanOut?: number;\n\n\t/**\n\t * Setting `true` means that the map will automatically center itself (or go\n\t * to `homeGeoPoint` if set) when fully zoomed out.\n\t *\n\t * `false` would mean that zoom out will be centered around the mouse\n\t * cursor (when zooming using wheel), or current map position.\n\t * \n\t * @default true\n\t * @since 5.2.1\n\t */\n\tcenterMapOnZoomOut?: boolean;\n\n}\n\nexport interface IMapChartPrivate extends ISerialChartPrivate {\n\n\t/**\n\t * @ignore\n\t */\n\tgeoPath: GeoPath;\n\n\t/**\n\t * @ignore\n\t */\n\tmapScale: number;\n\n}\n\n\nexport interface IMapChartEvents extends ISerialChartEvents {\n\n\t/**\n\t * Invoked when geo bounds of the map change, usually after map is\n\t * initialized.\n\t */\n\tgeoboundschanged: {};\n\n}\n\n\nexport class MapChart extends SerialChart {\n\tpublic static className: string = \"MapChart\";\n\tpublic static classNames: Array<string> = SerialChart.classNames.concat([MapChart.className]);\n\n\tdeclare public _settings: IMapChartSettings;\n\tdeclare public _privateSettings: IMapChartPrivate;\n\tdeclare public _seriesType: MapSeries;\n\tdeclare public _events: IMapChartEvents;\n\n\tprotected _downTranslateX: number | undefined;\n\tprotected _downTranslateY: number | undefined;\n\tprotected _downRotationX: number | undefined;\n\tprotected _downRotationY: number | undefined;\n\tprotected _downRotationZ: number | undefined;\n\tprotected _pLat: number = 0;\n\tprotected _pLon: number = 0;\n\n\tprotected _movePoints: { [index: number]: IPoint } = {};\n\tprotected _downZoomLevel: number = 1;\n\tprotected _doubleDownDistance: number = 0;\n\n\tprotected _dirtyGeometries: boolean = false;\n\tprotected _geometryColection: GeoJSON.GeometryCollection = { type: \"GeometryCollection\", geometries: [] };\n\n\tpublic _centerLocation: [number, number] | null = null;\n\n\tprotected _za?: Animation<this[\"_settings\"][\"zoomLevel\"]>;\n\tprotected _rxa?: Animation<this[\"_settings\"][\"rotationX\"]>;\n\tprotected _rya?: Animation<this[\"_settings\"][\"rotationY\"]>;\n\tprotected _txa?: Animation<this[\"_settings\"][\"translateX\"]>;\n\tprotected _tya?: Animation<this[\"_settings\"][\"translateY\"]>;\n\n\tprotected _mapBounds = [[0, 0], [0, 0]];\n\n\tprotected _geoCentroid: IGeoPoint = { longitude: 0, latitude: 0 };\n\tprotected _geoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\tprotected _prevGeoBounds: { left: number, right: number, top: number, bottom: number } = { left: 0, right: 0, top: 0, bottom: 0 };\n\n\tprotected _dispatchBounds: boolean = false;\n\n\tprotected _wheelDp: IDisposer | undefined;\n\n\tprotected _pw?: number;\n\tprotected _ph?: number;\n\n\tprotected _mapFitted: boolean = false;\n\n\tprotected _centerX: number = 0;\n\tprotected _centerY: number = 0;\n\n\tprotected _makeGeoPath() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst path = geoPath();\n\t\tpath.projection(projection);\n\t\tthis.setPrivateRaw(\"geoPath\", path);\n\t}\n\n\t/**\n\t * Returns a geoPoint of the current zoom position.\n\t * \n\t * You can later use it to restore zoom position, e.g.: `chart.zoomToGeoPoint(geoPoint, zoomLevel, true)`.\n\t *\n\t * @since 5.2.19\n\t */\n\tpublic geoPoint() {\n\t\treturn this.invert(this.seriesContainer.toGlobal({ x: this.width() / 2, y: this.height() / 2 }));\n\t}\n\n\t/**\n\t * Returns coordinates to geographical center of the map.\n\t */\n\tpublic geoCentroid() {\n\t\treturn this._geoCentroid;\n\t}\n\n\t/**\n\t * Returns geographical bounds of the map.\n\t */\n\tpublic geoBounds() {\n\t\treturn this._geoBounds;\n\t}\n\n\tprotected _handleSetWheel() {\n\n\t\tconst wheelX = this.get(\"wheelX\");\n\t\tconst wheelY = this.get(\"wheelY\");\n\t\tconst chartContainer = this.chartContainer;\n\n\t\tif (wheelX != \"none\" || wheelY != \"none\") {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\n\t\t\tthis._wheelDp = chartContainer.events.on(\"wheel\", (event) => {\n\t\t\t\tconst wheelEasing = this.get(\"wheelEasing\")!;\n\t\t\t\tconst wheelSensitivity = this.get(\"wheelSensitivity\", 1);\n\t\t\t\tconst wheelDuration = this.get(\"wheelDuration\", 0);\n\n\t\t\t\tconst wheelEvent = event.originalEvent;\n\n\t\t\t\t// Ignore wheel event if it is happening on a non-chart element, e.g. if\n\t\t\t\t// some page element is over the chart.\n\t\t\t\tif ($utils.isLocalEvent(wheelEvent, this)) {\n\t\t\t\t\twheelEvent.preventDefault();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst point = chartContainer._display.toLocal(event.point);\n\n\t\t\t\tif ((wheelY == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaY, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelY == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaY / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t\tif ((wheelX == \"zoom\")) {\n\t\t\t\t\tthis._handleWheelZoom(wheelEvent.deltaX, point);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateY\") {\n\t\t\t\t\tthis._handleWheelRotateY(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\t\t\t\telse if (wheelX == \"rotateX\") {\n\t\t\t\t\tthis._handleWheelRotateX(wheelEvent.deltaX / 5 * wheelSensitivity, wheelDuration, wheelEasing);\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\tthis._disposers.push(this._wheelDp);\n\t\t}\n\t\telse {\n\t\t\tif (this._wheelDp) {\n\t\t\t\tthis._wheelDp.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst projection = this.get(\"projection\")!;\n\t\tconst w = this.innerWidth();\n\t\tconst h = this.innerHeight();\n\n\t\tconst previousGeometries = this._geometryColection.geometries;\n\n\t\tif (this.isDirty(\"projection\")) {\n\t\t\tthis._makeGeoPath();\n\t\t\tthis.markDirtyProjection();\n\t\t\tthis._fitMap();\n\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tif (projection.rotate) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t}\n\n\t\t\tlet prev = this._prevSettings.projection;\n\t\t\tif (prev && prev != projection) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\t\t\t\tif (prev.invert) {\n\t\t\t\t\tlet centerLocation = prev.invert([hw, hh]);\n\n\t\t\t\t\tif (centerLocation) {\n\n\t\t\t\t\t\tlet xy = projection(centerLocation);\n\t\t\t\t\t\tif (xy) {\n\t\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"wheelX\") || this.isDirty(\"wheelY\")) {\n\t\t\tthis._handleSetWheel();\n\t\t}\n\t\tif (this._dirtyGeometries) {\n\t\t\tthis._geometryColection.geometries = [];\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\t$array.pushAll(this._geometryColection.geometries, series._geometries);\n\t\t\t})\n\n\n\t\t\tthis._fitMap();\n\t\t}\n\n\t\tif (previousGeometries.length != 0 && (w != this._pw || h != this._ph || this._dirtyGeometries)) {\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tlet hw = w / 2;\n\t\t\t\tlet hh = h / 2;\n\n\t\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\t\tconst newScale = projection.scale();\n\n\t\t\t\tthis.setPrivateRaw(\"mapScale\", newScale);\n\t\t\t\tprojection.scale(newScale * this.get(\"zoomLevel\", 1));\n\n\t\t\t\tif (this._centerLocation) {\n\t\t\t\t\tlet xy = projection(this._centerLocation);\n\t\t\t\t\tif (xy) {\n\t\t\t\t\t\tlet translate = projection.translate();\n\n\t\t\t\t\t\tlet xx = hw - ((xy[0] - translate[0]));\n\t\t\t\t\t\tlet yy = hh - ((xy[1] - translate[1]));\n\n\t\t\t\t\t\tprojection.translate([xx, yy])\n\n\t\t\t\t\t\tthis.setRaw(\"translateX\", xx);\n\t\t\t\t\t\tthis.setRaw(\"translateY\", yy);\n\n\t\t\t\t\t\tthis._centerX = translate[0];\n\t\t\t\t\t\tthis._centerY = translate[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.markDirtyProjection();\n\n\t\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\t\t\t}\n\t\t}\n\n\t\tthis._pw = w;\n\t\tthis._ph = h;\n\n\t\tif (this.isDirty(\"zoomControl\")) {\n\t\t\tconst previous = this._prevSettings.zoomControl;\n\t\t\tconst zoomControl = this.get(\"zoomControl\")!;\n\t\t\tif (zoomControl !== previous) {\n\t\t\t\tthis._disposeProperty(\"zoomControl\");\n\t\t\t\tif (previous) {\n\t\t\t\t\tprevious.dispose();\n\t\t\t\t}\n\t\t\t\tif (zoomControl) {\n\t\t\t\t\tzoomControl.setPrivate(\"chart\", this);\n\t\t\t\t\tthis.children.push(zoomControl);\n\t\t\t\t}\n\n\t\t\t\tthis.setRaw(\"zoomControl\", zoomControl);\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"zoomLevel\")) {\n\t\t\tprojection.scale(this.getPrivate(\"mapScale\") * this.get(\"zoomLevel\", 1));\n\t\t\tthis.markDirtyProjection();\n\n\t\t\tthis.series.each((series) => {\n\t\t\t\tif (series.isType<MapPointSeries>(\"MapPointSeries\")) {\n\t\t\t\t\tif (series.get(\"autoScale\")) {\n\t\t\t\t\t\t$array.each(series.dataItems, (dataItem) => {\n\t\t\t\t\t\t\tconst bullets = dataItem.bullets;\n\t\t\t\t\t\t\tif (bullets) {\n\t\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\t\t\t\t\t\tif (sprite) {\n\t\t\t\t\t\t\t\t\t\tsprite.set(\"scale\", this.get(\"zoomLevel\"));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst zoomControl = this.get(\"zoomControl\");\n\t\t\tif (zoomControl) {\n\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\tif (zoomLevel == this.get(\"minZoomLevel\", 1)) {\n\t\t\t\t\tthis.root.events.once(\"frameended\", () =>{\n\t\t\t\t\t\tzoomControl.minusButton.set(\"disabled\", true);\n\t\t\t\t\t})\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tzoomControl.minusButton.set(\"disabled\", false);\n\t\t\t\t}\n\n\t\t\t\tif (zoomLevel == this.get(\"maxZoomLevel\", 32)) {\n\t\t\t\t\tzoomControl.plusButton.set(\"disabled\", true);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tzoomControl.plusButton.set(\"disabled\", false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"translateX\") || this.isDirty(\"translateY\")) {\n\t\t\tprojection.translate([this.get(\"translateX\", this.width() / 2), this.get(\"translateY\", this.height() / 2)])\n\t\t\tthis.markDirtyProjection();\n\t\t}\n\n\t\tif (projection.rotate) {\n\t\t\tif (this.isDirty(\"rotationX\") || this.isDirty(\"rotationY\") || this.isDirty(\"rotationZ\")) {\n\t\t\t\tprojection.rotate([this.get(\"rotationX\", 0), this.get(\"rotationY\", 0), this.get(\"rotationZ\", 0)])\n\t\t\t\tthis.markDirtyProjection();\n\t\t\t}\n\t\t}\n\n\t\tif (this.isDirty(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) {\n\t\t\tthis._setUpTouch();\n\t\t}\n\t}\n\n\n\tprotected _fitMap() {\n\t\tconst projection = this.get(\"projection\")!;\n\n\t\tlet w = this.innerWidth();\n\t\tlet h = this.innerHeight();\n\n\t\tif (w > 0 && h > 0) {\n\t\t\tprojection.fitSize([w, h], this._geometryColection);\n\t\t\tthis.setPrivateRaw(\"mapScale\", projection.scale());\n\n\t\t\tconst translate = projection.translate();\n\n\t\t\tthis.setRaw(\"translateX\", translate[0]);\n\t\t\tthis.setRaw(\"translateY\", translate[1]);\n\n\t\t\tthis._centerX = translate[0];\n\t\t\tthis._centerY = translate[1];\n\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tthis._mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tthis._geoCentroid = $mapUtils.getGeoCentroid(this._geometryColection);\n\n\t\t\tconst bounds = $mapUtils.getGeoBounds(this._geometryColection);\n\t\t\tthis._geoBounds = bounds;\n\n\t\t\tif (this._geometryColection.geometries.length > 0) {\n\n\t\t\t\tbounds.left = $math.round(this._geoBounds.left, 3);\n\t\t\t\tbounds.right = $math.round(this._geoBounds.right, 3);\n\t\t\t\tbounds.top = $math.round(this._geoBounds.top, 3);\n\t\t\t\tbounds.bottom = $math.round(this._geoBounds.bottom, 3);\n\n\t\t\t\tconst prevGeoBounds = this._prevGeoBounds;\n\n\t\t\t\tif (prevGeoBounds && !$utils.sameBounds(bounds, prevGeoBounds)) {\n\t\t\t\t\tthis._dispatchBounds = true;\n\t\t\t\t\tthis._prevGeoBounds = bounds;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._mapFitted = true;\n\t\t}\n\t}\n\n\t/**\n\t * Returns geographical coordinates for calculated or manual center of the\n\t * map.\n\t */\n\tpublic homeGeoPoint(): IGeoPoint {\n\t\tlet homeGeoPoint = this.get(\"homeGeoPoint\");\n\t\tif (!homeGeoPoint) {\n\t\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\t\tconst bounds = geoPath.bounds(this._geometryColection);\n\n\t\t\tconst left = bounds[0][0];\n\t\t\tconst top = bounds[0][1];\n\n\t\t\tconst right = bounds[1][0];\n\t\t\tconst bottom = bounds[1][1];\n\n\t\t\thomeGeoPoint = this.invert({ x: left + (right - left) / 2, y: top + (bottom - top) / 2 });\n\t\t}\n\t\treturn homeGeoPoint;\n\t}\n\n\t/**\n\t * Repositions the map to the \"home\" zoom level and center coordinates.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Resetting_position_level} for more info\n\t * @param  duration  Animation duration in milliseconds\n\t */\n\tpublic goHome(duration?: number) {\n\t\tthis.zoomToGeoPoint(this.homeGeoPoint(), this.get(\"homeZoomLevel\", 1), true, duration, this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t}\n\n\tpublic _updateChildren() {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (projection.invert) {\n\t\t\tlet w = this.innerWidth();\n\t\t\tlet h = this.innerHeight();\n\t\t\tif (w > 0 && h > 0) {\n\t\t\t\tthis._centerLocation = projection.invert([this.innerWidth() / 2, this.innerHeight() / 2]);\n\t\t\t}\n\t\t}\n\t\tsuper._updateChildren();\n\t}\n\n\tpublic _afterChanged() {\n\t\tsuper._afterChanged();\n\t\tif (this._dispatchBounds) {\n\t\t\tthis._dispatchBounds = false;\n\t\t\tconst type = \"geoboundschanged\";\n\t\t\tif (this.events.isEnabled(type)) {\n\t\t\t\tthis.events.dispatch(type, { type: type, target: this });\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _setUpTouch(): void {\n\t\tif (!this.chartContainer._display.cancelTouch) {\n\t\t\tthis.chartContainer._display.cancelTouch = (this.get(\"pinchZoom\") || this.get(\"panX\") || this.get(\"panY\")) ? true : false;\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyGeometries() {\n\t\tthis._dirtyGeometries = true;\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.series.each((series) => {\n\t\t\tseries.markDirtyProjection();\n\t\t})\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(MapChartDefaultTheme.new(this._root));\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"map\"]);\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\n\t\tthis._makeGeoPath();\n\n\t\tthis.chartContainer.children.push(this.seriesContainer);\n\n\t\tif (this.get(\"translateX\") == null) {\n\t\t\tthis.set(\"translateX\", this.width() / 2);\n\t\t}\n\t\tif (this.get(\"translateY\") == null) {\n\t\t\tthis.set(\"translateY\", this.height() / 2);\n\t\t}\n\n\t\t// Setting trasnparent background so that full body of the plot container\n\t\t// is interactive\n\t\tthis.chartContainer.set(\"interactive\", true);\n\t\tthis.chartContainer.set(\"interactiveChildren\", false);\n\t\tthis.chartContainer.set(\"background\", Rectangle.new(this._root, {\n\t\t\tthemeTags: [\"map\", \"background\"],\n\t\t\tfill: Color.fromHex(0x000000),\n\t\t\tfillOpacity: 0\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"pointerdown\", (event) => {\n\t\t\tthis._handleChartDown(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointerup\", (event) => {\n\t\t\tthis._handleChartUp(event);\n\t\t}));\n\n\t\tthis._disposers.push(this.chartContainer.events.on(\"globalpointermove\", (event) => {\n\t\t\tthis._handleChartMove(event);\n\t\t}));\n\n\t\tlet license = false;\n\t\tfor (let i = 0; i < registry.licenses.length; i++) {\n\t\t\tif (registry.licenses[i].match(/^AM5M.{5,}/i)) {\n\t\t\t\tlicense = true;\n\t\t\t}\n\t\t}\n\t\tif (!license) {\n\t\t\tthis._root._showBranding();\n\t\t}\n\t\telse {\n\t\t\tthis._root._licenseApplied();\n\t\t}\n\n\t\tthis._setUpTouch();\n\n\t}\n\n\tprotected _handleChartDown(event: ISpritePointerEvent) {\n\n\t\tthis._downZoomLevel = this.get(\"zoomLevel\", 1);\n\t\tconst downPoints = this.chartContainer._downPoints;\n\n\t\tlet count = $object.keys(downPoints).length;\n\t\tif (count == 1) {\n\t\t\t// workaround to solve a problem when events are added to some children of chart container (rotation stops working)\n\t\t\tlet downPoint = downPoints[1];\n\t\t\tif (!downPoint) {\n\t\t\t\tdownPoint = downPoints[0];\n\t\t\t}\n\n\t\t\tif (downPoint && (downPoint.x == event.point.x && downPoint.y == event.point.y)) {\n\t\t\t\tcount = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (count > 0) {\n\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\tconst downId = this.chartContainer._getDownPointId();\n\t\t\tif (downId) {\n\t\t\t\tlet movePoint = this._movePoints[downId];\n\t\t\t\tif (movePoint) {\n\t\t\t\t\tthis.chartContainer._downPoints[downId] = movePoint;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (count == 0) {\n\t\t\tlet bg = this.chartContainer.get(\"background\");\n\t\t\tif (bg) {\n\t\t\t\tbg.events.enableType(\"click\");\n\t\t\t}\n\n\t\t\tif (this.get(\"panX\") || this.get(\"panY\")) {\n\n\t\t\t\tif (this._za) {\n\t\t\t\t\tthis._za.stop();\n\t\t\t\t}\n\t\t\t\tif (this._txa) {\n\t\t\t\t\tthis._txa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._tya) {\n\t\t\t\t\tthis._tya.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rxa) {\n\t\t\t\t\tthis._rxa.stop();\n\t\t\t\t}\n\t\t\t\tif (this._rya) {\n\t\t\t\t\tthis._rya.stop();\n\t\t\t\t}\n\n\t\t\t\tconst downPoint = this.chartContainer._display.toLocal(event.point);\n\t\t\t\tthis._downTranslateX = this.get(\"translateX\");\n\t\t\t\tthis._downTranslateY = this.get(\"translateY\");\n\t\t\t\tthis._downRotationX = this.get(\"rotationX\");\n\t\t\t\tthis._downRotationY = this.get(\"rotationY\");\n\t\t\t\tthis._downRotationZ = this.get(\"rotationZ\");\n\n\t\t\t\tlet projection = this.get(\"projection\")!;\n\n\t\t\t\tif (projection.invert) {\n\t\t\t\t\tlet l0 = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\tlet l1 = projection.invert([downPoint.x + 1, downPoint.y + 1]);\n\t\t\t\t\tif (l0 && l1) {\n\t\t\t\t\t\tthis._pLon = Math.abs(l1[0] - l0[0]);\n\t\t\t\t\t\tthis._pLat = Math.abs(l1[1] - l0[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Converts screen coordinates (X and Y) within chart to latitude and\n\t * longitude.\n\t * \n\t * @param  point  Screen coordinates\n\t * @return        Geographical coordinates\n\t */\n\tpublic invert(point: IPoint): IGeoPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\n\t\tif (projection.invert) {\n\t\t\tconst ll = projection.invert([point.x, point.y]);\n\t\t\tif (ll) {\n\t\t\t\treturn { longitude: ll[0], latitude: ll[1] };\n\t\t\t}\n\t\t}\n\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\t/**\n\t * Converts latitude/longitude to screen coordinates (X and Y).\n\t * \n\t * @param  point  Geographical coordinates\n\t * @param  rotationX  X rotation of a map if different from current\n\t * @param  rotationY  Y rotation of a map if different from current\n\t * \n\t * @return Screen coordinates\n\t */\n\tpublic convert(point: IGeoPoint, rotationX?: number, rotationY?: number): IPoint {\n\t\tlet projection = this.get(\"projection\")!;\n\t\tlet xy;\n\n\t\tif (!projection.rotate) {\n\t\t\trotationX = undefined;\n\t\t\trotationY = undefined;\n\t\t}\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tif (rotationX == null) {\n\t\t\t\trotationX = 0;\n\t\t\t}\n\t\t\tif (rotationY == null) {\n\t\t\t\trotationY = 0;\n\t\t\t}\n\t\t\tlet rotation = projection.rotate();\n\t\t\tprojection.rotate([rotationX, rotationY, 0]);\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t\tprojection.rotate(rotation);\n\t\t}\n\t\telse {\n\t\t\txy = projection([point.longitude, point.latitude]);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn { x: xy[0], y: xy[1] };\n\t\t}\n\n\t\treturn { x: 0, y: 0 };\n\t}\n\n\tprotected _handleChartUp(_event: ISpritePointerEvent) {\n\t\tthis.chartContainer._downPoints = {}\n\t}\n\n\tprotected _handlePinch() {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet i = 0;\n\t\tlet downPoints: Array<IPoint> = [];\n\t\tlet movePoints: Array<IPoint> = [];\n\n\t\t$object.each(chartContainer._downPoints, (k, point) => {\n\t\t\tdownPoints[i] = point;\n\t\t\tlet movePoint = this._movePoints[k];\n\t\t\tif (movePoint) {\n\t\t\t\tmovePoints[i] = movePoint;\n\t\t\t}\n\t\t\ti++;\n\t\t});\n\n\t\tif (downPoints.length > 1 && movePoints.length > 1) {\n\t\t\tconst display = chartContainer._display;\n\n\t\t\tlet downPoint0 = downPoints[0];\n\t\t\tlet downPoint1 = downPoints[1];\n\n\t\t\tlet movePoint0 = movePoints[0];\n\t\t\tlet movePoint1 = movePoints[1];\n\n\t\t\tif (downPoint0 && downPoint1 && movePoint0 && movePoint1) {\n\n\t\t\t\tdownPoint0 = display.toLocal(downPoint0);\n\t\t\t\tdownPoint1 = display.toLocal(downPoint1);\n\n\t\t\t\tmovePoint0 = display.toLocal(movePoint0);\n\t\t\t\tmovePoint1 = display.toLocal(movePoint1);\n\n\t\t\t\tlet initialDistance = Math.hypot(downPoint1.x - downPoint0.x, downPoint1.y - downPoint0.y);\n\t\t\t\tlet currentDistance = Math.hypot(movePoint1.x - movePoint0.x, movePoint1.y - movePoint0.y);\n\n\t\t\t\tlet level = currentDistance / initialDistance * this._downZoomLevel;\n\t\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\n\t\t\t\tlet moveCenter = { x: movePoint0.x + (movePoint1.x - movePoint0.x) / 2, y: movePoint0.y + (movePoint1.y - movePoint0.y) / 2 };\n\t\t\t\tlet downCenter = { x: downPoint0.x + (downPoint1.x - downPoint0.x) / 2, y: downPoint0.y + (downPoint1.y - downPoint0.y) / 2 };\n\n\t\t\t\tlet tx = this._downTranslateX || 0;\n\t\t\t\tlet ty = this._downTranslateY || 0;\n\n\t\t\t\tlet zoomLevel = this._downZoomLevel;\n\n\t\t\t\tlet xx = moveCenter.x - (- tx + downCenter.x) / zoomLevel * level;\n\t\t\t\tlet yy = moveCenter.y - (- ty + downCenter.y) / zoomLevel * level;\n\n\t\t\t\tthis.set(\"zoomLevel\", level);\n\t\t\t\tthis.set(\"translateX\", xx);\n\t\t\t\tthis.set(\"translateY\", yy);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleChartMove(event: ISpritePointerEvent) {\n\t\tconst chartContainer = this.chartContainer;\n\t\tlet downPoint = chartContainer._getDownPoint();\n\t\tconst downPointId = chartContainer._getDownPointId();\n\t\tconst originalEvent = event.originalEvent as any;\n\n\t\tconst pointerId = originalEvent.pointerId;\n\n\t\tif (this.get(\"pinchZoom\")) {\n\t\t\tif (pointerId) {\n\t\t\t\tthis._movePoints[pointerId] = event.point;\n\n\t\t\t\tif ($object.keys(chartContainer._downPoints).length > 1) {\n\t\t\t\t\tthis._handlePinch();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (downPointId && pointerId && pointerId != downPointId) {\n\t\t\treturn;\n\t\t}\n\t\telse {\n\t\t\tif (downPoint) {\n\t\t\t\tconst panX = this.get(\"panX\");\n\t\t\t\tconst panY = this.get(\"panY\");\n\t\t\t\tif (panX != \"none\" || panY != \"none\") {\n\t\t\t\t\tconst display = chartContainer._display;\n\t\t\t\t\tlet local = display.toLocal(event.point);\n\t\t\t\t\tdownPoint = display.toLocal(downPoint);\n\n\t\t\t\t\tlet x = this._downTranslateX;\n\t\t\t\t\tlet y = this._downTranslateY;\n\n\t\t\t\t\tif (Math.hypot(downPoint.x - local.x, downPoint.y - local.y) > 5) {\n\t\t\t\t\t\tlet bg = chartContainer.get(\"background\");\n\t\t\t\t\t\tif (bg) {\n\t\t\t\t\t\t\tbg.events.disableType(\"click\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x) && $type.isNumber(y)) {\n\t\t\t\t\t\t\tlet projection = this.get(\"projection\")!;\n\t\t\t\t\t\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\t\t\t\t\t\tconst maxPanOut = this.get(\"maxPanOut\", 0.4);\n\t\t\t\t\t\t\tconst bounds = this._mapBounds;\n\n\t\t\t\t\t\t\tconst w = this.width();\n\t\t\t\t\t\t\tconst h = this.height();\n\n\t\t\t\t\t\t\tconst ww = bounds[1][0] - bounds[0][0];\n\t\t\t\t\t\t\tconst hh = bounds[1][1] - bounds[0][1];\n\n\t\t\t\t\t\t\tif (panX == \"translateX\") {\n\t\t\t\t\t\t\t\tx += local.x - downPoint.x;\n\n\t\t\t\t\t\t\t\tconst cx = w / 2 - (w / 2 - this._centerX) * zoomLevel;\n\t\t\t\t\t\t\t\tx = Math.min(x, cx + ww * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\tx = Math.max(x, cx - ww * maxPanOut * zoomLevel);\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (panY == \"translateY\") {\n\t\t\t\t\t\t\t\ty += local.y - downPoint.y;\n\t\t\t\t\t\t\t\tconst cy = h / 2 - (h / 2 - this._centerY) * zoomLevel;\n\t\t\t\t\t\t\t\ty = Math.min(y, cy + hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t\ty = Math.max(y, cy - hh * maxPanOut * zoomLevel);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthis.set(\"translateX\", x);\n\t\t\t\t\t\t\tthis.set(\"translateY\", y);\n\n\t\t\t\t\t\t\tif (projection.invert) {\n\t\t\t\t\t\t\t\tlet downLocation = projection.invert([downPoint.x, downPoint.y]);\n\t\t\t\t\t\t\t\tif (location && downLocation) {\n\t\t\t\t\t\t\t\t\tif (panX == \"rotateX\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationX\", this._downRotationX! - (downPoint.x - local.x) * this._pLon);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (panY == \"rotateY\") {\n\t\t\t\t\t\t\t\t\t\tthis.set(\"rotationY\", this._downRotationY! + (downPoint.y - local.y) * this._pLat);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleWheelRotateY(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rya = this.animate({ key: \"rotationY\", to: this.get(\"rotationY\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelRotateX(delta: number, duration: number, easing: (t: Time) => Time) {\n\t\tthis._rxa = this.animate({ key: \"rotationX\", to: this.get(\"rotationX\", 0) - delta, duration: duration, easing: easing });\n\t}\n\n\tprotected _handleWheelZoom(delta: number, point: IPoint) {\n\t\tlet step = this.get(\"zoomStep\", 2);\n\t\tlet zoomLevel = this.get(\"zoomLevel\", 1);\n\t\tlet newZoomLevel = zoomLevel;\n\t\tif (delta > 0) {\n\t\t\tnewZoomLevel = zoomLevel / step;\n\t\t}\n\t\telse if (delta < 0) {\n\t\t\tnewZoomLevel = zoomLevel * step;\n\t\t}\n\n\t\tif (newZoomLevel != zoomLevel) {\n\t\t\tthis.zoomToPoint(point, newZoomLevel)\n\t\t}\n\t}\n\n\t/**\n\t * Zoom the map to geographical bounds.\n\t *\n\t * @param  geoBounds  Bounds\n\t * @param  duration   Animation duration in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t */\n\tpublic zoomToGeoBounds(geoBounds: { left: number, right: number, top: number, bottom: number }, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (geoBounds.right < geoBounds.left) {\n\t\t\tgeoBounds.right = 180;\n\t\t\tgeoBounds.left = -180;\n\t\t}\n\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst mapBounds = geoPath.bounds(this._geometryColection);\n\n\t\tlet p0 = this.convert({ longitude: geoBounds.left, latitude: geoBounds.top }, rotationX, rotationY);\n\t\tlet p1 = this.convert({ longitude: geoBounds.right, latitude: geoBounds.bottom }, rotationX, rotationY);\n\n\t\tif (p0.y < mapBounds[0][1]) {\n\t\t\tp0.y = mapBounds[0][1];\n\t\t}\n\n\t\tif (p1.y > mapBounds[1][1]) {\n\t\t\tp1.y = mapBounds[1][1];\n\t\t}\n\n\t\tlet zl = this.get(\"zoomLevel\", 1);\n\n\t\tlet bounds = { left: p0.x, right: p1.x, top: p0.y, bottom: p1.y };\n\n\t\tlet seriesContainer = this.seriesContainer;\n\n\t\tlet zoomLevel = .9 * Math.min(seriesContainer.innerWidth() / (bounds.right - bounds.left) * zl, seriesContainer.innerHeight() / (bounds.bottom - bounds.top) * zl);\n\t\tlet x = bounds.left + (bounds.right - bounds.left) / 2;\n\t\tlet y = bounds.top + (bounds.bottom - bounds.top) / 2;\n\n\t\tlet geoPoint = this.invert({ x, y });\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY);\n\t\t}\n\n\t\treturn this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration);\n\t}\n\n\t/**\n\t * Zooms the map to specific screen point.\n\t *\n\t * @param  point    Point\n\t * @param  level    Zoom level\n\t * @param  center   Center the map\n\t * @param  duration Duration of the animation in milliseconds\n\t */\n\tpublic zoomToPoint(point: IPoint, level: number, center?: boolean, duration?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\tif (level) {\n\t\t\tlevel = $math.fitToRange(level, this.get(\"minZoomLevel\", 1), this.get(\"maxZoomLevel\", 32));\n\t\t}\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t}\n\t\tconst easing = this.get(\"animationEasing\");\n\t\tconst zoomLevel = this.get(\"zoomLevel\", 1);\n\n\t\tif (this.get(\"centerMapOnZoomOut\") && level == this.get(\"homeZoomLevel\", 1)) {\n\t\t\tpoint = this.convert(this.homeGeoPoint(), this.get(\"homeRotationX\"), this.get(\"homeRotationY\"));\n\t\t\tcenter = true;\n\t\t}\n\n\t\tlet x = point.x;\n\t\tlet y = point.y;\n\n\t\tlet tx = this.get(\"translateX\", 0);\n\t\tlet ty = this.get(\"translateY\", 0);\n\n\t\tlet cx = x;\n\t\tlet cy = y;\n\n\t\tif (center) {\n\t\t\tcx = this.width() / 2;\n\t\t\tcy = this.height() / 2;\n\t\t}\n\n\t\tlet xx = cx - ((x - tx) / zoomLevel * level);\n\t\tlet yy = cy - ((y - ty) / zoomLevel * level);\n\n\n\t\tthis._txa = this.animate({ key: \"translateX\", to: xx, duration: duration, easing: easing });\n\t\tthis._tya = this.animate({ key: \"translateY\", to: yy, duration: duration, easing: easing });\n\t\tthis._za = this.animate({ key: \"zoomLevel\", to: level, duration: duration, easing: easing });\n\n\t\tif (zoomLevel != level) {\n\t\t\tthis._root.readerAlert(this._t(\"Zoom level changed to %1\", this._root.locale, $type.numberToString(level)));\n\t\t}\n\n\t\treturn this._za;\n\t}\n\n\t/**\n\t * Zooms the map to specific geographical point.\n\t *\n\t * @param  geoPoint  Point\n\t * @param  level     Zoom level\n\t * @param  center    Center the map\n\t * @param  duration  Duration of the animation in milliseconds\n\t * @param  rotationX  X rotation of a map at the end of zoom\n\t * @param  rotationY  Y rotation of a map at the end of zoom\n\t * \n\t */\n\tpublic zoomToGeoPoint(geoPoint: IGeoPoint, level: number, center?: boolean, duration?: number, rotationX?: number, rotationY?: number): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\n\t\tlet xy = this.convert(geoPoint, rotationX, rotationY);\n\n\t\tif (rotationX != null || rotationY != null) {\n\t\t\tthis.rotate(rotationX, rotationY, duration);\n\t\t}\n\n\t\tif (xy) {\n\t\t\treturn this.zoomToPoint(xy, level, center, duration);\n\t\t}\n\t}\n\n\tpublic rotate(rotationX?: number, rotationY?: number, duration?: number) {\n\t\tconst projection = this.get(\"projection\")!;\n\t\tif (!projection.rotate) {\n\t\t}\n\t\telse {\n\t\t\tif (!$type.isNumber(duration)) {\n\t\t\t\tduration = this.get(\"animationDuration\", 0);\n\t\t\t}\n\n\t\t\tconst easing = this.get(\"animationEasing\");\n\t\t\tif (rotationX != null) {\n\t\t\t\tthis.animate({ key: \"rotationX\", to: rotationX, duration: duration, easing: easing });\n\t\t\t}\n\t\t\tif (rotationY != null) {\n\t\t\t\tthis.animate({ key: \"rotationY\", to: rotationY, duration: duration, easing: easing });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in.\n\t */\n\tpublic zoomIn(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) * this.get(\"zoomStep\", 2));\n\t}\n\n\t/**\n\t * Zooms the map out.\n\t */\n\tpublic zoomOut(): Animation<this[\"_settings\"][\"zoomLevel\"]> | undefined {\n\t\treturn this.zoomToPoint({ x: this.width() / 2, y: this.height() / 2 }, this.get(\"zoomLevel\", 1) / this.get(\"zoomStep\", 2));\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._dirtyGeometries = false;\n\t\tthis._mapFitted = false;\n\t}\n\n\t/**\n\t * Returns area of a mapPolygon in square pixels.\n\t */\n\tpublic getArea(dataItem: DataItem<IMapPolygonSeriesDataItem>): number {\n\t\tconst geoPath = this.getPrivate(\"geoPath\");\n\t\tconst geometry = dataItem.get(\"geometry\");\n\t\tif (geometry) {\n\t\t\treturn geoPath.area(geometry);\n\t\t}\n\t\treturn 0;\n\t}\n}\n","import type { IMapLineSeriesDataItem, MapLineSeries } from \"./MapLineSeries\";\nimport type { IMapPolygonSeriesDataItem, MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { MapLine } from \"./MapLine\";\nimport type { MapPolygon } from \"./MapPolygon\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $math from \"../../core/util/Math\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IDisposer } from \"../../core/util/Disposer\";\n\nexport interface IMapPointSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPointSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * GeoJSON geometry of the point.\n\t */\n\tgeometry?: GeoJSON.Point | GeoJSON.MultiPoint;\n\n\t/**\n\t * Longitude.\n\t */\n\tlongitude?: number;\n\n\t/**\n\t * Latitude.\n\t */\n\tlatitude?: number;\n\n\t/**\n\t * Relative position (0-1) on the [[MapLine]] to place point on.\n\t */\n\tpositionOnLine?: number;\n\n\t/**\n\t * Automatically rotate the point bullet to face the direction of the line\n\t * it is attached to.\n\t */\n\tautoRotate?: boolean;\n\n\t/**\n\t * The angle will be added to the automatically-calculated angle.\n\t *\n\t * Can be used to reverse the direction.\n\t */\n\tautoRotateAngle?: number;\n\n\t/**\n\t * A data item from a [[MapLineSeries]] the point is attached to.\n\t */\n\tlineDataItem?: DataItem<IMapLineSeriesDataItem>;\n\n\t/**\n\t * An ID of a [[MapLine]] the point is attached to.\n\t */\n\tlineId?: string;\n\n\t/**\n\t * A data item from a [[MapPolygonSeries]] to use for positioning of the\n\t * point.\n\t */\n\tpolygonDataItem?: DataItem<IMapPolygonSeriesDataItem>;\n\n\t/**\n\t * An ID of the [[MapPolygon]] to use for centering the point.\n\t */\n\tpolygonId?: string;\n\n\t/**\n\t * If set to `true`, the point will be drawn according to its `x` and `y`\n\t * coordinates, not its latitude and longitude.\n\t * \n\t * Fixed points will not move together with map, and can not be used to\n\t * connect points on a `MapLineSeries`.\n\t * \n\t * @default false\n\t * @since 5.2.34\n\t */\n\tfixed?: boolean;\n\n\t/**\n\t * Point (in pixels) of a data item\n\t */\n\tpoint?: IPoint;\n\n\t/**\n\t * @ignore\n\t */\n\tclipped?: boolean;\n}\n\nexport interface IMapPointSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * A field in data that holds an ID of the related polygon.\n\t *\n\t * If set, the point will be positioned in the visual center of the target\n\t * polygon.\n\t */\n\tpolygonIdField?: string;\n\n\t/**\n\t * If set to `true` will hide all points that are in the visible range of\n\t * the map.\n\t */\n\tclipFront?: boolean;\n\n\t/**\n\t * If set to `true` will hide all points that are in the invisible range of\n\t * the map.\n\t *\n\t * For example on the side of the globe facing away from the viewer when\n\t * used with Orthographic projection.\n\t *\n\t * NOTE: not all projections have invisible side.\n\t *\n\t * @default true\n\t */\n\tclipBack?: boolean;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlatitudeField?: string;\n\n\t/**\n\t * A field in data that holds point's longitude.\n\t */\n\tlongitudeField?: string;\n\n\t/**\n\t * A field in data that holds information if this point is fixed or moves with a map.\n\t */\n\tfixedField?: string;\n\n\t/**\n\t * If set to `true`, bullets will resize when zooming the [[MapChart]].\n\t * \n\t * @since 5.2.8\n\t * @default false\n\t */\n\tautoScale?: boolean\n\n};\n\n/**\n * Creates a map series for displaying markers on the map.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-point-series/} for more info\n * @important\n */\nexport class MapPointSeries extends MapSeries {\n\n\tpublic static className: string = \"MapPointSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPointSeries.className]);\n\n\tdeclare public _settings: IMapPointSeriesSettings;\n\tdeclare public _privateSettings: IMapPointSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPointSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Point\", \"MultiPoint\"];\n\n\tprotected _lineChangedDp?: IDisposer;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"polygonId\", \"lineId\", \"longitude\", \"latitude\", \"fixed\");\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\n\t\tif (dataItem) {\n\t\t\tthis._positionBullets(dataItem);\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tlet geometry = dataItem.get(\"geometry\");\n\t\tif (!geometry) {\n\t\t\tgeometry = { type: \"Point\", coordinates: [dataItem.get(\"longitude\", 0), dataItem.get(\"latitude\", 0)] };\n\t\t\tdataItem.set(\"geometry\", geometry);\n\t\t}\n\t\telse {\n\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates && coordinates[0]) {\n\t\t\t\t\tdataItem.set(\"longitude\", coordinates[0][0]);\n\t\t\t\t\tdataItem.set(\"latitude\", coordinates[0][1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._addGeometry(geometry, this);\n\t}\n\n\tprotected _makeBullets(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tdataItem.bullets = [];\n\n\t\tthis.bullets.each((bulletFunction) => {\n\t\t\tconst geometry = dataItem.get(\"geometry\");\n\n\t\t\tif (geometry) {\n\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction));\n\t\t\t\t}\n\t\t\t\telse if (geometry.type = \"MultiPoint\") {\n\t\t\t\t\tlet i = 0;\n\t\t\t\t\t$array.each(geometry.coordinates, () => {\n\t\t\t\t\t\tthis._setBulletParent(this._makeBullet(dataItem, bulletFunction, i));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tprotected _setBulletParent(bullet?: Bullet) {\n\t\tif (bullet) {\n\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\tconst chart = this.chart;\n\t\t\tif (sprite && chart) {\n\t\t\t\tconst dataItem = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.get(\"fixed\")) {\n\t\t\t\t\t\tif (sprite.parent != chart.bulletsContainer) {\n\t\t\t\t\t\t\tchart.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sprite.parent != this.bulletsContainer) {\n\t\t\t\t\t\t\tthis.bulletsContainer.children.moveValue(sprite);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem && dataItem.get(\"fixed\")) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst latitude = dataItem.get(\"latitude\");\n\t\t\tconst longitude = dataItem.get(\"longitude\");\n\t\t\tconst lineDataItem = dataItem.get(\"lineDataItem\");\n\t\t\tconst fixed = dataItem.get(\"fixed\");\n\t\t\tconst chart = this.chart;\n\t\t\tlet line: MapLine | undefined;\n\t\t\tif (lineDataItem) {\n\t\t\t\tline = lineDataItem.get(\"mapLine\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst lineId = dataItem.get(\"lineId\");\n\n\t\t\t\tif (lineId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t\t\tlet lineDI = series.getDataItemById(lineId);\n\t\t\t\t\t\t\tif (lineDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"lineDataItem\", lineDI);\n\t\t\t\t\t\t\t\tline = lineDI.get(\"mapLine\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._lineChangedDp) {\n\t\t\t\tthis._lineChangedDp.dispose();\n\t\t\t}\n\n\t\t\tif (line) {\n\t\t\t\tthis._lineChangedDp = line.events.on(\"linechanged\", () => {\n\t\t\t\t\tthis._positionBullets(dataItem);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tconst polygonDataItem = dataItem.get(\"polygonDataItem\");\n\t\t\tlet polygon: MapPolygon | undefined;\n\t\t\tif (polygonDataItem) {\n\t\t\t\tpolygon = polygonDataItem.get(\"mapPolygon\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst polygonId = dataItem.get(\"polygonId\");\n\n\t\t\t\tif (polygonId && chart) {\n\t\t\t\t\tchart.series.each((series) => {\n\t\t\t\t\t\tif (series.isType<MapPolygonSeries>(\"MapPolygonSeries\")) {\n\t\t\t\t\t\t\tlet polygonDI = series.getDataItemById(polygonId);\n\t\t\t\t\t\t\tif (polygonDI) {\n\t\t\t\t\t\t\t\tdataItem.set(\"polygonDataItem\", polygonDI);\n\t\t\t\t\t\t\t\tpolygon = polygonDI.get(\"mapPolygon\");\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst positionOnLine = dataItem.get(\"positionOnLine\");\n\t\t\tlet coordinates: [number, number] | undefined;\n\n\t\t\tlet angle: number | undefined;\n\n\t\t\tif (polygon) {\n\t\t\t\tlet geoPoint = polygon.visualCentroid();\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if (line && $type.isNumber(positionOnLine)) {\n\t\t\t\tlet geoPoint = line.positionToGeoPoint(positionOnLine);\n\t\t\t\tcoordinates = [geoPoint.longitude, geoPoint.latitude];\n\n\t\t\t\tif (dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\")) && chart) {\n\t\t\t\t\tconst geoPoint0 = line.positionToGeoPoint(positionOnLine - 0.002);\n\t\t\t\t\tconst geoPoint1 = line.positionToGeoPoint(positionOnLine + 0.002);\n\n\t\t\t\t\tconst point0 = chart.convert(geoPoint0);\n\t\t\t\t\tconst point1 = chart.convert(geoPoint1);\n\n\t\t\t\t\t//dataItem.set(\"autoRotateAngle\", $math.getAngle(point0, point1));\n\t\t\t\t\tangle = $math.getAngle(point0, point1);\n\t\t\t\t}\n\n\t\t\t\tdataItem.setRaw(\"longitude\", geoPoint.longitude);\n\t\t\t\tdataItem.setRaw(\"latitude\", geoPoint.latitude);\n\t\t\t}\n\t\t\telse if ($type.isNumber(longitude) && $type.isNumber(latitude)) {\n\t\t\t\tcoordinates = [longitude, latitude];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tconst geometry = dataItem.get(\"geometry\")!;\n\t\t\t\tif (geometry) {\n\t\t\t\t\tif (geometry.type == \"Point\") {\n\t\t\t\t\t\tthis._positionBulletReal(bullet, geometry, geometry.coordinates as [number, number], angle);\n\t\t\t\t\t}\n\t\t\t\t\telse if (geometry.type == \"MultiPoint\") {\n\t\t\t\t\t\tlet index = bullet._index || 0;\n\t\t\t\t\t\tcoordinates = geometry.coordinates[index] as [number, number];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!fixed && coordinates) {\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: coordinates }, coordinates, angle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _positionBulletReal(bullet: Bullet, geometry: GeoJSON.Geometry, coordinates: [number, number], angle?: number) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst projection = chart.get(\"projection\")!;\n\t\t\tconst geoPath = chart.getPrivate(\"geoPath\");\n\t\t\tconst dataItem: DataItem<IMapPointSeriesDataItem> = sprite.dataItem as DataItem<IMapPointSeriesDataItem>;\n\n\t\t\tconst xy = projection(coordinates as any);\n\n\t\t\tif (xy) {\n\t\t\t\tconst point = { x: xy[0], y: xy[1] };\n\t\t\t\tsprite.setAll(point);\n\t\t\t\tdataItem.setRaw(\"point\", point);\n\t\t\t}\n\n\t\t\tlet visible = true;\n\t\t\tif (geoPath(geometry)) {\n\t\t\t\tif (this.get(\"clipFront\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.get(\"clipBack\")) {\n\t\t\t\t\tvisible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsprite.setPrivate(\"visible\", visible);\n\t\t\tdataItem.set(\"clipped\", !visible);\n\n\t\t\tif (dataItem && angle != null && dataItem.get(\"autoRotate\", bullet.get(\"autoRotate\"))) {\n\t\t\t\tsprite.set(\"rotation\", angle + dataItem.get(\"autoRotateAngle\", bullet.get(\"autoRotateAngle\", 0)));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers the map to specific series' data item and zooms to the level\n\t * specified in the parameters.\n\t *\n\t * @param  dataItem   Map point\n\t * @param  zoomLevel  Zoom level\n\t * @param  rotate If it's true, the map will rotate so that this point would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPointSeriesDataItem>, zoomLevel: number, rotate?: boolean): Animation<any> | undefined {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\t\t\tif (rotate) {\n\t\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true, undefined, -longitude, -latitude);\n\t\t\t}\n\t\t\treturn chart.zoomToGeoPoint({ longitude: longitude, latitude: latitude }, zoomLevel, true);\n\t\t}\n\t}\n\n\n\t/**\n\t * Zooms the map in so that all points in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items of points to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.5.6\n\t */\n\tpublic zoomToDataItems(dataItems: Array<DataItem<IMapPointSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\n\t\tlet left: number | null = null;\n\t\tlet right: number | null = null;\n\t\tlet top: number | null = null;\n\t\tlet bottom: number | null = null;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\n\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\n\n\t\t\tif (left == null || left > longitude) {\n\t\t\t\tleft = longitude;\n\t\t\t}\n\t\t\tif (right == null || right < longitude) {\n\t\t\t\tright = longitude;\n\t\t\t}\n\t\t\tif (top == null || top < latitude) {\n\t\t\t\ttop = latitude;\n\t\t\t}\n\t\t\tif (bottom == null || bottom > latitude) {\n\t\t\t\tbottom = latitude;\n\t\t\t}\n\t\t})\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -(left + (right - left) / 2), -(top + (top - bottom) / 2));\n\t\t\t\t}\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst chart = this.chart;\n\t\tif (chart) {\n\t\t\tchart.series.each((series) => {\n\t\t\t\tif (series.isType<MapLineSeries>(\"MapLineSeries\")) {\n\t\t\t\t\t$array.each(series.dataItems, (di) => {\n\t\t\t\t\t\tconst pointsToConnect = di.get(\"pointsToConnect\");\n\t\t\t\t\t\tif (pointsToConnect) {\n\t\t\t\t\t\t\t$array.each(pointsToConnect, (point) => {\n\t\t\t\t\t\t\t\tif (point == dataItem) {\n\t\t\t\t\t\t\t\t\t$array.remove(pointsToConnect, point);\n\t\t\t\t\t\t\t\t\tseries.markDirtyValues(di);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tsuper.disposeDataItem(dataItem);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst bullets = dataItem.bullets;\n\t\tif (bullets) {\n\t\t\t$array.each(bullets, (bullet) => {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tsprite.setPrivate(\"visible\", true);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n}\n","import { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { MapPolygonSeries } from \"./MapPolygonSeries\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $mapUtils from \"./MapUtils\";\nimport $polylabel from \"polylabel\";\nimport { geoArea } from \"d3-geo\";\n\nexport interface IMapPolygonSettings extends IGraphicsSettings {\n\n\t/**\n\t * A GeoJSON representation of the polygons geometry.\n\t */\n\tgeometry?: GeoJSON.MultiPolygon | GeoJSON.Polygon;\n\n\t/**\n\t * @todo needs description\n\t * @default 0.5\n\t */\n\tprecision?: number;\n\n}\n\nexport interface IMapPolygonPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A polygon in a [[MapPolygonSeries]].\n */\nexport class MapPolygon extends Graphics {\n\n\tdeclare public _settings: IMapPolygonSettings;\n\tdeclare public _privateSettings: IMapPolygonPrivate;\n\n\tpublic static className: string = \"MapPolygon\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([MapPolygon.className]);\n\tprotected _projectionDirty: boolean = false;\n\n\tprotected _afterNew(): void {\n\t\tsuper._afterNew();\n\t\tthis.setPrivate(\"trustBounds\", true);\n\t}\n\n\t/**\n\t * A [[MapPolygonSeries]] polygon belongs to.\n\t */\n\tpublic series: MapPolygonSeries | undefined;\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this._projectionDirty || this.isDirty(\"geometry\") || this.isDirty(\"precision\")) {\n\t\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\t\tif (geometry) {\n\t\t\t\tconst series = this.series;\n\t\t\t\tif (series) {\n\t\t\t\t\tconst projection = series.projection();\n\t\t\t\t\tif (projection) {\n\t\t\t\t\t\tprojection.precision(this.get(\"precision\", 0.5));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst geoPath = series.geoPath();\n\n\t\t\t\t\tif (geoPath) {\n\t\t\t\t\t\tthis._clear = true;\n\n\t\t\t\t\t\tthis.set(\"draw\", (_display) => {\n\t\t\t\t\t\t\tgeoPath.context(this._display as any);\n\t\t\t\t\t\t\tgeoPath(geometry);\n\t\t\t\t\t\t\tgeoPath.context(null);\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\tif (this.isHover()) {\n\t\t\t\t\t\t\tthis.showTooltip();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\tthis.markDirty();\n\t\tthis._projectionDirty = true;\n\t}\n\n\tpublic _clearDirty() {\n\t\tsuper._clearDirty();\n\t\tthis._projectionDirty = false;\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the geometrical center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic geoCentroid(): IGeoPoint {\n\t\tconst geometry = this.get(\"geometry\")!;\n\t\tif (geometry) {\n\t\t\treturn $mapUtils.getGeoCentroid(geometry);\n\t\t}\n\t\telse {\n\t\t\treturn { latitude: 0, longitude: 0 };\n\t\t}\n\t}\n\n\t/**\n\t * Returns latitude/longitude of the visual center of the polygon.\n\t *\n\t * @return Center\n\t */\n\tpublic visualCentroid(): IGeoPoint {\n\n\t\tlet biggestArea = 0;\n\t\tlet coordinates: number[][][] = [];\n\t\tconst geometry = this.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (geometry.type == \"Polygon\") {\n\t\t\t\tcoordinates = geometry.coordinates as number[][][];\n\t\t\t}\n\t\t\telse if (geometry.type == \"MultiPolygon\") {\n\t\t\t\tfor (let i = 0; i < geometry.coordinates.length; i++) {\n\t\t\t\t\tlet coords = geometry.coordinates[i] as number[][][];\n\t\t\t\t\tlet area = geoArea({ type: \"Polygon\", coordinates: coords });\n\t\t\t\t\tif (area > biggestArea) {\n\t\t\t\t\t\tcoordinates = coords;\n\t\t\t\t\t\tbiggestArea = area;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (coordinates) {\n\t\t\t\tlet center = $polylabel(coordinates as number[][][]);\n\t\t\t\treturn { longitude: center[0], latitude: center[1] };\n\t\t\t}\n\t\t}\n\t\treturn { longitude: 0, latitude: 0 };\n\t}\n\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tconst series = this.series;\n\n\t\tif (series) {\n\t\t\tconst projection = series.projection();\n\t\t\tif (projection) {\n\t\t\t\tconst geoPoint = this.visualCentroid();\n\t\t\t\tconst xy = projection([geoPoint.longitude, geoPoint.latitude]);\n\n\t\t\t\tif (xy) {\n\t\t\t\t\treturn { x: xy[0], y: xy[1] }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Animation } from \"../../core/util/Entity\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { IGeoPoint } from \"../../core/util/IGeoPoint\";\n\nimport { MapSeries, IMapSeriesSettings, IMapSeriesDataItem, IMapSeriesPrivate } from \"./MapSeries\";\nimport { MapPolygon } from \"./MapPolygon\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $mapUtils from \"./MapUtils\";\n\n\n\nexport interface IMapPolygonSeriesPrivate extends IMapSeriesPrivate {\n}\n\nexport interface IMapPolygonSeriesDataItem extends IMapSeriesDataItem {\n\n\t/**\n\t * Related [[MapPolygon]] object.\n\t */\n\tmapPolygon: MapPolygon;\n\n\t/**\n\t * GeoJSON geometry of the polygon.\n\t */\n\tgeometry?: GeoJSON.Polygon | GeoJSON.MultiPolygon;\n}\n\nexport interface IMapPolygonSeriesSettings extends IMapSeriesSettings {\n\n\t/**\n\t * If set to `true`, the order of coordinates in GeoJSON will be flipped.\n\t *\n\t * Some GeoJSON software produces those in reverse order, so if your custom\n\t * map appears garbled, try this setting.\n\t *\n\t * @default false\n\t * @since 5.2.42\n\t */\n\treverseGeodata?: boolean;\n\n}\n\n/**\n * Creates a map series for displaying polygons.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/} for more info\n * @important\n */\nexport class MapPolygonSeries extends MapSeries {\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeMapPolygon(dataItem: DataItem<this[\"_dataItemSettings\"]>): MapPolygon {\n\t\tconst mapPolygon = this.children.push(this.mapPolygons.make());\n\t\tmapPolygon._setDataItem(dataItem);\n\t\tthis.mapPolygons.push(mapPolygon);\n\t\treturn mapPolygon;\n\t}\n\n\t/**\n\t * A [[ListTemplate]] of all polygons in series.\n\t *\n\t * `mapPolygons.template` can also be used to configure polygons.\n\t *\n\t * @default new ListTemplate<MapPolygon>\n\t */\n\tpublic readonly mapPolygons: ListTemplate<MapPolygon> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => MapPolygon._new(this._root, {}, [this.mapPolygons.template])\n\t));\n\n\tpublic static className: string = \"MapPolygonSeries\";\n\tpublic static classNames: Array<string> = MapSeries.classNames.concat([MapPolygonSeries.className]);\n\n\tdeclare public _settings: IMapPolygonSeriesSettings;\n\tdeclare public _privateSettings: IMapPolygonSeriesPrivate;\n\tdeclare public _dataItemSettings: IMapPolygonSeriesDataItem;\n\n\tprotected _types: Array<GeoJSON.GeoJsonGeometryTypes> = [\"Polygon\", \"MultiPolygon\"];\n\n\t/**\n\t * @ignore\n\t */\n\tpublic markDirtyProjection() {\n\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.markDirtyProjection();\n\t\t\t}\n\t\t})\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isDirty(\"fill\")) {\n\t\t\tthis.mapPolygons.template.set(\"fill\", this.get(\"fill\"));\n\t\t}\n\t\tif (this.isDirty(\"stroke\")) {\n\t\t\tthis.mapPolygons.template.set(\"stroke\", this.get(\"stroke\"));\n\t\t}\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tlet mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (!mapPolygon) {\n\t\t\tmapPolygon = this.makeMapPolygon(dataItem);\n\t\t}\n\n\t\tdataItem.set(\"mapPolygon\", mapPolygon);\n\t\tlet geometry = dataItem.get(\"geometry\")!;\n\n\t\tif (geometry) {\n\t\t\tif (this.get(\"reverseGeodata\")) {\n\t\t\t\tconst coordinates = geometry.coordinates;\n\t\t\t\tif (coordinates) {\n\t\t\t\t\tfor (let x = 0; x < geometry.coordinates.length; x++) {\n\t\t\t\t\t\tif (geometry.type == \"MultiPolygon\") {\n\t\t\t\t\t\t\tfor (let y = 0; y < geometry.coordinates[x].length; y++) {\n\t\t\t\t\t\t\t\tgeometry.coordinates[x][y].reverse()\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tgeometry.coordinates[x].reverse()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tmapPolygon.set(\"geometry\", geometry);\n\t\t}\n\n\t\tmapPolygon.series = this;\n\n\t\tthis._addGeometry(dataItem.get(\"geometry\"), this);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tthis.mapPolygons.removeValue(mapPolygon);\n\t\t\tmapPolygon.dispose();\n\t\t}\n\t\tthis._removeGeometry(dataItem.get(\"geometry\"));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _excludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._excludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unexcludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unexcludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _notIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._notIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", false);\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tprotected _unNotIncludeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._unNotIncludeDataItem(dataItem);\n\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\tif (mapPolygon) {\n\t\t\tmapPolygon.setPrivate(\"visible\", true);\n\t\t}\n\t}\n\n\t/**\n\t * Forces a repaint of the element which relies on data.\n\t *\n\t * @since 5.0.21\n\t */\n\tpublic markDirtyValues(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.markDirtyValues();\n\t\tif (dataItem) {\n\t\t\tconst mapPolygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (mapPolygon) {\n\t\t\t\tmapPolygon.set(\"geometry\", dataItem.get(\"geometry\"));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Centers and zooms in on the specific polygon.\n\t *\n\t * @param  dataItem  Target data item\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zooming_to_clicked_object} for more info\n\t * @param  rotate If it's true, the map will rotate so that this polygon would be in the center. Mostly usefull with geoOrthographic projection.\n\t */\n\tpublic zoomToDataItem(dataItem: DataItem<IMapPolygonSeriesDataItem>, rotate?: boolean): Animation<any> | undefined {\n\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\tif (polygon) {\n\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\tconst chart = this.chart;\n\n\t\t\tif (geometry && chart) {\n\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst centroid = $mapUtils.getGeoCentroid(geometry);\n\t\t\t\t\tchart.rotate(-centroid.longitude, -centroid.latitude);\n\t\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry), undefined, -centroid.longitude, -centroid.latitude);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds($mapUtils.getGeoBounds(geometry),);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the map in so that all polygons in the array are visible.\n\t *\n\t * @param   dataItems  An array of data items to zoom to\n\t * @param   rotate     Rotate the map so it is centered on the selected items\n\t * @return             Animation\n\t * @since 5.9.0\n\t */\n\tpublic zoomToDataItems(dataItems: Array<DataItem<IMapPolygonSeriesDataItem>>, rotate?: boolean): Animation<any> | undefined {\n\t\tlet left!: number;\n\t\tlet right!: number;\n\t\tlet top!: number;\n\t\tlet bottom!: number;\n\n\t\t$array.each(dataItems, (dataItem) => {\n\n\t\t\tconst polygon = dataItem.get(\"mapPolygon\");\n\t\t\tif (polygon) {\n\t\t\t\tconst geometry = polygon.get(\"geometry\");\n\t\t\t\tif (geometry) {\n\t\t\t\t\tlet bounds = $mapUtils.getGeoBounds(geometry);\n\n\t\t\t\t\tif (left == null) {\n\t\t\t\t\t\tleft = bounds.left;\n\t\t\t\t\t}\n\t\t\t\t\tif (right == null) {\n\t\t\t\t\t\tright = bounds.right;\n\t\t\t\t\t}\n\t\t\t\t\tif (top == null) {\n\t\t\t\t\t\ttop = bounds.top;\n\t\t\t\t\t}\n\t\t\t\t\tif (bottom == null) {\n\t\t\t\t\t\tbottom = bounds.bottom;\n\t\t\t\t\t}\n\n\t\t\t\t\tleft = Math.min(bounds.left, left);\n\t\t\t\t\tright = Math.max(bounds.right, right);\n\t\t\t\t\ttop = Math.max(bounds.top, top);\n\t\t\t\t\tbottom = Math.min(bounds.bottom, bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tif (left != null && right != null && top != null && bottom != null) {\n\t\t\tconst chart = this.chart;\n\t\t\tif (chart) {\n\t\t\t\tif (rotate) {\n\t\t\t\t\tconst rx = left + (right - left) / 2;\n\t\t\t\t\tconst ry = bottom + (top - bottom) / 2;\n\n\t\t\t\t\tchart.rotate(-rx, -ry);\n\t\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom }, undefined, -rx, -ry);\n\t\t\t\t}\n\n\t\t\t\treturn chart.zoomToGeoBounds({ left, right, top, bottom });\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Returns a [[MapPolygon]] that is under specific X/Y point.\n\t *\n\t * @since 5.9.8\n\t * @param   point  X/Y\n\t * @return         Polygon\n\t */\n\tpublic getPolygonByPoint(point: IPoint): MapPolygon | undefined {\n\t\tlet found: MapPolygon | undefined;\n\t\tconst renderer = this._display._renderer;\n\t\tconst displayObject = (renderer as any).getObjectAtPoint(point);\n\t\tif (displayObject) {\n\t\t\tthis.mapPolygons.each(function(polygon) {\n\t\t\t\tif (polygon._display == displayObject) {\n\t\t\t\t\tfound = polygon;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn found;\n\t\t}\n\t}\n\n\tpublic getPolygonByGeoPoint(point: IGeoPoint): MapPolygon | undefined {\n\t\treturn this.getPolygonByPoint(this.chart!.convert(point));\n\t}\n}\n","import { MapPointSeries, IMapPointSeriesSettings, IMapPointSeriesPrivate, IMapPointSeriesDataItem } from \"./MapPointSeries\";\r\nimport { Component, DataItem, IComponentDataItem } from \"../../core/render/Component\";\r\nimport type { Root } from \"../../core/Root\";\r\nimport type { Bullet } from \"../../core/render/Bullet\";\r\nimport { Container } from \"../../core/render/Container\";\r\nimport { Label } from \"../../core/render/Label\";\r\nimport type { IDisposer } from \"../../core/util/Disposer\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $object from \"../../core/util/Object\";\r\nimport * as d3hierarchy from \"d3-hierarchy\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IClusteredDataItem extends IComponentDataItem {\r\n\t/**\r\n\t * All the data items of this cluster\r\n\t */\r\n\tchildren?: Array<DataItem<IMapPointSeriesDataItem>>;\r\n\r\n\t/**\r\n\t * Bullet of clustered data item\r\n\t */\r\n\tbullet?: Bullet;\r\n\r\n\t/**\r\n\t * An ID of a group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Longitude.\r\n\t */\r\n\tlongitude?: number;\r\n\r\n\t/**\r\n\t * Latitude.\r\n\t */\r\n\tlatitude?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesDataItem extends IMapPointSeriesDataItem {\r\n\t/**\r\n\t * An ID of a bullet's group.\r\n\t */\r\n\tgroupId?: string\r\n\r\n\t/**\r\n\t * Clustered data item (if available)\r\n\t * @readonly\r\n\t */\r\n\tcluster?: DataItem<IClusteredDataItem>;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdx?: number;\r\n\r\n\t/**\r\n\t * How much bullet was moved from its original position\r\n\t */\r\n\tdy?: number;\r\n}\r\n\r\nexport interface IClusteredPointSeriesPrivate extends IMapPointSeriesPrivate {\r\n\r\n}\r\n\r\nexport interface IClusteredPointSeriesSettings extends IMapPointSeriesSettings {\r\n\t/**\r\n\t * Series data can contain a field with an ID of a virtual group the bullet\r\n\t * belongs to.\r\n\t *\r\n\t * For example, we migth want bullets to group with other bullets from the\r\n\t * same continent.\r\n\t *\r\n\t * `groupIdField` specifies which field in source data holds group IDs.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_segregation} for more info\r\n\t * @default groupID\r\n\t */\r\n\tgroupIdField?: string;\r\n\r\n\t/**\r\n\t * Bullets that are closer than X pixels apart, will be automatically grouped.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Minimal_distance} for more info\r\n\t * @default 20\r\n\t */\r\n\tminDistance?: number;\r\n\r\n\t/**\r\n\t * Set this to a [[Bullet]] instance which will be used to show groups.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Group_bullet} for more info\r\n\t */\r\n\tclusteredBullet?: (root: Root, series: ClusteredPointSeries, dataItem: DataItem<IClusteredDataItem>) => Bullet | undefined;\r\n\r\n\t/**\r\n\t * If bullets are closer to each other than `scatterDistance`, they will be\r\n\t * scattered so that all are visible.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 5\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterDistance?: number;\r\n\r\n\t/**\r\n\t * Presumed radius of a each bullet when scattering them.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 8\r\n\t * @since 5.5.7\r\n\t */\r\n\tscatterRadius?: number;\r\n\r\n\t/**\r\n\t * If a map is zoomed to a maxZoomLevel * stopClusterZoom, clusters will be\r\n\t * disabled.\r\n\t * \r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Scatter_settings} for more info\r\n\t * @default 0.95\r\n\t * @since 5.5.7\r\n\t */\r\n\tstopClusterZoom?: number\r\n\r\n\r\n\t/**\r\n\t * Delay in milliseconds before clustering is made.\r\n\t * \r\n\t * This is useful if you have many data items and want to avoid re-clustering\r\n\t * on every zoom/position change.\r\n\t * \r\n\t * @default 0\r\n\t * @since 5.9.11\r\n\t */\r\n\tclusterDelay?: number;\r\n}\r\n\r\n/**\r\n * A version of [[MapPointSeries]] which can automatically group closely located\r\n * bullets into groups.\r\n * \r\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/} for more info\r\n * @since 5.5.6\r\n * @important\r\n */\r\nexport class ClusteredPointSeries extends MapPointSeries {\r\n\r\n\tpublic static className: string = \"ClusteredPointSeries\";\r\n\tpublic static classNames: Array<string> = MapPointSeries.classNames.concat([ClusteredPointSeries.className]);\r\n\r\n\tdeclare public _settings: IClusteredPointSeriesSettings;\r\n\tdeclare public _privateSettings: IClusteredPointSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IClusteredPointSeriesDataItem;\r\n\r\n\tprotected _dataItem: DataItem<this[\"_dataItemSettings\"]> = this.makeDataItem({});\r\n\tprotected _clusterIndex: number = 0;\r\n\tprotected _clusters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\tpublic clusteredDataItems: Array<DataItem<IClusteredDataItem>> = [];\r\n\r\n\tprotected _scatterIndex: number = 0;\r\n\tprotected _scatters: Array<Array<DataItem<this[\"_dataItemSettings\"]>>> = [];\r\n\r\n\tpublic _packLayout = d3hierarchy.pack();\r\n\r\n\tprotected _spiral: Array<{ x: number, y: number }> = [];\r\n\r\n\tprotected _clusterDP?: IDisposer;\r\n\r\n\tprotected _previousZL: number = 0;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis.fields.push(\"groupId\");\r\n\t\tthis._setRawDefault(\"groupIdField\", \"groupId\");\r\n\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"scatterRadius\")) {\r\n\t\t\tthis._spiral = $math.spiralPoints(0, 0, 300, 300, 0, 3, 3, 0, 0)\r\n\t\t}\r\n\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\r\n\t\t\tconst zoomLevel = chart.get(\"zoomLevel\", 1);\r\n\r\n\t\t\tif (zoomLevel != this._previousZL) {\r\n\t\t\t\tconst clusterDelay = this.get(\"clusterDelay\", 0);\r\n\t\t\t\tif (clusterDelay) {\r\n\t\t\t\t\tif (this._clusterDP) {\r\n\t\t\t\t\t\tthis._clusterDP.dispose();\r\n\r\n\t\t\t\t\t\tthis._clusterDP = this.setTimeout(() => {\r\n\t\t\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t\t\t}, clusterDelay)\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// first time without delay\r\n\t\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t\t\tthis._clusterDP = this.setTimeout(() => { }, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._doTheCluster();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._previousZL = zoomLevel;\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tconst longitude = dataItem.get(\"longitude\", 0);\r\n\t\t\t\tconst latitude = dataItem.get(\"latitude\", 0);\r\n\t\t\t\tthis._positionBulletReal(bullet, { type: \"Point\", coordinates: [longitude, latitude] }, [longitude, latitude]);\r\n\t\t\t})\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _doTheCluster() {\r\n\t\tconst groups: { [index: string]: Array<DataItem<IClusteredPointSeriesDataItem>> } = {};\r\n\t\t// distribute to groups\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst groupId = dataItem.get(\"groupId\", \"_default\");\r\n\r\n\t\t\tif (!groups[groupId]) {\r\n\t\t\t\tgroups[groupId] = [];\r\n\t\t\t}\r\n\t\t\tgroups[groupId].push(dataItem);\r\n\t\t})\r\n\r\n\t\tthis._scatterIndex = -1;\r\n\t\tthis._scatters = [];\r\n\t\tthis._clusterIndex = -1;\r\n\t\tthis._clusters = [];\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"children\", undefined);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tdataItem.setRaw(\"cluster\", undefined);\r\n\t\t})\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._scatterGroup(group);\r\n\t\t})\r\n\r\n\r\n\t\t$object.each(groups, (_key, group) => {\r\n\t\t\tthis._clusterGroup(group);\r\n\t\t})\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tif (!dataItem.get(\"cluster\")) {\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Zooms to the area so that all clustered data items of a cluster would be\r\n\t * visible.\r\n\t *\r\n\t * Pass in `true` as a second parameter to rotate that map so that the group\r\n\t * is in the center. This is especially useful in the maps that use\r\n\t * Orthographic (globe) projection.\r\n\t *\r\n\t * @param  dataItem  Group data item\r\n\t * @param  rotate    Rotate the map so that group is in the center?\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/clustered-point-series/#Drill_down} for more info\r\n\t */\r\n\tpublic zoomToCluster(dataItem: DataItem<IClusteredDataItem>, rotate?: boolean) {\r\n\t\tthis.zoomToDataItems(dataItem.get(\"children\", []), rotate);\r\n\t}\r\n\r\n\tprotected _clusterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\t// void\r\n\t\t}\r\n\t\telse {\r\n\r\n\t\t\tdataItems.sort((a, b) => {\r\n\t\t\t\tconst pointA = a.get(\"point\");\r\n\t\t\t\tconst pointB = b.get(\"point\");\r\n\t\t\t\tif (pointA && pointB) {\r\n\t\t\t\t\treturn Math.hypot(pointA.x - pointB.x, pointA.y - pointB.y);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t})\r\n\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._clusterIndex++;\r\n\t\t\t\tthis._clusters[this._clusterIndex] = [];\r\n\t\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tcluster.push(dataItem);\r\n\t\t\t\t$array.removeFirst(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._clusterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet i = 0;\r\n\r\n\t\tconst bulletMethod = this.get(\"clusteredBullet\");\r\n\t\tif (bulletMethod) {\r\n\t\t\t$array.each(this._clusters, (cluster) => {\r\n\t\t\t\tlet sumX = 0;\r\n\t\t\t\tlet sumY = 0;\r\n\r\n\t\t\t\tlet len = cluster.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\r\n\t\t\t\t\tlet clusteredDataItem = this.clusteredDataItems[i];\r\n\t\t\t\t\tif (!clusteredDataItem) {\r\n\t\t\t\t\t\tclusteredDataItem = new DataItem(this, undefined, {});\r\n\r\n\t\t\t\t\t\tconst bullet = clusteredDataItem.set(\"bullet\" as any, bulletMethod(this._root, this, clusteredDataItem));\r\n\r\n\t\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\tthis.bulletsContainer.children.push(sprite);\r\n\t\t\t\t\t\t\t\tsprite._setDataItem(clusteredDataItem);\r\n\r\n\t\t\t\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (child instanceof Component) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchild.markDirtyValues();\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.clusteredDataItems.push(clusteredDataItem)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet groupId;\r\n\r\n\t\t\t\t\t$array.each(cluster, (dataItem) => {\r\n\t\t\t\t\t\tdataItem.setRaw(\"cluster\", clusteredDataItem);\r\n\r\n\t\t\t\t\t\tconst point = dataItem.get(\"point\");\r\n\t\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\t\tsumX += point.x;\r\n\t\t\t\t\t\t\tsumY += point.y;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgroupId = dataItem.get(\"groupId\");\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tlet averageX = sumX / len;\r\n\t\t\t\t\tlet averageY = sumY / len;\r\n\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"children\" as any, cluster);\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"groupId\", groupId);\r\n\r\n\t\t\t\t\tconst prevLen = clusteredDataItem.get(\"value\" as any);\r\n\t\t\t\t\tclusteredDataItem.setRaw(\"value\" as any, len);\r\n\r\n\t\t\t\t\tconst bullet = clusteredDataItem.get(\"bullet\" as any);\r\n\t\t\t\t\tif (bullet) {\r\n\r\n\t\t\t\t\t\tlet geoPoint = this.chart!.invert({ x: averageX, y: averageY });\r\n\t\t\t\t\t\tif (geoPoint) {\r\n\t\t\t\t\t\t\tclusteredDataItem.setAll({\r\n\t\t\t\t\t\t\t\tlongitude: geoPoint.longitude,\r\n\t\t\t\t\t\t\t\tlatitude: geoPoint.latitude,\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._positionBullets(clusteredDataItem)\r\n\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.set(\"forceHidden\", false);\r\n\t\t\t\t\t\t\t//sprite.setAll({ x: averageX, y: averageY });\r\n\r\n\t\t\t\t\t\t\tif (prevLen != len) {\r\n\t\t\t\t\t\t\t\tif (sprite instanceof Container) {\r\n\t\t\t\t\t\t\t\t\tsprite.walkChildren((child) => {\r\n\t\t\t\t\t\t\t\t\t\tif (child instanceof Label) {\r\n\t\t\t\t\t\t\t\t\t\t\tchild.text.markDirtyText();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tlet children = dataItem.get(\"children\");\r\n\t\t\tif (!children || children.length == 0) {\r\n\t\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\t\tif (bullet) {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _onDataClear() {\r\n\t\tsuper._onDataClear();\r\n\r\n\t\t$array.each(this.clusteredDataItems, (dataItem) => {\r\n\t\t\tconst bullet = dataItem.get(\"bullet\" as any);\r\n\t\t\tif (bullet) {\r\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\tif (sprite) {\r\n\t\t\t\t\tsprite.dispose();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tthis.clusteredDataItems = [];\r\n\r\n\t}\r\n\r\n\tprotected _clusterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\tlet minDistance = this.get(\"minDistance\", 20);\r\n\t\t\tconst cluster = this._clusters[this._clusterIndex];\r\n\r\n\t\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tconst di = dataItems[i];\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < minDistance) {\r\n\t\t\t\t\t\t\tcluster.push(di);\r\n\t\t\t\t\t\t\t$array.removeFirst(dataItems, di);\r\n\t\t\t\t\t\t\tthis._clusterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterGroup(dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && chart.get(\"zoomLevel\", 1) >= chart.get(\"maxZoomLevel\", 100) * this.get(\"stopClusterZoom\", 0.95)) {\r\n\t\t\twhile (dataItems.length > 0) {\r\n\t\t\t\tthis._scatterIndex++;\r\n\t\t\t\tthis._scatters[this._scatterIndex] = [];\r\n\t\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t\tconst dataItem = dataItems[0];\r\n\r\n\t\t\t\tscatter.push(dataItem);\r\n\t\t\t\t$array.remove(dataItems, dataItem);\r\n\r\n\t\t\t\tthis._scatterDataItem(dataItem, dataItems);\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(this._scatters, (scatter) => {\r\n\t\t\t\tlet len = scatter.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\t\t\t\t\tlet previousCircles: Array<{ x: number, y: number, radius: number }> = [];\r\n\t\t\t\t\tlet s = 0;\r\n\t\t\t\t\tlet radius = this.get(\"scatterRadius\", 8);\r\n\t\t\t\t\t$array.each(scatter, (dataItem) => {\r\n\t\t\t\t\t\tlet spiralPoint = this._spiral[s];\r\n\t\t\t\t\t\tlet intersects = true;\r\n\r\n\t\t\t\t\t\tif (previousCircles.length > 0) {\r\n\t\t\t\t\t\t\twhile (intersects) {\r\n\t\t\t\t\t\t\t\t$array.each(previousCircles, (previousCircle) => {\r\n\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\twhile ($math.circlesOverlap({ x: spiralPoint.x, y: spiralPoint.y, radius: radius }, previousCircle)) {\r\n\t\t\t\t\t\t\t\t\t\ts++;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (this._spiral[s] == undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = false;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tintersects = true;\r\n\t\t\t\t\t\t\t\t\t\t\tspiralPoint = this._spiral[s];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst dx = spiralPoint.x;\r\n\t\t\t\t\t\tconst dy = spiralPoint.y;\r\n\r\n\t\t\t\t\t\tpreviousCircles.push({ x: dx, y: dy, radius: radius });\r\n\r\n\t\t\t\t\t\tdataItem.set(\"dx\", dx);\r\n\t\t\t\t\t\tdataItem.set(\"dy\", dy);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.setAll({ dx: dx, dy: dy });\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _scatterDataItem(dataItem: DataItem<IClusteredPointSeriesDataItem>, dataItems: Array<DataItem<IClusteredPointSeriesDataItem>>) {\r\n\t\tconst point = dataItem.get(\"point\");\r\n\t\tif (point) {\r\n\t\t\tconst scatterDistance = this.get(\"scatterDistance\", 5)\r\n\t\t\tconst scatter = this._scatters[this._scatterIndex];\r\n\t\t\t$array.each(dataItems, (di) => {\r\n\t\t\t\tif (di && !di.get(\"clipped\")) {\r\n\t\t\t\t\tconst diPoint = di.get(\"point\");\r\n\r\n\t\t\t\t\tif (diPoint) {\r\n\t\t\t\t\t\tif (Math.hypot(diPoint.x - point.x, diPoint.y - point.y) < scatterDistance) {\r\n\t\t\t\t\t\t\tscatter.push(di);\r\n\t\t\t\t\t\t\t$array.removeFirst(dataItems, di);\r\n\t\t\t\t\t\t\tthis._scatterDataItem(di, dataItems);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n}\r\n","import {asin, atan2, cos, sin, sqrt} from \"../math.js\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n        if (k === Infinity) return [2, 0];\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import type { MapChart } from \"./MapChart\";\n\nimport { ZoomTools, IZoomToolsPrivate, IZoomToolsSettings } from \"../../core/render/ZoomTools\";\n\nexport interface IZoomControlSettings extends IZoomToolsSettings {\n}\n\nexport interface IZoomControlPrivate extends IZoomToolsPrivate {\n\t/**\n\t * @ignore\n\t */\n\tchart?: MapChart;\n}\n\n/**\n * A control that displays button for zooming [[MapChart]] in and out.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control} for more information\n * @important\n */\nexport class ZoomControl extends ZoomTools {\n\tpublic static className: string = \"ZoomControl\";\n\tpublic static classNames: Array<string> = ZoomTools.classNames.concat([ZoomControl.className]);\n\n\tdeclare public _settings: IZoomControlSettings;\n\tdeclare public _privateSettings: IZoomControlPrivate;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.addTag(\"zoomtools\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tif (this.isPrivateDirty(\"chart\")) {\n\t\t\tthis.set(\"target\", this.getPrivate(\"chart\"));\n\t\t}\n\t}\n}\n","import {asin, cos, epsilon, sin} from \"../math.js\";\nimport {azimuthalInvert} from \"./azimuthal.js\";\nimport projection from \"./index.js\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import projection from \"./index.js\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, asin, atan2, cos, epsilon, pi, sign, sin, sqrt} from \"../math.js\";\nimport {conicProjection} from \"./conic.js\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea.js\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y,\n        l = atan2(x, abs(r0y)) * sign(r0y);\n    if (r0y * n < 0)\n      l -= pi * sign(x) * sign(r0y);\n    return [l / n, asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math.js\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {degrees, pi, radians} from \"../math.js\";\nimport {projectionMutator} from \"./index.js\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {epsilon} from \"../math.js\";\nimport albers from \"./albers.js\";\nimport conicEqualArea from \"./conicEqualArea.js\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit.js\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import conicEqualArea from \"./conicEqualArea.js\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import projection from \"./index.js\";\nimport {abs, epsilon} from \"../math.js\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n"],"sourceRoot":""}