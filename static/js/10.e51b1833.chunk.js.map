{"version":3,"sources":["../../../../../src/.internal/charts/xy/XYChartScrollbar.ts","../../../../../src/.internal/charts/xy/axes/CategoryAxis.ts","../../../../../src/.internal/charts/xy/axes/CategoryDateAxis.ts","../../../../../src/.internal/charts/xy/axes/DurationAxis.ts","../../../../../src/.internal/charts/xy/series/OHLC.ts","../../../../../src/.internal/charts/xy/series/OHLCSeries.ts","../../../../../src/.internal/charts/xy/series/SmoothedYLineSeries.ts","../../../../../src/.internal/charts/xy/series/SmoothedXLineSeries.ts","../../../../../src/.internal/charts/xy/series/SmoothedXYLineSeries.ts","../node_modules/d3-shape/src/curve/step.js","../../../../../src/.internal/charts/xy/series/StepLineSeries.ts","../../../../../src/.internal/charts/xy/axes/AxisLabelRadial.ts","../../../../../src/.internal/core/render/MonotoneYTension.ts","../../../../../src/.internal/core/render/MonotoneXTension.ts","../node_modules/d3-shape/src/curve/cardinal.js"],"names":["XYChartScrollbar","Scrollbar","constructor","Object","defineProperty","this","children","push","XYChart","new","_root","themeTags","interactive","interactiveChildren","panX","panY","wheelX","wheelY","Graphics","_afterNew","_addOrientationClass","_settings","$utils","orientation","moveValue","thumb","startGrip","endGrip","set","states","create","opacity","plotContainer","chart","remove","removeValue","zoomOutButton","super","_updateThumb","overlay","display","x0","x","y0","y","x1","y1","h","height","w","width","get","moveTo","lineTo","classNames","concat","className","CategoryAxis","Axis","fields","setPrivateRaw","addTag","_prepareChildren","len","dataItems","length","i","_valuesDirty","_itemMap","$array","dataItem","setRaw","Math","max","round","min","_sizeDirty","isDirty","isPrivateDirty","_handleRangeChange","_prepareAxisItems","_updateAxisRanges","series","startCategory","startIndex","endCategory","endIndex","baseAxis","xAxis","yAxis","_markDirtyAxes","key","openKey","otherAxis","ValueAxis","startDataItem","endDataItem","indexOf","setPrivate","hasValue","__valueXShowFields","__valueYShowFields","renderer","minorLabelsEnabled","minorGridEnabled","maxCount","axisLength","frequency","ceil","floor","_frequency","j","_toggleDataItem","f","_createAssets","count","_prepareDataItem","_a","_updateGhost","fillIndex","categoryLocation","endCategoryLocation","index","$type","categoryToIndex","position","indexToPosition","fillEndIndex","fillEndPosition","endPosition","updateLabel","updateGrid","updateTick","updateFill","_processBullet","updateBullet","fillRule","getPrivate","baseValue","basePosition","getX","value","axisDataItem","positionToCoordinate","NaN","getY","getDataItemPositionX","field","cellLocation","_axisLocation","category","getDataItemCoordinateX","getDataItemPositionY","getDataItemCoordinateY","location","startLocation","dataItemToPosition","roundAxisPosition","axisPositionToIndex","$math","getTooltipText","_adjustPosition","label","populateString","_updateTooltipText","tooltip","_setDataItem","text","markDirtyText","getSeriesItem","fieldName","seriesDataItem","zoomToIndexes","start","end","duration","zoom","zoomToCategories","getCellWidthPosition","nextPosition","toGlobalPosition","CategoryDateAxis","Number","MAX_SAFE_INTEGER","startTime","endTime","realDuration","baseDuration","gridInterval","$time","nextGridUnit","timeUnit","baseInterval","assign","formats","format","previousValue","Infinity","previousIndex","previousUnitValue","selectedItems","changed","skip","date","Date","unitValue","added","utc","pop","shouldAdd","item","dateFormatter","DurationAxis","_adjustMinMax","gridCount","strictMode","minMaxStep","durationFormatter","getDurationFormatter","baseUnit","difference","abs","step","divisors","realDivisor","divisor","exponent","log","LOG10E","power","pow","reducedCount","getFormat","_formatText","formatter","extraDecimals","decimals","positionToValue","OHLC","Candlestick","_draw","_display","lY","hY","lX","hX","OHLCSeries","CandlestickSeries","addDisposer","ListTemplate","Template","_new","columns","template","makeColumn","listTemplate","column","mainContainer","make","_processAxisRange","axisRange","SmoothedYLineSeries","LineSeries","_setDefault","curveMonotoneYTension","_updateChildren","SmoothedXLineSeries","curveMonotoneXTension","SmoothedXYLineSeries","curveCardinal","tension","Step","context","t","_context","_t","prototype","areaStart","_line","areaEnd","lineStart","_x","_y","_point","lineEnd","closePath","point","stepAfter","StepLineSeries","curveStepAfter","_getPoints","o","points","p100","itemLocationX0","locationX","itemLocationY0","locationY","itemLocationX1","itemLocationY1","xPos0","xField","vcx","yPos0","yField","vcy","xPos1","yPos1","_shouldInclude","iPoint0","getPoint","point0","iPoint1","point1","fillVisible","xOpenPos0","yOpenPos0","xOpenPos1","yOpenPos1","basePosY","basePosX","getOpen","valueX","xOpenField","valueY","yOpenField","openLocationX","openLocationY","stacked","stackToItemX","stackToItemY","component","closeIPoint0","closeIPoint1","segments","AxisLabelRadial","RadialLabel","MonotoneYTension","_tension","_x0","_x1","_y0","_y1","_t0","slope2","t1","slope3","monotoneYTension","sign","that","x2","y2","h0","h1","s0","s1","p","t0","dx","bezierCurveTo","MonotoneXTension","_k","_x2","_y2","Cardinal","custom","cardinal"],"mappings":"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","file":"static/js/10.e51b1833.chunk.js","sourcesContent":["import { Scrollbar, IScrollbarPrivate, IScrollbarSettings } from \"../../core/render/Scrollbar\";\nimport { XYChart } from \"./XYChart\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IXYChartScrollbarSettings extends IScrollbarSettings {\n\n}\n\nexport interface IXYChartScrollbarPrivate extends IScrollbarPrivate {\n}\n\n/**\n * Creates a scrollbar with chart preview in it.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/#Scrollbar_with_chart_preview} for more info\n * @important\n */\nexport class XYChartScrollbar extends Scrollbar {\n\n\tdeclare public _settings: IXYChartScrollbarSettings;\n\tdeclare public _privateSettings: IXYChartScrollbarPrivate;\n\n\tpublic static className: string = \"XYChartScrollbar\";\n\tpublic static classNames: Array<string> = Scrollbar.classNames.concat([XYChartScrollbar.className]);\n\n\t/**\n\t * An instance of an [[XYChart]] that is used to plot chart preview in\n\t * scrollbar.\n\t */\n\tpublic readonly chart: XYChart = this.children.push(XYChart.new(this._root, {\n\t\tthemeTags: [\"chart\"],\n\t\tinteractive: false,\n\t\tinteractiveChildren: false,\n\t\tpanX: false,\n\t\tpanY: false,\n\t\twheelX: \"none\",\n\t\twheelY: \"none\"\n\t}));\n\n\t/**\n\t * A graphics element that is displayed over inactive portion of the\n\t * scrollbarpreview, to dim it down.\n\t */\n\tpublic readonly overlay: Graphics = this.children.push(Graphics.new(this._root, {\n\t\tthemeTags: [\"overlay\"],\n\t\tinteractive: false\n\t}));\n\n\tprotected _afterNew() {\n\t\tthis._addOrientationClass();\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"scrollbar\", \"xy\", \"chart\", this._settings.orientation]);\n\n\t\tconst children = this.children;\n\t\tchildren.moveValue(this.thumb);\n\t\tchildren.moveValue(this.startGrip);\n\t\tchildren.moveValue(this.endGrip);\n\n\t\tthis.thumb.set(\"opacity\", 0);\n\t\tthis.thumb.states.create(\"hover\", { opacity: 0.2 });\n\n\t\tconst plotContainer = this.chart.plotContainer;\n\t\tplotContainer.set(\"interactive\", false);\n\t\tplotContainer.remove(\"background\");\n\t\tplotContainer.children.removeValue(this.chart.zoomOutButton);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _updateThumb() {\n\t\tsuper._updateThumb();\n\n\t\tthis.overlay.set(\"draw\", (display) => {\n\t\t\tconst startGrip = this.startGrip;\n\t\t\tconst endGrip = this.endGrip;\n\n\t\t\tlet x0 = startGrip.x();\n\t\t\tlet y0 = startGrip.y();\n\n\t\t\tlet x1 = endGrip.x();\n\t\t\tlet y1 = endGrip.y();\n\n\t\t\tconst h = this.height();\n\t\t\tconst w = this.width();\n\n\t\t\tif (x0 > x1) {\n\t\t\t\t[x0, x1] = [x1, x0]\n\t\t\t}\n\n\t\t\tif (y0 > y1) {\n\t\t\t\t[y0, y1] = [y1, y0]\n\t\t\t}\n\n\t\t\tif (this.get(\"orientation\") === \"horizontal\") {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(x0, 0);\n\t\t\t\tdisplay.lineTo(x0, h);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(x1, 0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(x1, h);\n\t\t\t\tdisplay.lineTo(x1, 0);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay.moveTo(0, 0);\n\t\t\t\tdisplay.lineTo(0, y0);\n\t\t\t\tdisplay.lineTo(w, y0);\n\t\t\t\tdisplay.lineTo(w, 0);\n\t\t\t\tdisplay.lineTo(0, 0);\n\n\t\t\t\tdisplay.moveTo(0, y1);\n\t\t\t\tdisplay.lineTo(0, h);\n\t\t\t\tdisplay.lineTo(w, h);\n\t\t\t\tdisplay.lineTo(w, y1);\n\t\t\t\tdisplay.lineTo(0, y1);\n\t\t\t}\n\t\t})\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { Axis, IAxisSettings, IAxisPrivate, IAxisDataItem, IAxisEvents } from \"./Axis\";\nimport type { IXYSeriesDataItem, XYSeries } from \"../series/XYSeries\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $math from \"../../../core/util/Math\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport { populateString } from \"../../../core/util/PopulateString\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\nimport { ValueAxis } from \"./ValueAxis\";\n\nexport interface ICategoryAxisSettings<R extends AxisRenderer> extends IAxisSettings<R> {\n\n\t/**\n\t * A function that can be used to specify how to configure axis fills.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Axis_fills} for more info\n\t */\n\tfillRule?: (dataItem: DataItem<ICategoryAxisDataItem>, index?: number) => void;\n\n\t/**\n\t * A field in data which holds categories.\n\t */\n\tcategoryField: string;\n\n\t/**\n\t * Relative location of where axis cell starts: 0 - beginning, 1 - end.\n\t *\n\t * @default 0\n\t */\n\tstartLocation?: number;\n\n\t/**\n\t * Relative location of where axis cell ends: 0 - beginning, 1 - end.\n\t *\n\t * @default 1\n\t */\n\tendLocation?: number;\n}\n\nexport interface ICategoryAxisDataItem extends IAxisDataItem {\n\n\t/**\n\t * Named category.\n\t */\n\tcategory?: string;\n\n\t/**\n\t * Named end category (for axis items that span multiple categories, like\n\t * axis ranges).\n\t */\n\tendCategory?: string;\n\n\t/**\n\t * Index of the data item.\n\t */\n\tindex?: number;\n\n\t/**\n\t * Relative location of the category within cell: 0 - start, 1 - end.\n\t */\n\tcategoryLocation?: number;\n\n\t/**\n\t * Relative location of the end category within cell: 0 - start, 1 - end.\n\t */\n\tendCategoryLocation?: number;\n\n\t/**\n\t * A distance to shift data item relative to its original position.\n\t *\n\t * The value is 0 to 1, where 1 is full witdth of the axis.\n\t *\n\t * Can be used to sort data items without modifying order of the actual data.\n\t */\n\tdeltaPosition?: number;\n\n}\n\nexport interface ICategoryAxisPrivate extends IAxisPrivate {\n\n\t/**\n\t * Start index of the current zoom scope.\n\t */\n\tstartIndex?: number;\n\n\t/**\n\t * End index of the current zoom scope.\n\t */\n\tendIndex?: number;\n\n}\n\nexport interface ICategoryAxisEvents extends IAxisEvents {\n\n}\n\n/**\n * Creates a category axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-axis/} for more info\n * @important\n */\nexport class CategoryAxis<R extends AxisRenderer> extends Axis<R> {\n\tpublic static className: string = \"CategoryAxis\";\n\tpublic static classNames: Array<string> = Axis.classNames.concat([CategoryAxis.className]);\n\n\tdeclare public _settings: ICategoryAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryAxisDataItem;\n\tdeclare public _events: ICategoryAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tthis.setPrivateRaw(\"name\", \"category\");\n\t\tthis.addTag(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tconst len = this.dataItems.length;\n\t\tlet i = 0;\n\t\tif (this._valuesDirty) {\n\t\t\tthis._itemMap = {};\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tdataItem.setRaw(\"index\", i);\n\t\t\t\tthis._itemMap[dataItem.get(\"category\") as string] = dataItem;\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"maxZoomFactor\", len);\n\t\t}\n\n\t\tthis.setPrivateRaw(\"startIndex\", Math.max(Math.round(this.get(\"start\", 0) * len), 0));\n\t\tthis.setPrivateRaw(\"endIndex\", Math.min(Math.round(this.get(\"end\", 1) * len), len));\n\n\t\tif (this._sizeDirty || this._valuesDirty || (this.isDirty(\"start\") || this.isDirty(\"end\") || this.isPrivateDirty(\"endIndex\") || this.isPrivateDirty(\"startIndex\") || this.isPrivateDirty(\"width\") || this.isPrivateDirty(\"height\"))) {\n\t\t\tif (this.dataItems.length > 0) {\n\t\t\t\tthis._handleRangeChange();\n\t\t\t\tthis._prepareAxisItems();\n\t\t\t\tthis._updateAxisRanges();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleRangeChange() {\n\t\t$array.each(this.series, (series) => {\n\t\t\tlet startCategory = this.dataItems[this.startIndex()].get(\"category\");\n\t\t\tlet endCategory = this.dataItems[this.endIndex() - 1].get(\"category\");\n\n\t\t\tlet baseAxis = series.get(\"baseAxis\");\n\t\t\tlet xAxis = series.get(\"xAxis\");\n\t\t\tlet yAxis = series.get(\"yAxis\");\n\n\t\t\tif (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n\t\t\t\tseries._markDirtyAxes();\n\t\t\t}\n\t\t\telse if (baseAxis === this) {\n\t\t\t\tlet key: string | undefined;\n\t\t\t\tlet openKey: string | undefined;\n\t\t\t\tlet otherAxis = yAxis;\n\t\t\t\tif (xAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryXField\")) {\n\t\t\t\t\t\tkey = \"categoryX\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryXField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryX\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (yAxis === baseAxis) {\n\t\t\t\t\tif (series.get(\"categoryYField\")) {\n\t\t\t\t\t\tkey = \"categoryY\";\n\t\t\t\t\t}\n\t\t\t\t\tif (series.get(\"openCategoryYField\")) {\n\t\t\t\t\t\topenKey = \"openCategoryY\";\n\t\t\t\t\t}\n\t\t\t\t\totherAxis = xAxis;\n\t\t\t\t}\n\n\t\t\t\tif (otherAxis instanceof ValueAxis) {\n\n\t\t\t\t\tif (key || openKey) {\n\t\t\t\t\t\tlet startDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\t\t\t\t\t\tlet endDataItem: DataItem<IXYSeriesDataItem> | undefined;\n\n\t\t\t\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === startCategory) {\n\t\t\t\t\t\t\t\t\tstartDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (let i = series.dataItems.length - 1; i >= 0; i--) {\n\t\t\t\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\t\t\t\tif (key) {\n\t\t\t\t\t\t\t\tif (dataItem.get(key as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (openKey) {\n\t\t\t\t\t\t\t\tif (dataItem.get(openKey as any) === endCategory) {\n\t\t\t\t\t\t\t\t\tendDataItem = dataItem;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet startIndex = 0;\n\t\t\t\t\t\tlet endIndex = series.dataItems.length;\n\n\t\t\t\t\t\tif (startDataItem) {\n\t\t\t\t\t\t\tstartIndex = series.dataItems.indexOf(startDataItem);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (endDataItem) {\n\t\t\t\t\t\t\tendIndex = series.dataItems.indexOf(endDataItem) + 1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tseries.setPrivate(\"startIndex\", startIndex);\n\t\t\t\t\t\tseries.setPrivate(\"endIndex\", endIndex);\n\n\t\t\t\t\t\tlet hasValue = false;\n\t\t\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\t\t\t\tconst dataItem = series.dataItems[i];\n\n\t\t\t\t\t\t\t$array.each(series.__valueXShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t$array.each(series.__valueYShowFields, (key) => {\n\t\t\t\t\t\t\t\tlet value = dataItem.get(<any>key);\n\t\t\t\t\t\t\t\tif (value != null) {\n\t\t\t\t\t\t\t\t\thasValue = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\tif (hasValue) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tseries.setPrivate(\"outOfSelection\", !hasValue);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tseries._markDirtyAxes();\t// must be outside\n\t\t\t}\n\t\t})\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tconst minorLabelsEnabled = renderer.get(\"minorLabelsEnabled\");\n\t\tconst minorGridEnabled = renderer.get(\"minorGridEnabled\", minorLabelsEnabled);\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1);\n\t\tlet frequency = Math.max(1, Math.min(len, Math.ceil((endIndex - startIndex) / maxCount)));\n\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet f = this.dataItems[startIndex].get(\"index\", 0);\n\n\t\tfor (let i = startIndex; i < endIndex; i = i + frequency) {\n\t\t\tlet dataItem = this.dataItems[i];\n\n\t\t\tthis._createAssets(dataItem, []);\n\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\tlet count = frequency;\n\t\t\tif (minorGridEnabled) {\n\t\t\t\tcount = 1;\n\t\t\t}\n\n\t\t\tthis._prepareDataItem(dataItem, f, count);\n\n\t\t\tf++;\n\t\t}\n\n\t\tif (renderer.get(\"minorGridEnabled\")) {\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tlet dataItem = this.dataItems[i];\n\t\t\t\tif (i % frequency != 0) {\n\t\t\t\t\tthis._createAssets(dataItem, [\"minor\"], true);\n\t\t\t\t\tthis._toggleDataItem(dataItem, true);\n\t\t\t\t\tthis._prepareDataItem(dataItem, 0, 1);\n\n\t\t\t\t\tif (!minorLabelsEnabled) {\n\t\t\t\t\t\tdataItem.get(\"label\")?.setPrivate(\"visible\", false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._updateGhost();\n\t}\n\n\n\tpublic _prepareDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, fillIndex?: number, count?: number) {\n\t\tlet renderer = this.get(\"renderer\");\n\n\t\tlet categoryLocation = dataItem.get(\"categoryLocation\", 0);\n\t\tlet endCategoryLocation = dataItem.get(\"endCategoryLocation\", 1);\n\n\t\tlet index: number | undefined = dataItem.get(\"index\");\n\n\t\tif (!$type.isNumber(index)) {\n\t\t\tindex = this.categoryToIndex(dataItem.get(\"category\")!);\n\t\t}\n\n\t\tlet position = this.indexToPosition(index, categoryLocation);\n\n\t\tlet endCategory = dataItem.get(\"endCategory\")!;\n\t\tlet endIndex: number;\n\t\tif (endCategory) {\n\t\t\tendIndex = this.categoryToIndex(endCategory);\n\t\t\tif (!$type.isNumber(endIndex)) {\n\t\t\t\tendIndex = index;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tendIndex = index;\n\t\t}\n\n\t\tlet endPosition = this.indexToPosition(endIndex, endCategoryLocation);\n\n\t\tlet fillEndIndex: number;\n\t\tlet fillEndPosition: number;\n\n\t\tif (dataItem.get(\"isRange\")) {\n\t\t\tfillEndIndex = endIndex;\n\t\t}\n\t\telse {\n\t\t\tfillEndIndex = index + this._frequency - 1;\n\t\t}\n\n\t\tfillEndPosition = this.indexToPosition(fillEndIndex, endCategoryLocation);\n\n\t\trenderer.updateLabel(dataItem.get(\"label\"), position, endPosition, count);\n\t\trenderer.updateGrid(dataItem.get(\"grid\"), position, endPosition);\n\t\trenderer.updateTick(dataItem.get(\"tick\"), position, endPosition, count);\n\t\trenderer.updateFill(dataItem.get(\"axisFill\"), position, fillEndPosition);\n\n\t\tthis._processBullet(dataItem);\n\t\trenderer.updateBullet(dataItem.get(\"bullet\"), position, endPosition);\n\n\t\tconst fillRule = this.get(\"fillRule\");\n\t\tif (fillRule) {\n\t\t\tfillRule(dataItem, fillIndex)\n\t\t}\n\t}\n\n\tpublic startIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.min(Math.max(this.getPrivate(\"startIndex\", 0), 0), len - 1);\n\t}\n\n\tpublic endIndex() {\n\t\tlet len = this.dataItems.length;\n\t\treturn Math.max(1, Math.min(this.getPrivate(\"endIndex\", len), len));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic baseValue(): any {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic basePosition() {\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Returns X coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         X coordinate\n\t */\n\tpublic getX(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * Returns Y coordinate in pixels corresponding to specific category index.\n\t *\n\t * @param   value  Index\n\t * @return         Y coordinate\n\t */\n\tpublic getY(value: string): number {\n\t\tlet axisDataItem = this._itemMap[value];\n\t\tif (axisDataItem) {\n\t\t\treturn this._settings.renderer.positionToCoordinate(this.indexToPosition(axisDataItem.get(\"index\", 0)));\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateX(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionX(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemPositionY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\tconst category = dataItem.get(field as any);\n\t\tconst axisDataItem = this._itemMap[category];\n\t\tif (axisDataItem) {\n\t\t\treturn this.indexToPosition(axisDataItem.get(\"index\", 0), cellLocation);\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getDataItemCoordinateY(dataItem: DataItem<IXYSeriesDataItem>, field: string, cellLocation: number, _axisLocation?: number): number {\n\t\treturn this._settings.renderer.positionToCoordinate(this.getDataItemPositionY(dataItem, field, cellLocation, _axisLocation));\n\t}\n\n\t/**\n\t * Converts category index to a relative position.\n\t *\n\t * `location` indicates relative position within category: 0 - start, 1 - end.\n\t *\n\t * If not set, will use middle (0.5) of the category.\n\t *\n\t * @param   index     Index\n\t * @param   location  Location\n\t * @return            Index\n\t */\n\tpublic indexToPosition(index: number, location?: number): number {\n\t\tif (!$type.isNumber(location)) {\n\t\t\tlocation = 0.5;\n\t\t}\n\n\t\tlet len = this.dataItems.length;\n\n\t\tlet startLocation = this.get(\"startLocation\", 0);\n\t\tlet endLocation = this.get(\"endLocation\", 1);\n\n\t\tlen -= startLocation;\n\t\tlen -= (1 - endLocation);\n\n\t\tlet position = (index + location - startLocation) / len;\n\n\t\tlet dataItem = this.dataItems[index];\n\t\tif (dataItem) {\n\t\t\tposition += dataItem.get(\"deltaPosition\", 0);\n\t\t}\n\n\t\treturn position;\n\t}\n\n\t/**\n\t * Returns an index of a category.\n\t *\n\t * @param   category  Category to look up\n\t * @return            Index\n\t */\n\tpublic categoryToIndex(category: string): number {\n\t\tlet dataItem = this._itemMap[category];\n\t\tif (dataItem) {\n\t\t\treturn dataItem.get(\"index\")!;\n\t\t}\n\t\treturn NaN;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic dataItemToPosition(dataItem: DataItem<this[\"_dataItemSettings\"]>): number {\n\t\treturn this.indexToPosition(dataItem.get(\"index\")!);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic roundAxisPosition(position: number, location: number): number {\n\t\tposition += (0.5 - location) / this.dataItems.length;\n\t\treturn this.indexToPosition(this.axisPositionToIndex(position), location);\n\t}\n\n\t/**\n\t * Returns an index of the category that corresponds to specific pixel\n\t * position within axis.\n\t *\n\t * @param position  Position (px)\n\t * @return Category index\n\t */\n\tpublic axisPositionToIndex(position: number): number {\n\t\tlet len = this.dataItems.length;\n\t\treturn $math.fitToRange(Math.floor(position * len), 0, len - 1);//$math.fitToRange(Math.floor((end - start) * len * position + len * start), 0, len - 1);\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tconst dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\t\tif (dataItem) {\n\t\t\tconst label = dataItem.get(\"label\")\n\t\t\tif (label) {\n\t\t\t\treturn populateString(label, this.get(\"tooltipText\", \"\"));\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip._setDataItem(this.dataItems[this.axisPositionToIndex(position)]);\n\t\ttooltip.label.text.markDirtyText();\n\t}\n\n\t/**\n\t * Returns a data item from series that is closest to the `position`.\n\t *\n\t * @param   series    Series\n\t * @param   position  Relative position\n\t * @return            Data item\n\t */\n\tpublic getSeriesItem(series: XYSeries, position: number): DataItem<IXYSeriesDataItem> | undefined {\n\t\tif (this.dataItems.length > 0) {\n\t\t\tlet fieldName = <any>(this.getPrivate(\"name\")! + this.get(\"renderer\").getPrivate(\"letter\")!);\n\t\t\tlet index = this.axisPositionToIndex(position);\n\t\t\t// try simple first\n\t\t\tlet seriesDataItem = series.dataItems[index];\n\t\t\tlet axisDataItem = this.dataItems[index];\n\t\t\tlet category = axisDataItem.get(\"category\");\n\n\t\t\tif (seriesDataItem && axisDataItem) {\n\t\t\t\tif (seriesDataItem.get(fieldName) === category) {\n\t\t\t\t\treturn seriesDataItem;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// if not found, try looking\n\t\t\tfor (let i = 0, len = series.dataItems.length; i < len; i++) {\n\t\t\t\tlet dataItem = series.dataItems[i];\n\t\t\t\tif (dataItem.get(fieldName) === category) {\n\t\t\t\t\treturn dataItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Zooms the axis to specific `start` and `end` indexes.\n\t *\n\t * Optional `duration` specifies duration of zoom animation in milliseconds.\n\t *\n\t * @param  start     Start index\n\t * @param  end       End index\n\t * @param  duration  Duration in milliseconds\n\t */\n\tpublic zoomToIndexes(start: number, end: number, duration?: number) {\n\t\tlet len = this.dataItems.length;\n\t\tthis.zoom(start / len, end / len, duration);\n\t}\n\n\tpublic zoomToCategories(startCategory: string, endCategory: string, duration?: number) {\n\t\tthis.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1, duration);\n\t}\n\n\t/**\n\t * Returns position span between start and end of a single cell in axis.\n\t *\n\t * @since 5.2.30\n\t * @return Position\n\t */\n\tpublic getCellWidthPosition(): number {\n\t\treturn this._frequency / this.dataItems.length / (this.get(\"end\", 1) - this.get(\"start\", 0));\n\t}\n\t\n\t/**\n\t * @ignore\n\t */\t\n\tpublic nextPosition(count?:number){\n\t\tif(count == null){\n\t\t\tcount = 1;\n\t\t}\n\n\t\tif(this.get(\"renderer\").getPrivate(\"letter\") == \"Y\"){\n\t\t\tcount *= -1;\n\t\t}\n\n\t\tconst position = this.getPrivate(\"tooltipPosition\", 0);\n\n\t\tconst index = $math.fitToRange(this.axisPositionToIndex(position) + count, 0, this.dataItems.length - 1);\t\t\n\t\treturn this.toGlobalPosition(this.indexToPosition(index));\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\nimport type { AxisRenderer } from \"./AxisRenderer\";\nimport { CategoryAxis, ICategoryAxisSettings, ICategoryAxisPrivate, ICategoryAxisDataItem, ICategoryAxisEvents } from \"./CategoryAxis\";\nimport type { ITimeInterval } from \"../../../core/util/Time\";\nimport * as $time from \"../../../core/util/Time\";\nimport * as $type from \"../../../core/util/Type\";\nimport * as $array from \"../../../core/util/Array\";\nimport * as $utils from \"../../../core/util/Utils\";\nimport type { Tooltip } from \"../../../core/render/Tooltip\";\n\nexport interface ICategoryDateAxisSettings<R extends AxisRenderer> extends ICategoryAxisSettings<R> {\n\n\t/**\n\t * Indicates granularity of data.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Data_granularity} for more info\n\t */\n\tbaseInterval: ITimeInterval;\n\n\t/**\n\t * A list of intervals the axis is allowed to show grid/labels on.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Grid_granularity} for more info\n\t */\n\tgridIntervals?: Array<ITimeInterval>;\n\n\t/**\n\t * Display \"period change\" labels using different format.\n\t *\n\t * If set to `true`, will use `periodChangeDateFormats` instead\n\t * of `dateFormats` for such labels, e.g. for month start.\n\t *\n\t * @default true\n\t */\n\tmarkUnitChange?: boolean;\n\n\t/**\n\t * Date formats used for intermediate labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tdateFormats?: { [index: string]: string };\n\n\t/**\n\t * Date formats used for \"period change\" labels.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/date-axis/#Date_formats} for more info\n\t */\n\tperiodChangeDateFormats?: { [index: string]: string };\n\n\t/**\n\t * A date format to use for axis tooltip.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-dates/} for more info\n\t */\n\ttooltipDateFormat?: string;\n\n}\n\nexport interface ICategoryDateAxisDataItem extends ICategoryAxisDataItem {\n}\n\nexport interface ICategoryDateAxisPrivate extends ICategoryAxisPrivate {\n\n\t/**\n\t * Current base interval.\n\t */\n\tbaseInterval: ITimeInterval;\n\n}\n\nexport interface ICategoryDateAxisEvents extends ICategoryAxisEvents {\n}\n\n\n/**\n * Category-based date axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/category-date-axis/} for more info\n * @important\n */\nexport class CategoryDateAxis<R extends AxisRenderer> extends CategoryAxis<R> {\n\tpublic static className: string = \"CategoryDateAxis\";\n\tpublic static classNames: Array<string> = CategoryAxis.classNames.concat([CategoryDateAxis.className]);\n\n\tdeclare public _settings: ICategoryDateAxisSettings<R>;\n\tdeclare public _privateSettings: ICategoryDateAxisPrivate;\n\tdeclare public _dataItemSettings: ICategoryDateAxisDataItem;\n\tdeclare public _events: ICategoryDateAxisEvents;\n\n\tprotected _frequency: number = 1;\n\n\tprotected _itemMap: { [index: string]: DataItem<ICategoryDateAxisDataItem> } = {};\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tthis.fields.push(\"category\");\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _prepareAxisItems() {\n\t\t// temp\n\t\tthis.setPrivateRaw(\"baseInterval\", this.get(\"baseInterval\"));\n\n\t\tconst renderer = this.get(\"renderer\");\n\t\tconst len = this.dataItems.length;\n\n\t\tlet startIndex = this.startIndex();\n\t\tif (startIndex > 0) {\n\t\t\tstartIndex--;\n\t\t}\n\n\t\tlet endIndex = this.endIndex();\n\t\tif (endIndex < len) {\n\t\t\tendIndex++;\n\t\t}\n\n\t\tlet maxCount = renderer.axisLength() / Math.max(renderer.get(\"minGridDistance\")!, 1 / Number.MAX_SAFE_INTEGER);\n\n\t\tlet frequency = Math.min(len, Math.ceil((endIndex - startIndex) / maxCount));\n\t\tstartIndex = Math.floor(startIndex / frequency) * frequency;\n\t\tthis._frequency = frequency;\n\n\t\tfor (let j = 0; j < len; j++) {\n\t\t\tthis._toggleDataItem(this.dataItems[j], false);\n\t\t}\n\n\t\tlet startTime = Number(this.dataItems[startIndex].get(\"category\"));\n\t\tlet endTime = Number(this.dataItems[endIndex - 1].get(\"category\"));\n\t\tlet realDuration = (endTime - startTime);\n\t\tif (endIndex - startIndex < maxCount) {\n\t\t\trealDuration = (endTime - startTime) - ((endTime - startTime) / this.baseDuration() - (endIndex - startIndex)) * this.baseDuration();\n\t\t}\n\n\t\t// if all items are on axis\n\t\tlet gridInterval = $time.chooseInterval(0, realDuration, maxCount, this.get(\"gridIntervals\")!);\n\n\t\tconst nextGridUnit = $time.getNextUnit(gridInterval.timeUnit);\n\t\tconst baseInterval = this.getPrivate(\"baseInterval\");\n\n\t\tif ($time.getIntervalDuration(gridInterval) < this.baseDuration()) {\n\t\t\tgridInterval = { ...baseInterval };\n\t\t}\n\n\t\tconst formats = this.get(\"dateFormats\")!;\n\n\t\tlet previousValue = -Infinity;\n\t\tlet previousIndex = -Infinity;\n\t\tlet previousUnitValue = -Infinity;\n\t\tlet format: string;\n\n\t\tlet selectedItems: Array<{ format: string, dataItem: DataItem<ICategoryDateAxisDataItem> }> = [];\n\t\tlet changed = false;\n\n\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\tlet dataItem = this.dataItems[i];\n\t\t\tlet index = dataItem.get(\"index\")!;\n\t\t\tlet skip = false;\n\n\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\tlet date = new Date(value);\n\t\t\tlet unitValue = $time.getUnitValue(date, gridInterval.timeUnit);\n\n\t\t\tformat = formats[gridInterval.timeUnit];\n\t\t\tlet added = false;\n\n\t\t\tif (gridInterval.timeUnit != \"year\" && gridInterval.timeUnit != \"week\") {\n\t\t\t\tif (nextGridUnit && this.get(\"markUnitChange\") && $type.isNumber(previousValue)) {\n\n\t\t\t\t\tif ($time.checkChange(value, previousValue, nextGridUnit, this._root.utc)) {\n\t\t\t\t\t\tformat = this.get(\"periodChangeDateFormats\")![gridInterval.timeUnit];\n\n\t\t\t\t\t\tif (index - frequency * 0.5 < previousIndex) {\n\t\t\t\t\t\t\tselectedItems.pop();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tadded = true;\n\t\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet shouldAdd = false;\n\t\t\tif (gridInterval.timeUnit === \"day\" || gridInterval.timeUnit === \"week\") {\n\t\t\t\tif (index - previousIndex >= frequency) {\n\t\t\t\t\tshouldAdd = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (unitValue % gridInterval.count === 0) {\n\t\t\t\t\tif (unitValue != previousUnitValue) {\n\t\t\t\t\t\tshouldAdd = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!added && shouldAdd) {\n\t\t\t\tif (index - frequency * 0.7 < previousIndex) {\n\t\t\t\t\tif (changed) {\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tselectedItems.push({ format: format, dataItem: dataItem });\n\t\t\t\t\tpreviousIndex = index;\n\t\t\t\t\tpreviousUnitValue = unitValue;\n\t\t\t\t}\n\t\t\t\tchanged = false;\n\n\t\t\t}\n\n\t\t\tpreviousValue = value;\n\n\t\t}\n\n\t\tif (selectedItems.length > 0) {\n\t\t\tlet f = selectedItems[0].dataItem.get(\"index\", 0);\n\n\t\t\t$array.each(selectedItems, (item) => {\n\t\t\t\tconst dataItem = item.dataItem;\n\t\t\t\tconst format = item.format;\n\t\t\t\tthis._createAssets(dataItem, []);\n\n\t\t\t\tthis._toggleDataItem(dataItem, true);\n\n\t\t\t\tlet value = Number(dataItem.get(\"category\"));\n\t\t\t\tlet date = new Date(value);\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel.set(\"text\", this._root.dateFormatter.format(date, format!));\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tthis._prepareDataItem(dataItem, f, frequency);\n\t\t\t})\n\n\t\t}\n\t}\n\n\t/**\n\t * Returns a duration of currently active `baseInterval` in milliseconds.\n\t *\n\t * @return Duration\n\t */\n\tpublic baseDuration(): number {\n\t\treturn $time.getIntervalDuration(this.getPrivate(\"baseInterval\"));\n\t}\n\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\t//@todo number formatter + tag\n\t\tlet dataItem = this.dataItems[this.axisPositionToIndex(position)];\n\n\t\tif (dataItem) {\n\t\t\tlet format = this.get(\"dateFormats\")![this.getPrivate(\"baseInterval\").timeUnit];\n\t\t\treturn this._root.dateFormatter.format(new Date(dataItem.get(\"category\", 0)), this.get(\"tooltipDateFormat\", format));\n\t\t}\n\t}\n\n\tprotected _updateTooltipText(tooltip: Tooltip, position: number) {\n\t\ttooltip.label.set(\"text\", this.getTooltipText(position));\n\t}\n\n}\n","import type { AxisRenderer } from \"./AxisRenderer\";\nimport type { TimeUnit } from \"../../../core/util/Time\"\n\nimport { ValueAxis, IValueAxisSettings, IValueAxisPrivate, IValueAxisDataItem, IValueAxisEvents, IMinMaxStep } from \"./ValueAxis\";\n\nimport * as $utils from \"../../../core/util/Utils\";\nimport * as $math from \"../../../core/util/Math\";\n\nexport interface IDurationAxisSettings<R extends AxisRenderer> extends IValueAxisSettings<R> {\n\n\t/**\n\t * A base unit (granularity) of data.\n\t *\n\t * Used to indicate what are the base units of your data.\n\t *\n\t * Available options: `\"millisecond\"`, `\"second\"` (default), `\"minute\"`, `\"hour\"`, `\"day\"`, `\"week\"`, `\"month\"`, and `\"year\"`.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/formatters/formatting-durations/#Base_unit} for more info\n\t * @default \"second\"\n\t */\n\tbaseUnit?: TimeUnit\n\n}\n\nexport interface IDurationAxisDataItem extends IValueAxisDataItem {\n}\n\nexport interface IDurationAxisPrivate extends IValueAxisPrivate {\n\n\t/**\n\t * A format to used by axis to format its labels.\n\t *\n\t * @readonly\n\t */\n\tdurationFormat: string;\n\n}\n\nexport interface IDurationAxisEvents extends IValueAxisEvents {\n}\n\n/**\n * Creates a duration axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/duration-axis/} for more info\n * @important\n */\nexport class DurationAxis<R extends AxisRenderer> extends ValueAxis<R> {\n\tpublic static className: string = \"DurationAxis\";\n\tpublic static classNames: Array<string> = ValueAxis.classNames.concat([DurationAxis.className]);\n\n\tdeclare public _settings: IDurationAxisSettings<R>;\n\tdeclare public _privateSettings: IDurationAxisPrivate;\n\tdeclare public _dataItemSettings: IDurationAxisDataItem;\n\tdeclare public _events: IDurationAxisEvents;\n\n\tprotected _dataGrouped: boolean = false;\n\tprotected _groupingCalculated: boolean = false;\n\tprotected _intervalDuration: number = 1;\n\n\tpublic _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"axis\"]);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _adjustMinMax(min: number, max: number, gridCount: number, strictMode?: boolean): IMinMaxStep {\n\t\tlet minMaxStep: IMinMaxStep;\n\n\t\tconst durationFormatter = this.getDurationFormatter();\n\t\tconst baseUnit = this.get(\"baseUnit\");\n\t\t// we don't allow to go to smaller units, setting so to avoid invalidation\n\t\tthis.setRaw(\"maxPrecision\", 0);\n\n\t\tif (baseUnit == \"millisecond\" || baseUnit == \"second\" || baseUnit == \"minute\" || baseUnit == \"hour\") {\n\t\t\t// will fail if 0\n\t\t\tif (gridCount <= 1) {\n\t\t\t\tgridCount = 1;\n\t\t\t}\n\n\t\t\tgridCount = Math.round(gridCount);\n\n\t\t\t//let initialMin: number = min;\n\t\t\t//let initialMax: number = max;\n\n\t\t\tlet difference = max - min;\n\n\t\t\t// in case min and max is the same, use max\n\t\t\tif (difference === 0) {\n\t\t\t\tdifference = Math.abs(max);\n\t\t\t}\n\n\t\t\tlet step = difference / gridCount;\n\n\t\t\tlet divisors = [60, 30, 20, 15, 10, 2, 1];\n\t\t\tlet realDivisor = 1;\n\n\t\t\tif (baseUnit == \"hour\") {\n\t\t\t\tdivisors = [24, 12, 6, 4, 2, 1];\n\t\t\t}\n\n\t\t\tfor (let divisor of divisors) {\n\t\t\t\tif (difference / divisor > gridCount) {\n\t\t\t\t\trealDivisor = divisor;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet count = Math.ceil(((max - min) / realDivisor) / gridCount);\n\n\t\t\tlet exponent: number = Math.log(Math.abs(count)) * Math.LOG10E;\n\t\t\tlet power = Math.pow(10, Math.floor(exponent)) / 10;\n\t\t\tlet reducedCount = count / power;\n\n\t\t\t// find closest to divisor\n\t\t\tlet closest = $math.closest(divisors, reducedCount);\n\t\t\tcount = closest * power;\n\n\t\t\tstep = realDivisor * count;\n\n\t\t\tmin = Math.floor(min / step) * step;\n\t\t\tmax = Math.ceil(max / step) * step;\n\n\t\t\t/*\n\t\t\tcausese SO with seconds\n\t\t\tif (strictMode) {\n\t\t\t\tmin -= step;\n\t\t\t\tif (min < 0 && initialMin >= 0) {\n\t\t\t\t\tmin = 0;\n\t\t\t\t}\n\t\t\t\tmax += step;\n\n\t\t\t\tif (max > 0 && initialMax <= 0) {\n\t\t\t\t\tmax = 0;\n\t\t\t\t}\n\t\t\t}*/\n\t\t\tminMaxStep = { min: min, max: max, step: step };\n\t\t}\n\t\telse {\n\t\t\tminMaxStep = super._adjustMinMax(min, max, gridCount, strictMode);\n\t\t}\n\n\t\t// choose duration formatter based on step\n\t\tthis.setPrivateRaw(\"durationFormat\", durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, baseUnit));\n\n\t\treturn minMaxStep;\n\t}\n\n\tprotected _formatText(value: number) {\n\t\tconst formatter = this.getDurationFormatter();\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n\n\t/**\n\t * Returns text to be used in an axis tooltip for specific relative position.\n\t *\n\t * @param   position  Position\n\t * @return            Tooltip text\n\t */\n\tpublic getTooltipText(position: number, _adjustPosition?: boolean): string | undefined {\n\t\tconst formatter = this.getDurationFormatter();\n\t\tconst extraDecimals = this.get(\"extraTooltipPrecision\", 0);\n\t\tconst decimals = this.getPrivate(\"stepDecimalPlaces\", 0) + extraDecimals;\n\t\tconst value = $math.round(this.positionToValue(position), decimals);\n\n\t\treturn formatter.format(value, this.getPrivate(\"durationFormat\"), this.get(\"baseUnit\"));\n\t}\n}\n","import { Candlestick, ICandlestickSettings, ICandlestickPrivate } from \"./Candlestick\";\n\n\nexport interface IOHLCSettings extends ICandlestickSettings {\n}\n\nexport interface IOHLCPrivate extends ICandlestickPrivate {\n}\n\nexport class OHLC extends Candlestick {\n\n\tdeclare public _settings: IOHLCSettings;\n\tdeclare public _privateSettings: IOHLCPrivate;\n\n\tpublic static className: string = \"OHLC\";\n\tpublic static classNames: Array<string> = Candlestick.classNames.concat([OHLC.className]);\n\n\tpublic _draw() {\n\n\t\tconst display = this._display;\n\n\t\tdisplay.moveTo(this.get(\"lowX1\", 0), this.get(\"lowY1\", 0));\n\t\tdisplay.lineTo(this.get(\"highX1\", 0), this.get(\"highY1\", 0));\n\n\t\tlet w = this.width();\n\t\tlet h = this.height();\n\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\n\t\t\tlet lY = h;\n\t\t\tlet hY = 0;\n\t\t\tdisplay.moveTo(0, lY);\n\t\t\tdisplay.lineTo(w / 2, lY);\n\n\t\t\tdisplay.moveTo(w / 2, hY);\n\t\t\tdisplay.lineTo(w, hY);\n\t\t}\n\t\telse {\n\t\t\tlet lX = 0;\n\t\t\tlet hX = w;\n\n\t\t\tdisplay.moveTo(lX, 0);\n\t\t\tdisplay.lineTo(lX, h / 2);\n\n\t\t\tdisplay.moveTo(hX, h / 2);\n\t\t\tdisplay.lineTo(hX, h);\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../../core/render/Component\";\n\nimport { CandlestickSeries, ICandlestickSeriesPrivate, ICandlestickSeriesSettings, ICandlestickSeriesDataItem, ICandlestickSeriesAxisRange } from \"./CandlestickSeries\";\nimport { OHLC } from \"./OHLC\";\nimport { Template } from \"../../../core/util/Template\";\nimport { ListTemplate } from \"../../../core/util/List\";\n\nimport * as $utils from \"../../../core/util/Utils\";\n\nexport interface IOHLCSeriesDataItem extends ICandlestickSeriesDataItem {\n}\n\nexport interface IOHLCSeriesSettings extends ICandlestickSeriesSettings {\n}\n\nexport interface IOHLCSeriesPrivate extends ICandlestickSeriesPrivate {\n}\n\nexport interface IOHLCSeriesAxisRange extends ICandlestickSeriesAxisRange {\n\n\t/**\n\t * List of [[OHLC]] columns in a range.\n\t */\n\tcolumns: ListTemplate<OHLC>\n\n}\n\n/**\n * OHLC series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/candlestick-series/} for more info\n * @important\n */\nexport class OHLCSeries extends CandlestickSeries {\n\n\tdeclare public _settings: IOHLCSeriesSettings;\n\tdeclare public _privateSettings: IOHLCSeriesPrivate;\n\tdeclare public _dataItemSettings: IOHLCSeriesDataItem;\n\tdeclare public _axisRangeType: IOHLCSeriesAxisRange;\n\n\tpublic static className: string = \"OHLCSeries\";\n\tpublic static classNames: Array<string> = CandlestickSeries.classNames.concat([OHLCSeries.className]);\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<OHLC>): OHLC {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A list of OHLC bars in the series.\n\t *\n\t * `columns.template` can be used to configure OHLC bars.\n\t *\n\t * @default new ListTemplate<OHLC>\n\t */\n\tpublic readonly columns: ListTemplate<OHLC> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({\n\t\t\tthemeTags: [\"autocolor\"]\n\t\t}),\n\t\t() => OHLC._new(this._root, {\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => OHLC._new(this._root, {\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"ohlc\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneYTension } from \"../../../core/render/MonotoneYTension\";\n\nexport interface ISmoothedYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedYLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for vertical plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedYLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedYLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneYTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveMonotoneXTension } from \"../../../core/render/MonotoneXTension\";\n\n\nexport interface ISmoothedXLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n}\n\nexport interface ISmoothedXLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for horizontal plots.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXLineSeries.className]);\n\n\tdeclare public _settings: ISmoothedXLineSeriesSettings;\n\tdeclare public _privateSettings: ISmoothedXLineSeriesPrivate;\n\tdeclare public _dataItemSettings: ISmoothedXLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveMonotoneXTension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport { curveCardinal, CurveCardinalFactory } from \"d3-shape\";\n\nexport interface SmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface ISmoothedXYLineSeriesDataItem extends ILineSeriesDataItem {\n\n}\n\nexport interface SmoothedXYLineSeriesProperties extends ILineSeriesSettings {\n\n\t/**\n\t * A tension force for the smoothing (0-1). The smaller the value the more\n\t * curvy the line will be.\n\t *\n\t * @default 0.5\n\t */\n\ttension?: number;\n\n\t/**\n\t * @ignore\n\t*/\n\tcurveFactory?: CurveCardinalFactory\n\n}\n\nexport interface SmoothedXYLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\n/**\n * Smoothed line series suitable for XY (scatter) charts\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/smoothed-series/} for more info\n */\nexport class SmoothedXYLineSeries extends LineSeries {\n\tpublic static className: string = \"SmoothedXYLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([SmoothedXYLineSeries.className]);\n\n\tdeclare public _settings: SmoothedXYLineSeriesProperties;\n\tdeclare public _privateSettings: SmoothedXYLineSeriesPrivate;\n\tdeclare public _dataItemSettings: SmoothedXYLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)));\n\t\tsuper._afterNew();\n\t}\n\n\tpublic _updateChildren() {\n\t\tif (this.isDirty(\"tension\")) {\n\t\t\tthis.set(\"curveFactory\", curveCardinal.tension(this.get(\"tension\", 0.5)) as any);\n\t\t\tthis._valuesDirty = true;\n\t\t}\n\n\t\tsuper._updateChildren();\n\t}\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","import { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"./LineSeries\";\nimport type { AxisRenderer } from \"../axes/AxisRenderer\";\nimport type { Axis } from \"../axes/Axis\";\nimport { Percent, p100 } from \"../../../core/util/Percent\";\nimport type { DataItem } from \"../../../core/render/Component\";\nimport { curveStepAfter } from \"d3-shape\";\n\nexport interface IStepLineSeriesDataItem extends ILineSeriesDataItem {\n}\n\nexport interface IStepLineSeriesSettings extends ILineSeriesSettings {\n\n\t/**\n\t * Width of the step in percent relative to the cell width.\n\t *\n\t * NOTE: setting this to less than 100% makes sense only when risers are\n\t * disabled: `noRisers: true`\n\t *\n\t * @default 100%\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Step_width} for more info\n\t */\n\tstepWidth?: Percent;\n\n\t/**\n\t * Disables vertical connecting lines for the steps.\n\t *\n\t * @default false\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/series/step-line-series/#Disabling_risers} for more info\n\t */\n\tnoRisers?: boolean;\n\n}\n\nexport interface IStepLineSeriesPrivate extends ILineSeriesPrivate {\n}\n\nexport class StepLineSeries extends LineSeries {\n\tpublic static className: string = \"StepLineSeries\";\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([StepLineSeries.className]);\n\n\tdeclare public _settings: IStepLineSeriesSettings;\n\tdeclare public _privateSettings: IStepLineSeriesPrivate;\n\tdeclare public _dataItemSettings: IStepLineSeriesDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._setDefault(\"curveFactory\", curveStepAfter);\n\t\tsuper._afterNew();\n\t}\n\n\n\tprotected _getPoints(dataItem: DataItem<this[\"_dataItemSettings\"]>, o: { points: Array<Array<number>>, segments: number[][][], stacked: boolean | undefined, getOpen: boolean, basePosX: number, basePosY: number, fillVisible: boolean | undefined, xField: string, yField: string, xOpenField: string, yOpenField: string, vcx: number, vcy: number, baseAxis: Axis<AxisRenderer>, xAxis: Axis<AxisRenderer>, yAxis: Axis<AxisRenderer>, locationX: number, locationY: number, openLocationX: number, openLocationY: number }) {\n\t\tlet points = o.points;\n\n\t\tlet width = this.get(\"stepWidth\", p100).value / 2;\n\n\t\tlet itemLocationX0 = dataItem.get(\"locationX\", o.locationX);\n\t\tlet itemLocationY0 = dataItem.get(\"locationY\", o.locationY);\n\t\tlet itemLocationX1 = itemLocationX0;\n\t\tlet itemLocationY1 = itemLocationY0;\n\n\t\tif (o.baseAxis === o.xAxis) {\n\t\t\titemLocationX0 -= width;\n\t\t\titemLocationX1 += width;\n\t\t}\n\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\titemLocationY0 -= width;\n\t\t\titemLocationY1 += width;\n\t\t}\n\n\t\tlet xPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX0, o.vcx);\n\t\tlet yPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY0, o.vcy);\n\n\t\tlet xPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xField, itemLocationX1, o.vcx);\n\t\tlet yPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yField, itemLocationY1, o.vcy);\n\n\t\tif (this._shouldInclude(xPos0)) {\n\n\t\t\tconst iPoint0 = this.getPoint(xPos0, yPos0);\n\t\t\tconst point0 = [iPoint0.x, iPoint0.y];\n\n\t\t\tconst iPoint1 = this.getPoint(xPos1, yPos1);\n\t\t\tconst point1 = [iPoint1.x, iPoint1.y];\n\n\t\t\tif (o.fillVisible) {\n\t\t\t\tlet xOpenPos0: number = xPos0;\n\t\t\t\tlet yOpenPos0: number = yPos0;\n\t\t\t\tlet xOpenPos1: number = xPos1;\n\t\t\t\tlet yOpenPos1: number = yPos1;\n\n\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t}\n\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t}\n\n\t\t\t\tif (o.getOpen) {\n\t\t\t\t\tlet valueX = dataItem.get(o.xOpenField as any);\n\t\t\t\t\tlet valueY = dataItem.get(o.yOpenField as any);\n\n\t\t\t\t\tif (valueX != null && valueY != null) {\n\t\t\t\t\t\titemLocationX0 = dataItem.get(\"openLocationX\", o.openLocationX);\n\t\t\t\t\t\titemLocationY0 = dataItem.get(\"openLocationY\", o.openLocationY);\n\n\t\t\t\t\t\titemLocationX1 = itemLocationX0;\n\t\t\t\t\t\titemLocationY1 = itemLocationY0;\n\n\t\t\t\t\t\tif (o.baseAxis === o.xAxis) {\n\t\t\t\t\t\t\titemLocationX0 -= width;\n\t\t\t\t\t\t\titemLocationX1 += width;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\titemLocationY0 -= width;\n\t\t\t\t\t\t\titemLocationY1 += width;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (o.stacked) {\n\t\t\t\t\t\t\tlet stackToItemX = dataItem.get(\"stackToItemX\")!;\n\t\t\t\t\t\t\tlet stackToItemY = dataItem.get(\"stackToItemY\")!;\n\n\t\t\t\t\t\t\tif (stackToItemX) {\n\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX0, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(stackToItemX, o.xField, itemLocationX1, (stackToItemX.component as StepLineSeries).get(\"vcx\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.yAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.basePosX;\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.basePosX;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (stackToItemY) {\n\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY0, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(stackToItemY, o.yField, itemLocationY1, (stackToItemY.component as StepLineSeries).get(\"vcy\"));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tif (o.xAxis === o.baseAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.basePosY;\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.basePosY;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse if (o.baseAxis === o.yAxis) {\n\t\t\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\txOpenPos0 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX0, o.vcx);\n\t\t\t\t\t\t\tyOpenPos0 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY0, o.vcy);\n\t\t\t\t\t\t\txOpenPos1 = o.xAxis.getDataItemPositionX(dataItem, o.xOpenField, itemLocationX1, o.vcx);\n\t\t\t\t\t\t\tyOpenPos1 = o.yAxis.getDataItemPositionY(dataItem, o.yOpenField, itemLocationY1, o.vcy);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet closeIPoint0 = this.getPoint(xOpenPos0, yOpenPos0);\n\t\t\t\tlet closeIPoint1 = this.getPoint(xOpenPos1, yOpenPos1);\n\n\t\t\t\tpoint0[2] = closeIPoint0.x;\n\t\t\t\tpoint0[3] = closeIPoint0.y;\n\n\t\t\t\tpoint1[2] = closeIPoint1.x;\n\t\t\t\tpoint1[3] = closeIPoint1.y;\n\t\t\t}\n\n\t\t\tpoints.push(point0);\n\t\t\tpoints.push(point1);\n\n\t\t\tdataItem.set(\"point\", {x:point0[0] + (point1[0] - point0[0]) / 2, y:point0[1] + (point1[1] - point0[1]) / 2 });\n\t\t}\n\n\t\tif (this.get(\"noRisers\")) {\n\t\t\to.points = [];\n\t\t\to.segments.push(points);\n\t\t}\n\t}\n}\n","import { RadialLabel, IRadialLabelSettings, IRadialLabelPrivate } from \"../../../core/render/RadialLabel\";\nimport type { IPoint } from \"../../../core/util/IPoint\";\n\nexport interface IAxisLabelRadialSettings extends IRadialLabelSettings {\n\n\t/**\n\t * Relative location of the label within the cell.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tlocation?: number;\n\n\t/**\n\t * Relative location of the label within the cell when it spans multiple\n\t * intervals.\n\t *\n\t * `0` - beginning, `0.5` - middle, `1` - end.\n\t */\n\tmultiLocation?: number;\n\n\t/**\n\t * The minimum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.1` will mean that label will not be shown if it's closer to the\n\t * beginning of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tminPosition?: number;\n\n\t/**\n\t * The maximum relative position within visible axis scope the label can\n\t * appear on.\n\t *\n\t * E.g. `0.9` will mean that label will not be shown if it's closer to the\n\t * end of the axis than 10%.\n\t *\n\t * @default 0\n\t */\n\tmaxPosition?: number;\n\n}\n\nexport interface IAxisLabelRadialPrivate extends IRadialLabelPrivate {\n}\n\n/**\n * Draws a label on a circular axis.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/xy-chart/axes/#Labels} for more info\n */\nexport class AxisLabelRadial extends RadialLabel {\n\n\tdeclare public _settings: IAxisLabelRadialSettings;\n\tdeclare public _privateSettings: IAxisLabelRadialPrivate;\n\n\tpublic static className: string = \"AxisLabelRadial\";\n\tpublic static classNames: Array<string> = RadialLabel.classNames.concat([AxisLabelRadial.className]);\n\n\tpublic _tickPoints: Array<IPoint> = [];\n\n}\n","/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}","/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // falls through\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n"],"sourceRoot":""}