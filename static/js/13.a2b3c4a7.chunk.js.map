{"version":3,"sources":["../../../../../src/.internal/charts/stock/indicators/ChartIndicator.ts","../../../../../src/.internal/charts/stock/indicators/OverboughtOversold.ts","../../../../../src/.internal/charts/stock/indicators/MovingAverage.ts","../../../../../src/.internal/charts/stock/indicators/Momentum.ts","../../../../../src/.internal/charts/stock/indicators/VWAP.ts","../../../../../src/.internal/charts/stock/indicators/MovingAverageEnvelope.ts","../../../../../src/.internal/charts/stock/indicators/MovingAverageDeviation.ts","../../../../../src/.internal/charts/stock/indicators/AccelerationBands.ts","../../../../../src/.internal/charts/stock/indicators/BollingerBands.ts","../../../../../src/.internal/charts/stock/indicators/RelativeStrengthIndex.ts","../../../../../src/.internal/charts/stock/indicators/AccumulationDistribution.ts","../../../../../src/.internal/charts/stock/indicators/AccumulativeSwingIndex.ts","../../../../../src/.internal/charts/stock/indicators/Aroon.ts","../../../../../src/.internal/charts/stock/indicators/MACD.ts","../../../../../src/.internal/charts/stock/indicators/MACross.ts","../../../../../src/.internal/charts/stock/indicators/ChaikinMoneyFlow.ts","../../../../../src/.internal/charts/stock/indicators/ChaikinOscillator.ts","../../../../../src/.internal/charts/stock/indicators/BullBearPower.ts","../../../../../src/.internal/charts/stock/indicators/OnBalanceVolume.ts","../../../../../src/.internal/charts/stock/indicators/PVT.ts","../../../../../src/.internal/charts/stock/indicators/StochasticOscillator.ts","../../../../../src/.internal/charts/stock/indicators/StochasticMomentumIndex.ts","../../../../../src/.internal/charts/stock/indicators/AwesomeOscillator.ts","../../../../../src/.internal/charts/stock/indicators/WilliamsR.ts","../../../../../src/.internal/charts/stock/indicators/Volume.ts","../../../../../src/.internal/charts/stock/indicators/VolumeProfile.ts","../../../../../src/.internal/charts/stock/indicators/CommodityChannelIndex.ts","../../../../../src/.internal/charts/stock/indicators/DisparityIndex.ts","../../../../../src/.internal/charts/stock/indicators/StandardDeviation.ts","../../../../../src/.internal/charts/stock/indicators/TypicalPrice.ts","../../../../../src/.internal/charts/stock/indicators/Trix.ts","../../../../../src/.internal/charts/stock/indicators/MedianPrice.ts","../../../../../src/.internal/charts/stock/indicators/ZigZag.ts","../../../../../src/.internal/charts/stock/indicators/AverageTrueRange.ts","../../../../../src/.internal/charts/stock/drawing/DrawingSeries.ts","../../../../../src/.internal/charts/stock/drawing/PolylineSeries.ts","../../../../../src/.internal/charts/stock/drawing/SimpleLineSeries.ts","../../../../../src/.internal/charts/stock/drawing/RectangleSeries.ts","../../../../../src/.internal/charts/stock/drawing/ParallelChannelSeries.ts","../../../../../src/.internal/charts/stock/drawing/LineArrowSeries.ts","../../../../../src/.internal/charts/stock/drawing/HorizontalLineSeries.ts","../../../../../src/.internal/charts/stock/drawing/VerticalLineSeries.ts","../../../../../src/.internal/charts/stock/drawing/AverageSeries.ts","../../../../../src/.internal/charts/stock/drawing/RegressionSeries.ts","../../../../../src/.internal/charts/stock/drawing/DoodleSeries.ts","../../../../../src/.internal/charts/stock/drawing/IconSeries.ts","../../../../../src/.internal/charts/stock/drawing/LabelSeries.ts","../../../../../src/.internal/charts/stock/drawing/CalloutSeries.ts","../../../../../src/.internal/charts/stock/drawing/EllipseSeries.ts","../../../../../src/.internal/charts/stock/drawing/TrendLineSeries.ts","../../../../../src/.internal/charts/stock/drawing/QuadrantLineSeries.ts","../../../../../src/.internal/charts/stock/drawing/FibonacciSeries.ts","../../../../../src/.internal/charts/stock/drawing/FibonacciTimezoneSeries.ts","../../../../../src/.internal/charts/stock/drawing/HorizontalRaySeries.ts","../../../../../src/.internal/charts/stock/drawing/Measure.ts","../../../../../src/.internal/charts/stock/toolbar/StockToolbar.ts","../../../../../src/.internal/charts/stock/toolbar/DropdownList.ts","../../../../../src/.internal/charts/stock/toolbar/DrawingToolControl.ts","../../../../../src/.internal/charts/stock/toolbar/DropdownListControl.ts","../../../../../src/.internal/charts/stock/toolbar/DropdownControl.ts","../../../../../src/.internal/charts/stock/toolbar/IconControl.ts","../../../../../src/.internal/charts/stock/toolbar/DrawingControl.ts","../../../../../src/.internal/charts/stock/toolbar/IndicatorControl.ts","../node_modules/flatpickr/dist/esm/types/options.js","../node_modules/flatpickr/dist/esm/l10n/default.js","../node_modules/flatpickr/dist/esm/utils/index.js","../node_modules/flatpickr/dist/esm/utils/dom.js","../node_modules/flatpickr/dist/esm/utils/formatting.js","../node_modules/flatpickr/dist/esm/utils/dates.js","../node_modules/flatpickr/dist/esm/index.js","../../../../../src/.internal/charts/stock/toolbar/DateRangeSelector.ts","../../../../../src/.internal/charts/stock/toolbar/PeriodSelector.ts","../../../../../src/.internal/charts/stock/toolbar/SeriesTypeControl.ts","../../../../../src/.internal/charts/stock/toolbar/IntervalControl.ts","../../../../../src/.internal/charts/stock/toolbar/ResetControl.ts","../../../../../src/.internal/charts/stock/toolbar/DataSaveControl.ts","../../../../../src/.internal/charts/stock/toolbar/SettingsControl.ts","../../../../../src/.internal/charts/stock/toolbar/ComparisonControl.ts","../../../../../src/.internal/plugins/json/Serializer.ts","../node_modules/flatpickr/dist/esm/utils/polyfills.js"],"names":["ChartIndicator","Indicator","constructor","Object","defineProperty","_afterNew","super","stockChart","this","get","stockSeries","seriesChart","chart","root","_root","panels","push","StockPanel","new","themeTags","_themeTags","addTag","panel","addDisposer","events","on","e","oldValue","indicators","removeValue","seriesXAxis","xRenderer","AxisRendererX","xAxis","baseInterval","start","end","GaplessDateAxis","xAxes","renderer","DateAxis","set","_a","Tooltip","forceHidden","setAll","yRenderer","AxisRendererY","minGridDistance","yAxis","yAxes","ValueAxis","tooltip","series","_createSeries","legend","topPlotContainer","children","insertIndex","StockLegend","data","legendDataItem","dataItems","length","settingsButton","setPrivate","editableSettings","_editableSettings","XYCursor","_dispose","hide","duration","Promise","all","_super","call","show","classNames","concat","className","OverboughtOversold","key","name","language","translateAny","type","strictMinMax","autoZoom","middle","createAxisRange","makeDataItem","middleGrid","_applyThemes","visible","side","overBought","overBoughtRB","Button","icon","Graphics","adapters","add","y","$type","$math","plotContainer","height","_updateRange","AxisBullet","location","sprite","overBoughtRange","overBoughtFills","fills","template","overBoughtGrid","overSold","overSoldRB","overSoldRange","overSoldFills","overSoldGrid","button","position","toAxisPosition","Math","round","positionToValue","LineSeries","valueXField","valueYField","stroke","fill","undefined","_prepareChildren","overBoughtLabel","overSoldLabel","middleLabel","isDirty","numberFormatter","getNumberFormatter","overSoldValue","overBoughtValue","middleValue","format","color","strokes","MovingAverage","options","markDataDirty","setCustomData","groupDataDisabled","calculateAggregates","_handleLegend","prepareData","period","_getDataArray","_sma","_wma","_ema","_dema","_tema","offset","i","baseDuration","len","firstTime","lastTime","$array","dataItem","newX","valueX","Momentum","value","_getValue","prevValue","valueY","VWAP","Infinity","volumeSeries","totalVolume","totalVW","volumeDI","volume","vw","value_y","volumeToRemove","vwToRemove","vwap","MovingAverageEnvelope","upperBandSeries","openValueYField","lowerBandSeries","_updateChildren","_updateSeriesColor","smaData","values","shift","Number","shiftType","ma","upper","lower","dispose","MovingAverageDeviation","ColumnSeries","columns","increasing","decreasing","states","create","decreasingColor","Color","fromHex","toCSSHex","increasingColor","unit","previous","deviation","deviationColor","AccelerationBands","upperColor","lowerColor","factor","stockDataItem","low","high","_lower","_upper","_average","BollingerBands","standardDeviations","mean","stdSum","j","di","diValue","pow","std","sqrt","RelativeStrengthIndex","unshift","smaSeries","averageGain","averageLoss","prevAverageGain","prevAverageLoss","rsi","change","abs","gain","loss","isNaN","valueS","AccumulationDistribution","useVolume","setRaw","prevAD","close","mf","ad","AccumulativeSwingIndex","_axisRangeDI","_axisRange","onPrivate","min","limitMoveValue","axisRange","t","asi","negativeColor","positiveColor","swingColor","yDataItem","c","cy","h","l","o","oy","hl","hc","lc","tr","max","er","k","dasi","Aroon","downSeries","numberFormat","upColor","downColor","li","hi","vh","vl","up","down","MACD","signalSeries","differenceSeries","_dataDirty","dataContext","fastPeriod","slowPeriod","signalPeriod","seriesColor","signalColor","emaFast","emaSlow","macd","p","signal","difference","differenceColor","MACross","fastSeries","ChaikinMoneyFlow","mfv","cmf","ChaikinOscillator","BullBearPower","ema","bbp","OnBalanceVolume","obv","PVT","pvt","StochasticOscillator","slowSeries","index","lp","hp","StochasticMomentumIndex","emaSeries","kPeriod","hhh","dhl","dPeriod","d","hhh_ema2","dhl_ema2","emaPeriod","AwesomeOscillator","po","sma5","sma34","ao","oscillatorColor","WilliamsR","Volume","volumeColor","getVolumeColor","VolumeProfile","text","extTarget","extTargetValue","extTargetMinValue","minValue","getPrivate","val","step","panelXAxis","grid","labels","zoomable","panX","panY","x","percent","centerX","snapTooltip","openValueXField","upSeries","_addInteractivity","target","component","indexOf","column","hover","_previousColumn","updateLegendValue","unhover","fillOpacity","area","startIndex","endIndex","count","rows","floor","ceil","rowDataDown","rowDataUp","previousDataItem","volumeDataItem","dataDown","sum","total","yOpen","xOpen","setIndex","dataUp","highest","valueArea","cd","cu","dlen","rowAbove1","sumAbove","rowBelow1","sumBelow","clear","each","_markDirtyKey","CommodityChannelIndex","_getTypicalPrice","sma","meanDeviation","DisparityIndex","movingAverageType","disparity","StandardDeviation","TypicalPrice","typical","valueToRemove","Trix","previousValue","ema3","trix","MedianPrice","median","ZigZag","zigZagTime","zigZagValue","firstDataItem","goesUp","firstValue","firstHigh","firstLow","time","zigzag","depth","b","skip","lastDataItem","lastValue","lastHigh","lastLow","AverageTrueRange","value_close","value_high","value_low","prevClose","prevATR","valueClose","atr","DrawingSeries","Container","ListTemplate","Template","_new","setStateOnChildren","draggable","grips","Circle","circles","outerCircles","Rectangle","selectors","_tag","strokesTemplate","fillsTemplate","templateField","_getIndex","_erasingEnabled","_disposeIndex","originalEvent","_drawingEnabled","_handlePointerDown","getIndex","_getStrokeIndex","dragStart","startDragItem","_isDrawing","_selectDrawing","ctrlKey","stopDragItem","_isHover","_showSegmentBullets","bulletsContainer","opacity","bullets","_series","_di","dc","strokeTemplate","container","make","circle","outerCircle","event","_addBulletInteraction","_tweakBullet","Bullet","locationX","_handlePointerOver","_handlePointerOut","_getStockChart","markDirtyKey","disposeIndex","id","drawingId","$object","_key","disposeDataItem","_pIndex","_dispatchStockEvent","selector","_getSprite","_selected","_afterDataChange","corner","_createElements","_index","_dataItem","_clearDirty","_isSelecting","clearDrawings","_dataItems","userData","setInteractive","enableDrawingSelection","bullet","_hideResizer","spriteResizer","resizerSprite","_dragStartDrawing","unselectAllDrawings","_handleFillDragStart","_dragStopDrawing","_handleFillDragStop","_isPointerDown","point","toLocal","_dragStartPX","coordinateToPosition","valueXns","_dragStartY","_getYValue","_dvpX","_dvY","valueToPosition","_dragStart","_dragStop","posX","dpx","dy","dvpx","dvy","vpx","vxns","vx","_getXValue","vy","roundTo","_setContext","_setXLocation","_positionBullets","dragStop","markDirty","_updateSegment","_updateElements","settings","strokeOpacity","strokeDasharray","strokeWidth","defaultState","lookup","_applySettings","fillTemplate","_valuesDirty","markDirtyDrawings","_updateSelectors","isDrawing","_selectionWasOn","_settings","_getFillTemplate","fillColor","_getStrokeTemplate","strokeColor","_container","isEnabled","dispatch","_handleBulletDragged","_isDragging","_handleBulletDragStart","_handleBulletDragStop","setTimeout","_handlePointerClick","_increaseIndex","_drawingId","_generateId","Date","getTime","random","_clickPointerPoint","_placeBulletsContainer","moveValue","enableDrawing","disableDrawing","_handleBulletDraggedReal","_event","_clickDp","_downDp","_upDp","_handlePointerUp","_moveDp","_movePoint","_handlePointerMove","enableErasing","disableErasing","toggleDrawing","enabled","once","grip","_movePointerPoint","_setXLocationReal","firstDayOfWeek","locale","open","$time","timeUnit","utc","timezone","markDirtyValues","doNotConvert","field","_snap","baseValueSeries","baseValue","_getBase","working","realValue","getSeriesItem","sprites","keepSelection","force","_unselectDrawing","selectorContainer","indexToDrawingId","_updateSelector","r","selectorPadding","width","_getContext","context","getContext","unselectDrawings","selectDrawing","unselectDrawing","deleteSelected","deleteDrawing","cancelDrawing","PolylineSeries","mainContainer","Line","forceInactive","_endPolyline","_setContextSprite","_drawingLine","_addPoint","closing","_dispatchAdded","movePoint","points","bLastItem","bPoint","closingDataItem","SimpleLineSeries","lines","hitLines","makeLine","line","makeHitLine","lineTemplate","_lines","strokeIndex","hitTemplate","s","diP1","diP2","p1","p2","angle","p11","p22","_updateLine","hitLine","_hitLines","segments","hitSegments","_handlePointerClickReal","_addPoints","_handlePointerMoveReal","showExtension","_addTemplates","addPoints","valueYns","_addPointsReal","addLine","RectangleSeries","y1","y2","fillGraphics","makeFill","display","moveTo","lineTo","strokeGraphics","_updateOthers","_fillGraphics","_p1","_p2","_drawFill","ParallelChannelSeries","_firstClick","diP3","diP4","diM1","diM2","_updateMiddlePoints","valueX1","valueX2","valueX3","valueX4","valueY1","valueY2","valueY3","valueY4","xM1","xM2","mBullet","point1","point2","p3","p4","dy1","dy2","LineArrowSeries","Triangle","arrows","child","arrow","makeArrow","_changed","di1","di2","w","settings2","HorizontalLineSeries","VerticalLineSeries","AverageSeries","x1","x2","i1","i2","average","number","precision","linear","arguments","n","run","rise","gradient","intercept","map","predict","RegressionSeries","inversed","ii","resultPoints","DoodleSeries","_handleBulletPosition","_panX","_panY","cursor","_down","IconSeries","_e","scale","rotation","_context","_getIconTemplate","svgPath","centerY","iconSvgPath","iconScale","iconCenterX","iconCenterY","bounds","right","left","bottom","top","LabelSeries","label","EditableLabel","editOn","_isEditing","_isSelected","_tweakBullet2","_label","_getLabelTemplate","_afterTextSave","_dataContext","labelFontSize","fontSize","labelFontFamily","fontFamily","labelFontWeight","fontWeight","labelFontStyle","fontStyle","labelFill","_hideAllBullets","labelSettings","CalloutSeries","background","PointedRectangle","bgSettings","off","_updatePointer","animate","to","from","easing","$ease","parent","toGlobal","pointerX","pointerY","_getBgTemplate","EllipseSeries","radiusX","radiusY","Ellipse","ellipses","makeEllipse","ellipse","ellipseTemplate","items","bDI","tDI","rDI","lDI","positionL","positionR","mx","valueXReal","locationXReal","valueYReal","vwy","valueY0","my","valueX0","positionX0","positionX","mpos","_ellipses","_setDataItem","diT","diB","diL","diR","_clickVY","_clickPX","_getEllipseTemplate","pt","pb","pr","pl","rx","ry","TrendLineSeries","QuadrantLineSeries","fill1","fill2","m1y","m2y","m3y","FibonacciSeries","Label","makeLabel","_updateChildrenReal","sequence","_labels","_strokes","_fills","markDirtyText","labelArr","fillsArr","strokesArr","remove","makeStroke","_drawStroke","_clearGraphics","item","FibonacciTimezoneSeries","_updateSegmentReal","open1","open2","diff","endValue","positionToCoordinate","HorizontalRaySeries","Measure","populateText","RoundedRectangle","DataItem","interfaceColors","ix","labelBg","iy","value1","value2","time1","time2","intervalCount","div1","div2","intervalUnit","millisecond","second","minute","hour","day","week","month","year","StockToolbar","Entity","_defaultThemes","_afterNewApplyThemes","_initControls","loadDefaultCSS","_afterChanged","_cssDisposer","controls","control","appendChild","disposer","StockToolbarCSS","$utils","dom","_disposers","DropdownList","Dropdown","_setupKeyboardNav","_initElements","_initSearch","list","document","createElement","_initItems","_sizeItems","style","maxHeight","overflow","rebuildList","innerHTML","exclude","addItem","_maybeMakeAccessible","searchBox","input","placeholder","_ev","_filterItems","_currentSelectedIndex","_beforeChanged","isPrivateDirty","search","searchCallback","maxItems","slice","getElementsByTagName","regex","RegExp","innerText","match","info","inputId","setAttribute","subLabel","form","checked","ev","disabled","inputs","isCustomSearch","isAccessible","activeElement","keyCode","click","dir","_getActiveItems","forEach","getAttribute","querySelectorAll","DrawingToolControl","StockControl","scrollable","setTool","tool","active","_initTools","_getToolIcon","_setLabel","tools","StockIcons","getIcon","DropdownListControl","dropdownSettings","searchable","maxSearchItems","currentItem","itemObject","dropdown","setItem","cloneNode","setItemById","getItemById","found","dropdownItems","_t","_handleClick","DropdownControl","html","IconControl","JSON","parse","icons","listIcon","setIcon","_initIcons","_getDrawingIcon","setIconByPath","path","getIconByPath","stringify","_getSVG","viewbox","DrawingControl","_initToolbar","onAll","_updatePanelBindings","_getSeriesTool","_isInited","setColor","bg","strokeControl","setOpacity","fillControl","_resetControls","toolbar","toolsContainer","toolControl","description","eraserControl","drawingIcons","iconControl","snapControl","ColorControl","colors","strokeWidths","strokeWidthControl","strokeDasharrays","currentStrokeDasharray","dasharray","join","strokeDasharrayControl","labelFillControl","useOpacity","fontSizes","size","fontSizeControl","boldControl","italicControl","fontFamilies","fontFamilyControl","extensionControl","selectControl","setEraser","clearControl","togglable","_setTool","_drawingSeries","_tool","seriesList","isInited","rootEvents","_setStroke","_setFill","_setExtension","_setDrawingIcon","_setSnap","_currentEnabledSeries","_maybeInitToolSeries","prevPanel","labelFontSizeControl","labelFontFamilyControl","controlElement","initializedPanels","chartSeries","targetSeries","_getPanelMainSeries","toolSettings","toolTemplates","fillShape","pointCount","drawings","getSeriesDefault","setPercentScale","_updateSeriesBindings","isDisposed","labelTools","fillDisabled","snap","_getDefaultIcon","replace","serializeDrawings","output","indent","res","panelIndex","isType","serializer","Serializer","includeSettings","maxDepth","row","__parse","json","__tool","__panelIndex","__drawing","serialize","unserializeDrawings","drawing","drawingSeries","JsonParser","then","drawingData","_updateDrawingIndexes","pushAll","newValue","IndicatorControl","indicator","addIndicator","_initList","supportsIndicator","indicatorId","clearIndicators","eachReverse","callback","modal","openIndicator","serializeIndicators","excludeSettings","__stockSeries","__volumeSeries","_walkParents","__legendIndex","__indicator","unserializeIndicators","walkChildren","HOOKS","defaults","_disable","allowInput","allowInvalidPreload","altFormat","altInput","altInputClass","window","navigator","userAgent","ariaDateFormat","autoFillDefaultTime","clickOpens","closeOnSelect","conjunction","dateFormat","defaultHour","defaultMinute","defaultSeconds","disable","disableMobile","enableSeconds","enableTime","errorHandler","err","console","warn","getWeek","givenDate","date","setHours","setDate","getDate","getDay","week1","getFullYear","hourIncrement","ignoredFocusElements","inline","minuteIncrement","mode","monthSelectorType","nextArrow","noCalendar","now","onChange","onClose","onDayCreate","onDestroy","onKeyDown","onMonthChange","onOpen","onParseConfig","onReady","onValueUpdate","onYearChange","onPreCalendarPosition","plugins","positionElement","prevArrow","shorthandCurrentMonth","showMonths","static","time_24hr","weekNumbers","wrap","english","weekdays","shorthand","longhand","months","daysInMonth","ordinal","nth","rangeSeparator","weekAbbreviation","scrollTitle","toggleTitle","amPM","yearAriaLabel","monthAriaLabel","hourAriaLabel","minuteAriaLabel","pad","int","bool","debounce","fn","wait","_this","args","clearTimeout","apply","arrayify","obj","Array","toggleClass","elem","classList","tag","content","textContent","clearNode","node","firstChild","removeChild","findParent","condition","parentNode","createNumberInput","inputClassName","opts","wrapper","numInput","arrowUp","arrowDown","pattern","getEventTarget","composedPath","error","doNothing","monthToStr","monthNumber","revFormat","D","F","dateObj","monthName","setMonth","G","getHours","parseFloat","H","J","K","test","M","shortMonth","S","seconds","setSeconds","U","_","unixSeconds","W","weekNum","weekNumber","parseInt","Y","setFullYear","Z","ISODate","minutes","setMinutes","m","u","unixMillSeconds","tokenRegex","formats","toISOString","getMonth","getSeconds","getMinutes","String","substring","createDateFormatter","_b","config","_c","l10n","_d","isMobile","frmt","overrideLocale","formatDate","split","arr","createDateParser","givenFormat","timeless","customLocale","parsedDate","dateOrig","toFixed","datestr","trim","parseDate","matched","ops","matchIndex","regexStr","token","isBackSlash","escaped","exec","Error","compareDates","date1","date2","calculateSecondsSinceMidnight","hours","getDefaultHours","minDate","minHour","minMinutes","minSeconds","maxDate","maxHr","maxMinutes","__assign","assign","prototype","hasOwnProperty","__spreadArrays","il","a","jl","FlatpickrInstance","element","instanceConfig","self","defaultOptions","flatpickr","defaultConfig","English","getClosestActiveElement","calendarContainer","getRootNode","bindToInstance","bind","setCalendarWidth","requestAnimationFrame","visibility","daysContainer","daysWidth","days","offsetWidth","weekWrapper","removeProperty","updateTime","selectedDates","defaultDate","getMilliseconds","latestSelectedDateObj","preventDefault","isKeyDown","eventTarget","curValue","delta","which","isHourElem","hourElement","isMinuteElem","minuteElement","incrementNumInput","timeWrapper","_input","setHoursFromInputs","updateValue","_debouncedChange","secondElement","limitMinHours","minTime","minDateHasTime","limitMaxHours","maxTime","maxDateHasTime","minBound","maxBound","currentTime","result","secondsSinceMidnight","parseSeconds","setHoursFromDate","onYearInput","toString","changeYear","handler","el","addEventListener","_handlers","removeEventListener","triggerChange","triggerEvent","jumpToDate","jumpDate","jumpTo","oldYear","currentYear","oldMonth","currentMonth","message","buildMonthSwitch","redraw","timeIncrement","contains","inputElem","createEvent","dispatchEvent","createDay","_dayNumber","dateIsEnabled","dayElement","$i","todayDateElem","tabIndex","isDateSelected","selectedDateElem","isDateInRange","insertAdjacentHTML","focusOnDayElem","targetNode","focus","onMouseOver","getFirstAvailableDay","startMonth","endMonth","focusOnDay","current","dayFocused","isInView","body","startElem","givenMonth","loopDelta","numMonthDays","changeMonth","getNextAvailableDay","buildMonthDays","firstOfMonth","prevMonthDays","utils","getDaysInMonth","createDocumentFragment","isMultiMonth","prevMonthDayClass","nextMonthDayClass","dayNumber","dayIndex","dayNum","dayContainer","buildDays","frag","shouldBuildMonth","monthsDropdownContainer","selected","buildMonth","monthElement","monthNavFragment","selectedMonth","yearInput","tabindex","yearElement","buildMonths","monthNav","prevMonthNav","yearElements","monthElements","nextMonthNav","buildWeekdays","weekdayContainer","updateWeekdays","splice","isOffset","_hidePrevMonthArrow","_hideNextMonthArrow","updateNavigationCurrentMonth","isCalendarElem","documentClick","isOpen","eventTarget_1","isCalendarElement","lostFocus","relatedTarget","isIgnored","some","timeContainer","newYear","newYearNum","isNewYear","dateToCheck","enable","array","parsed","onBlur","isInput","valueChanged","trimEnd","getDateStr","allowKeydown","allowInlineKeydown","blur","isTimeObj","focusAndClose","selectDate","delta_1","stopPropagation","currentYearElement","elems","pluginElements","filter","shiftKey","charAt","toLowerCase","cellClass","hoverDate","firstElementChild","initialDate","rangeStartDate","rangeEndDate","containsDisabled","minRange","maxRange","rContainer","dayElem","ts","ts1","ts2","timestamp","outOfRange","onResize","positionCalendar","minMaxDateSetter","inverseDateObj","removeAttribute","getInputElem","querySelector","setupLocale","l10ns","default","dataset","customPositionElement","_positionElement","calendarHeight","reduce","acc","offsetHeight","calendarWidth","configPos","configPosVertical","configPosHorizontal","inputBounds","getBoundingClientRect","distanceFromBottom","innerHeight","showOnTop","pageYOffset","pageXOffset","isCenter","isRight","rightMost","centerMost","doc","editableSheet","styleSheets","sheet","cssRules","head","createStyleSheet","getDocumentStyleSheet","bodyWidth","centerLeft","centerIndex","centerStyle","insertRule","centerBefore","msMaxTouchPoints","selectedDate","shouldChangeMonth","selectedIndex","sort","single","range","loadedPlugins","_bind","_setHoursFromDate","_positionCalendar","triggerChangeEvent","toInitial","mobileInput","_initialDate","_createElement","destroy","lastChild","insertBefore","_type","wasOpen","select","option","CALLBACKS","setSelectedDate","toggle","updatePositionElement","inputDate","dates","parseDateRules","rule","hooks","initEvent","specificFormat","dObj","mobileFormatStr","onMonthNavClick","isPrevMonth","isNextMonth","boolOpts","userConfig","_enable","timeMode","defaultDateFormat","defaultAltFormat","_minDate","_maxDate","minMaxTimeSetter","_minTime","_maxTime","hook","pluginConf","parseConfig","nodeName","required","nextSibling","setupInputs","preloadedDate","setupDates","yr","fragment","__hidePrevMonthArrow","__hideNextMonthArrow","innerContainer","buildWeeks","separator","hourInput","minuteInput","military2ampm","secondInput","title","buildTime","customAppend","appendTo","nodeType","build","evt","inputType","defaultValue","setupMobile","debouncedResize","ontouchstart","capture","selText","bindEvents","isSafari","init","_flatpickr","nodeList","nodes","HTMLElement","instances","HTMLCollection","NodeList","Node","en","localize","setDefaults","jQuery","fp_incr","DateRangeSelector","_updateInputs","_loadDefaultCSS","_initDropdown","fromColumn","fromGroup","fromLabel","translate","fromField","toColumn","toGroup","toLabel","toField","pickerLocale","_getPickerLocale","fromPicker","_formatDate","_parseDate","toPicker","buttons","buttonsColumn","saveButton","_getAxis","_updateLabel","_updatePickers","zoomToDates","fromDate","toDate","cancelButton","dateFormatter","_getDateFormat","translateFunc","ic","primary","toCSS","primary2","border","StyleSheet","nonce","PeriodSelector","_initPeriodButtons","periods","axis","_setPeriodButtonStatus","toUpperCase","_resetActiveButtons","selectPeriod","timeout","_getPeriodButtons","getElementsByClassName","MultiDisposer","plen","_getChart","_getMaxOrMax","mainDataSetId","dataSet","_dataSets","_getMax","_getMin","fromStart","_highlightPeriod","zoomOut","interval","getGroupInterval","firstDay","startTime","setTime","endTime","_groupChangedDp","_groupChangedTo","SeriesTypeControl","IntervalControl","ResetControl","DataSaveControl","href","localStorage","getItem","_getStorageId","restoreData","autoSave","saveData","clearData","_populateInputs","removeItem","drawingControl","_getDrawingControl","indicatorControl","_getIndicatorControl","isSavedData","bucket","getControl","SettingsControl","_setLogarithmic","_setFills","serializableTools","dataSaveControl","storageId","currentScale","_getYScale","_getFillEnabled","axisFills","resetExtremes","ComparisonControl","source","full","arrval","ListData","am5object","Percent","fullSettings","isUserSetting","setting","settingValue","Component","properties","excludeProperties","_refs","refs","_i","TypeError","_loop_1","keys","args_1"],"mappings":"8mIA8BM,MAAgBA,UAAuBC,IAA7CC,c,oBAQCC,OAAAC,eAAA,c,yDACAD,OAAAC,eAAA,c,yDACAD,OAAAC,eAAA,c,yDACAD,OAAAC,eAAA,e,yDACAD,OAAAC,eAAA,e,yDAEAD,OAAAC,eAAA,kB,yDACAD,OAAAC,eAAA,mB,gDAAqC,CAAC,cAuGvC,CArGWC,Y,MACTC,MAAMD,YAEN,MAAME,EAAaC,KAAKC,IAAI,cACtBC,EAAcF,KAAKC,IAAI,eACvBE,EAAcD,EAAYE,MAC1BC,EAAOL,KAAKM,MAClB,GAAIP,GAAcI,EAAa,CAE9B,MAAMC,EAAQL,EAAWQ,OAAOC,KAAKC,IAAWC,IAAIL,EAAM,CAAEM,UAAWX,KAAKY,cAC5ER,EAAMS,OAAO,aACbb,KAAKc,MAAQV,EAEbJ,KAAKe,YAAYhB,EAAWQ,OAAOS,OAAOC,GAAG,eAAgBC,IACxDA,EAAEC,UAAYf,GACjBL,EAAWqB,WAAWC,YAAYrB,K,KAIpC,MAAMsB,EAAcpB,EAAYD,IAAI,SAG9BsB,EAAYC,IAAcd,IAAIL,EAAM,CAAC,GAC3C,IAAIoB,EACAC,EAAeJ,EAAYrB,IAAI,gBAC/B0B,EAAQL,EAAYrB,IAAI,SACxB2B,EAAMN,EAAYrB,IAAI,OAGzBwB,EADGH,aAAuBO,IAClBzB,EAAM0B,MAAMtB,KAAKqB,IAAgBnB,IAAIL,EAAM,CAAE0B,SAAUR,EAAWG,aAAcA,KAGhFtB,EAAM0B,MAAMtB,KAAKwB,IAAStB,IAAIL,EAAM,CAAE0B,SAAUR,EAAWG,aAAcA,KAGlFH,EAAUU,IAAI,mBAA+C,QAA3BC,EAAAZ,EAAYrB,IAAI,mBAAW,IAAAiC,OAAA,EAAAA,EAAEjC,IAAI,qBACnEwB,EAAMQ,IAAI,YAAaX,EAAYrB,IAAI,cACvCwB,EAAMQ,IAAI,aAAcX,EAAYrB,IAAI,eAExCwB,EAAMQ,IAAI,UAAWE,IAAQzB,IAAIL,EAAM,CAAE+B,aAAa,KAEtDX,EAAMY,OAAO,CAAEV,MAAOA,EAAOC,IAAKA,IAClC5B,KAAKyB,MAAQA,EAGb,MAAMa,EAAYC,IAAc7B,IAAIL,EAAM,CACzCmC,gBAAgB,KAEXC,EAAQrC,EAAMsC,MAAMlC,KAAKmC,IAAUjC,IAAIL,EAAM,CAClD0B,SAAUO,EACVM,QAAST,IAAQzB,IAAIL,EAAM,CAAE+B,aAAa,OAE3CpC,KAAKyC,MAAQA,EAEb,MAAMI,EAAS7C,KAAK8C,gBACpB9C,KAAK6C,OAASA,EAGd,MAAME,EAAS3C,EAAM4C,iBAAiBC,SAASC,YAAY,EAC1DC,IAAYzC,IAAIL,EAAM,CAAEN,WAAYC,KAAKC,IAAI,iBAG9C8C,EAAOK,KAAK5C,KAAKqC,GAEjB,MAAMQ,EAAiBN,EAAOO,UAAUP,EAAOO,UAAUC,OAAS,GAClEF,EAAepB,IAAI,QAAS7B,GAC5BiD,EAAepD,IAAI,UAAUgC,IAAI,eAAe,GAEhD,MAAMuB,EAAiBH,EAAepD,IAAI,kBAC1CuD,EAAeC,WAAW,aAAczD,MAExC,MAAM0D,EAAmB1D,KAAK2D,kBACzBD,GAA+C,GAA3BA,EAAiBH,QACzCC,EAAevB,IAAI,eAAe,GAGnC7B,EAAM6B,IAAI,SAAU2B,IAASlD,IAAIL,EAAM,CAAEoC,MAAOA,EAAOhB,MAAOA,I,CAEhE,CAEUoC,WACT/D,MAAM+D,WACa7D,KAAKC,IAAI,cACjBM,OAAOc,YAAYrB,KAAKc,MACpC,CAEagD,KAAKC,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAMJ,KAAIK,KAAC,KAAAJ,GACX/D,KAAKc,MAAMgD,KAAKC,IAElB,G,CAEaK,KAAKL,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAME,KAAID,KAAC,KAAAJ,GACX/D,KAAKc,MAAMsD,KAAKL,IAElB,G,EAlHApE,OAAAC,eAAAJ,EAAA,a,gDAAkC,mBAClCG,OAAAC,eAAAJ,EAAA,c,gDAA0CC,IAAU4E,WAAWC,OAAO,CAAC9E,EAAe+E,c,oDCgBjF,MAAOC,UAA2BhF,EAAxCE,c,oBAQCC,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,e,yDACAD,OAAAC,eAAA,iB,yDAEAD,OAAAC,eAAA,sB,yDACAD,OAAAC,eAAA,wB,yDAOAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,SACJ,CACFJ,IAAK,WACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,UACJ,CACFJ,IAAK,gBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,WA+LR,CA5LWhF,YACTG,KAAKY,WAAWJ,KAAK,sBAErBV,MAAMD,YAEN,MAAMO,EAAQJ,KAAKc,MACb2B,EAAQzC,KAAKyC,MACnBA,EAAMJ,OAAO,CAAEyC,cAAc,EAAMC,UAAU,IAG7C/E,KAAKgF,OAAShF,KAAKyC,MAAMwC,gBAAgBjF,KAAKyC,MAAMyC,aAAa,CAAC,IAClE,MAAMC,EAAanF,KAAKgF,OAAO/E,IAAI,QACnCkF,EAAW9C,OAAO,CAAE1B,UAAW,CAAC,gBAChCwE,EAAWC,eAESpF,KAAKgF,OAAO/E,IAAI,SACxBoC,OAAO,CAAEgD,SAAS,EAAMjD,aAAa,IAGjD,IAAIkD,EAAO,OADO7C,EAAMxC,IAAI,YAA8BA,IAAI,cAG7DqF,EAAO,SAIR,MAAMC,EAAa9C,EAAMyC,aAAa,CAAC,GACvClF,KAAKuF,WAAaA,EAClBA,EAAWtD,IAAI,WAAY,KAE3B,MAAMuD,EAAeC,IAAO/E,IAAIV,KAAKM,MAAO,CAC3CK,UAAW,CAAC,YAAa,WAAY2E,GACrCI,KAAMC,IAASjF,IAAIV,KAAKM,MAAO,CAC9BK,UAAW,CAAC,YAAa,YAK3B6E,EAAaI,SAASC,IAAI,KAAK,WAC9B,OAAO,CACR,IAGAL,EAAaI,SAASC,IAAI,KAAK,SAASC,GACvC,OAAIC,WAAeD,GACXE,aAAiBF,EAAG,EAAG1F,EAAM6F,cAAcC,UAE5CJ,CACR,IAGAN,EAAaxE,OAAOC,GAAG,WAAW,KACjCjB,KAAKmG,aAAaX,EAAc,aAAa,IAG9CD,EAAWtD,IAAI,SAAUmE,IAAW1F,IAAIV,KAAKM,MAAO,CACnD+F,SAAU,EACVC,OAAQd,KAGT,MAAMe,EAAkBvG,KAAK6C,OAAOoC,gBAAgBM,GACpDvF,KAAKuG,gBAAkBA,EACvB,MAAMC,EAAkBD,EAAgBE,MACpCD,GACHA,EAAgBE,SAASzE,IAAI,YAAa,CAAC,aAAc,SAG1D,MAAM0E,EAAiBpB,EAAWtF,IAAI,QACtC0G,EAAetE,OAAO,CAAE1B,UAAW,CAAC,cAAe0E,SAAS,IAC5DsB,EAAevB,eAESG,EAAWtF,IAAI,SACvBoC,OAAO,CAAEgD,SAAS,EAAMjD,aAAa,EAAOiE,SAAU,IAGtE,MAAMO,EAAWnE,EAAMyC,aAAa,CAAC,GACrClF,KAAK4G,SAAWA,EAChBA,EAAS3E,IAAI,YAAa,KAE1B,MAAM4E,EAAapB,IAAO/E,IAAIV,KAAKM,MAAO,CACzCK,UAAW,CAAC,YAAa,WAAY2E,GACrCI,KAAMC,IAASjF,IAAIV,KAAKM,MAAO,CAC9BK,UAAW,CAAC,YAAa,YAK3BkG,EAAWjB,SAASC,IAAI,KAAK,WAC5B,OAAO,CACR,IAGAgB,EAAWjB,SAASC,IAAI,KAAK,SAASC,GACrC,OAAIC,WAAeD,GACXE,aAAiBF,EAAG,EAAG1F,EAAM6F,cAAcC,UAE5CJ,CACR,IAGAe,EAAW7F,OAAOC,GAAG,WAAW,KAC/BjB,KAAKmG,aAAaU,EAAY,WAAW,IAG1CD,EAAS3E,IAAI,SAAUmE,IAAW1F,IAAIV,KAAKM,MAAO,CACjD+F,SAAU,EACVC,OAAQO,KAIT,MAAMC,EAAgB9G,KAAK6C,OAAOoC,gBAAgB2B,GAClD5G,KAAK8G,cAAgBA,EACrB,MAAMC,EAAgBD,EAAcL,MAChCM,GACHA,EAAcL,SAASzE,IAAI,YAAa,CAAC,WAAY,SAGtD,MAAM+E,EAAeJ,EAAS3G,IAAI,QAClC+G,EAAa3E,OAAO,CAAE1B,UAAW,CAAC,YAAa0E,SAAS,IACxD2B,EAAa5B,eAESwB,EAAS3G,IAAI,SACrBoC,OAAO,CAAEgD,SAAS,EAAMjD,aAAa,EAAOiE,SAAU,GACrE,CAEUF,aAAac,EAAgBxC,GACtC,MAAMrE,EAAQJ,KAAKyC,MAAMrC,MACzB,GAAIA,EAAO,CACV,MAAM8G,EAAWlH,KAAKyC,MAAM0E,eAAeF,EAAOnB,IAAM1F,EAAM6F,cAAcC,UAC5ElG,KAAKiC,IAAIwC,EAAK2C,KAAKC,MAAMrH,KAAKyC,MAAM6E,gBAAgBJ,I,CAGtD,CAEOpE,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,SACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEOC,mBACN/H,MAAM+H,mBAEN,MAAMC,EAAkB9H,KAAKuF,WAAWtF,IAAI,SACtC8H,EAAgB/H,KAAK4G,SAAS3G,IAAI,SAClC+H,EAAchI,KAAKgF,OAAO/E,IAAI,SAEpC,GAAID,KAAKiI,QAAQ,eAAiBjI,KAAKiI,QAAQ,YAAa,CAC3D,MAAMC,EAAkBlI,KAAKmI,qBAEvBC,EAAgBpI,KAAKC,IAAI,WAAY,GACrCoI,EAAkBrI,KAAKC,IAAI,aAAc,GACzCqI,EAAcF,GAAiBC,EAAkBD,GAAiB,EAExEN,EAAgB7F,IAAI,OAAQiG,EAAgBK,OAAOF,IACnDN,EAAc9F,IAAI,OAAQiG,EAAgBK,OAAOH,IACjDJ,EAAY/F,IAAI,OAAQiG,EAAgBK,OAAOD,IAE/CtI,KAAKuF,WAAWtD,IAAI,QAASoG,GAC7BrI,KAAK4G,SAAS3E,IAAI,QAASmG,GAE3BpI,KAAKgF,OAAO/C,IAAI,QAASqG,GACzBtI,KAAKyC,MAAMR,IAAI,YAAaqG,E,CAG7B,GAAItI,KAAKiI,QAAQ,iBAAkB,CAClC,MAAMO,EAAQxI,KAAKC,IAAI,iBACvB8H,EAAc9F,IAAI,OAAQuG,GAE1BxI,KAAK4G,SAAS3G,IAAI,QAASgC,IAAI,SAAUuG,GACzCxI,KAAK8G,cAAcL,MAAOC,SAASzE,IAAI,OAAQuG,GAC/CxI,KAAK8G,cAAc2B,QAAS/B,SAASzE,IAAI,SAAUuG,E,CAGpD,GAAIxI,KAAKiI,QAAQ,mBAAoB,CACpC,MAAMO,EAAQxI,KAAKC,IAAI,mBACvB6H,EAAgB7F,IAAI,OAAQuG,GAE5BxI,KAAKuF,WAAWtF,IAAI,QAASgC,IAAI,SAAUuG,GAC3CxI,KAAKuG,gBAAgBE,MAAOC,SAASzE,IAAI,OAAQuG,GACjDxI,KAAKuG,gBAAgBkC,QAAS/B,SAASzE,IAAI,SAAUuG,E,CAEvD,EAhOA7I,OAAAC,eAAA4E,EAAA,a,gDAAkC,uBAClC7E,OAAAC,eAAA4E,EAAA,c,gDAA0ChF,EAAe6E,WAAWC,OAAO,CAACE,EAAmBD,c,WCb1F,MAAOmE,UAAsBjJ,IAAnCC,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,OACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,QACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,WAAY,cAAe,OAAQ,WAyGzD,CAtGQd,oBAEF7H,KAAKiI,QAAQ,SAAWjI,KAAKiI,QAAQ,aACxCjI,KAAK4I,gBACL5I,KAAK6I,cAAc,OAAQ7I,KAAKC,IAAI,SACpCD,KAAK6I,cAAc,SAAU7I,KAAKC,IAAI,SAAU,KAGjDH,MAAM+H,kBACP,CAEUhI,YACTC,MAAMD,YAEN,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMyC,EAASzC,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAC3DkH,YAAa,SACbC,YAAa,KACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvBU,UAAW,CAAC,YAAa,iBACzB+D,KAAM,QAGP7B,EAAOY,WAAW,kBAAmBvD,GACrCF,KAAK6C,OAASA,EAEd7C,KAAKgJ,cAAcnG,E,CAErB,CAMOoG,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MAAM4E,EAAO7E,KAAKC,IAAI,QAEhBqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAE9B,OAAQuB,GACP,IAAK,SACJ7E,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,WACJlJ,KAAKqJ,KAAKjG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,cACJlJ,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,OACJlJ,KAAKuJ,MAAMnG,EAAM8F,EAAQ,UAAW,MACpC,MAED,IAAK,OACJlJ,KAAKwJ,MAAMpG,EAAM8F,EAAQ,UAAW,MAItC,MAAMO,EAASzJ,KAAKC,IAAI,SAAU,GAGlC,GAAc,GAAVwJ,EAAa,CAChB,IAAIC,EAAI,EACR,MAAMC,EAAgB3J,KAAK6C,OAAO5C,IAAI,SAAoC0J,eACpEC,EAAMtG,EAAUC,OAChBsG,EAAYvG,EAAU,GAAGrD,IAAI,SAAU,GACvC6J,EAAWxG,EAAUsG,EAAM,GAAG3J,IAAI,SAAU,GAElD8J,OAAY3G,GAAO4G,IAClB,IAAIC,EAAe,EAGlBA,EADGP,EAAID,GAAUG,EACVE,GAAYL,EAASG,EAAMF,EAAI,GAAKC,EAEnCD,EAAID,EAAS,EACdI,GAAaH,EAAID,GAAUE,EAG3BrG,EAAUoG,EAAID,GAAQxJ,IAAI,SAAU,GAE5C+J,EAASE,OAASD,EAElBP,GAAG,G,CAIL1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAzIAzD,OAAAC,eAAA8I,EAAA,a,gDAAkC,kBAClC/I,OAAAC,eAAA8I,EAAA,c,gDAA0CjJ,IAAU4E,WAAWC,OAAO,CAACoE,EAAcnE,cChBhF,MAAO4F,UAAiB3K,EAA9BE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CACvD,CACC6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAmDT,CA/CQhF,YACNG,KAAKY,WAAWJ,KAAK,YACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,SACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAKOqB,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UACpC4F,EAASlJ,KAAKC,IAAI,SAAU,IAC5BmD,EAAmB,GAEzB,IAAIsG,EAAI,EAERK,OAAYzG,GAAY0G,IACvB,GAAIN,EAAIR,EAAQ,CACf,IAAIkB,EAAQpK,KAAKqK,UAAUL,GACvBM,EAAYtK,KAAKqK,UAAU/G,EAAUoG,EAAIR,SAEhCtB,GAATwC,QAAmCxC,GAAb0C,GACzBlH,EAAK5C,KAAK,CAAE0J,OAAQF,EAAS/J,IAAI,UAAWsK,OAAQH,EAAQE,G,MAI7DlH,EAAK5C,KAAK,CAAE0J,OAAQF,EAAS/J,IAAI,YAElCyJ,GAAG,IAIJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA3EAzD,OAAAC,eAAAuK,EAAA,a,gDAAkC,aAClCxK,OAAAC,eAAAuK,EAAA,c,gDAA0C3K,EAAe6E,WAAWC,OAAO,CAAC6F,EAAS5F,cCLhF,MAAOiG,UAAa/K,IAA1BC,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,aAgFvE,CA7EW9I,YACTC,MAAMD,YAEN,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMyC,EAASzC,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAC3DkH,YAAa,SACbC,YAAa,OACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvBU,UAAW,CAAC,YAAa,QACzB+D,KAAM,UAGP7B,EAAOY,WAAW,kBAAmBvD,GACrCF,KAAK6C,OAASA,EAEd7C,KAAKgJ,cAAcnG,E,CAErB,CAKOoG,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAUwK,KAChC,MAAMvK,EAAcF,KAAKC,IAAI,eACvByK,EAAe1K,KAAKC,IAAI,gBAExBqD,EAAYpD,EAAYoD,UAE9B,GAAIoH,EAAc,CACjB,IAAItH,EAAOpD,KAAKmJ,cAAc7F,GAC1BoG,EAAI,EACJiB,EAAc,EACdC,EAAU,EAEdb,OAAY3G,GAAO4G,IAClB,MAAMa,EAAWH,EAAapH,UAAUoG,GACxC,GAAImB,EAAU,CACb,MAAMC,EAASD,EAAS5K,IAAI,SAAU,GACtC,GAAI6K,EAAS,EAAG,CACf,MAAMC,EAAKf,EAASgB,QAAUF,EAQ9B,GANAd,EAASe,GAAKA,EACdf,EAASc,OAASA,EAElBF,GAAWG,EACXJ,GAAeG,EAEXpB,GAAKR,EAAQ,CAChB,IAAI+B,EAAiB7H,EAAKsG,EAAIR,GAAQ4B,OAClCI,EAAa9H,EAAKsG,EAAIR,GAAQ6B,GACZ,MAAlBE,IACHN,GAAeM,GAEE,MAAdC,IACHN,GAAWM,E,CAIblB,EAASY,QAAUA,EACnBZ,EAASmB,KAAOP,EAAUD,C,EAI5BjB,GAAG,IAEJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,EAG3B,EAvGAzD,OAAAC,eAAA4K,EAAA,a,gDAAkC,SAClC7K,OAAAC,eAAA4K,EAAA,c,gDAA0C/K,IAAU4E,WAAWC,OAAO,CAACkG,EAAKjG,cC0BvE,MAAO6G,UAA8B1C,EAA3ChJ,c,oBAWCC,OAAAC,eAAA,wB,yDAKAD,OAAAC,eAAA,wB,yDAEAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,OACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,QACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,WAAY,cAAe,OAAQ,SACrD,CACFlE,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,WACN8D,QAAS,CAAC,UAAW,WACnB,CACFlE,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,UACJ,CACFJ,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,OACtCC,KAAM,SACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,WAoIR,CAjIWhF,YAET,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMiL,EAAkBjL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACpEkH,YAAa,SACbC,YAAa,QACb6D,gBAAiB,QACjB7J,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBC,qBAAqB,EACrBpI,UAAW,CAAC,YAAa,wBAAyB,YAGnD0K,EAAgB5E,MAAMC,SAASzE,IAAI,WAAW,GAC9CoJ,EAAgB5H,WAAW,kBAAmBvD,GAE9CF,KAAKqL,gBAAkBA,EAEvB,MAAME,EAAkBnL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACpEkH,YAAa,SACbC,YAAa,QACbhG,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBC,qBAAqB,EACrBpI,UAAW,CAAC,YAAa,wBAAyB,YAGnD4K,EAAgB9H,WAAW,kBAAmBvD,GAC9CF,KAAKuL,gBAAkBA,C,CAGxBzL,MAAMD,YACNG,KAAK6C,OAAOhC,OAAO,yBACnBb,KAAK6C,OAAOuC,cACb,CAEOoG,kBAEN,GADA1L,MAAM0L,kBACFxL,KAAKiI,QAAQ,cAAe,CAC/B,MAAMO,EAAQxI,KAAKC,IAAI,cACjBoL,EAAkBrL,KAAKqL,gBAC7BA,EAAgBpJ,IAAI,SAAUuG,GAC9B6C,EAAgBpJ,IAAI,OAAQuG,GAC5B6C,EAAgB5C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBJ,EAAiB7C,EAAO,a,CAGjD,GAAIxI,KAAKiI,QAAQ,cAAe,CAC/B,MAAMO,EAAQxI,KAAKC,IAAI,cACjBsL,EAAkBvL,KAAKuL,gBAC7BA,EAAgBtJ,IAAI,SAAUuG,GAC9B+C,EAAgB9C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBF,EAAiB/C,EAAO,a,CAGlD,CAEOX,oBACF7H,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,YAC7CjI,KAAK4I,gBACL5I,KAAK6I,cAAc,QAAS7I,KAAKC,IAAI,UACrCD,KAAK6I,cAAc,YAAa7I,KAAKC,IAAI,eAE1CH,MAAM+H,kBACP,CAKOoB,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAChB,IAAI6I,EAAU1L,KAAK6C,OAAOO,KAAKuI,OAC3BC,EAAQC,OAAO7L,KAAKC,IAAI,QAAS,IACjC6L,EAAY9L,KAAKC,IAAI,aAEzB8J,OAAY2B,GAAU1B,IACrB,IAAII,EAAQJ,EAAS+B,GACrB,GAAa,MAAT3B,EAAe,CAClB,IAAI4B,EAAQ5B,EACR6B,EAAQ7B,EACK,UAAb0B,GACHE,GAASJ,EACTK,GAASL,IAGTI,GAASA,EAAQJ,EAAQ,IACzBK,GAASA,EAAQL,EAAQ,KAG1B5B,EAASgC,MAAQA,EACjBhC,EAASiC,MAAQA,C,KAInBjM,KAAKqL,gBAAgBjI,KAAKf,OAAOqJ,GACjC1L,KAAKuL,gBAAgBnI,KAAKf,OAAOqJ,E,CAEnC,CAEU7H,WACT7D,KAAKqL,gBAAgBa,UACrBlM,KAAKuL,gBAAgBW,UACrBpM,MAAM+D,UACP,CAEaC,KAAKC,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAMJ,KAAIK,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBvH,KAAKC,GAC1B/D,KAAKuL,gBAAgBzH,KAAKC,IAE5B,G,CAEaK,KAAKL,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAME,KAAID,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBjH,KAAKL,GAC1B/D,KAAKuL,gBAAgBnH,KAAKL,IAE5B,G,EA1LApE,OAAAC,eAAAwL,EAAA,a,gDAAkC,0BAClCzL,OAAAC,eAAAwL,EAAA,c,gDAA0C1C,EAAcrE,WAAWC,OAAO,CAAC8G,EAAsB7G,c,oBCF5F,MAAO4H,UAA+B3M,EAA5CE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CACvD,CACC6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,OACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,QACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,WAAY,cAAe,OAAQ,SACrD,CACFlE,IAAK,OACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,kBACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,YAErB,CACClE,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,SACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,WAqGT,CAlGQhF,YACNG,KAAKY,WAAWJ,KAAK,0BACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK4L,IAAa1L,IAAIV,KAAKM,MAAO,CAC1DK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,YACbE,UAAMC,IAER,CAEO4D,kBAGN,GAFA1L,MAAM0L,kBAEFxL,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,mBAAoB,CACvE,MAAMvB,EAAW1G,KAAK6C,OAAOwJ,QAAQ3F,SAC/B4F,EAAatM,KAAKC,IAAI,mBACtBsM,EAAavM,KAAKC,IAAI,mBAC5ByG,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM2E,EAAY5E,OAAQ4E,IACvE5F,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM4E,EAAY7E,OAAQ6E,G,CAGzE,CAEO1E,oBACF7H,KAAKiI,QAAQ,SAAWjI,KAAKiI,QAAQ,UACxCjI,KAAK4I,gBAEN9I,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAE1C,IAAIoJ,EAAkB1M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,WAAWC,WACvEC,EAAkB9M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,QAAWC,WAEvEzJ,EAAOpD,KAAKmJ,cAAc7F,GAC1B4F,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MAAM4E,EAAO7E,KAAKC,IAAI,QAChB8M,EAAO/M,KAAKC,IAAI,QAEtB,OAAQ4E,GACP,IAAK,SACJ7E,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,WACJlJ,KAAKqJ,KAAKjG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,cACJlJ,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,OACJlJ,KAAKuJ,MAAMnG,EAAM8F,EAAQ,UAAW,MACpC,MAED,IAAK,OACJlJ,KAAKwJ,MAAMpG,EAAM8F,EAAQ,UAAW,MAKtC,IAAI8D,GAAYvC,IACZf,EAAI,EACRK,OAAY3G,GAAO4G,IAElB,GADAN,IACIA,GAAKR,EAAQ,CAChB,IAAI+D,EAAYjD,EAASgB,QAAUhB,EAAS+B,GAChC,WAARgB,IACHE,EAAmD,KAAtCjD,EAASgB,QAAUhB,EAAS+B,GAAK,IAE/C,IAAIvD,EAAQsE,EAERG,EAAYD,IACfxE,EAAQkE,GAGT1C,EAASiD,UAAYA,EACrBjD,EAASkD,eAAiB1E,EAC1BwE,EAAWC,C,KAIbjN,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA5IAzD,OAAAC,eAAAuM,EAAA,a,gDAAkC,2BAClCxM,OAAAC,eAAAuM,EAAA,c,gDAA0C3M,EAAe6E,WAAWC,OAAO,CAAC6H,EAAuB5H,cCd9F,MAAO4I,UAA0B1N,IAAvCC,c,oBAWIC,OAAAC,eAAA,wB,yDAKAD,OAAAC,eAAA,wB,yDAEAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACrD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACP,CACCJ,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACP,CACCJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACP,CACCJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,WACtCC,KAAM,SACP,CACCJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WA8Jd,CA3JchF,YAEN,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CAEP,MAAMyC,EAASzC,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDkH,YAAa,SACbC,YAAa,UACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvBU,UAAW,CAAC,YAAa,oBAAqB,cAGlDkC,EAAOY,WAAW,kBAAmBvD,GACrCF,KAAK6C,OAASA,EAEd,MAAMwI,EAAkBjL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACjEkH,YAAa,SACbC,YAAa,QACb6D,gBAAiB,QACjBvC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,oBAAqB,YAGlD0K,EAAgB5H,WAAW,kBAAmBvD,GAE9CF,KAAKqL,gBAAkBA,EAEvB,MAAME,EAAkBnL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACjEkH,YAAa,SACbC,YAAa,QACbsB,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,oBAAqB,YAGlD4K,EAAgB9H,WAAW,kBAAmBvD,GAC9CF,KAAKuL,gBAAkBA,C,CAG3BvL,KAAKgJ,cAAchJ,KAAK6C,QAExB/C,MAAMD,YACNG,KAAK6C,OAAOhC,OAAO,qBACnBb,KAAK6C,OAAOuC,cAChB,CAEOyC,mBAEC7H,KAAKiI,QAAQ,YACbjI,KAAK4I,gBACL5I,KAAK6I,cAAc,SAAU7I,KAAKC,IAAI,YAG1CH,MAAM+H,kBACV,CAEO2D,kBACH1L,MAAM0L,kBACN,MAAM4B,EAAa,aACnB,GAAIpN,KAAKiI,QAAQmF,GAAa,CAC1B,MAAM5E,EAAQxI,KAAKC,IAAImN,GACjB/B,EAAkBrL,KAAKqL,gBAC7BA,EAAgBpJ,IAAI,SAAUuG,GAC9B6C,EAAgBpJ,IAAI,OAAQuG,GAC5B6C,EAAgB5C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBJ,EAAiB7C,EAAO4E,E,CAGpD,MAAMC,EAAa,aACnB,GAAIrN,KAAKiI,QAAQoF,GAAa,CAC1B,MAAM7E,EAAQxI,KAAKC,IAAIoN,GACjB9B,EAAkBvL,KAAKuL,gBAC7BA,EAAgBtJ,IAAI,SAAUuG,GAC9B+C,EAAgB9C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBF,EAAiB/C,EAAO6E,E,CAExD,CAKOpE,cAGH,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEb,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAEhC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAC1BgK,EAAStN,KAAKC,IAAI,SAAU,MAE5ByJ,EAAI,EAERK,OAAY3G,GAAO4G,IACf,IAAIuD,EAAgBjK,EAAUoG,GAE9B,GAAI6D,EAAe,CACf,IAAIC,EAAMD,EAActN,IAAI,aACxBwN,EAAOF,EAActN,IAAI,cAEzB8F,WAAeyH,IAAQzH,WAAe0H,IAASA,EAAOD,GAAO,IAC7DxD,EAAS0D,OAAUD,GAAQ,GAAYA,EAAOD,KAASC,EAAOD,GAAO,GAAM,IAAQF,EAApD,GAC/BtD,EAAS2D,OAAUH,GAAO,GAAYC,EAAOD,KAASC,EAAOD,GAAO,GAAM,IAAQF,EAApD,GAC9BtD,EAAS4D,SAAW5D,EAAS0D,QAAU1D,EAAS2D,OAAS3D,EAAS0D,QAAU,E,CAGpFhE,GAAG,IAGP1J,KAAKoJ,KAAKhG,EAAM8F,EAAQ,SAAU,SAClClJ,KAAKoJ,KAAKhG,EAAM8F,EAAQ,SAAU,SAClClJ,KAAKoJ,KAAKhG,EAAM8F,EAAQ,WAAY,WAEpClJ,KAAKqL,gBAAgBjI,KAAKf,OAAOe,GACjCpD,KAAKuL,gBAAgBnI,KAAKf,OAAOe,GACjCpD,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAEhC,CAEUS,WACN7D,KAAKqL,gBAAgBa,UACrBlM,KAAKuL,gBAAgBW,UACrBpM,MAAM+D,UACV,CAEaC,KAAKC,G,2GACd,OAAOC,QAAQC,IAAI,CACfC,EAAMJ,KAAIK,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBvH,KAAKC,GAC1B/D,KAAKuL,gBAAgBzH,KAAKC,IAElC,G,CAEaK,KAAKL,G,2GACd,OAAOC,QAAQC,IAAI,CACfC,EAAME,KAAID,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBjH,KAAKL,GAC1B/D,KAAKuL,gBAAgBnH,KAAKL,IAElC,G,EAjMApE,OAAAC,eAAAuN,EAAA,a,gDAAkC,sBAClCxN,OAAAC,eAAAuN,EAAA,c,gDAA0C1N,IAAU4E,WAAWC,OAAO,CAAC6I,EAAkB5I,cCCvF,MAAOsJ,UAAuBnF,EAApChJ,c,oBAWCC,OAAAC,eAAA,wB,yDAKAD,OAAAC,eAAA,wB,yDAEAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,qBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,aACtCC,KAAM,UACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,WACtCC,KAAM,SACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,OACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,QACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,WAAY,cAAe,OAAQ,WAoJzD,CAjJW9I,YAET,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMiL,EAAkBjL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACpEkH,YAAa,SACbC,YAAa,QACb6D,gBAAiB,QACjBvC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,iBAAkB,YAG5C0K,EAAgB5E,MAAMC,SAASzE,IAAI,WAAW,GAC9CoJ,EAAgB5H,WAAW,kBAAmBvD,GAE9CF,KAAKqL,gBAAkBA,EAEvB,MAAME,EAAkBnL,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACpEkH,YAAa,SACbC,YAAa,QACbsB,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvB6I,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,iBAAkB,YAG5C4K,EAAgB9H,WAAW,kBAAmBvD,GAC9CF,KAAKuL,gBAAkBA,C,CAGxBzL,MAAMD,YACNG,KAAK6C,OAAOhC,OAAO,kBACnBb,KAAK6C,OAAOuC,cACb,CAEOyC,mBAEF7H,KAAKiI,QAAQ,uBAChBjI,KAAK4I,gBAGN9I,MAAM+H,kBACP,CAEO2D,kBACN1L,MAAM0L,kBACN,MAAM4B,EAAa,aACnB,GAAIpN,KAAKiI,QAAQmF,GAAa,CAC7B,MAAM5E,EAAQxI,KAAKC,IAAImN,GACjB/B,EAAkBrL,KAAKqL,gBAC7BA,EAAgBpJ,IAAI,SAAUuG,GAC9B6C,EAAgBpJ,IAAI,OAAQuG,GAC5B6C,EAAgB5C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBJ,EAAiB7C,EAAO4E,E,CAGjD,MAAMC,EAAa,aACnB,GAAIrN,KAAKiI,QAAQoF,GAAa,CAC7B,MAAM7E,EAAQxI,KAAKC,IAAIoN,GACjB9B,EAAkBvL,KAAKuL,gBAC7BA,EAAgBtJ,IAAI,SAAUuG,GAC9B+C,EAAgB9C,QAAQ/B,SAASzE,IAAI,SAAUuG,GAE/CxI,KAAKyL,mBAAmBF,EAAiB/C,EAAO6E,E,CAGjDrN,KAAK6I,cAAc,qBAAsB7I,KAAKC,IAAI,sBACnD,CAKOgJ,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEhB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAEhC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIwK,EAAqB9N,KAAKC,IAAI,qBAAsB,GAEpDyL,EAAU1L,KAAK6C,OAAOO,KAAKuI,OAE3BjC,EAAI,EAERK,OAAY2B,GAAU1B,IACrB,GAAIN,GAAKR,EAAS,EAAG,CACpB,IAAI6E,EAAO/D,EAAS+B,GAEhBiC,EAAS,EACb,IAAK,IAAIC,EAAIvE,EAAIR,EAAS,EAAG+E,GAAKvE,EAAGuE,IAAK,CACzC,IAAIC,EAAK5K,EAAU2K,GACfE,EAAUnO,KAAKqK,UAAU6D,GACd,MAAXC,IACHH,GAAU5G,KAAKgH,IAAID,EAAUJ,EAAM,G,CAIrC,IAAIM,EAAMjH,KAAKkH,KAAKN,EAAS9E,GAE7B,MAAM+C,EAAQ8B,EAAOD,EAAqBO,EACpCrC,EAAQ+B,EAAOD,EAAqBO,EAE1CrE,EAASgC,MAAQA,EACjBhC,EAASiC,MAAQA,C,CAElBvC,GAAG,IAGJ1J,KAAKqL,gBAAgBjI,KAAKf,OAAOqJ,GACjC1L,KAAKuL,gBAAgBnI,KAAKf,OAAOqJ,E,CAEnC,CAEU7H,WACT7D,KAAKqL,gBAAgBa,UACrBlM,KAAKuL,gBAAgBW,UACrBpM,MAAM+D,UACP,CAEaC,KAAKC,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAMJ,KAAIK,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBvH,KAAKC,GAC1B/D,KAAKuL,gBAAgBzH,KAAKC,IAE5B,G,CAEaK,KAAKL,G,2GACjB,OAAOC,QAAQC,IAAI,CAClBC,EAAME,KAAID,KAAC,KAAAJ,GACX/D,KAAKqL,gBAAgBjH,KAAKL,GAC1B/D,KAAKuL,gBAAgBnH,KAAKL,IAE5B,G,EAjMApE,OAAAC,eAAAiO,EAAA,a,gDAAkC,mBAClClO,OAAAC,eAAAiO,EAAA,c,gDAA0CnF,EAAcrE,WAAWC,OAAO,CAACuJ,EAAetJ,cCbrF,MAAOgK,UAA8B/J,EAA3C9E,c,oBAWCC,OAAAC,eAAA,kB,wDAuID,CArIWC,YAETG,KAAKY,WAAWJ,KAAK,OACrBV,MAAMD,YACNG,KAAK2D,kBAAkB6K,QAAQ,CAC9B/J,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UACJ,CACFJ,IAAK,WACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UAGP,MAAM4J,EAAYzO,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACnEkH,YAAa,SACbC,YAAa,MACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,UAG1BX,KAAKyO,UAAYA,CAClB,CAEOjD,kBACN1L,MAAM0L,kBACFxL,KAAKiI,QAAQ,aAChBjI,KAAKyL,mBAAmBzL,KAAKyO,UAAWzO,KAAKC,IAAI,YAAa,YAE3DD,KAAKiI,QAAQ,eAChBjI,KAAK4I,gBACL5I,KAAK6I,cAAc,YAAa7I,KAAKC,IAAI,cAE3C,CAOOgJ,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAI4F,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MAAMmD,EAAmB,GACzB,IAAIsG,EAAI,EACJgF,EAAc,EACdC,EAAc,EACdC,EAAkB,EAClBC,EAAkB,EACtB9E,OAAYzG,GAAY0G,IACvB,IAAI8E,EAAM,KAGV,GAFApF,IAEIA,GAAKR,EAAS,EAAG,CACpB,IAAK,IAAI+E,EAAI,EAAGA,GAAK/E,EAAQ+E,IAAK,CACjC,IAAI7D,EAAQpK,KAAKqK,UAAU/G,EAAU2K,IACjC3D,EAAYtK,KAAKqK,UAAU/G,EAAU2K,EAAI,IAC7C,QAAarG,GAATwC,QAAmCxC,GAAb0C,EAAwB,CACjD,IAAIyE,EAAS3E,EAAQE,EAEjByE,GAAU,EACbL,GAAeK,EAAS7F,EAGxByF,GAAevH,KAAK4H,IAAID,GAAU7F,C,EAKrC4F,EAAM,IAAO,KAAO,EAAIJ,EAAcC,GAEnC5I,QAAY+I,KACdA,EAAM,E,MAGH,GAAIpF,EAAIR,EAAQ,CACpB,IAAIkB,EAAQpK,KAAKqK,UAAUL,GACvBM,EAAYtK,KAAKqK,UAAU/G,EAAUoG,EAAI,IAC7C,GAAa,MAATU,GAA8B,MAAbE,EAAmB,CACvC,IAAIyE,EAAS3E,EAAQE,EAEjB2E,EAAO,EACPC,EAAO,EAEPH,EAAS,EACZE,EAAOF,EAGPG,GAAQH,EAGTL,GAAeE,GAAmB1F,EAAS,GAAK+F,GAAQ/F,EACxDyF,GAAeE,GAAmB3F,EAAS,GAAKgG,GAAQhG,EAExD4F,EAAM,IAAO,KAAO,EAAIJ,EAAcC,GAGnCQ,MAAML,KACRA,EAAM,E,EAKT1L,EAAK5C,KAAK,CAAE0J,OAAQF,EAAS/J,IAAI,UAAWmP,OAAQN,IAEpDF,EAAkBF,EAClBG,EAAkBF,CAAW,IAE9B3O,KAAK6C,OAAOO,KAAKf,OAAOe,GAExB8F,EAASlJ,KAAKC,IAAI,YAAa,GAC/BD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,SAAU,OAElClJ,KAAK6C,OAAOO,KAAKf,OAAOe,GACxBpD,KAAKyO,UAAUrL,KAAKf,OAAOe,E,CAE7B,EAhJAzD,OAAAC,eAAA2O,EAAA,a,gDAAkC,0BAClC5O,OAAAC,eAAA2O,EAAA,c,gDAA0C/J,EAAmBH,WAAWC,OAAO,CAACiK,EAAsBhK,cCMjG,MAAO8K,UAAiC7P,EAA9CE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,cAyER,CAtEQhF,YACNG,KAAKY,WAAWJ,KAAK,4BACrBV,MAAMD,YACNG,KAAKyC,MAAMR,IAAI,eAAgB,SAChC,CAEOa,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,KACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEOC,mBACN,MAAMyH,EAAY,YACdtP,KAAKiI,QAAQqH,KAChBtP,KAAK4I,gBACL5I,KAAK6I,cAAcyG,EAAWtP,KAAKC,IAAIqP,GAAa,IAAM,MAE3DxP,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UACpCoH,EAAe1K,KAAKC,IAAI,gBAC9BD,KAAKuP,OAAO,QAAS,SAErB,IAAI7F,EAAI,EACJtG,EAAmBpD,KAAKmJ,cAAc7F,GACtCkM,EAAS,EACTF,EAAYtP,KAAKC,IAAI,aAEzB8J,OAAYzG,GAAY0G,IACvB,IAAIyF,EAAQzF,EAAS/J,IAAI,UACzB,GAAa,MAATwP,EAAe,CAClB,IAAIjC,EAAMxD,EAAS/J,IAAI,YAAawP,GAChChC,EAAOzD,EAAS/J,IAAI,aAAcwP,GAElC3E,EAAS,EACb,GAAIJ,GAAgB4E,EAAW,CAC9B,MAAMzE,EAAWH,EAAapH,UAAUoG,GACpCmB,IACHC,EAASD,EAAS5K,IAAI,SAAU,G,CAIlC,IAAIyP,GAAOD,EAAQjC,GAAQC,EAAOgC,KAAWhC,EAAOD,GAChDC,GAAQD,IACXkC,EAAK,GAGN,IAAIC,EAAKH,EAASE,EAAK5E,EACvB1H,EAAKsG,GAAGiG,GAAKA,EAEbH,EAASG,C,CAEVjG,GAAG,IAEJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA3FAzD,OAAAC,eAAAyP,EAAA,a,gDAAkC,6BAClC1P,OAAAC,eAAAyP,EAAA,c,gDAA0C7P,EAAe6E,WAAWC,OAAO,CAAC+K,EAAyB9K,cCIhG,MAAOqL,UAA+BpQ,EAA5CE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,gBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,kBACtCC,KAAM,SACJ,CACFJ,IAAK,gBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,kBACtCC,KAAM,SACJ,CACFJ,IAAK,iBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,oBACtCC,KAAM,aAGPlF,OAAAC,eAAA,mB,yDACAD,OAAAC,eAAA,qB,wDAqID,CAnIQC,YACNG,KAAKY,WAAWJ,KAAK,0BACrBV,MAAMD,WACP,CAEOiD,gBACN,MAAMD,EAAS7C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAChEK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,SAGRuC,EAAWhK,KAAKyC,MAAMyC,aAAa,CAAC,GAU1C,OATAlF,KAAK6P,aAAe7F,EACpBA,EAAS/H,IAAI,QAAS,GACtB+H,EAAS/H,IAAI,YAAa,KAC1BjC,KAAK8P,WAAajN,EAAOoC,gBAAgB+E,GAEzChK,KAAKyC,MAAMsN,UAAU,OAAQC,IAC5BhG,EAAS/H,IAAI,WAAY+N,EAAI,IAGvBnN,CACR,CAEOgF,mBACN,MAAMoI,EAAiB,iBACnBjQ,KAAKiI,QAAQgI,KAChBjQ,KAAK6I,cAAcoH,EAAgBjQ,KAAKC,IAAIgQ,IAC5CjQ,KAAK4I,iBAGN,MAAM/F,EAAS7C,KAAK6C,OACpB,GAAI7C,KAAKiI,QAAQ,iBAAkB,CAClC,IAAIO,EAAQxI,KAAKC,IAAI,iBACrB4C,EAAOR,OAAO,CAAEsF,KAAMa,EAAOd,OAAQc,G,CAGtC,GAAIxI,KAAKiI,QAAQ,iBAAkB,CAClC,IAAIO,EAAQxI,KAAKC,IAAI,iBACjBiQ,EAAYlQ,KAAK8P,WACrB,GAAII,EAAW,CACd,MAAMzJ,EAAQyJ,EAAUzJ,MACpBA,GACHA,EAAMC,SAASzE,IAAI,OAAQuG,GAE5B,MAAMC,EAAUyH,EAAUzH,QACtBA,GACHA,EAAQ/B,SAASzE,IAAI,SAAUuG,E,EAIlC1I,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1CtD,KAAKuP,OAAO,QAAS,SACrB,IAAInM,EAAmBpD,KAAKmJ,cAAc7F,GAEtC6M,EAAInQ,KAAKC,IAAI,iBAAkB,IAE/BmQ,EAAM,EAENC,EAAgBrQ,KAAKC,IAAI,gBAAiB0M,IAAMC,QAAQ,WAAWC,WACnEyD,EAAgBtQ,KAAKC,IAAI,gBAAiB0M,IAAMC,QAAQ,QAAWC,WAEvE,GAAIvJ,EAAUC,OAAS,EAAG,CAEzBH,EAAK,GAAGgN,IAAM,EACdhN,EAAK,GAAGmN,WAAaD,EAErB,IAAK,IAAI5G,EAAI,EAAGE,EAAMtG,EAAUC,OAAQmG,EAAIE,EAAKF,IAAK,CACrD,MAAMM,EAAW1G,EAAUoG,GACrB8G,EAAYlN,EAAUoG,EAAI,GAEhC,IAAI+G,EAAIzG,EAAS/J,IAAI,UACrB,GAAI8F,WAAe0K,GAAI,CACtB,IAAIC,EAAKF,EAAUvQ,IAAI,SAAUwQ,GAE7BE,EAAI3G,EAAS/J,IAAI,aAAcwQ,GAC/BG,EAAI5G,EAAS/J,IAAI,YAAawQ,GAC9BI,EAAI7G,EAAS/J,IAAI,aAAcwQ,GAC/BK,EAAKN,EAAUvQ,IAAI,aAAcwQ,GAEjCM,EAAKJ,EAAIC,EACTI,EAAK5J,KAAK4H,IAAI2B,EAAID,GAClBO,EAAK7J,KAAK4H,IAAI4B,EAAIF,GAClBQ,EAAK9J,KAAK+J,IAAIH,EAAIC,EAAIF,GAEtBK,EAAK,EACLV,EAAKC,IACRS,EAAKJ,GAEFN,EAAKE,IACRQ,EAAKH,GAGN,IAAII,EAAIjK,KAAK+J,IAAIH,EAAIC,GAMjBK,EAAO,IAAMb,EAAIC,GAAMD,EAAII,GAAK,GAAKH,EAAKI,GAAM,IAF5CI,EAAKE,EAAK,EAFThK,KAAK4H,IAAI0B,EAAKI,GAEI,GAEkCO,EAAIlB,EAE7DpK,WAAeuL,KAClBlB,GAAOkB,GAIR,IAAI9I,EAAQ8H,EACRF,EAAM,IACT5H,EAAQ6H,GAGTjN,EAAKsG,GAAG0G,IAAMA,EACdhN,EAAKsG,GAAG6G,WAAa/H,C,GAIxBxI,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA/JAzD,OAAAC,eAAAgQ,EAAA,a,gDAAkC,2BAClCjQ,OAAAC,eAAAgQ,EAAA,c,gDAA0CpQ,EAAe6E,WAAWC,OAAO,CAACsL,EAAuBrL,cCX9F,MAAOgN,UAAc/R,EAA3BE,c,oBAkBCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,UACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,SACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,WA4FR,CAzFQ/B,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,KACbE,UAAMC,IAER,CAEU/H,YACTG,KAAKY,WAAWJ,KAAK,SACrBV,MAAMD,YACNG,KAAKwR,WAAaxR,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACnEK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,OACbE,UAAMC,KAGP5H,KAAKyC,MAAMJ,OAAO,CAAE2N,KAAM,EAAGmB,IAAK,IAAKrM,cAAc,EAAM2M,aAAc,QAC1E,CAEOjG,kBACN1L,MAAM0L,kBAEN,MAAMkG,EAAW,UACjB,GAAI1R,KAAKiI,QAAQyJ,GAAU,CAC1B,IAAIlJ,EAAQxI,KAAKC,IAAIyR,EAAS/E,IAAMC,QAAQ,QAC5C5M,KAAKyL,mBAAmBzL,KAAK6C,OAAQ2F,GACrCxI,KAAK6I,cAAc6I,EAASlJ,E,CAG7B,MAAMmJ,EAAY,YAClB,GAAI3R,KAAKiI,QAAQ0J,GAAY,CAC5B,IAAInJ,EAAQxI,KAAKC,IAAI0R,EAAWhF,IAAMC,QAAQ,WAC9C5M,KAAKyL,mBAAmBzL,KAAKwR,WAAYhJ,GACzCxI,KAAK6I,cAAc8I,EAAWnJ,E,CAEhC,CAKOS,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB7C,KAAKiC,IAAI,QAAS,SAElB,MAAMqB,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAC1B4F,EAASlJ,KAAKC,IAAI,SAAU,IAE5ByJ,EAAI,EACRK,OAAY3G,GAAO4G,IAClB,IACI2G,GAAKlG,IACLmG,EAAInG,IAEJmH,EAAK,EACLC,EAAK,EAET,IAAK,IAAI5D,EAPD7G,KAAK+J,IAAI,EAAGzH,EAAIR,GAOR+E,GAAKvE,EAAGuE,IAAK,CAC5B,IAAI6D,EAAKxO,EAAU2K,GAAGhO,IAAI,aAAc,GACpC6R,GAAMnB,IACTA,EAAImB,EACJD,EAAK5D,GAGN,IAAI8D,EAAKzO,EAAU2K,GAAGhO,IAAI,YAAa,GACnC8R,GAAMnB,IACTA,EAAImB,EACJH,EAAK3D,E,CAIPjE,EAASgI,IAAM9I,GAAUQ,EAAImI,IAAO3I,EAAS,IAC7Cc,EAASiI,MAAQ/I,GAAUQ,EAAIkI,IAAO1I,EAAS,IAE/CQ,GAAG,IAGJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,GACxBpD,KAAKwR,WAAWpO,KAAKf,OAAOe,E,CAE9B,EAvHAzD,OAAAC,eAAA2R,EAAA,a,gDAAkC,UAClC5R,OAAAC,eAAA2R,EAAA,c,gDAA0C/R,EAAe6E,WAAWC,OAAO,CAACiN,EAAMhN,cCmB7E,MAAO2N,UAAa1S,EAA1BE,c,oBAgBCC,OAAAC,eAAA,qB,yDAKAD,OAAAC,eAAA,yB,yDAEAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,kBACtCC,KAAM,UACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,kBACtCC,KAAM,UACJ,CACFJ,IAAK,eACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,iBACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,QACtCC,KAAM,SACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,SACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,WAsJR,CAnJQ/B,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,OACbqB,mBAAmB,EACnBpB,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEU/H,YACTG,KAAKY,WAAWJ,KAAK,QAErBV,MAAMD,YAEN,MAAMO,EAAQJ,KAAKc,MAEnB,GAAIV,EAAO,CAEV,MAAM+R,EAAe/R,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACjEkH,YAAa,SACbC,YAAa,SACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,aAG1BX,KAAKmS,aAAeA,EAEpB,MAAMC,EAAmBhS,EAAMyC,OAAOrC,KAAK4L,IAAa1L,IAAIV,KAAKM,MAAO,CACvEkH,YAAa,SACbC,YAAa,aACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,iBAG1BX,KAAKoS,iBAAmBA,C,CAG1B,CAEOvK,oBACF7H,KAAKiI,QAAQ,eAAiBjI,KAAKiI,QAAQ,eAAiBjI,KAAKiI,QAAQ,mBAC5EjI,KAAK4I,gBACL5I,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,eAC1CD,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,eAC1CD,KAAK6I,cAAc,eAAgB7I,KAAKC,IAAI,kBAE7CH,MAAM+H,kBACP,CAEO2D,kBAGN,GAFA1L,MAAM0L,kBAEFxL,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,mBAAoB,CACvE,MAAMvB,EAAW1G,KAAKoS,iBAAiB/F,QAAQ3F,SACzC4F,EAAatM,KAAKC,IAAI,mBACtBsM,EAAavM,KAAKC,IAAI,mBAC5ByG,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM2E,EAAY5E,OAAQ4E,IACvE5F,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM4E,EAAY7E,OAAQ6E,IACvEvM,KAAKqS,YAAa,C,CAGfrS,KAAKiI,QAAQ,gBAChBjI,KAAKyL,mBAAmBzL,KAAKmS,aAAcnS,KAAKC,IAAI,eAAgB,eAGrE,MAAM+J,EAAWhK,KAAK6C,OAAOmH,SAC7B,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChBA,EAAYC,WAAavS,KAAKC,IAAI,cAClCqS,EAAYE,WAAaxS,KAAKC,IAAI,cAClCqS,EAAYG,aAAezS,KAAKC,IAAI,gBAEpC,MAAMyS,EAAc1S,KAAKC,IAAI,eACzByS,IACHJ,EAAYI,YAAcA,EAAY7F,YAGvC,MAAM8F,EAAc3S,KAAKC,IAAI,eACzB0S,IACHL,EAAYK,YAAcA,EAAY9F,W,EAI1C,CAKO5D,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAE1C,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAC1B4F,EAASlJ,KAAKC,IAAI,aAAc,IAEpCD,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,WAEnCA,EAASlJ,KAAKC,IAAI,aAAc,IAChCD,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,WAEnCa,OAAY3G,GAAO4G,IAClB,IAAI4I,EAAU5I,EAAS4I,QACnBC,EAAU7I,EAAS6I,QAER,MAAXD,GAA8B,MAAXC,IACtB7I,EAAS8I,KAAOF,EAAUC,E,IAI5B3J,EAASlJ,KAAKC,IAAI,eAAgB,GAClCD,KAAKsJ,KAAKlG,EAAM8F,EAAQ,OAAQ,UAEhC,MAAM4D,EAAkB9M,KAAKC,IAAI,kBAAmBuI,YAAM,QAAWqE,WAC/DH,EAAkB1M,KAAKC,IAAI,kBAAmBuI,YAAM,WAAWqE,WAErE,IAAIkG,GAAKtI,IACTV,OAAY3G,GAAO4G,IAClB,IAAI8I,EAAO9I,EAAS8I,KAChBE,EAAShJ,EAASgJ,OACtB,GAAY,MAARF,GAA0B,MAAVE,EAAgB,CACnC,IAAIC,EAAaH,EAAOE,EACxBhJ,EAASiJ,WAAaA,EAEtB,IAAIzK,EAAQsE,EAERmG,EAAaF,IAChBvK,EAAQkE,GAET1C,EAASkJ,gBAAkB1K,EAC3BuK,EAAIE,C,KAINjT,KAAKoS,iBAAiBhP,KAAKf,OAAOe,GAClCpD,KAAKmS,aAAa/O,KAAKf,OAAOe,GAC9BpD,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAtMAzD,OAAAC,eAAAsS,EAAA,a,gDAAkC,SAClCvS,OAAAC,eAAAsS,EAAA,c,gDAA0C1S,EAAe6E,WAAWC,OAAO,CAAC4N,EAAK3N,cC/B5E,MAAO4O,UAAgB1T,IAA7BC,c,oBAkBCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,SACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,UACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,WAiFR,CA9EQgD,oBAEF7H,KAAKiI,QAAQ,WAAajI,KAAKiI,QAAQ,gBAC1CjI,KAAK4I,gBAGF5I,KAAKiI,QAAQ,cAChBjI,KAAKyL,mBAAmBzL,KAAKoT,WAAYpT,KAAKC,IAAI,aAAc,aAGjED,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,eAC1CH,MAAM+H,kBACP,CAEUhE,WACT7D,KAAKoT,WAAWlH,UAChBpM,MAAM+D,UACP,CAEUhE,YACTC,MAAMD,YAEN,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMyC,EAASzC,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAC3DkH,YAAa,SACbC,YAAa,KACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvBU,UAAW,CAAC,YAAa,WACzB+D,KAAM,QAGP7B,EAAOY,WAAW,kBAAmBvD,GACrCF,KAAK6C,OAASA,EAEd,MAAMuQ,EAAahT,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAC/DkH,YAAa,SACbC,YAAa,MACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvByH,OAAQ1H,KAAKC,IAAI,aACjBU,UAAW,CAAC,YAAa,UAAW,WAGrCyS,EAAW3P,WAAW,kBAAmBvD,GACzCF,KAAKoT,WAAaA,EAElBpT,KAAKgJ,cAAcnG,E,CAErB,CAMOoG,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,GAC5BsS,EAAavS,KAAKC,IAAI,aAAc,IACxC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAE9BtD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,MACnClJ,KAAKoJ,KAAKhG,EAAMmP,EAAY,UAAW,OAEvCvS,KAAK6C,OAAOO,KAAKf,OAAOe,GACxBpD,KAAKoT,WAAWhQ,KAAKf,OAAOe,E,CAE9B,EAhHAzD,OAAAC,eAAAuT,EAAA,a,gDAAkC,YAClCxT,OAAAC,eAAAuT,EAAA,c,gDAA0C1T,IAAU4E,WAAWC,OAAO,CAAC6O,EAAQ5O,cCA1E,MAAO8O,UAAyB7T,EAAtCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WA8ER,CA3EQhF,YACNG,KAAKY,WAAWJ,KAAK,oBACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAKOqB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UACpCoH,EAAe1K,KAAKC,IAAI,gBAC9BD,KAAKuP,OAAO,QAAS,SAErB,IAAInM,EAAmBpD,KAAKmJ,cAAc7F,GACtCoG,EAAI,EACRK,OAAYzG,GAAY0G,IACvB,IAAIyF,EAAQzF,EAAS/J,IAAI,UACzB,GAAa,MAATwP,EAAe,CAClB,IAAIjC,EAAMxD,EAAS/J,IAAI,YAAawP,GAChChC,EAAOzD,EAAS/J,IAAI,aAAcwP,GAElC3E,EAAS,EAEb,MAAMD,EAAWH,EAAapH,UAAUoG,GACpCmB,IACHC,EAASD,EAAS5K,IAAI,SAAU,IAGjC,IAAIyP,GAAOD,EAAQjC,GAAQC,EAAOgC,KAAWhC,EAAOD,GAChDC,GAAQD,IACXkC,EAAK,GAGN,IAAI4D,EAAM5D,EAAK5E,EACf1H,EAAKsG,GAAG4J,IAAMA,EACdlQ,EAAKsG,GAAGoB,OAASA,C,CAElBpB,GAAG,IAGJ,MAAMR,EAASlJ,KAAKC,IAAI,SAAU,IAClCyJ,EAAI,EACJK,OAAY3G,GAAO4G,IAClB,GAAIN,GAAKR,EAAS,EAAG,CACpB,IAAIoK,EAAM,EACNxI,EAAS,EAEb,IAAK,IAAImD,EAAIvE,EAAGuE,EAAIvE,EAAIR,EAAQ+E,IAC/BqF,GAAOlQ,EAAK6K,GAAGqF,IACfxI,GAAU1H,EAAK6K,GAAGnD,OAEL,GAAVA,IACHd,EAASuJ,IAAMD,EAAMxI,E,CAGvBpB,GAAG,IAGJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAhGAzD,OAAAC,eAAAyT,EAAA,a,gDAAkC,qBAClC1T,OAAAC,eAAAyT,EAAA,c,gDAA0C7T,EAAe6E,WAAWC,OAAO,CAAC+O,EAAiB9O,cCKxF,MAAOiP,UAA0BhU,EAAvCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,UACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAmFR,CAhFQhF,YACNG,KAAKY,WAAWJ,KAAK,qBACrBV,MAAMD,YACNG,KAAKyC,MAAMR,IAAI,eAAgB,SAChC,CAEOa,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEOC,mBACF7H,KAAKiI,QAAQ,gBAChBjI,KAAK4I,gBACL5I,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,gBAE3CH,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UACpCoH,EAAe1K,KAAKC,IAAI,gBAC9BD,KAAKuP,OAAO,QAAS,SAErB,IAAI7F,EAAI,EACJtG,EAAmBpD,KAAKmJ,cAAc7F,GACtCkM,EAAS,EAEbzF,OAAYzG,GAAY0G,IACvB,IAAIyF,EAAQzF,EAAS/J,IAAI,UACzB,GAAa,MAATwP,EAAe,CAClB,IAAIjC,EAAMxD,EAAS/J,IAAI,YAAawP,GAChChC,EAAOzD,EAAS/J,IAAI,aAAcwP,GAElC3E,EAAS,EAEb,MAAMD,EAAWH,EAAapH,UAAUoG,GACpCmB,IACHC,EAASD,EAAS5K,IAAI,SAAU,IAGjC,IAAIyP,GAAOD,EAAQjC,GAAQC,EAAOgC,KAAWhC,EAAOD,GAChDC,GAAQD,IACXkC,EAAK,GAGN,IAAIC,EAAKH,EAASE,EAAK5E,EACvB1H,EAAKsG,GAAGiG,GAAKA,EAEbH,EAASG,C,CAEVjG,GAAG,IAGJ1J,KAAKsJ,KAAKlG,EAAMpD,KAAKC,IAAI,aAAc,IAAK,KAAM,WAClDD,KAAKsJ,KAAKlG,EAAMpD,KAAKC,IAAI,SAAU,GAAI,KAAM,WAE7C8J,OAAY3G,GAAO4G,IAClB,MAAM6I,EAAU7I,EAAS6I,QACnBD,EAAU5I,EAAS4I,QACV,MAAXC,GAA8B,MAAXD,IACtB5I,EAASuJ,IAAMX,EAAUC,E,IAI3B7S,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAzGAzD,OAAAC,eAAA4T,EAAA,a,gDAAkC,sBAClC7T,OAAAC,eAAA4T,EAAA,c,gDAA0ChU,EAAe6E,WAAWC,OAAO,CAACkP,EAAkBjP,cCdzF,MAAOkP,UAAsBjU,EAAnCE,c,oBAaIC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACrD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACP,CACCJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAqDd,CAlDWhF,YACHG,KAAKY,WAAWJ,KAAK,iBACrBV,MAAMD,WACV,CAEOiD,gBACH,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACrDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAEd,CAKOqB,cACH,GAAIjJ,KAAK6C,OAAQ,CAEb,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1CtD,KAAKuP,OAAO,QAAS,SAErB,IAAI7F,EAAI,EACJtG,EAAmBpD,KAAKmJ,cAAc7F,GACtC4F,EAASlJ,KAAKC,IAAI,SAAU,GAEhCD,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,OAEnCa,OAAYzG,GAAY0G,IACpB,GAAIN,GAAKR,EAAS,EAAG,CACjB,IAAIuG,EAAQzF,EAAS/J,IAAI,UACzB,GAAa,MAATwP,EAAe,CACf,IAAIjC,EAAMxD,EAAS/J,IAAI,YAAawP,GAChChC,EAAOzD,EAAS/J,IAAI,aAAcwP,GAElCiE,EAAMtQ,EAAKsG,GAAGgK,IAClBtQ,EAAKsG,GAAGiK,IAAMlG,EAAOiG,EAAMlG,EAAMkG,C,EAIzChK,GAAG,IAGP1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAEhC,EAvEAzD,OAAAC,eAAA6T,EAAA,a,gDAAkC,kBAClC9T,OAAAC,eAAA6T,EAAA,c,gDAA0CjU,EAAe6E,WAAWC,OAAO,CAACmP,EAAclP,cCGxF,MAAOqP,UAAwBpU,EAArCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAsER,CAnEQhF,YACNG,KAAKY,WAAWJ,KAAK,mBACrBV,MAAMD,YACNG,KAAKyC,MAAMR,IAAI,eAAgB,SAChC,CAEOa,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAKOqB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB7C,KAAKuP,OAAO,QAAS,SAErB,MAAMjM,EAAYtD,KAAKC,IAAI,eAAeqD,UACpCoH,EAAe1K,KAAKC,IAAI,gBAE9B,IAAImD,EAAmBpD,KAAKmJ,cAAc7F,GACtC0J,EAAW,EACXpD,EAAMxG,EAAKG,OAEf,GAAImH,GAAgBd,EAAM,EAAG,CAC5B,IAAI8G,EAAKtN,EAAK,GAAG4H,QAEjB,IAAK,IAAItB,EAAI,EAAGA,EAAIE,EAAKF,IAAK,CAC7B,MAAMM,EAAW5G,EAAKsG,GAEtB,IAAI+G,EAAIzG,EAASgB,QAEjB,GAAS,MAALyF,EAAW,CACd,MAAM5F,EAAWH,EAAapH,UAAUoG,GACxC,IAAIoB,EAAS,EACTD,IACHC,EAASD,EAAS5K,IAAI,SAAU,IAGjC,IAAI4T,EAAM7G,EACNyD,EAAIC,EACPmD,GAAO/I,EAEC2F,EAAIC,IACZmD,GAAO/I,GAGRd,EAAS6J,IAAMA,EAEf7G,EAAW6G,EACXnD,EAAKD,C,GAKRzQ,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EApFAzD,OAAAC,eAAAgU,EAAA,a,gDAAkC,oBAClCjU,OAAAC,eAAAgU,EAAA,c,gDAA0CpU,EAAe6E,WAAWC,OAAO,CAACsP,EAAgBrP,cCDvF,MAAOuP,UAAYtU,EAAzBE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAkER,CA/DQhF,YACNG,KAAKY,WAAWJ,KAAK,OACrBV,MAAMD,YACNG,KAAKyC,MAAMR,IAAI,eAAgB,SAChC,CAEOa,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAKOqB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB7C,KAAKuP,OAAO,QAAS,SAErB,MAAMjM,EAAYtD,KAAKC,IAAI,eAAeqD,UACpCoH,EAAe1K,KAAKC,IAAI,gBAE9B,IAAImD,EAAmBpD,KAAKmJ,cAAc7F,GACtC0J,EAAW,EACXpD,EAAMxG,EAAKG,OAIf,GAAImH,GAAgBd,EAAM,EAAG,CAC5B,IAAI8G,EAAKtN,EAAK,GAAG4H,QAEjB,IAAK,IAAItB,EAAI,EAAGA,EAAIE,EAAKF,IAAK,CAC7B,MAAMM,EAAW5G,EAAKsG,GAEtB,IAAI+G,EAAIzG,EAASgB,QAEjB,GAAS,MAALyF,GAAa1K,WAAe0K,IAAW,GAALA,EAAQ,CAC7C,MAAM5F,EAAWH,EAAapH,UAAUoG,GACxC,IAAIoB,EAAS,EACTD,IACHC,EAASD,EAAS5K,IAAI,SAAU,IAGjC,IAAI8T,GAAStD,EAAIC,GAAMA,EAAM5F,EAAUkC,EAEvChD,EAAS+J,IAAMA,EAEf/G,EAAW+G,EACXrD,EAAKD,C,GAKRzQ,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAhFAzD,OAAAC,eAAAkU,EAAA,a,gDAAkC,QAClCnU,OAAAC,eAAAkU,EAAA,c,gDAA0CtU,EAAe6E,WAAWC,OAAO,CAACwP,EAAIvP,cCO3E,MAAOyP,UAA6BxP,EAA1C9E,c,oBAWCC,OAAAC,eAAA,mB,wDAmHD,CAjHWC,YACTG,KAAKY,WAAWJ,KAAK,cAErBV,MAAMD,YAENG,KAAK2D,kBAAkB6K,QACtB,CACC/J,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACHJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SACJ,CACFJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,UACL,CACDJ,IAAK,aACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UACH,CACHJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UAIP7E,KAAKyC,MAAMJ,OAAO,CAAE2N,IAAK,EAAGmB,IAAK,IAAKrM,cAAc,IAEpD,MAAMmP,EAAajU,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACpEkH,YAAa,SACbC,YAAa,OACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,WAG1BX,KAAKiU,WAAaA,CACnB,CAGOzI,mBACFxL,KAAKiI,QAAQ,eAAiBjI,KAAKiI,QAAQ,iBAC9CjI,KAAK4I,gBACL5I,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,eAC1CD,KAAK6I,cAAc,aAAc7I,KAAKC,IAAI,gBAG3CH,MAAM0L,kBAEFxL,KAAKiI,QAAQ,cAChBjI,KAAKyL,mBAAmBzL,KAAKiU,WAAYjU,KAAKC,IAAI,aAAc,YAElE,CAKOgJ,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAI4F,EAASlJ,KAAKC,IAAI,SAAU,IAC5BmD,EAAmB,GACnB8Q,EAAQ,EAEZnK,OAAYzG,GAAY0G,IACvB,MAAME,EAASF,EAAS/J,IAAI,UAC5B,IAAIoR,EACJ,GAAI6C,GAAShL,EAAS,EAAG,CACxB,IAAIkB,EAAQpK,KAAKqK,UAAUL,GAE3B,GAAa,MAATI,EAAe,CAClB,IAAI+J,EAAK1J,IACL2J,GAAMD,EACV,IAAK,IAAIlG,EAAIiG,EAAOjG,EAAIiG,EAAQhL,EAAQ+E,IAAK,CAC5C,IAAI0C,EAAIrN,EAAU2K,GAAGhO,IAAI,cACrB2Q,EAAItN,EAAU2K,GAAGhO,IAAI,aAEhB,MAAL0Q,GAAkB,MAALC,IACZA,EAAIuD,IACPA,EAAKvD,GAEFD,EAAIyD,IACPA,EAAKzD,G,CAIRU,GAAKjH,EAAQ+J,IAAOC,EAAKD,GAAM,G,EAIxB,MAAL9C,GAAatL,QAAYsL,GAC5BjO,EAAK5C,KAAK,CAAE0J,OAAQA,IAGpB9G,EAAK5C,KAAK,CAAE0J,OAAQA,EAAQc,QAASqG,IAEtC6C,GAAO,IAGRhL,EAASlJ,KAAKC,IAAI,aAAc,GAChCD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,UAEnCA,EAASlJ,KAAKC,IAAI,aAAc,GAChCD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,SAAU,QAElClJ,KAAK6C,OAAOO,KAAKf,OAAOe,GACxBpD,KAAKiU,WAAW7Q,KAAKf,OAAOe,E,CAE9B,EA5HAzD,OAAAC,eAAAoU,EAAA,a,gDAAkC,yBAClCrU,OAAAC,eAAAoU,EAAA,c,gDAA0CxP,EAAmBH,WAAWC,OAAO,CAAC0P,EAAqBzP,cCIhG,MAAO8P,UAAgC7P,EAA7C9E,c,oBAWCC,OAAAC,eAAA,kB,wDAkID,CAhIWC,YACTG,KAAKY,WAAWJ,KAAK,sBAErBV,MAAMD,YACNG,KAAK2D,kBAAkB6K,QACtB,CACC/J,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,UACJ,CACHJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,SACJ,CACFJ,IAAK,UACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,YACtCC,KAAM,UACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UACJ,CACFJ,IAAK,WACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UAIP,MAAMyP,EAAYtU,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACnEkH,YAAa,SACbC,YAAa,MACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,UAG1BX,KAAKsU,UAAYA,CAClB,CAEO9I,mBACFxL,KAAKiI,QAAQ,YAAcjI,KAAKiI,QAAQ,gBAC3CjI,KAAK4I,gBACL5I,KAAK6I,cAAc,UAAW7I,KAAKC,IAAI,YACvCD,KAAK6I,cAAc,YAAa7I,KAAKC,IAAI,eAG1CH,MAAM0L,kBAEFxL,KAAKiI,QAAQ,aAChBjI,KAAKyL,mBAAmBzL,KAAKsU,UAAWtU,KAAKC,IAAI,YAAa,WAEhE,CAMOgJ,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAIiR,EAAUvU,KAAKC,IAAI,SAAU,IAC7BmD,EAAmB,GACnB8Q,EAAQ,EAEZnK,OAAYzG,GAAY0G,IACvB,MAAME,EAASF,EAAS/J,IAAI,UAC5B,IAEIuU,EACAC,EAHAN,EAAK1J,IACL2J,GAAMD,EAIV,GAAID,GAASK,EAAU,EAAG,CACzB,IAAInK,EAAQpK,KAAKqK,UAAUL,GAE3B,GAAa,MAATI,EAAe,CAClB,IAAK,IAAI6D,EAAIiG,EAAOjG,EAAIiG,EAAQK,EAAStG,IAAK,CAC7C,IAAI0C,EAAIrN,EAAU2K,GAAGhO,IAAI,cACrB2Q,EAAItN,EAAU2K,GAAGhO,IAAI,aAEhB,MAAL0Q,GAAkB,MAALC,IACZA,EAAIuD,IACPA,EAAKvD,GAEFD,EAAIyD,IACPA,EAAKzD,G,CAMR6D,EAAMpK,GADGgK,EAAKD,GAAM,EAEpBM,EAAML,EAAKD,C,EAIF,MAAPK,GAAezO,QAAYyO,IAAgB,IAARA,EACtCpR,EAAK5C,KAAK,CAAE0J,OAAQA,IAGpB9G,EAAK5C,KAAK,CAAE0J,OAAQA,EAAQsK,IAAKA,EAAKC,IAAKA,IAE5CP,GAAO,IAGR,IAAIQ,EAAU1U,KAAKC,IAAI,UAAW,GAClCD,KAAKsJ,KAAKlG,EAAMsR,EAAS,MAAO,WAChC1U,KAAKsJ,KAAKlG,EAAMsR,EAAS,UAAW,YAEpC1U,KAAKsJ,KAAKlG,EAAMsR,EAAS,MAAO,WAChC1U,KAAKsJ,KAAKlG,EAAMsR,EAAS,UAAW,YAEpC3K,OAAY3G,GAAOuR,IAClB,IAAIH,EAAMG,EAAEC,SACRH,EAAME,EAAEE,SAED,MAAPL,GAAsB,MAAPC,IAClBE,EAAEvF,OAASuF,EAAEC,SAAWD,EAAEE,SAAW,I,IAIvC,IAAIC,EAAY9U,KAAKC,IAAI,YAAa,GACtCD,KAAKoJ,KAAKhG,EAAM0R,EAAW,SAAU,OAErC9U,KAAK6C,OAAOO,KAAKf,OAAOe,GACxBpD,KAAKsU,UAAUlR,KAAKf,OAAOe,E,CAE7B,EA3IAzD,OAAAC,eAAAyU,EAAA,a,gDAAkC,4BAClC1U,OAAAC,eAAAyU,EAAA,c,gDAA0C7P,EAAmBH,WAAWC,OAAO,CAAC+P,EAAwB9P,cCXnG,MAAOwQ,UAA0BvV,EAAvCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,SACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,WA6ER,CAzEQhF,YACNG,KAAKY,WAAWJ,KAAK,qBACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK4L,IAAa1L,IAAIV,KAAKM,MAAO,CAC1DK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,KACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEO4D,kBACN1L,MAAM0L,kBAEN,MAAMsB,EAAiB,kBACjBJ,EAAiB,kBAEvB,GAAI1M,KAAKiI,QAAQ6E,IAAoB9M,KAAKiI,QAAQyE,GAAkB,CACnE,MAAMhG,EAAW1G,KAAK6C,OAAOwJ,QAAQ3F,SAC/B4F,EAAatM,KAAKC,IAAI6M,GACtBP,EAAavM,KAAKC,IAAIyM,GAC5BhG,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM2E,EAAY5E,OAAQ4E,IACvE5F,EAAS8F,OAAOC,OAAO,mBAAoB,CAAE9E,KAAM4E,EAAY7E,OAAQ6E,IACvEvM,KAAK4I,e,CAEP,CAKOK,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB7C,KAAKiC,IAAI,QAAS,QAElB,MAAMqB,EAAYtD,KAAKC,IAAI,eAAeqD,UAE1C,IAAIoJ,EAAkB1M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,WAAWC,WACvEC,EAAkB9M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,QAAWC,WAEvEzJ,EAAOpD,KAAKmJ,cAAc7F,GAC1B4F,EAAS,EACblJ,KAAKoJ,KAAKhG,EAAM,EAAG,UAAW,QAE9B8F,EAAS,GACTlJ,KAAKoJ,KAAKhG,EAAM,GAAI,UAAW,SAE/B,IAAI4R,GAAMvK,IACNf,EAAI,EACRK,OAAY3G,GAAO4G,IAElB,GADAN,IACIA,GAAKR,EAAQ,CAChB,IAAI2H,EAAI7G,EAASiL,KAAOjL,EAASkL,MAC7B1M,EAAQsE,EAER+D,EAAImE,IACPxM,EAAQkE,GAGT1C,EAASmL,GAAKtE,EACd7G,EAASoL,gBAAkB5M,EAC3BwM,EAAKnE,C,KAIP7Q,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA/FAzD,OAAAC,eAAAmV,EAAA,a,gDAAkC,sBAClCpV,OAAAC,eAAAmV,EAAA,c,gDAA0CvV,EAAe6E,WAAWC,OAAO,CAACyQ,EAAkBxQ,cCvBzF,MAAO8Q,UAAkB7Q,EASpB3E,YACTG,KAAKY,WAAWJ,KAAK,aACrBV,MAAMD,YAENG,KAAK2D,kBAAkB6K,QAAQ,CAC9B/J,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SAER,CAMOoE,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB7C,KAAKiC,IAAI,QAAS,SAElB,MAAMqB,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAC1B4F,EAASlJ,KAAKC,IAAI,SAAU,IAEhC,IAAK,IAAIyJ,EAAI,EAAGE,EAAMxG,EAAKG,OAAQmG,EAAIE,EAAKF,IAAK,CAChD,MAAMM,EAAW5G,EAAKsG,GAEtB,IAAIiH,GAAKlG,IACLmG,EAAInG,IAER,IAAK,IAAIwD,EADD7G,KAAK+J,IAAI,EAAGzH,EAAIR,GACR+E,GAAKvE,EAAGuE,IAAK,CAE5B,IAAI6D,EAAKxO,EAAU2K,GAAGhO,IAAI,aAAc,GACpC6R,GAAMnB,IACTA,EAAImB,GAGL,IAAIC,EAAKzO,EAAU2K,GAAGhO,IAAI,YAAa,GACnC8R,GAAMnB,IACTA,EAAImB,E,CAIFpB,EAAIC,GAAK,IACZ5G,EAASoF,QAAU,KAAOuB,EAAI3G,EAASgB,UAAY2F,EAAIC,G,CAIzD5Q,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA7DAzD,OAAAC,eAAAyV,EAAA,a,gDAAkC,cAClC1V,OAAAC,eAAAyV,EAAA,c,gDAA0C7Q,EAAmBH,WAAWC,OAAO,CAAC+Q,EAAU9Q,cCkBrF,MAAO+Q,UAAe9V,EAA5BE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,aACtCC,KAAM,SACJ,CACFJ,IAAK,kBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,WAyDR,CAtDQhF,YACNG,KAAKY,WAAWJ,KAAK,UACrBV,MAAMD,YACNG,KAAKyC,MAAMR,IAAI,eAAgB,SAChC,CAEOa,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK4L,IAAa1L,IAAIV,KAAKM,MAAO,CAC1DK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,SACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEOC,oBACF7H,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,qBACnDjI,KAAK4I,gBAEN9I,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAM6H,EAAe1K,KAAKC,IAAI,gBACxBF,EAAaC,KAAKC,IAAI,cAC5B,GAAIyK,GAAgB3K,EAAY,CAC/B,MAAMuD,EAAYoH,EAAapH,UAE/BtD,KAAKuP,OAAO,QAAS,SAErB,IAAI7C,EAAkB1M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,WAC5DE,EAAkB9M,KAAKC,IAAI,kBAAmB0M,IAAMC,QAAQ,QAE5DxJ,EAAOpD,KAAKmJ,cAAc7F,GAE9ByG,OAAY3G,GAAO4G,IAClBA,EAASc,OAASd,EAASgB,OAAO,IAEnChL,KAAK6C,OAAOO,KAAKf,OAAOe,GAExB2G,OAAY/J,KAAK6C,OAAOS,WAAY0G,IACfA,EAASsI,YACjBiD,YAAcxV,EAAWyV,eAAexL,EAAU0C,EAAiBI,EAAgB,G,EAInG,EA3EAnN,OAAAC,eAAA0V,EAAA,a,gDAAkC,WAClC3V,OAAAC,eAAA0V,EAAA,c,gDAA0C9V,EAAe6E,WAAWC,OAAO,CAACgR,EAAO/Q,c,WCyC9E,MAAOkR,UAAsBhW,IAAnCC,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CACR,CAAEyB,MAAO,OAAQsL,KAAM1V,KAAKK,KAAKsE,SAASC,aAAa,kBAAmB+Q,UAAW,QAASC,eAAgB,GAAKC,kBAAmB,GACtI,CAAEzL,MAAO,QAASsL,KAAM1V,KAAKK,KAAKsE,SAASC,aAAa,iBAAkB+Q,UAAW,QAASC,eAAgB,IAAMC,kBAAmB,OAEtI,CACFpR,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACNiR,SAAU,GACR,CACFrR,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,cACtCC,KAAM,UACJ,CACFJ,IAAK,UACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,aACtCC,KAAM,SACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,eACtCC,KAAM,SACJ,CACFJ,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,WACtCC,KAAM,aAGPlF,OAAAC,eAAA,c,yDAEAD,OAAAC,eAAA,iB,yDAEAD,OAAAC,eAAA,wB,wDAqaD,CAnaWC,YACTC,MAAMD,YAEN,MAAM6K,EAAe1K,KAAKC,IAAI,gBACxBC,EAAcF,KAAKC,IAAI,eAC7B,GAAIyK,EAAc,CACjB,MAAMtK,EAAQF,EAAYE,MACpBC,EAAOL,KAAKM,MAElB,GAAIF,EAAO,CACV,MAAMqC,EAAQvC,EAAYD,IAAI,SAG9B,QAAa2H,IADAnF,EAAMsT,WAAW,QACN,CACvB,MAAMC,EAAiC,GAA3BvT,EAAMsT,WAAW,QAC5B/V,KAAK2D,kBAA0B,GAAGgF,QAAQ,GAAGiN,eAAiBI,EAC9DhW,KAAK2D,kBAA0B,GAAGgF,QAAQ,GAAGkN,kBAA0B,GAANG,C,CAEnEvT,EAAMsN,UAAU,QAASkG,IACxB,MAAMD,EAAa,GAAPC,EACXjW,KAAK2D,kBAA0B,GAAGgF,QAAQ,GAAGiN,eAAiBI,EAC9DhW,KAAK2D,kBAA0B,GAAGgF,QAAQ,GAAGkN,kBAA0B,GAANG,CAAS,IAG5E,MAAME,EAAahW,EAAYD,IAAI,SAEnCiW,EAAWjV,GAAG,SAAS,KACtBjB,KAAK4I,eAAe,IAErBsN,EAAWjV,GAAG,OAAO,KACpBjB,KAAK4I,eAAe,IAGrB,MAAMrH,EAAYC,IAAcd,IAAIL,EAAM,CAAC,GAC3CkB,EAAU4U,KAAKzP,SAASzE,IAAI,eAAe,GAC3CV,EAAU6U,OAAO1P,SAASzE,IAAI,eAAe,GAE7CjC,KAAKyB,MAAQrB,EAAM0B,MAAMtB,KAAKmC,IAAUjC,IAAIL,EAAM,CACjDgW,UAAU,EACVvR,cAAc,EACdwR,MAAM,EACNC,MAAM,EACNxU,SAAUR,KAGPkB,EAAMxC,IAAI,YAAYA,IAAI,cAC7BsB,EAAUU,IAAI,YAAY,GAC1BjC,KAAKyB,MAAMY,OAAO,CACjBmU,EAAGC,YAAQ,KACXC,QAASD,YAAQ,QAInBzW,KAAK6C,OAASzC,EAAMyC,OAAO2L,QAAQpC,IAAa1L,IAAIL,EAAM,CACzDoB,MAAOzB,KAAKyB,MACZgB,MAAOA,EACPkU,aAAY,EACZnP,YAAa,OACboP,gBAAiB,QACjBtL,gBAAiB,QACjB7D,YAAa,IACbsB,qBAAqB,EACrBpI,UAAW,CAAC,YAAa,gBAAiB,WAI3CX,KAAK6W,SAAWzW,EAAMyC,OAAO2L,QAAQpC,IAAa1L,IAAIL,EAAM,CAC3DoB,MAAOzB,KAAKyB,MACZgB,MAAOA,EACPkU,aAAY,EACZnP,YAAa,QACboP,gBAAiB,OACjBtL,gBAAiB,QACjB7D,YAAa,IACbsB,qBAAqB,EACrBpI,UAAW,CAAC,YAAa,gBAAiB,SAG3CX,KAAK6W,SAASpT,WAAW,qBAAqB,GAC9CzD,KAAK6C,OAAOY,WAAW,qBAAqB,GAE5CzD,KAAK6W,SAASpT,WAAW,kBAAmBvD,GAC5CF,KAAK6C,OAAOY,WAAW,kBAAmBvD,GAE1CF,KAAKgJ,cAAchJ,KAAK6C,QAExB7C,KAAK8W,kBAAkB9W,KAAK6C,QAC5B7C,KAAK8W,kBAAkB9W,KAAK6W,S,EAG/B,CAEUC,kBAAkBjU,GAC3BA,EAAOwJ,QAAQ3F,SAAS1F,OAAOC,GAAG,eAAgBC,IACjD,IAAI8I,EAAW9I,EAAE6V,OAAO/M,SAExB,GAAIA,EAAU,CACb,GAAIA,EAASgN,WAAahX,KAAK6W,UAE9B,GADA7M,EAAWhK,KAAK6C,OAAOS,UAAUtD,KAAK6W,SAASvT,UAAU2T,QAAQjN,IAC7DA,EAAU,CACb,MAAMkN,EAASlN,EAAS/J,IAAI,YACxBiX,IACHA,EAAOC,QACPnX,KAAKoX,gBAAkBF,E,OAMzB,GADAlN,EAAWhK,KAAK6W,SAASvT,UAAUtD,KAAK6C,OAAOS,UAAU2T,QAAQjN,IAC7DA,EAAU,CACb,MAAMkN,EAASlN,EAAS/J,IAAI,YACxBiX,IACHA,EAAOC,QACPnX,KAAKoX,gBAAkBF,E,CAK1BlX,KAAK6C,OAAOwU,kBAAkBrN,E,KAIhCnH,EAAOwJ,QAAQ3F,SAAS1F,OAAOC,GAAG,cAAc,KAC/CjB,KAAK6C,OAAOwU,uBAAkBzP,GAC1B5H,KAAKoX,iBACRpX,KAAKoX,gBAAgBE,S,IAIvBzU,EAAOwJ,QAAQ3F,SAASd,SAASC,IAAI,eAAe,CAAC0R,EAAaR,KACjE,MAAM/M,EAAW+M,EAAO/M,SACxB,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,GACCA,EAAYkF,KACf,OAAOxX,KAAKC,IAAI,mBAAoB,G,CAIvC,OAAOsX,CAAW,GAEpB,CAEO/L,kBACN,GAAIxL,KAAK6C,OAAQ,CAOhB,GANA/C,MAAM0L,mBAEFxL,KAAKiI,QAAQ,UAAYjI,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,eACtEjI,KAAK4I,gBAGF5I,KAAKiI,QAAQ,aAAc,CAE9B,GAAiB,SADCjI,KAAKC,IAAI,aACD,CACzB,MACMwC,EADczC,KAAKC,IAAI,eACHA,IAAI,SAC9BD,KAAK2D,kBAAkB,GAAGmS,SAAsC,GAA3BrT,EAAMsT,WAAW,QAAe,E,MAGrE/V,KAAK2D,kBAAkB,GAAGmS,SAAW,C,CAIvC,GAAI9V,KAAKiI,QAAQ,WAAY,CAC5B,MAAMyJ,EAAU1R,KAAKC,IAAI,WACzBD,KAAK6W,SAAS5U,IAAI,OAAQyP,GAC1B1R,KAAK6W,SAAS5U,IAAI,SAAUyP,GAE5B1R,KAAK6W,SAASxK,QAAQ3F,SAASrE,OAAO,CACrCsF,KAAM+J,EACNhK,OAAQgK,IAGT1R,KAAK6I,cAAc,UAAW6I,E,CAG/B,GAAI1R,KAAKiI,QAAQ,aAAc,CAC9B,MAAM0J,EAAY3R,KAAKC,IAAI,aAC3BD,KAAK6C,OAAOZ,IAAI,OAAQ0P,GACxB3R,KAAK6C,OAAOZ,IAAI,SAAU0P,GAE1B3R,KAAK6C,OAAOwJ,QAAQ3F,SAASrE,OAAO,CACnCsF,KAAMgK,EACNjK,OAAQiK,IAGT3R,KAAK6I,cAAc,YAAa8I,E,CAG7B3R,KAAKiI,QAAQ,cAChBjI,KAAKyB,MAAMQ,IAAI,QAASwU,YAAQzW,KAAKC,IAAI,YAAa,K,CAIzD,CAKOgJ,cACN,MAAMyB,EAAe1K,KAAKC,IAAI,gBACxBC,EAAcF,KAAKC,IAAI,eAE7B,GAAIyK,GAAgB1K,KAAK6C,OAAQ,CAChC,IAAI4U,EAAa/M,EAAaqL,WAAW,qBAAsBrL,EAAa+M,cACxEC,EAAWhN,EAAagN,WAE5B,MAAMC,EAAQ3X,KAAKC,IAAI,QAAS,IAC1B4E,EAAO7E,KAAKC,IAAI,aACtB,IAAIgW,EAAO,EAEPjG,EAAMvF,IACN0G,GAAO1G,IAEX,IAAK,IAAIf,EAAI+N,EAAY/N,EAAIgO,EAAUhO,IAAK,CAC3C,MAAMM,EAAW9J,EAAYoD,UAAUoG,GACvC,GAAIM,EAAU,CACb,MAAMyF,EAAQzF,EAAS/J,IAAI,UACvB8F,WAAe0J,KACdA,EAAQO,IACXA,EAAMP,GAGHA,EAAQ0B,IACXA,EAAM1B,G,EAMV,GAAIO,GAAOvF,IAAU,CAEpB,IAAImN,EACQ,SAAR/S,GACHoR,EAAO0B,EAAQ,IACf3H,EAAM5I,KAAKyQ,MAAM7H,EAAMiG,GAAQA,EAC/B9E,EAAM/J,KAAK0Q,KAAK3G,EAAM8E,GAAQA,EAC9B2B,GAAQzG,EAAMnB,GAAOiG,IAGrBA,GAAQ9E,EAAMnB,GAAO2H,EACrBC,EAAOD,GAGR,MAAMI,EAA6B,GAC7BC,EAA2B,GAEjC,IAAK,IAAItO,EAAI,EAAGA,EAAIkO,EAAMlO,IACzBqO,EAAYrO,GAAK,EACjBsO,EAAUtO,GAAK,EAGhB,IAAIuO,EACJ,IAAK,IAAIvO,EAAI+N,EAAY/N,EAAIgO,EAAUhO,IAAK,CAC3C,MAAMM,EAAW9J,EAAYoD,UAAUoG,GACjCwO,EAAiBxN,EAAapH,UAAUoG,GAC9C,GAAIM,GAAYkO,EAAgB,CAC/B,MAAMzI,EAAQzF,EAAS/J,IAAI,UACrB6K,EAASoN,EAAejY,IAAI,UAElC,GAAI8F,WAAe0J,IAAU1J,WAAe+E,GAAS,CACpD,IAAIoJ,EAAQ9M,KAAKyQ,OAAOpI,EAAQO,GAAOiG,GACnC/B,GAASyD,IACZzD,EAAQyD,EAAQ,GAGb5R,WAAemO,KACd+D,GAAoBA,EAAiBhY,IAAI,SAAUwP,GAASA,EAC/DsI,EAAY7D,IAAUpJ,EAGtBkN,EAAU9D,IAAUpJ,E,CAIvBmN,EAAmBjO,C,EAIrB,MAAMmO,EAAW,GACjB,IAAIC,EAAM,EACV,IAAK,IAAI1O,EAAI,EAAGA,EAAIkO,EAAMlO,IAAK,CAC9B,IAAI2O,EAAQL,EAAUtO,GAAKqO,EAAYrO,GACvC0O,GAAOC,EAEPF,EAAS3X,KAAK,CACb8X,MAAOtI,EAAMtG,EAAIuM,EACjBnQ,EAAGkK,GAAOtG,EAAI,GAAKuM,EACnBjE,GAAIgG,EAAUtO,GACduI,KAAM8F,EAAYrO,GAClB2O,MAAOA,EACPE,MAAO,EACPf,MAAM,G,CAIR,IAAI5N,EAAM5J,KAAK6C,OAAOO,KAAKG,OAC3B,GAAIqG,GAAOA,GAAOuO,EAAS5U,OAC1B,IAAK,IAAImG,EAAI,EAAGA,EAAIE,EAAKF,IACxB1J,KAAK6C,OAAOO,KAAKoV,SAAS9O,EAAGyO,EAASzO,SAIvC1J,KAAK6C,OAAOO,KAAKf,OAAO8V,GAGzB,MAAMM,EAAS,GAEf,IAAIC,EAAU,EACV7G,EAAK,EAET,IAAK,IAAInI,EAAI,EAAGA,EAAIkO,EAAMlO,IAAK,CAC9B,IAAI2O,EAAQL,EAAUtO,GAAKqO,EAAYrO,GACvC+O,EAAOjY,KAAK,CACX8X,MAAOtI,EAAMtG,EAAIuM,EACjBnQ,EAAGkK,GAAOtG,EAAI,GAAKuM,EACnBjE,GAAIgG,EAAUtO,GACduI,KAAM8F,EAAYrO,GAClB2O,MAAOA,EACPb,MAAM,IAGHa,EAAQK,IACXA,EAAUL,EACVxG,EAAKnI,E,CAIP,IAAIiP,EAAYP,EAAMpY,KAAKC,IAAI,YAAa,IAAM,IAC9CuX,EAAOkB,EAEPE,EAAK,EACLC,EAAK,EACLC,EAAOL,EAAOlV,OAMlB,IAJAkV,EAAO5G,GAAI2F,MAAO,EAClBW,EAAStG,GAAI2F,MAAO,EAGbA,EAAOmB,GAAW,CACxB,IAAII,EAAYlH,EAAKgH,EACjBG,EAAW,EACXD,EAAYD,IACfE,GAAYP,EAAOM,GAAWV,OAG/B,IAAIY,EAAYpH,EAAK+G,EAEjBM,EAAW,EA6Bf,GA5BID,GAAa,IAChBC,GAAYT,EAAOQ,GAAWZ,OAG3Ba,GAAYF,GACfxB,GAAQwB,EACJD,EAAYD,IACfX,EAASY,GAAWvB,MAAO,EAC3BiB,EAAOM,GAAWvB,MAAO,EACzBqB,OAIDrB,GAAQ0B,EACJD,GAAa,IAChBd,EAASc,GAAWzB,MAAO,EAC3BiB,EAAOQ,GAAWzB,MAAO,EACzBoB,MAIc,GAAZM,GACHN,IAEe,GAAZI,GACHH,IAGID,EAAKE,GAAQD,EAAKC,EACtB,K,CAOF,GAHAtB,EAAOpQ,KAAK0Q,KAAKN,GAEjB5N,EAAM5J,KAAK6W,SAASzT,KAAKG,OACrBqG,EAAM,GAAKA,GAAO6O,EAAOlV,OAC5B,IAAK,IAAImG,EAAI,EAAGA,EAAIE,EAAKF,IACxB1J,KAAK6W,SAASzT,KAAKoV,SAAS9O,EAAG+O,EAAO/O,SAIvC1J,KAAK6W,SAASzT,KAAKf,OAAOoW,E,MAI3BzY,KAAK6W,SAASzT,KAAK+V,QACnBnZ,KAAK6C,OAAOO,KAAK+V,O,CAInBnZ,KAAK6C,OAAOwJ,QAAQ+M,MAAMlC,IACzBA,EAAOmC,cAAc,cAAc,IAGpCrZ,KAAK6W,SAASxK,QAAQ+M,MAAMlC,IAC3BA,EAAOmC,cAAc,cAAc,GAErC,CAEUxV,WACT/D,MAAM+D,WACF7D,KAAK6W,UACR7W,KAAK6W,SAAS3K,UAGXlM,KAAKyB,OACRzB,KAAKyB,MAAMyK,SAEb,EAndAvM,OAAAC,eAAA6V,EAAA,a,gDAAkC,kBAClC9V,OAAAC,eAAA6V,EAAA,c,gDAA0ChW,IAAU4E,WAAWC,OAAO,CAACmR,EAAclR,cChEhF,MAAO+U,UAA8B9U,EAQhC3E,YAETG,KAAKY,WAAWJ,KAAK,yBAErBV,MAAMD,YAENG,KAAK2D,kBAAkB6K,QACtB,CACC/J,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACHJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,SAGR,CAKOoE,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UAC1C,IAAIF,EAAOpD,KAAKuZ,iBAAiBjW,GAC7B4F,EAASlJ,KAAKC,IAAI,SAAU,IAEhCD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,OAEnC,IAAK,IAAIQ,EAAI,EAAGE,EAAMxG,EAAKG,OAAQmG,EAAIE,EAAKF,IAAK,CAChD,MAAMM,EAAW5G,EAAKsG,GAChBU,EAAQJ,EAASgB,QACvB,IAAIe,EAAK/B,EAASwP,IAEdC,EAAgB,EACpB,GAAI/P,GAAKR,EAAS,EAAG,CACpB,IAAK,IAAI+E,EAAIvE,EAAGuE,EAAIvE,EAAIR,EAAQ+E,IAAK,CACpC,IAAIC,EAAK9K,EAAK6K,GACdwL,GAAiBrS,KAAK4H,IAAId,EAAGlD,QAAUe,E,CAExC0N,GAAgCvQ,EAEhC,IAAIkG,GAAUhF,EAAQ2B,IAAO,KAAQ0N,GACjC1T,WAAeqJ,KAClBpF,EAASoF,OAASA,E,EAKrBpP,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA3DAzD,OAAAC,eAAA0Z,EAAA,a,gDAAkC,0BAClC3Z,OAAAC,eAAA0Z,EAAA,c,gDAA0C9U,EAAmBH,WAAWC,OAAO,CAACgV,EAAsB/U,cCcjG,MAAOmV,WAAuBla,EAApCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,WACnE,CACFlE,IAAK,oBACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,uBACtCC,KAAM,WACN8D,QAAS,CAAC,SAAU,WAAY,cAAe,OAAQ,WAyEzD,CAtEQ9I,YACNG,KAAKY,WAAWJ,KAAK,kBACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,YACbC,OAAQ1H,KAAKC,IAAI,eACjB0H,UAAMC,IAER,CAEOC,mBACN,MAAM8R,EAAoB,oBACtB3Z,KAAKiI,QAAQ0R,KAChB3Z,KAAK4I,gBACL5I,KAAK6I,cAAc8Q,EAAmB3Z,KAAKC,IAAI0Z,KAGhD7Z,MAAM+H,kBACP,CAKOoB,cACN,GAAIjJ,KAAK6C,OAAQ,CAEhB,MAAMS,EAAYtD,KAAKC,IAAI,eAAeqD,UACpC4F,EAASlJ,KAAKC,IAAI,SAAU,IAC5B4E,EAAO7E,KAAKC,IAAI,qBAEtB,IAAImD,EAAmBpD,KAAKmJ,cAAc7F,GAE1C,OAAQuB,GACP,IAAK,SACJ7E,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,WACJlJ,KAAKqJ,KAAKjG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,cACJlJ,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,MACnC,MAED,IAAK,OACJlJ,KAAKuJ,MAAMnG,EAAM8F,EAAQ,UAAW,MACpC,MAED,IAAK,OACJlJ,KAAKwJ,MAAMpG,EAAM8F,EAAQ,UAAW,MAItCa,OAAY3G,GAAO4G,IAClB,MAAM+B,EAAK/B,EAAS+B,GACV,MAANA,IACH/B,EAAS4P,UAAY,KAAO5P,EAASgB,QAAUe,GAAMA,E,IAGvD/L,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EArGAzD,OAAAC,eAAA8Z,GAAA,a,gDAAkC,mBAClC/Z,OAAAC,eAAA8Z,GAAA,c,gDAA0Cla,EAAe6E,WAAWC,OAAO,CAACoV,GAAenV,cCVtF,MAAOsV,WAA0Bra,EAAvCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WACN8D,QAAS,CAAC,OAAQ,QAAS,MAAO,OAAQ,OAAQ,QAAS,SAAU,aA2DvE,CAxDQ9I,YACNG,KAAKY,WAAWJ,KAAK,qBACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,YACbE,UAAMC,IAER,CAKOqB,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEhB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAE9BtD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,UAAW,MAEnC,IAAIQ,EAAI,EAERK,OAAY3G,GAAO4G,IAClB,GAAIN,GAAKR,EAAS,EAAG,CACpB,IAAI6E,EAAO/D,EAAS+B,GAEhBiC,EAAS,EACb,IAAK,IAAIC,EAAIvE,EAAIR,EAAS,EAAG+E,GAAKvE,EAAGuE,IAAK,CACzC,IAAIC,EAAK5K,EAAU2K,GACfE,EAAUnO,KAAKqK,UAAU6D,GACd,MAAXC,IACHH,GAAU5G,KAAKgH,IAAID,EAAUJ,EAAM,G,CAIrC,IAAIM,EAAMjH,KAAKkH,KAAKN,EAAS9E,GAE7Bc,EAASiD,UAAYoB,C,CAEtB3E,GAAG,IAEJ1J,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EAlFAzD,OAAAC,eAAAia,GAAA,a,gDAAkC,sBAClCla,OAAAC,eAAAia,GAAA,c,gDAA0Cra,EAAe6E,WAAWC,OAAO,CAACuV,GAAkBtV,cCFzF,MAAOuV,WAAqBta,EAAlCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WA0DR,CAvDQhF,YACNG,KAAKY,WAAWJ,KAAK,gBACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,UACbE,UAAMC,IAER,CAKOqB,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEhB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAE1BoG,EAAI,EACJwK,EAAQ,EACR6F,EAAU,EACdhQ,OAAY3G,GAAO4G,IAClB,IAAII,EAAQJ,EAASgB,QACrB,GAAa,MAATZ,IACHV,IACAqQ,GAAW3P,EAAQlB,EAEfQ,GAAKR,GAAQ,CAChB,GAAIQ,EAAIR,EAAQ,CACf,IAAI8Q,EAAgB5W,EAAK8Q,EAAQhL,GAAQ8B,QACpB,MAAjBgP,IACHD,GAAWC,EAAgB9Q,E,CAG7Bc,EAAS+P,QAAUA,C,CAGrB7F,GAAO,IAGRlU,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA5EAzD,OAAAC,eAAAka,GAAA,a,gDAAkC,iBAClCna,OAAAC,eAAAka,GAAA,c,gDAA0Cta,EAAe6E,WAAWC,OAAO,CAACwV,GAAavV,cCSpF,MAAO0V,WAAaza,EAA1BE,c,oBAgBCC,OAAAC,eAAA,qB,yDAEAD,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,SACJ,CACFJ,IAAK,eACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,iBACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,gBACtCC,KAAM,YAGPlF,OAAAC,eAAA,kB,gDAA8B,QA2G/B,CAzGQkD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,OACbE,UAAMC,IAER,CAEU/H,YACTG,KAAKY,WAAWJ,KAAK,QAErBV,MAAMD,YAEN,MAAMO,EAAQJ,KAAKc,MAEnB,GAAIV,EAAO,CAEV,MAAM+R,EAAe/R,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACjEkH,YAAa,SACbC,YAAa,SACbhG,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZqG,mBAAmB,EACnBnI,UAAW,CAAC,YAAa,aAG1BX,KAAKmS,aAAeA,C,CAEtB,CAGOtK,mBACF7H,KAAKiI,QAAQ,kBAChBjI,KAAK4I,gBACL5I,KAAK6I,cAAc,eAAgB7I,KAAKC,IAAI,kBAE7CH,MAAM+H,kBACP,CAEO2D,kBACN1L,MAAM0L,kBAEFxL,KAAKiI,QAAQ,gBAChBjI,KAAKyL,mBAAmBzL,KAAKmS,aAAcnS,KAAKC,IAAI,eAAgB,eAGrE,MAAM+J,EAAWhK,KAAK6C,OAAOmH,SAC7B,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChBA,EAAYG,aAAezS,KAAKC,IAAI,gBACpC,MAAM0S,EAAc3S,KAAKC,IAAI,eACzB0S,IACHL,EAAYK,YAAcA,EAAY9F,W,EAI1C,CAKO5D,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEhB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAMI2U,EACAiC,EAPA9W,EAAOpD,KAAKmJ,cAAc7F,GAE9BtD,KAAKsJ,KAAKlG,EAAM8F,EAAQ,UAAW,OACnClJ,KAAKsJ,KAAKlG,EAAM8F,EAAQ,MAAO,QAC/BlJ,KAAKsJ,KAAKlG,EAAM8F,EAAQ,OAAQ,QAIhCa,OAAY3G,GAAO4G,IAClB,IAAII,EAAQJ,EAASmQ,KACjBlC,IACHiC,EAAgBjC,EAAiBkC,MAG9BpU,WAAeqE,IAAUrE,WAAemU,KAC3ClQ,EAASoQ,KAAO,KAAOhQ,EAAQ8P,GAAiBA,GAGjDjC,EAAmBjO,CAAQ,IAI5BhK,KAAK6C,OAAOO,KAAKf,OAAOe,GAGxB8F,EAASlJ,KAAKC,IAAI,eAAgB,GAClCD,KAAKoJ,KAAKhG,EAAM8F,EAAQ,OAAQ,UAEhClJ,KAAKmS,aAAa/O,KAAKf,OAAOe,E,CAEhC,EA7IAzD,OAAAC,eAAAqa,GAAA,a,gDAAkC,SAClCta,OAAAC,eAAAqa,GAAA,c,gDAA0Cza,EAAe6E,WAAWC,OAAO,CAAC2V,GAAK1V,cCb5E,MAAO8V,WAAoB7a,EAAjCE,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WA0DR,CAvDQhF,YACNG,KAAKY,WAAWJ,KAAK,eACrBV,MAAMD,WACP,CAEOiD,gBACN,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACxDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,SACbE,UAAMC,IAER,CAKOqB,cAGN,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEhB,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAAIF,EAAOpD,KAAKmJ,cAAc7F,GAE1BoG,EAAI,EACJwK,EAAQ,EACRoG,EAAS,EACbvQ,OAAY3G,GAAO4G,IAClB,IAAII,EAAQJ,EAASgB,QACrB,GAAa,MAATZ,IACHV,IACA4Q,GAAUlQ,EAAQlB,EAEdQ,GAAKR,GAAQ,CAChB,GAAIQ,EAAIR,EAAQ,CACf,IAAI8Q,EAAgB5W,EAAK8Q,EAAQhL,GAAQ8B,QACpB,MAAjBgP,IACHM,GAAUN,EAAgB9Q,E,CAG5Bc,EAASsQ,OAASA,C,CAGpBpG,GAAO,IAGRlU,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAE1B,EA5EAzD,OAAAC,eAAAya,GAAA,a,gDAAkC,gBAClC1a,OAAAC,eAAAya,GAAA,c,gDAA0C7a,EAAe6E,WAAWC,OAAO,CAAC+V,GAAY9V,cCGnF,MAAOgW,WAAe9a,IAA5BC,c,oBAaCC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACxD6E,IAAK,YACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,aACtCC,KAAM,UACJ,CACFJ,IAAK,QACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,UACJ,CACFJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAgKR,CA7JQgD,oBAEF7H,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,YAC7CjI,KAAKqS,YAAa,EAClBrS,KAAK6I,cAAc,YAAa7I,KAAKC,IAAI,cACzCD,KAAK6I,cAAc,QAAS7I,KAAKC,IAAI,WAGtCH,MAAM+H,kBACP,CAEUhI,YACTC,MAAMD,YAEN,MAAMK,EAAcF,KAAKC,IAAI,eACvBG,EAAQF,EAAYE,MAE1B,GAAIA,EAAO,CACV,MAAMyC,EAASzC,EAAMyC,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CAC3DkH,YAAa,OACbC,YAAa,SACbqB,mBAAmB,EACnBC,qBAAqB,EACrBtH,MAAOvB,EAAYD,IAAI,SACvBwC,MAAOvC,EAAYD,IAAI,SACvBU,UAAW,CAAC,YAAa,UACzB+D,KAAM,SACNiS,aAAa,KAEd9T,EAAOY,WAAW,kBAAmBvD,GACrCF,KAAK6C,OAASA,EAEd7C,KAAKgJ,cAAcnG,E,CAErB,CAMOoG,cACN,GAAIjJ,KAAK6C,OAAQ,CAChB,MAAMoK,EAAYjN,KAAKC,IAAI,YAAa,GAAK,IACvCC,EAAcF,KAAKC,IAAI,eACvBmD,EAAmB,GACzB,GAAIlD,EAAa,CAChB,MAAMoD,EAAYpD,EAAYoD,UAC9B,GAAIA,EAAUC,OAAS,EAAG,CACzB,IAQIiX,EACAC,EATAC,EAAgBpX,EAAU,GAE1BqX,GAAS,EACT9Q,EAAY6Q,EAAcza,IAAI,SAAU,GACxC2a,EAAaF,EAAcza,IAAI,UAC/B4a,EAAYH,EAAcza,IAAI,aAAc2a,GAC5CE,EAAWJ,EAAcza,IAAI,YAAa2a,GAK1C3M,EAAI,EACR,IAAK,IAAIvE,EAAI,EAAGE,EAAMtG,EAAUC,OAAQmG,EAAIE,EAAKF,IAAK,CACrD,IAAIM,EAAW1G,EAAUoG,GACrBU,EAAQJ,EAAS/J,IAAI,QAAS,GAC9BuN,EAAMxD,EAAS/J,IAAI,YAAamK,GAChCqD,EAAOzD,EAAS/J,IAAI,aAAcmK,GAClC2Q,EAAO/Q,EAAS/J,IAAI,SAAU,GAElC,GAAIuN,GAAO3B,OAAOgP,IAAc,EAAI5N,GAAY,CAC/C7J,EAAK5C,KAAK,CAAEua,KAAMlR,EAAWmR,OAAQH,IACrCL,EAAaO,EACbN,EAAcjN,EACdmN,GAAS,EACT1M,EAAIvE,EACJ,K,CAEI,GAAI+D,GAAQ5B,OAAOiP,IAAa,EAAI7N,GAAY,CACpD7J,EAAK5C,KAAK,CAAEua,KAAMlR,EAAWmR,OAAQF,IACrCN,EAAaO,EACbN,EAAchN,EACdkN,GAAS,EACT1M,EAAIvE,EACJ,K,EAGF,GAAmB,MAAf+Q,EAAqB,CACxB,IAAIQ,EAAQjb,KAAKC,IAAI,QAAS,GAC9B,IAAK,IAAIyJ,EAAIuE,EAAI,EAAGrE,EAAMtG,EAAUC,OAAQmG,EAAIE,EAAKF,IAAK,CACzD,IAAIM,EAAW1G,EAAUoG,GACrBU,EAAQJ,EAAS/J,IAAI,QAAS,GAC9BuN,EAAMxD,EAAS/J,IAAI,YAAamK,GAChCqD,EAAOzD,EAAS/J,IAAI,aAAcmK,GAClC2Q,EAAO/Q,EAAS/J,IAAI,SAAU,GAElC,GAAI0a,GACH,GAAInN,GAAOiN,EACVA,EAAcjN,EACdgN,EAAaO,OAET,GAAItN,GAAQgN,GAAe,EAAIxN,GAAY,CAC/C,IAAIiO,EAAI9T,KAAK+J,IAAI,EAAGzH,EAAIuR,GACpBE,GAAO,EACX,IAAK,IAAI9J,EAAI3H,EAAG2H,EAAI6J,EAAG7J,IACtB,GAAI5D,EAAOnK,EAAU+N,GAAGpR,IAAI,cAAe,CAC1Ckb,GAAO,EACP,K,CAGGA,IACJ/X,EAAK5C,KAAK,CAAEua,KAAMP,EAAYQ,OAAQP,IACtCA,EAAchN,EACd+M,EAAaO,EACbJ,GAAS,E,OAKX,GAAIlN,GAAQgN,EACXA,EAAchN,EACd+M,EAAaO,OAET,GAAIvN,GAAOiN,GAAe,EAAIxN,GAAY,CAC9C,IAAIiO,EAAI9T,KAAK+J,IAAI,EAAGzH,EAAIuR,GACpBE,GAAO,EACX,IAAK,IAAI9J,EAAI3H,EAAG2H,EAAI6J,EAAG7J,IACtB,GAAI7D,EAAMlK,EAAU+N,GAAGpR,IAAI,aAAc,CACxCkb,GAAO,EACP,K,CAGGA,IACJ/X,EAAK5C,KAAK,CAAEua,KAAMP,EAAYQ,OAAQP,IACtCA,EAAcjN,EACdgN,EAAaO,EACbJ,GAAS,E,EAMb,MAAMS,EAAe9X,EAAUA,EAAUC,OAAS,GAClD,IAAIuG,EAAWsR,EAAanb,IAAI,SAAU,GACtCob,EAAYD,EAAanb,IAAI,UAC7Bqb,EAAWF,EAAanb,IAAI,aAAcob,GAC1CE,EAAUH,EAAanb,IAAI,YAAaob,GAExCZ,EAAca,EACjBlY,EAAK5C,KAAK,CAAEua,KAAMjR,EAAUkR,OAAQO,IAGpCnY,EAAK5C,KAAK,CAAEua,KAAMjR,EAAUkR,OAAQM,G,EAIvCtb,KAAK6C,OAAOO,KAAKf,OAAOe,E,EAG3B,EAtLAzD,OAAAC,eAAA2a,GAAA,a,gDAAkC,WAClC5a,OAAAC,eAAA2a,GAAA,c,gDAA0C9a,IAAU4E,WAAWC,OAAO,CAACiW,GAAOhW,cCNzE,MAAOiX,WAAyBhc,EAAtCE,c,oBAaIC,OAAAC,eAAA,0B,gDAAwD,CAAC,CACrD6E,IAAK,SACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,UACtCC,KAAM,UACP,CACCJ,IAAK,cACLC,KAAM1E,KAAKK,KAAKsE,SAASC,aAAa,SACtCC,KAAM,WAqFd,CAlFWhF,YACHG,KAAKY,WAAWJ,KAAK,oBACrBV,MAAMD,WACV,CAEOiD,gBACH,OAAO9C,KAAKc,MAAM+B,OAAOrC,KAAK+G,IAAW7G,IAAIV,KAAKM,MAAO,CACrDK,UAAW,CAAC,aACZc,MAAOzB,KAAKyB,MACZgB,MAAOzC,KAAKyC,MACZ+E,YAAa,SACbC,YAAa,MACbE,UAAMC,IAEd,CAEUuB,cAAc7F,GACpB,MAAMF,EAAmB,GAIzB,OAHA2G,OAAYzG,GAAY0G,IACpB5G,EAAK5C,KAAK,CAAE0J,OAAQF,EAAS/J,IAAI,UAAWwb,YAAazR,EAAS/J,IAAI,UAAWyb,WAAY1R,EAAS/J,IAAI,cAAe0b,UAAW3R,EAAS/J,IAAI,cAAe,IAE7JmD,CACX,CAKO6F,cAGH,GAFAnJ,MAAMmJ,cAEFjJ,KAAK6C,OAAQ,CAEb,IAAIqG,EAASlJ,KAAKC,IAAI,SAAU,IAChC,MACMqD,EADctD,KAAKC,IAAI,eACCqD,UAE9B,IAKIsY,EACAC,EANAzY,EAAOpD,KAAKmJ,cAAc7F,GAE1BoG,EAAI,EACJwK,EAAQ,EACRhD,EAAK,EAITnH,OAAY3G,GAAO4G,IAEf,IAAI8R,EAAa9R,EAASyR,YAE1B,GAAkB,MAAdK,GAAmC,MAAbF,IACtBlS,IACAwH,EAAK9J,KAAK+J,IAAInH,EAAS0R,WAAa1R,EAAS2R,UAAWvU,KAAK4H,IAAIhF,EAAS0R,WAAaE,GAAYxU,KAAK4H,IAAIhF,EAAS2R,UAAYC,IACjI5R,EAASkH,GAAKA,EAEVxH,GAAKR,GAAQ,CACb,GAAIQ,GAAKR,EAAQ,CACb,IAAIkP,EAAM,EACN/G,EAAI,EACR,IAAK,IAAIpD,EAAIiG,EAAOjG,GAAK,IACrBmK,GAAOhV,EAAK6K,GAAGiD,GACfG,IACIA,GAAKnI,GAHe+E,KAO5BjE,EAAS+R,IAAM3D,EAAMlP,C,MAGN,MAAX2S,IACA7R,EAAS+R,KAAOF,GAAW3S,EAAS,GAAKgI,GAAMhI,GAIvD2S,EAAU7R,EAAS+R,G,CAG3BH,EAAYE,EACZ5H,GAAO,IAGXlU,KAAK6C,OAAOO,KAAKf,OAAOe,E,CAEhC,EAvGAzD,OAAAC,eAAA4b,GAAA,a,gDAAkC,qBAClC7b,OAAAC,eAAA4b,GAAA,c,gDAA0Chc,EAAe6E,WAAWC,OAAO,CAACkX,GAAiBjX,c,8ECiF3F,MAAOyX,WAAsBzU,IAAnC7H,c,oBAQCC,OAAAC,eAAA,iB,yDACAD,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,gB,yDACAD,OAAAC,eAAA,c,yDAEAD,OAAAC,eAAA,wB,iDAAqC,IAErCD,OAAAC,eAAA,2B,yDACAD,OAAAC,eAAA,0B,yDAEAD,OAAAC,eAAA,mB,iDAAgC,IAChCD,OAAAC,eAAA,uB,iDAAoC,IAEpCD,OAAAC,eAAA,e,gDAAwB,IACxBD,OAAAC,eAAA,mB,yDAEAD,OAAAC,eAAA,Y,gDAA8E,KAE9ED,OAAAC,eAAA,qB,gDAAiC,IACjCD,OAAAC,eAAA,oB,gDAAgC,IAEhCD,OAAAC,eAAA,c,gDAAkE,KAClED,OAAAC,eAAA,a,gDAAiE,KAEjED,OAAAC,eAAA,iB,iDAA8B,IAE9BD,OAAAC,eAAA,wB,iDAAqC,IAErCD,OAAAC,eAAA,a,yDAEAD,OAAAC,eAAA,mB,gDAA+B,CAAE4W,EAAG,EAAG1Q,EAAG,KAE1CnG,OAAAC,eAAA,0B,gDAAyCI,KAAKiD,SAASzC,KAAKyb,KAAUvb,IAAIV,KAAKK,KAAM,CAAC,MAEtFV,OAAAC,eAAA,kB,gDAAqC,KAErCD,OAAAC,eAAA,qB,iDAAkC,IAGlCD,OAAAC,eAAA,gB,gDAA4B,IAE5BD,OAAAC,eAAA,c,gDAAiDI,KAAKe,YAAY,IAAImb,KACrEC,KAASzb,IAAI,CAAC,IACd,IAAMub,KAAUG,KAAKpc,KAAKM,MAAO,CAChCK,UAAW,CAAC,QACZ0b,oBAAoB,EACpBC,WAAW,GACT,CAACtc,KAAKuc,MAAM7V,gBAGhB/G,OAAAC,eAAA,gB,gDAAgDI,KAAKe,YAAY,IAAImb,KACpEC,KAASzb,IAAI,CAAC,IACd,IAAM8b,KAAOJ,KAAKpc,KAAKM,MAAO,CAAC,EAC5B,CAACN,KAAKyc,QAAQ/V,gBAGlB/G,OAAAC,eAAA,qB,gDAAqDI,KAAKe,YAAY,IAAImb,KACzEC,KAASzb,IAAI,CAAC,IACd,IAAM8b,KAAOJ,KAAKpc,KAAKM,MAAO,CAC7BK,UAAW,CAAC,YACV,CAACX,KAAK0c,aAAahW,gBAGvB/G,OAAAC,eAAA,kB,gDAAqDI,KAAKe,YAAY,IAAImb,KACzEC,KAASzb,IAAI,CAAC,IACd,IAAMic,KAAUP,KAAKpc,KAAKM,MAAO,CAChCK,UAAW,CAAC,aACV,CAACX,KAAK4c,UAAUlW,eAwuCrB,CAruCW7G,YACTG,KAAKa,OAAO,WACZb,KAAKyD,WAAW,mBAAmB,GAE/BzD,KAAK6c,MACR7c,KAAKa,OAAOb,KAAK6c,MAGlB7c,KAAKiC,IAAI,cAAe,UACxBjC,KAAKiC,IAAI,cAAe,UAExBnC,MAAMD,YAENG,KAAKiC,IAAI,WAAW,GACpBjC,KAAKiC,IAAI,eAAgBwI,KACzBzK,KAAKiC,IAAI,gBAAgB,GACzBjC,KAAKiC,IAAI,qBAAqB,GAE9B,MAAM6a,EAAkB9c,KAAKyI,QAAQ/B,SACrCoW,EAAgB7a,IAAI,gBAAiB,UAErC,MAAM8a,EAAgB/c,KAAKyG,MAAMC,SACjCqW,EAAc1a,OAAO,CAAE2a,cAAe,SAEtCD,EAAc/b,OAAOC,GAAG,eAAgBC,IACvC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QAC/B,GAAI/W,KAAKkd,gBACRld,KAAKmd,cAAcjJ,OAEf,EACkBhT,EAAEkc,cACLnW,QAAUjH,KAAKqd,iBACjCrd,KAAKsd,mBAAmBpc,E,CAI1B,MAAMwG,EAAS1H,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgBtJ,IACtDxM,GACHA,EAAO+V,UAAUvc,E,IAInB6b,EAAc/b,OAAOC,GAAG,aAAcC,IACrClB,KAAK0d,cAAcxc,EAAGlB,KAAKid,UAAU/b,EAAE6V,QAAQ,IAGhDgG,EAAc/b,OAAOC,GAAG,SAAUC,IACjC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QACzBqG,EAAgBlc,EAAEkc,cACnBpd,KAAK2d,YACT3d,KAAK4d,eAAe1J,EAAOkJ,EAAcS,Q,IAI3Cd,EAAc/b,OAAOC,GAAG,YAAaC,IACpC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QAC/B/W,KAAK8d,aAAa5c,EAAGgT,EAAM,IAG5B6I,EAAc/b,OAAOC,GAAG,eAAgBC,IACvC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QACzBrP,EAAS1H,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgBtJ,IACtDxM,GACHA,EAAOyP,QAERnX,KAAK+d,UAAW,EAChB/d,KAAKge,oBAAoB9J,EAAM,IAGhC6I,EAAc/b,OAAOC,GAAG,cAAc,KACrCjB,KAAK+d,UAAW,CAAK,IAKtBjB,EAAgB9b,OAAOC,GAAG,eAAgBC,IACzC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QAE3B/W,KAAKkd,iBACRld,KAAKmd,cAAcjJ,E,IAIrB4I,EAAgB9b,OAAOC,GAAG,SAAUC,IACnC,MAAMgT,EAAQlU,KAAKid,UAAU/b,EAAE6V,QACzBqG,EAAgBlc,EAAEkc,cACxBpd,KAAK4d,eAAe1J,EAAOkJ,EAAcS,QAAQ,IAGlDf,EAAgB9b,OAAOC,GAAG,eAAgBC,IACzClB,KAAK+d,UAAW,EAChB/d,KAAKge,oBAAoBhe,KAAKid,UAAU/b,EAAE6V,QAAQ,IAGnD+F,EAAgB9b,OAAOC,GAAG,cAAc,KACvCjB,KAAK+d,UAAW,CAAK,IAItBjB,EAAgB9b,OAAOC,GAAG,YAAaC,IACtClB,KAAK8d,aAAa5c,EAAGlB,KAAKid,UAAU/b,EAAE6V,QAAQ,IAG/C+F,EAAgB9b,OAAOC,GAAG,aAAcC,IACvClB,KAAK0d,cAAcxc,EAAGlB,KAAKid,UAAU/b,EAAE6V,QAAQ,IAGhD/W,KAAKie,iBAAiBzR,OAAOC,OAAO,SAAU,CAAEpH,SAAS,EAAM6Y,QAAS,IAExEle,KAAKme,QAAQ3d,MAAK,CAACF,EAAO8d,EAASpU,KAClC,MACMkK,EADclK,EAASsI,YACH4B,MACpBhG,EAAKlO,KAAKqe,IAAInK,GAAU,EAC9B,IAAI1L,EAAQxI,KAAKC,IAAI,cAAeD,KAAKC,IAAI,WAE7C,GAAIiO,EAAI,CACP,MAAMoQ,EAAKpQ,EAAGoE,YACd,GAAIgM,EAAI,CACP,MAAMC,EAAiBD,EAAG5W,OACtB6W,IACH/V,EAAQ+V,EAAete,IAAI,U,EAK9B,MAAMue,EAAYxe,KAAKuc,MAAMkC,OAC7BD,EAAUjP,OAAO,WAAY,QAC7BvP,KAAKuc,MAAM/b,KAAKge,GAEhB,MAAME,EAASF,EAAUvb,SAASzC,KAAKR,KAAKyc,QAAQgC,QACpDze,KAAKyc,QAAQjc,KAAKke,GAClBA,EAAOzc,IAAI,SAAUuG,GAErB,MAAMmW,EAAcH,EAAUvb,SAASzC,KAAKR,KAAK0c,aAAa+B,QAmB9D,OAlBAze,KAAK0c,aAAalc,KAAKme,GACvBA,EAAY1c,IAAI,SAAUuG,GAE1BgW,EAAUxd,OAAOC,GAAG,eAAgB2d,IACnC,MAAM5U,EAAW4U,EAAM7H,OAAO/M,SAC9B,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YAC7BtS,KAAKge,oBAAoB1L,EAAY4B,M,KAQvClU,KAAK6e,sBAAsBL,GAC3Bxe,KAAK8e,aAAaN,EAAWxU,GAEtB+U,KAAOre,IAAIV,KAAKM,MAAO,CAC7B0e,eAAWpX,EACXtB,OAAQkY,GACP,IAGHxe,KAAKgB,OAAOC,GAAG,eAAe,KAC7BjB,KAAKif,oBAAoB,IAG1Bjf,KAAKgB,OAAOC,GAAG,cAAc,KAC5BjB,KAAKkf,mBAAmB,IAGzBlf,KAAKmf,iBAAiBC,aAAa,0BAEpC,CAQOC,aAAanL,GACnBlU,KAAKmd,cAAcjJ,EACpB,CAUOqJ,SAAS+B,GACf,IAAIpL,EAAQ,KAYZ,OAXAnK,eAAoB/J,KAAKsD,WAAY0G,IACpC,MAAMsI,EAActI,EAASsI,YAC7B,OAAIA,EAAYiN,WAAaD,IAC5BpL,EAAQ5B,EAAY4B,OACb,E,IAOFA,CACR,CAEUiJ,cAAcjJ,GACvB,MAAM5Q,EAAYtD,KAAKqe,IAAInK,GAE3B,GAAI5Q,EAAW,CACd,IAAIic,EACArL,EAEJsL,QAAalc,GAAW,CAACmc,EAAMzV,KAC9B,MAAMsI,EAActI,EAASsI,YAC7BtS,KAAKoD,KAAK/B,YAAYiR,GAElBA,IACCA,EAAYiN,YACfA,EAAYjN,EAAYiN,WAErBjN,EAAY4B,QACfA,EAAQ5B,EAAY4B,O,IAKvB,IAAK,IAAIxK,EAAI1J,KAAKsD,UAAUC,OAAS,EAAGmG,GAAK,EAAGA,IAAK,CACpD,MAAMM,EAAWhK,KAAKsD,UAAUoG,GAC1B4I,EAActI,EAASsI,YACzBA,EAAY4B,OAASA,IACxBlU,KAAKoD,KAAK/B,YAAYiR,GACtBtS,KAAK0f,gBAAgB1V,G,CAIvBhK,KAAK2f,QAAU,SACR3f,KAAKqe,IAAInK,GAEhBlU,KAAK4f,oBAAoB,iBAAkBL,EAAWrL,E,CAEvD,MAAM2L,EAAW7f,KAAK8f,WAAW9f,KAAK4c,UAAW1I,GAC7C2L,GACH7f,KAAK4c,UAAUvb,YAAYwe,GAG5B9V,SAAc/J,KAAK+f,UAAW7L,EAC/B,CAEU8L,mBACTjW,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YACvB4B,EAAQ5B,EAAY4B,MACpB+L,EAAS3N,EAAY2N,YAEdrY,GAATsM,SACoBtM,GAAnB5H,KAAKqe,IAAInK,KACZlU,KAAKqe,IAAInK,GAAS,CAAC,GAEpBlU,KAAKkgB,gBAAgBhM,EAAOlK,GAC5BhK,KAAKqe,IAAInK,GAAO+L,GAAUjW,EAC1BhK,KAAKmgB,OAASjM,E,GAGjB,CAEUgM,gBAAgBC,EAAgBC,GAE1C,CAEOC,cACNvgB,MAAMugB,cACNrgB,KAAKsgB,cAAe,CACrB,CAEOC,gBACNxW,OAAY/J,KAAKqe,KAAK,CAACmC,EAAYtM,KAClClU,KAAKmd,cAAcjJ,EAAM,IAG1BlU,KAAKoD,KAAKf,OAAO,IACjBrC,KAAKmgB,OAAS,EACdngB,KAAK+f,UAAY,EAClB,CAEU9C,UAAU3W,GACnB,MAAMma,EAAWna,EAAOrG,IAAI,YAE5B,GAAIwgB,GAAYA,EAASld,OAAS,EAAG,CACpC,MAAMyG,EAAWhK,KAAKsD,UAAUmd,EAAS,IAEzC,GAAIzW,EAAU,CACb,MAAMsI,EAActI,EAASsI,YAE7B,GAAIA,EACH,OAAOA,EAAY4B,K,EAItB,OAAO,CACR,CAEUsJ,gBAAgBtJ,GACzB,IAAIxK,EAAI,EACJ+G,EAAIyD,EAQR,OAPAlU,KAAKyI,QAAQ2Q,MAAM1R,IACE1H,KAAKid,UAAUvV,IAChBwM,IAClBzD,EAAI/G,GAELA,GAAG,IAEG+G,CACR,CAEOiQ,eAAetW,GACrBpK,KAAKyI,QAAQ/B,SAASzE,IAAI,iBAAkBmI,GAC5CpK,KAAKyG,MAAMC,SAASzE,IAAI,iBAAkBmI,EAK3C,CAEOuW,uBAAuBvW,GAC7BpK,KAAKkd,iBAAkB,EACvBld,KAAKyI,QAAQ/B,SAASzE,IAAI,iBAAkBmI,GAC5CpK,KAAKyG,MAAMC,SAASzE,IAAI,iBAAkBmI,EAC3C,CAEU4T,oBAAoB9J,GAC7B,MAAM5Q,EAAYtD,KAAKqe,IAAInK,GACvB5Q,GACHkc,QAAalc,GAAW,CAACmc,EAAMzV,KAC9B,MAAMmU,EAAUnU,EAASmU,QACrBA,GACHpU,OAAYoU,GAAUyC,IACrB,MAAMta,EAASsa,EAAO3gB,IAAI,UACtBqG,GACHA,EAAOlC,KAAK,E,MAMlB,CAEUyc,aAAava,GACtB,MAAMwa,EAAgB9gB,KAAKmf,iBAAiB2B,cAC5C,GAAIA,EAAe,CAClB,MAAMC,EAAgBD,EAAc7gB,IAAI,UACpC8gB,IACEza,GAAUA,EAAO0D,UAAY+W,EAAc/W,UAC/C8W,EAAc7e,IAAI,cAAU2F,G,CAIhC,CAKO8V,cAAckB,EAA4B1K,GAChD,MAAMnU,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWihB,kBAAkBpC,IAGQ,GAAlC5e,KAAK+f,UAAU9I,QAAQ/C,IAC1BlU,KAAKihB,sBAGNjhB,KAAKkhB,qBAAqBtC,EAAO1K,EAClC,CAKO4J,aAAac,EAA4B1K,GAC/C,MAAMnU,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWohB,iBAAiBvC,GAE7B5e,KAAKohB,oBAAoBxC,EAAO1K,EACjC,CAEUgN,qBAAqBtC,EAA4B1K,GAC1DlU,KAAK6gB,aAAajC,EAAM7H,QACxB/W,KAAKqhB,gBAAiB,EACtB,MAAMjhB,EAAQJ,KAAKI,MACnB,GAAIA,EAAO,CACV,MAAMqB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBqhB,EAAQlhB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAEhDthB,KAAKwhB,aAAe/f,EAAMggB,qBAAqBH,EAAM9K,GACrD,MAAMkL,EAAWjgB,EAAM6F,gBAAgBtH,KAAKwhB,cAC5CxhB,KAAK2hB,YAAc3hB,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAK4b,GAE/F,MAAMpe,EAAYtD,KAAKqe,IAAInK,GAC3BlU,KAAK6hB,MAAM3N,GAAS,CAAC,EACrBlU,KAAK8hB,KAAK5N,GAAS,CAAC,EAEhB5Q,GACHkc,QAAalc,GAAW,CAACmB,EAAKuF,KAC7BhK,KAAK6hB,MAAM3N,GAAOzP,GAAOhD,EAAMsgB,gBAAgB/X,EAAS/J,IAAI,SAAU,IACtED,KAAK8hB,KAAK5N,GAAOzP,GAAOuF,EAAS/J,IAAI,SAAS,G,CAIlD,CAEO+hB,WAAWpD,GACjB7U,OAAY/J,KAAK+f,WAAY7L,IAC5BlU,KAAKkhB,qBAAqBtC,EAAO1K,EAAM,GAEzC,CAEO+N,UAAUrD,GAChB7U,OAAY/J,KAAK+f,WAAY7L,IAC5BlU,KAAKohB,oBAAoBxC,EAAO1K,EAAM,GAExC,CAEUkN,oBAAoBxC,EAA4B1K,GACzDlU,KAAKqhB,gBAAiB,EAEtB,MAAMjhB,EAAQJ,KAAKI,MACnB,GAAIA,EAAO,CACV,MAAMkhB,EAAQlhB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAE1C7f,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBiiB,EAAOzgB,EAAMggB,qBAAqBH,EAAM9K,GACxCkL,EAAWjgB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,IAClEjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAK4b,GAErFS,EAAMD,EAAOliB,KAAKwhB,aAClBY,EAAK7X,EAASvK,KAAK2hB,YAEzB/C,EAAM7H,OAAO1U,OAAO,CACnBmU,EAAG,EAAG1Q,EAAG,IAGV,MAAMxC,EAAYtD,KAAKqe,IAAInK,GAEvB5Q,GACHkc,QAAalc,GAAW,CAACmB,EAAKuF,KAC7B,MAAMqY,EAAOriB,KAAK6hB,MAAM3N,GAAOzP,GACzB6d,EAAMtiB,KAAK8hB,KAAK5N,GAAOzP,GAE7B,GAAIsB,WAAesc,IAAStc,WAAeuc,GAAM,CAChD,MAAMC,EAAMF,EAAOF,EACbK,EAAO/gB,EAAM6F,gBAAgBib,GAC7BE,EAAKziB,KAAK0iB,WAAWF,GAE3B,IAAIG,EAAKL,EAAMF,EACf,MACMQ,EADQ5iB,KAAKC,IAAI,SACD8V,WAAW,oBAAqB,GAAK,EAC3D4M,EAAK3c,QAAY2c,EAAIC,GACrBD,EAAK3iB,KAAK4hB,WAAWe,EAAIH,GAAM,GAE/BxiB,KAAK6iB,YAAY7Y,EAAU,SAAUyY,GACrCziB,KAAK6iB,YAAY7Y,EAAU,SAAU2Y,GAAI,GAEzC3iB,KAAK8iB,cAAc9Y,EAAUyY,GAC7BziB,KAAK+iB,iBAAiB/Y,E,KAM1B,MAAMtC,EAAS1H,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgBtJ,IACtDxM,GACHA,EAAOsb,SAASpE,GAGjB5e,KAAKijB,YACLjjB,KAAKkjB,eAAehP,EACrB,CAEUgP,eAAe/C,GACxBngB,KAAKmjB,iBACN,CAEO3X,kBACNxL,KAAKmjB,mBAEDnjB,KAAKiI,QAAQ,gBAAkBjI,KAAKiI,QAAQ,kBAAoBjI,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,iBACnH8B,OAAY/J,KAAK+f,WAAYrW,IAE5B,IAAI0Z,EAAW,CACd1b,OAAQ1H,KAAKC,IAAI,eACjBojB,cAAerjB,KAAKC,IAAI,iBACxBqjB,gBAAiBtjB,KAAKC,IAAI,mBAC1BsjB,YAAavjB,KAAKC,IAAI,gBAGvB,MAAMyH,EAAS1H,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgB9T,IAC1D,GAAIhC,EAAQ,CACX,IAAI6W,EACJxU,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YACzBA,EAAY4B,OAASxK,GACpB4I,EAAY5K,SACf6W,EAAiBjM,EAAY5K,O,IAKhC,MAAM8b,EAAe9b,EAAO8E,OAAOiX,OAAO,WAC1CjE,QAAa4D,GAAU,CAAC3e,EAAK2F,KAC5B1C,EAAOzF,IAAIwC,EAAK2F,GAChBoZ,EAAavhB,IAAIwC,EAAK2F,GAClBmU,GACHA,EAAetc,IAAIwC,EAAK2F,E,IAK3BpK,KAAKyc,QAAQrD,MAAMsF,IAClB,MAAM1U,EAAW0U,EAAO1U,SACxB,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YACzBA,GACCA,EAAY4B,OAASxK,IACxBgV,EAAOzc,IAAI,SAAUmhB,EAAS1b,QAC9BgX,EAAOlS,OAAOiX,OAAO,WAAYxhB,IAAI,SAAUmhB,EAAS1b,Q,KAM5D1H,KAAK0c,aAAatD,MAAMsF,IACvB,MAAM1U,EAAW0U,EAAO1U,SACxB,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YACzBA,GACCA,EAAY4B,OAASxK,IACxBgV,EAAOzc,IAAI,SAAUmhB,EAAS1b,QAC9BgX,EAAOlS,OAAOiX,OAAO,WAAYxhB,IAAI,SAAUmhB,EAAS1b,Q,KAO5D1H,KAAK0jB,eAAeha,EAAG0Z,EAAS,KAI9BpjB,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,iBAC7C8B,OAAY/J,KAAK+f,WAAYrW,IAC5B,MAAM/B,EAAO3H,KAAKyG,MAAM8W,SAASvd,KAAKwd,gBAAgB9T,IAEtD,IAAI0Z,EAAW,CACdzb,KAAM3H,KAAKC,IAAI,aACfsX,YAAavX,KAAKC,IAAI,gBAGvB,GAAI0H,EAAM,CACT,IAAIgc,EACJ5Z,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YACzBA,EAAY4B,OAASxK,GACpB4I,EAAY3K,OACfgc,EAAerR,EAAY3K,K,IAK9B,MAAM6b,EAAe7b,EAAK6E,OAAOiX,OAAO,WACxCjE,QAAa4D,GAAU,CAAC3e,EAAK2F,KAC5BzC,EAAK1F,IAAIwC,EAAK2F,GACdoZ,EAAavhB,IAAIwC,EAAK2F,GAClBuZ,GACHA,EAAa1hB,IAAIwC,EAAK2F,E,IAKzBpK,KAAK0jB,eAAeha,EAAG0Z,EAAS,IAI9BpjB,KAAK4jB,cACR5jB,KAAK6jB,oBAGN/jB,MAAM0L,kBACNxL,KAAK8jB,kBACN,CAMOC,UAAU3Z,GAChBpK,KAAK2d,WAAavT,EAClB,MAAMrK,EAAaC,KAAKmf,iBACpBpf,GACCqK,IACHrK,EAAWikB,gBAAkBjkB,EAAWE,IAAI,2BAA2B,GACvEF,EAAWkC,IAAI,2BAA2B,GAG7C,CAEUyhB,eAAevD,EAAgB8D,GACxCjkB,KAAK6jB,mBACN,CAEUV,kBAEV,CAEOU,oBACN,MAAM9jB,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAW8jB,mBAEb,CAEUK,mBACT,MAAMP,EAAoB,CAAC,EAErBQ,EAAYnkB,KAAKC,IAAI,aACV,MAAbkkB,IACHR,EAAahc,KAAOwc,GAGrB,MAAM5M,EAAcvX,KAAKC,IAAI,eAK7B,OAJmB,MAAfsX,IACHoM,EAAapM,YAAcA,GAGrB4E,KAASzb,IAAIijB,EACrB,CAEUS,qBACT,MAAM7F,EAAsB,CAAC,EAEvB8F,EAAcrkB,KAAKC,IAAI,eACV,MAAfokB,IACH9F,EAAe7W,OAAS2c,GAGzB,MAAMhB,EAAgBrjB,KAAKC,IAAI,iBACV,MAAjBojB,IACH9E,EAAe8E,cAAgBA,GAGhC,MAAMC,EAAkBtjB,KAAKC,IAAI,mBACV,MAAnBqjB,IACH/E,EAAe+E,gBAAkBA,GAGlC,MAAMC,EAAcvjB,KAAKC,IAAI,eAK7B,OAJmB,MAAfsjB,IACHhF,EAAegF,YAAcA,GAGvBpH,KAASzb,IAAI6d,EACrB,CAEUO,aAAawF,EAAuBlE,GAE9C,CAEUR,oBAAoB/a,EAAW0a,EAAoBrL,GAC5D,MAAMnU,EAAaC,KAAKmf,iBAEZ,gBAARta,GACC9E,EAAWikB,iBACdjkB,EAAWkC,IAAI,2BAA2B,GAIxClC,GAAcA,EAAWiB,OAAOujB,UAAU1f,IAC7C9E,EAAWiB,OAAOwjB,SAAS3f,EAAM,CAAE0a,UAAWA,EAAW1c,OAAQ7C,KAAM+W,OAAQhX,EAAYmU,MAAOA,GAEpG,CAEU2K,sBAAsBvY,GAC/BA,EAAOtF,OAAOC,GAAG,WAAYC,IAC5BlB,KAAKykB,qBAAqBvjB,GAC1BlB,KAAK0kB,aAAc,CAAI,IAGxBpe,EAAOtF,OAAOC,GAAG,aAAcC,IAC9BlB,KAAK2kB,uBAAuBzjB,EAAE,IAG/BoF,EAAOtF,OAAOC,GAAG,YAAaC,IAC7BlB,KAAK4kB,sBAAsB1jB,GAC3BlB,KAAK6kB,YAAW,KACf7kB,KAAK0kB,aAAc,CAAK,GACtB,IAAI,IAGRpe,EAAOtF,OAAOC,GAAG,SAAUC,IAC1B,MAAM8I,EAAW9I,EAAE6V,OAAO/M,SAC1B,GAAIA,EAAU,CACb,MAAMsI,EAActI,EAASsI,YACzBtS,KAAKkd,gBACJ5K,GACHtS,KAAKmd,cAAc7K,EAAY4B,OAI3BlU,KAAK2d,WAIT3d,KAAK8kB,oBAAoB5jB,GAHzBlB,KAAK4d,eAAetL,EAAY4B,MAAQhT,EAAEkc,cAAsBS,Q,IAQrE,CAEOkH,iBACN/kB,KAAKmgB,SACLngB,KAAKglB,WAAahlB,KAAKilB,aACxB,CAEOA,cACN,MAAO,IAAK,IAAIC,MAAOC,UAAY/d,KAAKC,MAAsB,IAAhBD,KAAKge,SAAmB,IACvE,CAEUN,oBAAoBlG,GAC7B,GAAI5e,KAAKqd,gBAAiB,CACzB,MAAMjd,EAAQJ,KAAKI,MACfA,IACHJ,KAAKqlB,mBAAqBjlB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,O,CAG/D,CAGOgE,yBACNtlB,KAAKiD,SAASsiB,UAAUvlB,KAAKie,kBAC7Bje,KAAKwlB,gBACLxlB,KAAKylB,gBACN,CAEUhB,qBAAqB7F,GAC9B,MAAM5U,EAAW4U,EAAM7H,OAAO/M,SAG9B,GADchK,KAAKI,MACR,CACV,MAAM2W,EAAS6H,EAAM7H,OACfuK,EAAQ,CAAE9K,EAAGO,EAAOP,IAAK1Q,EAAGiR,EAAOjR,KACzC9F,KAAK0lB,yBAAyB1b,EAAUsX,E,CAGzC,MAAMhP,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MAC1BlU,KAAKkjB,eAAehP,E,CAEtB,CAEUwR,yBAAyB1b,EAA+CsX,GACjF,MAAM7f,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjByhB,EAAWjgB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,IAClEtM,EAASlK,KAAK0iB,WAAWhB,GACzBnX,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAK4b,GAE3F1hB,KAAK6iB,YAAY7Y,EAAU,SAAUE,GACrClK,KAAK6iB,YAAY7Y,EAAU,SAAUO,GAAQ,GAC7CvK,KAAK8iB,cAAc9Y,EAAUE,GAE7BlK,KAAK+iB,iBAAiB/Y,EACvB,CAEU2a,uBAAuBgB,GAChC3lB,KAAK6gB,eACL7gB,KAAKihB,qBACN,CAEU2D,sBAAsBe,GAEhC,CAEU1G,qBAEV,CAEUC,oBAEV,CAEOsG,gBACN,MAAMplB,EAAQJ,KAAKI,MACnBJ,KAAKkd,iBAAkB,EACvBld,KAAKqd,iBAAkB,EACnBjd,IACEJ,KAAK4lB,WACT5lB,KAAK4lB,SAAWxlB,EAAM6F,cAAcjF,OAAOC,GAAG,SAAUC,IACjCA,EAAEkc,cACLnW,QAAWjH,KAAKkd,iBAClCld,KAAK8kB,oBAAoB5jB,E,KAKvBlB,KAAK6lB,UACT7lB,KAAK6lB,QAAUzlB,EAAM6F,cAAcjF,OAAOC,GAAG,eAAgBC,IACtCA,EAAEkc,cACLnW,QAAWjH,KAAKkd,iBAClCld,KAAKsd,mBAAmBpc,E,KAKtBlB,KAAK8lB,QACT9lB,KAAK8lB,MAAQ1lB,EAAM6F,cAAcjF,OAAOC,GAAG,mBAAoBC,IACxCA,EAAEkc,cACLnW,QAAWjH,KAAKkd,iBAClCld,KAAK+lB,iBAAiB7kB,E,KAKpBlB,KAAKgmB,UACThmB,KAAKgmB,QAAU5lB,EAAM6F,cAAcjF,OAAOC,GAAG,qBAAsBC,IAC7DlB,KAAKkd,iBACLhc,EAAEogB,MAAM9K,GAAKxW,KAAKimB,WAAWzP,GAAKtV,EAAEogB,MAAMxb,GAAK9F,KAAKimB,WAAWngB,GAClE9F,KAAKkmB,mBAAmBhlB,E,KAM9B,CAEOilB,gBACNnmB,KAAKkd,iBAAkB,EACvBld,KAAK0gB,gBAAe,EACrB,CAEO0F,iBACNpmB,KAAKkd,iBAAkB,EAClBld,KAAKmf,iBAAiBlf,IAAI,4BAC9BD,KAAK0gB,gBAAe,EAEtB,CAEO+E,iBACNzlB,KAAKkd,iBAAkB,EACvBld,KAAKqd,iBAAkB,EACvBrd,KAAK+jB,WAAU,GAEX/jB,KAAK4lB,WACR5lB,KAAK4lB,SAAS1Z,UACdlM,KAAK4lB,cAAWhe,GAGb5H,KAAK6lB,UACR7lB,KAAK6lB,QAAQ3Z,UACblM,KAAK6lB,aAAUje,GAGZ5H,KAAK8lB,QACR9lB,KAAK8lB,MAAM5Z,UACXlM,KAAK8lB,WAAQle,EAEf,CAEOye,cAAcC,GACjBtmB,KAAKmf,iBAAiBlf,IAAI,qBAC5BD,KAAKK,KAAKW,OAAOulB,KAAK,cAAc,KACnCvmB,KAAKyc,QAAQrD,MAAMsF,IAClBA,EAAOzc,IAAI,eAAgBqkB,EAAQ,IAEpCtmB,KAAKuc,MAAMnD,MAAMoN,IAChBA,EAAKvkB,IAAI,iBAAkBqkB,EAAQ,GAClC,GAGL,CAEUJ,mBAAmBtH,GAC5B,MAAMxe,EAAQJ,KAAKI,MACfA,IACHJ,KAAKymB,kBAAoBrmB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAE7D,CAEUhE,mBAAmBqI,GAC5B3lB,KAAKqhB,gBAAiB,CACvB,CAEU0E,iBAAiBJ,GAC1B3lB,KAAKqhB,gBAAiB,CACvB,CAEO5J,aACN,OAAO,CACR,CAEOC,WACN,OAAO1X,KAAKsD,UAAUC,MACvB,CAEUuf,cAAc9Y,EAA+CI,GACjEpK,KAAKC,IAAI,cAIb+J,EAAS/H,IAAI,iBAAa2F,GAH1B5H,KAAK0mB,kBAAkB1c,EAAUI,EAKnC,CAEUsc,kBAAkB1c,EAA+CI,GAC1E,MACM1I,EADQ1B,KAAKC,IAAI,SACI8V,WAAW,gBAChC1V,EAAOL,KAAKM,MACZqmB,EAAiBtmB,EAAKumB,OAAOD,eAC7BE,EAAOC,SAAY,IAAI5B,KAAK9a,GAAQ1I,EAAaqlB,SAAUrlB,EAAaiW,MAAOgP,EAAgBtmB,EAAK2mB,SAAKpf,EAAWvH,EAAK4mB,UAAU9B,UACzI,IAAI1V,EAAQoX,EAAOC,eAAkBplB,EAAaqlB,SAA+B,KAArBrlB,EAAaiW,OACzElI,EAAQqX,SAAY,IAAI5B,KAAKzV,GAAQ/N,EAAaqlB,SAAUrlB,EAAaiW,MAAOgP,EAAgBtmB,EAAK2mB,SAAKpf,EAAWvH,EAAK4mB,UAAU9B,UACpI,MAAMnG,GAAa5U,EAAQyc,IAASpX,EAAQoX,GAC5C7c,EAAS/H,IAAI,YAAa+c,EAC3B,CAEOU,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtB,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MAE1BlU,KAAKknB,kBAEL,MAAM5jB,EAAYtD,KAAKqe,IAAInK,GAEvB5Q,GACHkc,QAAalc,GAAW,CAACmc,EAAMzV,KAC9BlK,MAAM4f,gBAAgB1V,EAAS,WAG1BhK,KAAKqe,IAAInK,E,CAElB,CAGU0N,WAAWxX,EAAeF,EAAgBid,GAEnD,MAAMtkB,EAAS7C,KAAKC,IAAI,UAExB,GAAID,KAAKC,IAAI,eAAiB4C,EAAQ,CACrC,MAAMukB,EAAQpnB,KAAKC,IAAI,QAAS,SAAW,IAC3C,OAAOD,KAAKqnB,MAAMnd,EAAQE,EAAOgd,EAAOvkB,E,CAEpC,CACJ,IAAKskB,GAA0C,gCAA1BnnB,KAAKC,IAAI,cAAiD,CAC9E,MAAMqnB,EAAkBtnB,KAAK+V,WAAW,mBACxC,GAAIuR,EAAiB,CACpB,MAAMC,EAAYD,EAAgBE,SAAS,UAC3Cpd,EAAQA,EAAQ,IAAMmd,EAAYA,C,EAGpC,MACM3E,EADQ5iB,KAAKC,IAAI,SACD8V,WAAW,oBAAqB,GAAK,EAC3D,OAAO/P,QAAYoE,EAAOwY,E,CAE5B,CAEUF,WAAWtY,GACpB,MAAMvH,EAAS7C,KAAKC,IAAI,UACxB,GAAID,KAAKC,IAAI,eAAiB4C,EAAQ,CAErC,MAAMpB,EAAQzB,KAAKC,IAAI,SAEjB+P,EAAMvO,EAAMsU,WAAW,MAAO,GAAK,EACnC5E,EAAM1P,EAAMsU,WAAW,MAAO,GAAK,EAIzC,OAFA3L,EAAQpE,aAAiBoE,EAAO4F,EAAKmB,GACrC/G,EAAQpK,KAAKqnB,MAAMjd,EAAOA,EAAO,SAAUvH,GAAU,C,CAIrD,OAAOuE,KAAKC,MAAM+C,EAEpB,CAEOyY,YAAY7Y,EAA4CvF,EAAU2F,EAAYqd,GACpFzd,EAAS/H,IAAIwC,EAAK2F,GACdqd,GACHzd,EAAS/H,IAAIwC,EAAM,UAAkB2F,GAEtC,MAAMkI,EAActI,EAASsI,YAEvB8U,EAAQpnB,KAAKC,IAAIwE,EAAM,SACzB2iB,IACH9U,EAAY8U,GAAShd,EAEvB,CAEUid,MAAMjd,EAAesd,EAAmBjjB,EAAa5B,GAC9D,MAAMpB,EAAQzB,KAAKC,IAAI,SACjB+J,EAAWvI,EAAMkmB,cAAc9kB,EAAQuE,KAAK+J,IAAI,EAAG1P,EAAMsgB,gBAAgB3X,IAAS,IAAK,GAC7F,OAAIJ,EACIA,EAAS/J,IAAIwE,GAEdijB,CACR,CAEUvI,iBACT,OAAQnf,KAAKC,IAAI,UAAkBG,MAAM2V,WAAW,aACrD,CAGU+J,WAAW8H,EAA4B1T,GAChD,IAAK,IAAIxK,EAAI,EAAGE,EAAMge,EAAQrkB,OAAQmG,EAAIE,EAAKF,IAAK,CACnD,IAAIpD,EAASshB,EAAQrK,SAAS7T,GAC9B,GAAIpD,GAAUA,EAAOrG,IAAI,aAAeiU,EACvC,OAAO5N,C,CAGV,CAGOsX,eAAe1J,EAAe2T,EAAyBC,GAC7D,GAAI9nB,KAAKmf,iBAAiBlf,IAAI,4BAA8B6nB,EAI3D,GAFA9nB,KAAKsgB,cAAe,GAEkB,GAAlCtgB,KAAK+f,UAAU9I,QAAQ/C,GACrB2T,EAIJ7nB,KAAK+nB,iBAAiB7T,GAHtBlU,KAAKihB,0BAMF,CACC4G,IACJ7nB,KAAK6gB,eACL7gB,KAAKihB,uBAEN,IAAIpB,EAAW7f,KAAK8f,WAAW9f,KAAK4c,UAAW1I,GAC1C2L,IACJA,EAAW7f,KAAKgoB,kBAAkB/kB,SAASzC,KAAKR,KAAK4c,UAAU6B,QAC/Dze,KAAK4c,UAAUpc,KAAKqf,IAGrBA,EAASzb,KAAK,GAEdyb,EAAS5d,IAAI,WAAYiS,GACzBnK,OAAY/J,KAAK+f,UAAW7L,GAE5BlU,KAAK4f,oBAAoB,kBAAmB5f,KAAKioB,iBAAiB/T,GAAQA,GAC1ElU,KAAKijB,W,CAGR,CAEU8E,iBAAiB7T,GAC1B,MAAM2L,EAAW7f,KAAK8f,WAAW9f,KAAK4c,UAAW1I,GAC7C2L,IACHA,EAAS/b,KAAK,GACdiG,SAAc/J,KAAK+f,UAAW7L,GAC9BlU,KAAK4f,oBAAoB,oBAAqB5f,KAAKioB,iBAAiB/T,GAAQA,GAE9E,CAEU4P,mBACT9jB,KAAK4c,UAAUxD,MAAMyG,IACpB,MAAM3L,EAAQ2L,EAAS5f,IAAI,YAC3BD,KAAKkoB,gBAAgBrI,EAAU3L,EAAM,GAEvC,CAEUgU,gBAAgBrI,EAAoB3L,GAC7C,IAAItD,EACAuX,EACAhY,EACA+K,EAEJ,MAAMkN,EAAkBpoB,KAAKC,IAAI,kBAAmB,GAEpD8J,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,GACCA,EAAY4B,OAASA,EAAO,CAC/B,IAAIoN,EAAQtX,EAAS/J,IAAI,SACrBqhB,IACM,MAAL1Q,IACHA,EAAI0Q,EAAM9K,GAEX5F,EAAIxJ,KAAK4I,IAAIY,EAAG0Q,EAAM9K,GAEb,MAAL2R,IACHA,EAAI7G,EAAM9K,GAEX2R,EAAI/gB,KAAK+J,IAAIgX,EAAG7G,EAAM9K,GAEb,MAALrG,IACHA,EAAImR,EAAMxb,GAEXqK,EAAI/I,KAAK4I,IAAIG,EAAGmR,EAAMxb,GAEb,MAALoV,IACHA,EAAIoG,EAAMxb,GAEXoV,EAAI9T,KAAK+J,IAAI+J,EAAGoG,EAAMxb,G,KAMjB,MAALqiB,GAAkB,MAALvX,GAAkB,MAALT,GAAkB,MAAL+K,GAC1C2E,EAASxd,OAAO,CACfgmB,MAAOF,EAAIvX,EAAsB,EAAlBwX,EACfliB,OAAQgV,EAAI/K,EAAsB,EAAlBiY,EAChB5R,EAAG5F,EAAIwX,EACPtiB,EAAGqK,EAAIiY,GAGV,CAOOH,iBAAiB/T,GACvB,IAAIoL,EASJ,OARAvV,eAAoB/J,KAAKsD,WAAY0G,IACpC,MAAMsI,EAActI,EAASsI,YAC7B,OAAIA,EAAY4B,OAASA,IACxBoL,EAAKhN,EAAYiN,WACV,EAEG,IAELD,CACR,CAEUgJ,YAAYpU,GACrB,IAAIqU,EASJ,OARAxe,eAAoB/J,KAAKsD,WAAY0G,IACpC,MAAMsI,EAActI,EAASsI,YAC7B,OAAIA,EAAY4B,OAASA,IAAS5B,EAAYhM,SAC7CiiB,EAAUjW,GACH,EAEG,IAELiW,CACR,CAEOC,WAAWlJ,GACjB,MAAMpL,EAAQlU,KAAKud,SAAS+B,GAC5B,GAAa,MAATpL,EACH,OAAOlU,KAAKsoB,YAAYpU,EAE1B,CAOO+M,sBACN,MAAM7gB,EAAQJ,KAAKmf,iBACnB,OAAI/e,EACIA,EAAMqoB,mBAEP,CACR,CAOOA,mBACN,IAAI9Q,EAAQ,EACZ,IAAK,IAAIjO,EAAI1J,KAAK+f,UAAUxc,OAAS,EAAGmG,GAAK,EAAGA,IAC/C1J,KAAK+nB,iBAAiB/nB,KAAK+f,UAAUrW,IACrCiO,IAED,OAAOA,CACR,CASO+Q,cAAcpJ,EAAYuI,GAChC,MAAM3T,EAAQlU,KAAKud,SAAS+B,GACf,MAATpL,GACHlU,KAAK4d,eAAe1J,EAAO2T,EAE7B,CAQOc,gBAAgBrJ,GACtB,MAAMpL,EAAQlU,KAAKud,SAAS+B,GACf,MAATpL,GACHlU,KAAK+nB,iBAAiB7T,EAExB,CAOO0U,iBACN,IAAK,IAAIlf,EAAI1J,KAAK+f,UAAUxc,OAAS,EAAGmG,GAAK,EAAGA,IAC/C1J,KAAKqf,aAAarf,KAAK+f,UAAUrW,GAEnC,CAQOmf,cAAcvJ,GACpB,MAAMpL,EAAQlU,KAAKud,SAAS+B,GACf,MAATpL,GACHlU,KAAKqf,aAAanL,EAEpB,CAOO4U,gBACF9oB,KAAK2d,YACR3d,KAAKmd,cAAcnd,KAAKmgB,QAGzBngB,KAAK+jB,WAAU,EAChB,EAjzCApkB,OAAAC,eAAAoc,GAAA,a,gDAAkC,kBAClCrc,OAAAC,eAAAoc,GAAA,c,gDAA0CzU,IAAWlD,WAAWC,OAAO,CAAC0X,GAAczX,c,aCtEjF,MAAOwkB,WAAuB/M,GAApCtc,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,aAEjBD,OAAAC,eAAA,qB,gDAA+BI,KAAKgpB,cAAc/lB,SAASzC,KAAKyoB,KAAKvoB,IAAIV,KAAKM,MAAO,CAAE4oB,eAAe,MAqOvG,CAnOQrhB,mBACN/H,MAAM+H,mBAEN7H,KAAKyI,QAAQ/B,SAASrE,OAAO,CAC5BsF,KAAMa,YAAM,UACZ+O,YAAa,IAGVvX,KAAKiI,QAAQ,eACZjI,KAAKC,IAAI,aACZD,KAAKyG,MAAMC,SAASrE,OAAO,CAC1BgD,SAAS,EACTjD,aAAa,EACbmV,YAAavX,KAAKC,IAAI,eACtB0H,KAAM3H,KAAKC,IAAI,eAIhBD,KAAKyG,MAAMC,SAASrE,OAAO,CAC1BgD,SAAS,IAIb,CAEUyf,oBAAoBlG,GAC7B,GAAI5e,KAAKqd,gBAGR,GAFAvd,MAAMglB,oBAAoBlG,GAEU,QAAhCA,EAAM7H,OAAO9W,IAAI,YACpBD,KAAKmpB,aAAavK,EAAM7H,OAAO/M,cAE3B,CACJ,IAAKhK,KAAK0kB,cACT1kB,KAAK+jB,WAAU,GACf/jB,KAAK6gB,aAAajC,EAAM7H,QACU,GAA9B/W,KAAKihB,uBAA4B,CAMpC,GAJmB,GAAfjhB,KAAKmgB,SACRngB,KAAKmgB,OAAS,GAGK,GAAhBngB,KAAK2f,QAAc,CACtB3f,KAAK+kB,iBACL,MAAMwD,EAAU,CAAE7gB,OAAQ1H,KAAKokB,qBAAsBzc,KAAM3H,KAAKkkB,mBAAoBhQ,MAAOlU,KAAKmgB,OAAQF,OAAQ,IAAKV,UAAWvf,KAAKglB,YACrIhlB,KAAKopB,kBAAkBb,GACvBvoB,KAAKoD,KAAK5C,KAAK+nB,E,CAehB,GAbAvoB,KAAKqpB,aAAajlB,OAClBpE,KAAKspB,UAAU1K,GAGX5e,KAAKC,IAAI,eACQ,GAAhBD,KAAK2f,QACR3f,KAAKspB,UAAU1K,GAAO,GAEd5e,KAAK2f,QAAU,GACvB3f,KAAKoD,KAAKmiB,UAAUvlB,KAAKoD,KAAKma,SAASvd,KAAKoD,KAAKG,OAAS,GAAIvD,KAAKoD,KAAKG,OAAS,IAI/EvD,KAAK2f,QAAU,GAAK3f,KAAKC,IAAI,aAAc,KAE9C,YADAD,KAAKmpB,c,CAMRnpB,KAAKqpB,aAAapnB,IAAI,SAAUjC,KAAKC,IAAI,e,CAG5C,CAEUmpB,kBAAkBb,GAC3BA,EAAQjiB,OAAStG,KAAKgpB,aACvB,CAEOvD,iBACN3lB,MAAM2lB,iBACNzlB,KAAKmpB,cACN,CAEO5I,gBACNzgB,MAAMygB,gBACNvgB,KAAKqpB,aAAavlB,MACnB,CAEUwlB,UAAU1K,EAA4B2K,GAC/C,MAAMnpB,EAAQJ,KAAKI,MACnB,GAAIA,EAAO,CACV,MAAMqB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBqhB,EAAQlhB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAE1CpX,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,KAChFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAKoE,GAErF5G,EAAYtD,KAAKsD,UACjBsG,EAAMtG,EAAUC,OAEtBvD,KAAKoD,KAAK5C,KAAK,CAAE+J,OAAQA,EAAQL,OAAQA,EAAQgK,MAAOlU,KAAKmgB,OAAQF,OAAQjgB,KAAK2f,QAASJ,UAAWvf,KAAKglB,WAAYuE,QAASA,IAChIvpB,KAAKyD,WAAW,aAAc,GAC9BzD,KAAKyD,WAAW,WAAYmG,GAE5B,MAAMI,EAAW1G,EAAUsG,GAC3B5J,KAAK+iB,iBAAiB/Y,GACtBhK,KAAK8iB,cAAc9Y,EAAUE,GAE7BlK,KAAK2f,S,CAEP,CAEUwJ,aAAanf,GAKtB,GAJKA,IACJA,EAAWhK,KAAKsD,UAAUtD,KAAKsD,UAAUC,OAAS,IAG/CyG,EAAU,CACbhK,KAAK2f,QAAU,EACf,MAAMrN,EAActI,EAASsI,YAEvB4B,EAAQ5B,EAAY4B,MAE1B,GAA0B,GAAtB5B,EAAY2N,OAAa,CAC5BjgB,KAAKoD,KAAK5C,KAAK,CAAE0J,OAAQF,EAAS/J,IAAI,UAAWsK,OAAQP,EAAS/J,IAAI,UAAWiU,MAAOA,EAAO+L,OAAQ,IAAKsJ,SAAS,EAAMhK,UAAWvf,KAAKglB,aAE3I,MAAM1hB,EAAYtD,KAAKsD,UACjBsG,EAAMtG,EAAUC,OAAS,EAE/BvD,KAAKyD,WAAW,aAAc,GAC9BzD,KAAKyD,WAAW,WAAYmG,GAE5BI,EAAW1G,EAAUsG,GACrB5J,KAAK+iB,iBAAiB/Y,GACtBhK,KAAK8iB,cAAc9Y,EAAUA,EAAS/J,IAAI,SAAU,G,CAGrDD,KAAKqpB,aAAavlB,OAElB9D,KAAK+jB,WAAU,GACf/jB,KAAKwpB,gB,CAEP,CAEUA,iBACTxpB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,OAChE,CAEU+F,mBAAmBtH,GAE5B,GADA9e,MAAMomB,mBAAmBtH,GACrB5e,KAAK2d,WAAY,CACpB,MAAM8L,EAAYzpB,KAAKymB,kBAEvB,GAAIgD,EAAW,CACd,MAAMnmB,EAAYtD,KAAKsD,UACjBsG,EAAMtG,EAAUC,OACtB,GAAIqG,EAAM,EAAG,CACZ,MACM8f,EAAwB,GAExBpI,EAHWhe,EAAUsG,EAAM,GAGV3J,IAAI,SAO3B,GANIqhB,GACHoI,EAAOlpB,KAAK8gB,GAGboI,EAAOlpB,KAAKipB,GAERzpB,KAAKC,IAAI,aAAc,CAC1B,MAAM0pB,EAAYrmB,EAAUsG,EAAM,GAClC,GAAI+f,EAAW,CACd,MAAMC,EAASD,EAAU1pB,IAAI,SACzB2pB,GACHF,EAAOlpB,KAAKopB,E,EAKXF,EAAOnmB,OAAS,GACnBvD,KAAKqpB,aAAapnB,IAAI,SAAUynB,E,GAKrC,CAEUvG,kBACTpZ,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAEhB,GADgBA,EAAYiX,SAEvBvpB,KAAKqe,IAAI/L,EAAY4B,OAAQ,CAChC,MAAM2V,EAAkB7pB,KAAKqe,IAAI/L,EAAY4B,OAAO,GAC9ChK,EAAS2f,EAAgB5pB,IAAI,SAAU,GACvCsK,EAASsf,EAAgB5pB,IAAI,UAEnCD,KAAK6iB,YAAY7Y,EAAU,SAAUE,GACrClK,KAAK6iB,YAAY7Y,EAAU,SAAUO,GAAQ,GAE7CvK,KAAK8iB,cAAc9Y,EAAUE,GAC7BlK,KAAK+iB,iBAAiB/Y,GAEtB,MAAMmU,EAAUnU,EAASmU,QACrBA,GACHpU,OAAYoU,GAAUyC,IACrB,MAAMta,EAASsa,EAAO3gB,IAAI,UACtBqG,GACHA,EAAOrE,IAAI,eAAe,E,QAQlC,CAOO6mB,gBACNhpB,MAAMgpB,gBACN9oB,KAAKqpB,aAAavlB,KAAK,EACxB,EA7OAnE,OAAAC,eAAAmpB,GAAA,a,gDAAkC,mBAClCppB,OAAAC,eAAAmpB,GAAA,c,gDAA0C/M,GAAc3X,WAAWC,OAAO,CAACykB,GAAexkB,cCZrF,MAAOulB,WAAyB9N,GAAtCtc,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,SACjBD,OAAAC,eAAA,yB,iDAA6B,IAY7BD,OAAAC,eAAA,c,gDAA4CI,KAAKe,YAAY,IAAImb,KAChEC,KAASzb,IAAI,CAAC,IACd,IAAMuoB,KAAK7M,KAAKpc,KAAKM,MAAO,CAAC,EAAG,CAACN,KAAK+pB,MAAMrjB,gBAc7C/G,OAAAC,eAAA,iB,gDAA+CI,KAAKe,YAAY,IAAImb,KACnEC,KAASzb,IAAI,CAAC,IACd,IAAMuoB,KAAK7M,KAAKpc,KAAKM,MAAO,CAAC,EAAG,CAACN,KAAKgqB,SAAStjB,gBAGhD/G,OAAAC,eAAA,Y,gDAAiF,KACjFD,OAAAC,eAAA,e,gDAAgC,KAChCD,OAAAC,eAAA,kB,gDAAmC,IAmVpC,CAjXQqqB,WACN,MAAMC,EAAOlqB,KAAK+pB,MAAMtL,OAGxB,OAFAze,KAAKgpB,cAAc/lB,SAASzC,KAAK0pB,GACjClqB,KAAK+pB,MAAMvpB,KAAK0pB,GACTA,CACR,CAUOC,cACN,MAAMD,EAAOlqB,KAAKgqB,SAASvL,OAI3B,OAHAyL,EAAKrpB,OAAO,OACZb,KAAKgpB,cAAc/lB,SAASzC,KAAK0pB,GACjClqB,KAAKgqB,SAASxpB,KAAK0pB,GACZA,CACR,CAWUrqB,YACTC,MAAMD,YACN,MAAMuqB,EAAepqB,KAAK+pB,MAAMrjB,SAChC0jB,EAAappB,OAAOC,GAAG,eAAgBC,IACtClB,KAAKge,oBAAoB9c,EAAE6V,OAAO9W,IAAI,YAAY,IAGnDD,KAAKyI,QAAQ/B,SAASzE,IAAI,iBAAiB,GAE3CmoB,EAAappB,OAAOC,GAAG,cAAeC,IAGrC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YAErBiqB,EAAOlqB,KAAKqqB,OAAOnW,GACrBgW,GACHA,EAAK5S,UAGN,MAAMgT,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GACjC5iB,GACHA,EAAO4P,S,IAIT,MAAMiT,EAAcvqB,KAAKgqB,SAAStjB,SAClC6jB,EAAYvpB,OAAOC,GAAG,eAAgBC,IACrC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YAC3BD,KAAKge,oBAAoB9J,GAEzB,MAAMgW,EAAOlqB,KAAKqqB,OAAOnW,GAErBgW,GACHA,EAAK/S,QAGN,MAAMmT,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GACjC5iB,GACHA,EAAOyP,O,IAIToT,EAAYvpB,OAAOC,GAAG,SAAUC,IAC/B,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YACvBD,KAAKkd,gBACRld,KAAKmd,cAAcjJ,GAGnBlU,KAAK4d,eAAe1J,EAAQhT,EAAEkc,cAAsBS,Q,IAItD0M,EAAYvpB,OAAOC,GAAG,aAAcC,IACnC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YACrBiqB,EAAOlqB,KAAKqqB,OAAOnW,GAErBgW,GACHA,EAAKzM,UAAUvc,GAGhB,MAAMopB,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GAEjC5iB,GACHA,EAAO+V,UAAUvc,E,IAInBqpB,EAAYvpB,OAAOC,GAAG,YAAaC,IAClC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YAE3BD,KAAKknB,kBACLhmB,EAAE6V,OAAO1U,OAAO,CAAEmU,EAAG,EAAG1Q,EAAG,IAC3B,MAAMokB,EAAOlqB,KAAKqqB,OAAOnW,GAErBgW,IACHA,EAAKlH,SAAS9hB,GACdgpB,EAAK7nB,OAAO,CAAEmU,EAAG,EAAG1Q,EAAG,KAGxB,MAAMwkB,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GACjC5iB,IACHA,EAAOsb,SAAS9hB,GAChBwG,EAAOrF,OAAO,CAAEmU,EAAG,EAAG1Q,EAAG,I,IAI3BykB,EAAYvpB,OAAOC,GAAG,cAAeC,IACpC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YAGrBiqB,EAAOlqB,KAAKqqB,OAAOnW,GAErBgW,GACHA,EAAK5S,UAGN,MAAMgT,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GACjC5iB,GACHA,EAAO4P,S,GAGV,CAGU6L,kBACT,MAAM/iB,EAAQJ,KAAKI,MACnB,GAAIA,EAAO,CACV,MAAMoqB,EAA0E,EAAtEpjB,KAAK+J,IAAI/Q,EAAM6F,cAAcoiB,QAASjoB,EAAM6F,cAAcC,UACpE,IAAK,IAAIwD,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAE5C,GADa1J,KAAKqqB,OAAO3gB,GACf,CACT,MAAM+gB,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GAE7B,GAAI+gB,GAAQC,EAAM,CAEjB,MAAMC,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SAEpB,GAAI0qB,GAAMC,EAAI,CACb,MAAMhhB,EAAMxC,KAAK+J,IAAI/J,KAAK4H,IAAIwb,EAAIG,EAAGnU,GAAIpP,KAAK4H,IAAIwb,EAAII,EAAGpU,GAAIpP,KAAK4H,IAAIwb,EAAIG,EAAG7kB,GAAIsB,KAAK4H,IAAIwb,EAAII,EAAG9kB,GAAIsB,KAAK4H,IAAI2b,EAAGnU,GAAIpP,KAAK4H,IAAI4b,EAAGpU,GAAIpP,KAAK4H,IAAI2b,EAAG7kB,GAAIsB,KAAK4H,IAAI4b,EAAG9kB,IACjK,IAAI+kB,EAAQ7kB,WAAe4kB,EAAID,GAE/B,MAAMG,EAAM,CAAEtU,EAAGmU,EAAGnU,EAAI5M,EAAM5D,MAAU6kB,GAAQ/kB,EAAG6kB,EAAG7kB,EAAI8D,EAAM5D,MAAU6kB,IACpEE,EAAM,CAAEvU,EAAGoU,EAAGpU,EAAI5M,EAAM5D,MAAU6kB,GAAQ/kB,EAAG8kB,EAAG9kB,EAAI8D,EAAM5D,MAAU6kB,IAE1E7qB,KAAKgrB,YAAYthB,EAAGohB,EAAKC,EAAKJ,EAAIC,E,KAMxC,CAEUI,YAAY9W,EAAe4W,EAAaC,EAAaJ,EAAYC,GAC1E,MAAMV,EAAOlqB,KAAKqqB,OAAOnW,GACnB+W,EAAUjrB,KAAKkrB,UAAUhX,GAE/B,IAAIiX,EAAW,CAAC,CAAC,CAACL,EAAKH,IAAM,CAAC,CAACC,EAAIG,KAC/BK,EAAc,CAAC,CAAC,CAACN,EAAKC,KAE1Bb,EAAKjoB,IAAI,WAAYkpB,GACrBF,EAAQhpB,IAAI,WAAYmpB,EACzB,CAEUC,wBAAwBzM,GAC5B5e,KAAK0kB,aAAgB1kB,KAAKsgB,eAEzBtgB,KAAK2d,YAST3d,KAAK+jB,WAAU,GACf/jB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,UAT7B,GAA9BngB,KAAKihB,wBACRjhB,KAAK+jB,WAAU,GACf/jB,KAAK+kB,iBACL/kB,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,SAE7BngB,KAAK6gB,aAAajC,EAAM7H,SAO3B,CAEU+N,oBAAoBlG,GACzB5e,KAAKqd,kBACRvd,MAAMglB,oBAAoBlG,GAC1B5e,KAAKqrB,wBAAwBzM,GAE/B,CAEUsH,mBAAmBtH,GAC5B9e,MAAMomB,mBAAmBtH,GACzB5e,KAAKurB,uBAAuB3M,EAC7B,CAGU2M,uBAAuB5F,GAChC,GAAI3lB,KAAK2d,WAAY,CACpB,MAAM8L,EAAYzpB,KAAKymB,kBACjBvS,EAAQlU,KAAKmgB,OACb7c,EAAYtD,KAAKqe,IAAInK,GAE3B,GAAIuV,GAAanmB,EAAW,CAC3B,MAAM7B,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjByhB,EAAWjgB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,IAEtEtM,EAASlK,KAAK0iB,WAAWhB,GACzBnX,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAK4b,GAEzF+I,EAAOnnB,EAAc,GACrBonB,EAAOpnB,EAAc,GAEvBmnB,GAAQC,IACX1qB,KAAK6iB,YAAY6H,EAAM,SAAUxgB,GAAQ,GACzClK,KAAK6iB,YAAY6H,EAAM,SAAUngB,GAAQ,GACzCvK,KAAK8iB,cAAc2H,EAAMA,EAAKxqB,IAAI,SAAU,IAC5CD,KAAK8iB,cAAc4H,EAAMxgB,GACzBlK,KAAKkjB,eAAehP,G,EAIxB,CAEUgM,gBAAgBhM,GACzB,IAAKlU,KAAKqqB,OAAOnW,GAAQ,CACxB,MAAMgW,EAAOlqB,KAAKiqB,WAClBjqB,KAAKqqB,OAAOnW,GAASgW,EAErB,MAAMe,EAAUjrB,KAAKmqB,cACrBnqB,KAAKkrB,UAAUhX,GAAS+W,EAExB,MAAM3Y,EAActS,KAAKsD,UAAUtD,KAAKsD,UAAUC,OAAS,GAAG+O,YAC9DA,EAAYhM,OAAS4jB,EAErB,IAAIsB,EAAgBxrB,KAAKC,IAAI,iBAAiB,GAE1CuI,EAAQxI,KAAKC,IAAI,cAAeD,KAAKC,IAAI,WAE7C,MAAMse,EAAiBjM,EAAY5K,OAC/B6W,IACH/V,EAAQ+V,EAAete,IAAI,WAGxBqS,IACHkZ,EAAgBlZ,EAAYkZ,eAG7BtB,EAAKzmB,WAAW,UAAW+nB,GAE3B,MAAMpI,EAAW,CAAE1b,OAAQc,EAAOiY,SAAUvM,GAC5CgW,EAAK7nB,OAAO+gB,GACZ6H,EAAQ5oB,OAAO+gB,GAEfpjB,KAAKkjB,eAAehP,E,CAEtB,CAEUuX,cAAcvX,GACvBlU,KAAKoD,KAAK5C,KAAK,CAAEkH,OAAQ1H,KAAKokB,qBAAsBzc,KAAM3H,KAAKkkB,mBAAoBhQ,MAAOA,EAAOsX,cAAexrB,KAAKC,IAAI,iBAAiB,GAAOggB,OAAQ,IAAKV,UAAWvf,KAAKglB,YAC/K,CAEO0G,UAAUpK,EAAepN,GAC/B,MAAM9T,EAAQJ,KAAKI,MACnBJ,KAAKyrB,cAAcvX,GACnBoN,EAAQlhB,EAAM6F,cAAcsb,QAAQD,GAEpC,MAAM7f,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjB0rB,EAAWlqB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,IAClEtM,EAASlK,KAAK0iB,WAAWiJ,GACzBphB,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAK6lB,GAE3F3rB,KAAK4rB,eAAe1hB,EAAQK,EAAQ2J,EACrC,CAEUoX,WAAW1M,EAA4B1K,GAChDlU,KAAK0rB,UAAU9M,EAAM0C,MAAOpN,EAC7B,CAEU0X,eAAe1hB,EAAgBK,EAAgB2J,GACxDlU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,EACtC,CAEUoV,UAAUpf,EAAgBK,EAAgB0V,EAAgB/L,GACnElU,KAAKoD,KAAK5C,KAAK,CAAE+J,OAAQA,EAAQL,OAAQA,EAAQ+V,OAAQA,EAAQ/L,MAAOA,EAAOqL,UAAWvf,KAAKglB,YAChG,CAEOtF,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtB,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAEhB,MAAM4B,EAAQ5B,EAAY4B,MACpBgW,EAAOlqB,KAAKqqB,OAAOnW,GACrBgW,IACHlqB,KAAK+pB,MAAM1oB,YAAY6oB,UACflqB,KAAKqqB,OAAOnW,GACpBgW,EAAKhe,WAEN,MAAM+e,EAAUjrB,KAAKkrB,UAAUhX,GAC3B+W,IACHjrB,KAAKgqB,SAAS3oB,YAAY4pB,UAClBjrB,KAAKkrB,UAAUhX,GACvB+W,EAAQ/e,U,CAGX,CAEOwU,eAAetW,GACrBtK,MAAM4gB,eAAetW,GACrBpK,KAAKgqB,SAAStjB,SAASzE,IAAI,iBAAkBmI,GAC7CpK,KAAK+pB,MAAMrjB,SAASzE,IAAI,iBAAkBmI,EAC3C,CAEOuW,uBAAuBvW,GAC7BtK,MAAM6gB,uBAAuBvW,GAC7BpK,KAAKgqB,SAAStjB,SAASzE,IAAI,iBAAkBmI,GAC7CpK,KAAK+pB,MAAMrjB,SAASzE,IAAI,iBAAkBmI,GAC1CpK,KAAKyI,QAAQ/B,SAASzE,IAAI,iBAAiB,EAC5C,CAEUyhB,eAAexP,EAAekP,GACvCtjB,MAAM4jB,eAAexP,EAAOkP,GAC5B,IAAImF,EAAUvoB,KAAKsoB,YAAYpU,GAE/B,GAAIqU,EAAS,CACZ,IAAI2B,EAAO3B,EAAQjiB,OAEf4jB,GAAQ9G,GAAYA,EAAS1b,QAChCwiB,EAAKjoB,IAAI,SAAUmhB,EAAS1b,O,CAG/B,CAUOmkB,QAAQvK,GACdthB,KAAK+kB,iBACL/kB,KAAK0rB,UAAUpK,EAAOthB,KAAKmgB,QAC3BngB,KAAKkjB,eAAeljB,KAAKmgB,QACzBngB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,OAChE,EA7XAxgB,OAAAC,eAAAkqB,GAAA,a,gDAAkC,qBAClCnqB,OAAAC,eAAAkqB,GAAA,c,gDAA0C9N,GAAc3X,WAAWC,OAAO,CAACwlB,GAAiBvlB,cCfvF,MAAOunB,WAAwBhC,GAArCpqB,c,oBAQCC,OAAAC,eAAA,Y,gDAAgF,KAEhFD,OAAAC,eAAA,a,gDAAiB,aA6GlB,CA3GWsjB,eAAehP,GACxB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAIjC,GAFelU,KAAKC,IAAI,WAEVwqB,GAAQC,EAAM,CAC3B,MAAMtD,EAAQpnB,KAAKC,IAAI,SAAW,IAElC,IAAI8rB,EAAKtB,EAAKxqB,IAAImnB,GACd4E,EAAKtB,EAAKzqB,IAAImnB,GAElBpnB,KAAK6iB,YAAY4H,EAAM,SAAUsB,GAAI,GACrC/rB,KAAK6iB,YAAY6H,EAAM,SAAUsB,GAAI,GAErChsB,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,E,CAExB,CAEU5H,cAAc9Y,EAA+CI,GACjEpK,KAAKC,IAAI,cAIb+J,EAAS/H,IAAI,YAAa,GAH1BjC,KAAK0mB,kBAAkB1c,EAAUI,EAKnC,CAEOoB,kBACN1L,MAAM0L,kBACN,MAAMpL,EAAQJ,KAAKI,MAEnB,GADAJ,KAAKyG,MAAM0S,QACP/Y,EACH,IAAK,IAAIsJ,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAE5C,GADa1J,KAAKqqB,OAAO3gB,GACf,CACT,MAAM+gB,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GAGvB4I,EAFKtS,KAAKqe,IAAI3U,GAAM,EAEH4I,YACjB2Z,EAAejsB,KAAKksB,SAASlsB,KAAKyG,OAGxC,IAAK,IAAIwH,EADKjO,KAAKsD,UAAU2T,QAAQwT,GACjBxc,GAAK,EAAGA,IAAK,CAChC,MACMvH,EADc1G,KAAKsD,UAAU2K,GAAGqE,YACT3K,KACzBjB,IACHulB,EAAavlB,SAAWA,E,CAI1B,MAAM+Z,EAAW,CAACzgB,KAAKsD,UAAU2T,QAAQwT,GAAOzqB,KAAKsD,UAAU2T,QAAQyT,IAEvE,IAAIvG,EAAYnkB,KAAKC,IAAI,YAAaD,KAAKC,IAAI,SAE/C,MAAM0jB,EAAerR,EAAY3K,KAE7Bgc,IACHQ,EAAYR,EAAa1jB,IAAI,SAG9B,MAAMmjB,EAAW,CAAE3C,SAAUA,EAAU9Y,KAAMwc,GAC7C8H,EAAa5pB,OAAO+gB,GAEpB,MAAMuH,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SAEpB,GAAI0qB,GAAMC,EAAI,CACbqB,EAAahqB,IAAI,QAASkqB,IACzBA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGmU,EAAG7kB,EAAE,IAG3B,MAAMwmB,EAAiBtsB,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgB9T,IAE9D4iB,GACHA,EAAerqB,IAAI,QAASkqB,IAC3BA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGmU,EAAG7kB,EAAE,IAG5B9F,KAAKusB,cAAc7iB,EAAGuiB,EAActB,EAAIC,E,GAK7C,CAEU2B,cAAcpM,EAAgBqM,EAAyBC,EAAaC,GAE9E,CAEUC,YAEV,CAEU3B,cAEV,EArHArrB,OAAAC,eAAAksB,GAAA,a,gDAAkC,oBAClCnsB,OAAAC,eAAAksB,GAAA,c,gDAA0ChC,GAAiBzlB,WAAWC,OAAO,CAACwnB,GAAgBvnB,cCJzF,MAAOqoB,WAA8B9C,GAA3CpqB,c,oBAQCC,OAAAC,eAAA,Y,gDAAsF,KACtFD,OAAAC,eAAA,a,gDAAiB,oBAEjBD,OAAAC,eAAA,oB,iDAAiC,GAgTlC,CA9SWgsB,eAAe1hB,EAAgBK,EAAgB2J,GACxDlU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GAErClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,EACtC,CAEUmX,wBAAwBzM,GAC5B5e,KAAK0kB,cACJ1kB,KAAK2d,YAYJ3d,KAAK6sB,cACT7sB,KAAK+jB,WAAU,GACf/jB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,aAE/ChlB,KAAK6sB,aAAc,GAfd7sB,KAAK6sB,aACqB,GAA3B7sB,KAAKyoB,qBACPzoB,KAAK+jB,WAAU,GACf/jB,KAAK6gB,aAAajC,EAAM7H,QACxB/W,KAAK+kB,iBACL/kB,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,QAC5BngB,KAAK6sB,aAAc,GAYxB,CAGUtB,uBAAuB5F,GAChC,GAAI3lB,KAAK2d,WAAY,CACpB,MAAM8L,EAAYzpB,KAAKymB,kBAEvB,GAAIgD,EAAW,CAEd,MAAMhoB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBiK,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAEzFgK,EAAQlU,KAAKmgB,OAEbsK,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAC3B6Y,EAAO/sB,KAAKqe,IAAInK,GAAW,GAE3B8Y,EAAOhtB,KAAKqe,IAAInK,GAAW,GAC3B+Y,EAAOjtB,KAAKqe,IAAInK,GAAW,GAE7BuW,GAAQC,IACP1qB,KAAK6sB,aACR7sB,KAAK6iB,YAAY6H,EAAM,SAAUxgB,GACjClK,KAAK6iB,YAAY6H,EAAM,SAAUngB,GAAQ,GACzCvK,KAAK8iB,cAAc2H,EAAMA,EAAKxqB,IAAI,SAAU,IAC5CD,KAAK8iB,cAAcgK,EAAMA,EAAK7sB,IAAI,SAAU,IAC5CD,KAAK8iB,cAAc4H,EAAMxgB,GAEzBlK,KAAK6iB,YAAYkK,EAAM,SAAU7iB,GACjClK,KAAK6iB,YAAYkK,EAAM,SAAUxiB,GAAQ,GACzCvK,KAAK8iB,cAAciK,EAAM7iB,GAEzBlK,KAAK6iB,YAAYmK,EAAM,SAAU9iB,GACjClK,KAAK6iB,YAAYmK,EAAM,SAAUziB,GAAQ,GACzCvK,KAAK8iB,cAAckK,EAAM9iB,GAEzBlK,KAAK6iB,YAAYoK,EAAM,SAAU/iB,GACjClK,KAAK6iB,YAAYoK,EAAM,SAAU1iB,GAAQ,GACzCvK,KAAK8iB,cAAcmK,EAAM/iB,KAGzBlK,KAAK6iB,YAAYkK,EAAM,SAAUxiB,GAAQ,GACzCvK,KAAK6iB,YAAYiK,EAAM,SAAUrC,EAAKxqB,IAAI,SAAU,GAAKsK,EAASmgB,EAAKzqB,IAAI,SAAU,IAAI,GAEzFD,KAAKktB,oBAAoBhZ,IAG1BlU,KAAKkjB,eAAehP,G,EAKxB,CAEUgZ,oBAAoBhZ,GAC7B,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAC3B6Y,EAAO/sB,KAAKqe,IAAInK,GAAW,GAE3B8Y,EAAOhtB,KAAKqe,IAAInK,GAAW,GAC3B+Y,EAAOjtB,KAAKqe,IAAInK,GAAW,GAE3BiZ,EAAU1C,EAAKxqB,IAAI,SAAU,GAC7BmtB,EAAU1C,EAAKzqB,IAAI,SAAU,GAC7BotB,EAAUP,EAAK7sB,IAAI,SAAU,GAC7BqtB,EAAUP,EAAK9sB,IAAI,SAAU,GAE7BstB,EAAU9C,EAAKxqB,IAAI,SAAU,GAC7ButB,EAAU9C,EAAKzqB,IAAI,SAAU,GAC7BwtB,EAAUX,EAAK7sB,IAAI,SAAU,GAC7BytB,EAAUX,EAAK9sB,IAAI,SAAU,GAE7B0tB,EAAMvmB,KAAKC,MAAM8lB,GAAWC,EAAUD,GAAW,GAEvDntB,KAAK6iB,YAAYmK,EAAM,SAAUO,GAAWC,EAAUD,GAAW,GAAG,GACpEvtB,KAAK6iB,YAAYmK,EAAM,SAAUW,GAAK,GACtC3tB,KAAK8iB,cAAckK,EAAMW,GAEzB,MAAMC,EAAMP,GAAWC,EAAUD,GAAW,EAK5C,GAJArtB,KAAK6iB,YAAYoK,EAAM,SAAUQ,GAAWC,EAAUD,GAAW,GAAG,GACpEztB,KAAK6iB,YAAYoK,EAAM,SAAUW,GAAK,GACtC5tB,KAAK8iB,cAAcmK,EAAMW,GAErBZ,EAAK7O,QAAS,CACjB,MAAM0P,EAAUb,EAAK7O,QAAQ,GAAGle,IAAI,UACpC,GAAI4tB,EAAS,CACZ,MAAMC,EAASrD,EAAKxqB,IAAI,SAClB8tB,EAASrD,EAAKzqB,IAAI,SACpB6tB,GAAUC,IACbF,EAAQ5rB,IAAI,IAAK6rB,EAAOtX,GAAKuX,EAAOvX,EAAIsX,EAAOtX,GAAK,GACpDqX,EAAQ5rB,IAAI,IAAK6rB,EAAOhoB,GAAKioB,EAAOjoB,EAAIgoB,EAAOhoB,GAAK,G,EAIvD,GAAImnB,EAAK9O,QAAS,CACjB,MAAM0P,EAAUZ,EAAK9O,QAAQ,GAAGle,IAAI,UACpC,GAAI4tB,EAAS,CACZ,MAAMC,EAAShB,EAAK7sB,IAAI,SAClB8tB,EAAShB,EAAK9sB,IAAI,SACpB6tB,GAAUC,IACbF,EAAQ5rB,IAAI,IAAK6rB,EAAOtX,GAAKuX,EAAOvX,EAAIsX,EAAOtX,GAAK,GACpDqX,EAAQ5rB,IAAI,IAAK6rB,EAAOhoB,GAAKioB,EAAOjoB,EAAIgoB,EAAOhoB,GAAK,G,EAIxD,CAEO0F,kBACN1L,MAAM0L,kBACN,MAAMpL,EAAQJ,KAAKI,MAEnB,GADAJ,KAAKyG,MAAM0S,QACP/Y,EACH,IAAK,IAAIsJ,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAC5C,MAAMwgB,EAAOlqB,KAAKqqB,OAAO3gB,GACzB,GAAIwgB,EAAM,CACT,MAAMO,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GACvBojB,EAAO9sB,KAAKqe,IAAI3U,GAAO,GACvBqjB,EAAO/sB,KAAKqe,IAAI3U,GAAO,GAGvB4I,EAFKtS,KAAKqe,IAAI3U,GAAM,EAEH4I,YACjB2Z,EAAejsB,KAAKksB,SAASlsB,KAAKyG,OAGxC,IAAK,IAAIwH,EADKjO,KAAKsD,UAAU2T,QAAQwT,GACjBxc,GAAK,EAAGA,IAAK,CAChC,MACMvH,EADc1G,KAAKsD,UAAU2K,GAAGqE,YACT3K,KACzBjB,IACHulB,EAAavlB,SAAWA,E,CAI1B,MAAM+Z,EAAW,CAACzgB,KAAKsD,UAAU2T,QAAQwT,GAAOzqB,KAAKsD,UAAU2T,QAAQyT,IAEvE,IAAIvG,EAAYnkB,KAAKC,IAAI,YAAaD,KAAKC,IAAI,SAE/C,MAAM0jB,EAAerR,EAAY3K,KAE7Bgc,IACHQ,EAAYR,EAAa1jB,IAAI,SAG9B,MAAMmjB,EAAW,CAAE3C,SAAUA,EAAU9Y,KAAMwc,GAC7C8H,EAAa5pB,OAAO+gB,GAEpB,MAAMuH,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SACd+tB,EAAKlB,EAAK7sB,IAAI,SACdguB,EAAKlB,EAAK9sB,IAAI,SAEpB,GAAI0qB,GAAMC,GAAMoD,GAAMC,EAAI,CACzBhC,EAAahqB,IAAI,QAASkqB,IACzBA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO4B,EAAGzX,EAAGyX,EAAGnoB,GACxBqmB,EAAQE,OAAO2B,EAAGxX,EAAGwX,EAAGloB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGmU,EAAG7kB,EAAE,IAG3B,MAAMwmB,EAAiBtsB,KAAKyI,QAAQ8U,SAASvd,KAAKwd,gBAAgB9T,IAE9D4iB,GACHA,EAAerqB,IAAI,QAASkqB,IAC3BA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GAExBqmB,EAAQC,OAAO4B,EAAGxX,EAAGwX,EAAGloB,GACxBqmB,EAAQE,OAAO4B,EAAGzX,EAAGyX,EAAGnoB,EAAE,IAI5BokB,EAAKjoB,IAAI,QAASkqB,IACjBA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GAAKkoB,EAAGloB,EAAI6kB,EAAG7kB,GAAK,GAC5CqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GAAKmoB,EAAGnoB,EAAI8kB,EAAG9kB,GAAK,EAAE,IAG/C9F,KAAKusB,cAAc7iB,EAAGuiB,EAActB,EAAIC,GACxC5qB,KAAKktB,oBAAoBxjB,E,GAK9B,CAEUgc,yBAAyB1b,EAA+CsX,GACjF,MAAM7f,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBqS,EAActI,EAASsI,YACvB4B,EAAQ5B,EAAY4B,MAEpBuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAC3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAC3B6Y,EAAO/sB,KAAKqe,IAAInK,GAAW,GAC3B8Y,EAAOhtB,KAAKqe,IAAInK,GAAW,GAC3B+Y,EAAOjtB,KAAKqe,IAAInK,GAAW,GAEjC,GAAIuW,GAAQC,GAAQoC,GAAQC,EAAM,CAEjC,MAAM3K,EAAK0K,EAAK7sB,IAAI,SAAU,GAAKwqB,EAAKxqB,IAAI,SAAU,GAChDiuB,EAAMxD,EAAKzqB,IAAI,SAAU,GAAKwqB,EAAKxqB,IAAI,SAAU,GACjDkuB,EAAMpB,EAAK9sB,IAAI,SAAU,GAAK6sB,EAAK7sB,IAAI,SAAU,GAEjDwiB,EAAKziB,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,KAC5EmM,EAAK3iB,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAK2c,GAEvFziB,KAAK6iB,YAAY7Y,EAAU,SAAUyY,GACrCziB,KAAK6iB,YAAY7Y,EAAU,SAAU2Y,GAAI,GACzC3iB,KAAK8iB,cAAc9Y,EAAUyY,GAE7B,MAAMxC,EAAS3N,EAAY2N,OAEb,MAAVA,GACHjgB,KAAK6iB,YAAYiK,EAAM,SAAUrK,GACjCziB,KAAK6iB,YAAYiK,EAAM,SAAUnK,EAAKP,GAAI,GAC1CpiB,KAAK8iB,cAAcgK,EAAMrK,IAEP,MAAVxC,GACRjgB,KAAK6iB,YAAY4H,EAAM,SAAUhI,GACjCziB,KAAK6iB,YAAY4H,EAAM,SAAU9H,EAAKP,GAAI,GAC1CpiB,KAAK8iB,cAAc2H,EAAMhI,IAEP,MAAVxC,GACRjgB,KAAK6iB,YAAYkK,EAAM,SAAUtK,GACjCziB,KAAK6iB,YAAYkK,EAAM,SAAUpK,EAAKP,GAAI,GAC1CpiB,KAAK8iB,cAAciK,EAAMtK,IAEP,MAAVxC,GACRjgB,KAAK6iB,YAAY6H,EAAM,SAAUjI,GACjCziB,KAAK6iB,YAAY6H,EAAM,SAAU/H,EAAKP,GAAI,GAC1CpiB,KAAK8iB,cAAc4H,EAAMjI,IAEP,MAAVxC,GACRjgB,KAAK6iB,YAAY4H,EAAM,SAAU9H,EAAKuL,EAAM,GAAG,GAC/CluB,KAAK6iB,YAAY6H,EAAM,SAAU/H,EAAKuL,EAAM,GAAG,IAE7B,MAAVjO,IACRjgB,KAAK6iB,YAAYiK,EAAM,SAAUnK,EAAKwL,EAAM,GAAG,GAC/CnuB,KAAK6iB,YAAYkK,EAAM,SAAUpK,EAAKwL,EAAM,GAAG,IAEhDnuB,KAAKktB,oBAAoBhZ,E,CAE1BlU,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,GACtB1qB,KAAK+iB,iBAAiB+J,GACtB9sB,KAAK+iB,iBAAiBgK,GACtB/sB,KAAK+iB,iBAAiBiK,GACtBhtB,KAAK+iB,iBAAiBkK,EACvB,CAEUV,cAAcpM,EAAgBqM,EAAyBC,EAAaC,GAE9E,CAEUC,YAEV,CAEU3B,cAEV,EAzTArrB,OAAAC,eAAAgtB,GAAA,a,gDAAkC,0BAClCjtB,OAAAC,eAAAgtB,GAAA,c,gDAA0C9C,GAAiBzlB,WAAWC,OAAO,CAACsoB,GAAsBroB,c,cCsB/F,MAAO6pB,WAAwBtE,GAArCpqB,c,oBAQCC,OAAAC,eAAA,gB,gDAAqC,KA8IrCD,OAAAC,eAAA,e,gDAAiDI,KAAKe,YAAY,IAAImb,KACrEC,KAASzb,IAAI,CAAC,IACd,IAAM2tB,KAASjS,KAAKpc,KAAKM,MAAO,CAAEK,UAAW,CAAC,UAAY,CAACX,KAAKsuB,OAAO5nB,eAOzE,CArJW7G,YACTC,MAAMD,YAENG,KAAK+pB,MAAMrjB,SAASzE,IAAI,eAAe,GAEvCjC,KAAKme,QAAQ3d,MAAK,CAACF,EAAO8d,EAASpU,KAClC,MAAMsI,EAActI,EAASsI,YAC7B,GAA0B,MAAtBA,EAAY2N,OAAgB,CAE/B,MAAM/L,EAAQ5B,EAAY4B,MACpBhG,EAAKlO,KAAKqe,IAAInK,GAAU,EAC9B,IAAI1L,EAAQxI,KAAKC,IAAI,cAAeD,KAAKC,IAAI,WAE7C,GAAIiO,EAAI,CACP,MAAMoQ,EAAKpQ,EAAGoE,YACd,GAAIgM,EAAI,CACP,MAAMC,EAAiBD,EAAG5W,OACtB6W,IACH/V,EAAQ+V,EAAete,IAAI,U,EAM9B,MAAMke,EAAUnU,EAASmU,QACzB,GAAIA,EAAS,CACZ,MAAMyC,EAASzC,EAAQ,GACvB,GAAIyC,EAAQ,CACX,MAAMpC,EAAYoC,EAAO3gB,IAAI,UAC7B,GAAIue,EAAW,CACd,MAAM+P,EAAQ/P,EAAUvb,SAASsa,SAAS,GACtCgR,GACHA,EAAMtsB,IAAI,QAAS,G,GAMvB,MAAMusB,EAAQxuB,KAAKyuB,YAQnB,OANAD,EAAMnsB,OAAO,CACZ6mB,eAAe,EACfvhB,KAAMa,EACNiY,SAAUnO,EAAY4B,QAGhB6K,KAAOre,IAAIV,KAAKM,MAAO,CAC7BgG,OAAQkoB,EACRxP,eAAWpX,G,IAIf,CAEO2Y,gBACNzgB,MAAMygB,gBACNvgB,KAAKsuB,OAAOnV,OACb,CAEOuV,WACN5uB,MAAM4uB,WACN1uB,KAAKsuB,OAAOlV,MAAMoV,IACjB,MAAMta,EAAQsa,EAAMvuB,IAAI,YAExB,GADWD,KAAKqe,IAAInK,GACZ,CACP,MAAMya,EAAM3uB,KAAKqe,IAAInK,GAAW,GAC1B0a,EAAM5uB,KAAKqe,IAAInK,GAAW,GAE1ByW,EAAKgE,EAAI1uB,IAAI,SACb2qB,EAAKgE,EAAI3uB,IAAI,SAEnB,GAAI0qB,GAAMC,EAAI,CAEb,MAAMC,EAAQ7kB,WAAe2kB,EAAIC,GAAM,GACvC4D,EAAMvsB,IAAI,WAAY4oB,GAEtB,MAAMgE,EAAIL,EAAMnG,QAEViC,EAActqB,KAAKwd,gBAAgBtJ,GACnCxM,EAAS1H,KAAKyI,QAAQ8U,SAAS+M,GACjC5iB,GACH8mB,EAAMvsB,IAAI,SAAU4sB,EAAmC,EAA/BnnB,EAAOzH,IAAI,cAAe,IAAU4uB,E,KAKjE,CAEUnL,eAAexP,EAAekP,GAEvC,IAAI1c,EADJ5G,MAAM4jB,eAAexP,EAAOkP,GAE5BrZ,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YACzBA,EAAY4B,OAASA,GACpB5B,EAAY8Q,WACf1c,EAAW4L,EAAY8Q,S,IAK1B,MAAM0L,EAAYtP,QAAa4D,QAERxb,GAAnBwb,EAAS1b,OACZonB,EAAUnnB,KAAOyb,EAAS1b,cAGnBonB,EAAUnnB,UAEYC,GAA1Bwb,EAASC,cACZyL,EAAUvX,YAAc6L,EAASC,qBAG1ByL,EAAUvX,YAGlBuX,EAAUzL,cAAgB,EAE1B,MAAMmL,EAAQxuB,KAAK8f,WAAW9f,KAAKsuB,OAAQpa,GAC3C,GAAIsa,EAAO,CACV,MAAMhL,EAAegL,EAAMhiB,OAAOiX,OAAO,WACzCjE,QAAasP,GAAW,CAACrqB,EAAK2F,KAC7BokB,EAAMvsB,IAAIwC,EAAY2F,GACtBoZ,EAAavhB,IAAIwC,EAAY2F,GACzB1D,GACHA,EAASzE,IAAIwC,EAAK2F,E,IAItB,CAMOqkB,YACN,MAAMD,EAAQxuB,KAAKsuB,OAAO7P,OAE1B,OADAze,KAAKsuB,OAAO9tB,KAAKguB,GACVA,CACR,CAQUxD,YAAY9W,EAAe4W,EAAaC,EAAaJ,EAAYC,GAC1E9qB,MAAMkrB,YAAY9W,EAAO4W,EAAKC,EAAKJ,EAAIC,EACxC,EA7JAjrB,OAAAC,eAAAwuB,GAAA,a,gDAAkC,oBAClCzuB,OAAAC,eAAAwuB,GAAA,c,gDAA0CtE,GAAiBzlB,WAAWC,OAAO,CAAC8pB,GAAgB7pB,cCzBzF,MAAOwqB,WAA6BjF,GAA1CpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,cAsFlB,CApFWC,YACTC,MAAMD,YACNG,KAAK+pB,MAAMrjB,SAASzE,IAAI,eAAe,EACxC,CAEUwiB,qBAAqB7F,GAC9B9e,MAAM2kB,qBAAqB7F,GAE3B,MACMtM,EADWsM,EAAM7H,OAAO/M,SACDsI,YAE7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MACpBuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAC3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAE3BuV,EAAYzpB,KAAKymB,kBAEvB,GAAIgE,GAAQC,GAAQoC,GAAQrD,EAAW,CACtC,MAAMhnB,EAAQzC,KAAKC,IAAI,SACjBwB,EAAQzB,KAAKC,IAAI,SAEjBiK,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAEzF8F,EAAMvO,EAAMsU,WAAW,MAAO,GAC9B5E,EAAM1P,EAAMsU,WAAW,MAAO,GAEpC/V,KAAK6iB,YAAY4H,EAAM,SAAUlgB,GAAQ,GACzCvK,KAAK6iB,YAAY6H,EAAM,SAAUngB,GAAQ,GACzCvK,KAAK6iB,YAAYiK,EAAM,SAAUviB,GAAQ,GAEzCvK,KAAK6iB,YAAY4H,EAAM,SAAUza,EAAoB,KAAbmB,EAAMnB,IAC9ChQ,KAAK6iB,YAAY6H,EAAM,SAAUxgB,GACjClK,KAAK6iB,YAAYiK,EAAM,SAAU3b,EAAoB,KAAbA,EAAMnB,IAE9ChQ,KAAK8iB,cAAc4H,EAAMA,EAAKzqB,IAAI,SAAU,IAE5CD,KAAK+iB,iBAAiB2H,E,EAGzB,CAEUa,yBAEV,CAEUrI,eAAehP,GACxB,GAAIlU,KAAKqe,IAAInK,GAAQ,CACpB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAEjC,GAAIuW,GAAQqC,EAAM,CACjB,MAAMrrB,EAAQzB,KAAKC,IAAI,SACjB+P,EAAMvO,EAAMsU,WAAW,MAAO,GAC9B5E,EAAM1P,EAAMsU,WAAW,MAAO,GAEpC/V,KAAK6iB,YAAY4H,EAAM,SAAUza,EAAoB,KAAbmB,EAAMnB,IAAY,GAC1DhQ,KAAK6iB,YAAYiK,EAAM,SAAU3b,EAAoB,KAAbA,EAAMnB,IAAY,E,EAG7D,CAEUqb,wBAAwBzM,GAC7B5e,KAAKqd,kBACHrd,KAAK0kB,aACwB,GAA9B1kB,KAAKihB,wBACPjhB,KAAK+kB,iBACL/kB,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,QAC5BngB,KAAK+jB,WAAU,GAEf/jB,KAAKkjB,eAAeljB,KAAKmgB,QACzBngB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,SAInE,CAEUyL,eAAe1hB,EAAgBK,EAAgB2J,GACxDpU,MAAM8rB,eAAe1hB,EAAQK,EAAQ2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,EACtC,EA3FAvU,OAAAC,eAAAmvB,GAAA,a,gDAAkC,yBAClCpvB,OAAAC,eAAAmvB,GAAA,c,gDAA0CjF,GAAiBzlB,WAAWC,OAAO,CAACyqB,GAAqBxqB,cCF9F,MAAOyqB,WAA2BlF,GAAxCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,YAyFlB,CAvFWC,YACTC,MAAMD,YACNG,KAAK+pB,MAAMrjB,SAASzE,IAAI,eAAe,EACxC,CAEUwiB,qBAAqB7F,GAC9B9e,MAAM2kB,qBAAqB7F,GAE3B,MACMtM,EADWsM,EAAM7H,OAAO/M,SACDsI,YAE7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MACpBuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAC3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GAE3BuV,EAAYzpB,KAAKymB,kBAEvB,GAAIgE,GAAQC,GAAQoC,GAAQrD,EAAW,CACtC,MAAMhnB,EAAQzC,KAAKC,IAAI,SACjBwB,EAAQzB,KAAKC,IAAI,SAEjBiK,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAEzF8F,EAAMvN,EAAMsT,WAAW,MAAO,GAC9B5E,EAAM1O,EAAMsT,WAAW,MAAO,GAEpC/V,KAAK6iB,YAAY4H,EAAM,SAAUza,EAAoB,IAAbmB,EAAMnB,IAAW,GACzDhQ,KAAK6iB,YAAY6H,EAAM,SAAUngB,GAAQ,GACzCvK,KAAK6iB,YAAYiK,EAAM,SAAU3b,EAAoB,IAAbA,EAAMnB,IAAW,GAEzDhQ,KAAK6iB,YAAY4H,EAAM,SAAUvgB,GACjClK,KAAK6iB,YAAY6H,EAAM,SAAUxgB,GACjClK,KAAK6iB,YAAYiK,EAAM,SAAU5iB,GAEjClK,KAAK8iB,cAAc2H,EAAMvgB,GACzBlK,KAAK8iB,cAAc4H,EAAMxgB,GACzBlK,KAAK8iB,cAAcgK,EAAM5iB,GAEzBlK,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,GACtB1qB,KAAK+iB,iBAAiB+J,E,EAGzB,CAEU5J,eAAehP,GACxB,GAAIlU,KAAKqe,IAAInK,GAAQ,CACpB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3B4Y,EAAO9sB,KAAKqe,IAAInK,GAAW,GACjC,GAAIuW,GAAQqC,EAAM,CACjB,MAAMrqB,EAAQzC,KAAKC,IAAI,SACjB+P,EAAMvN,EAAMsT,WAAW,MAAO,GAC9B5E,EAAM1O,EAAMsT,WAAW,MAAO,GAEpC/V,KAAK6iB,YAAY4H,EAAM,SAAUza,EAAoB,IAAbmB,EAAMnB,IAAW,GACzDhQ,KAAK6iB,YAAYiK,EAAM,SAAU3b,EAAoB,IAAbA,EAAMnB,IAAW,E,EAG5D,CAEUub,yBAEV,CAEUF,wBAAwBzM,GAC7B5e,KAAKqd,kBACHrd,KAAK0kB,aACyB,GAA9B1kB,KAAKihB,wBACRjhB,KAAK+kB,iBACL/kB,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,QAC5BngB,KAAK+jB,WAAU,GACf/jB,KAAK6gB,eAEL7gB,KAAKkjB,eAAeljB,KAAKmgB,QACzBngB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,SAInE,CAEUyL,eAAe1hB,EAAgBK,EAAgB2J,GACxDpU,MAAM8rB,eAAe1hB,EAAQK,EAAQ2J,GACrClU,KAAKspB,UAAUpf,EAAQK,EAAQ,KAAM2J,EACtC,EA/FAvU,OAAAC,eAAAovB,GAAA,a,gDAAkC,uBAClCrvB,OAAAC,eAAAovB,GAAA,c,gDAA0ClF,GAAiBzlB,WAAWC,OAAO,CAAC0qB,GAAmBzqB,cCL5F,MAAO0qB,WAAsBnF,GAAnCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,WAgElB,CA9DWC,YACTC,MAAMD,YACNG,KAAKyD,WAAW,mBAAmB,GACnCzD,KAAKiC,IAAI,cAAc,EACxB,CAEUihB,eAAehP,GAExB,GADmBlU,KAAKqe,IAAInK,GACZ,CACf,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3BrR,EAAS7C,KAAKC,IAAI,UACxB,GAAI4C,GAAU4nB,GAAQC,EAAM,CAE3B,IAAIwE,EAAKlvB,KAAK0iB,WAAW+H,EAAKxqB,IAAI,WAC9BkvB,EAAKnvB,KAAK0iB,WAAWgI,EAAKzqB,IAAI,WAElC,MAAMwB,EAAQzB,KAAKC,IAAI,SAEjB0uB,EAAMltB,EAAMkmB,cAAc9kB,EAAQuE,KAAK+J,IAAI,EAAG1P,EAAMsgB,gBAAgBmN,KACpEN,EAAMntB,EAAMkmB,cAAc9kB,EAAQuE,KAAK4I,IAAI,EAAGvO,EAAMsgB,gBAAgBoN,KAEpE/H,EAAQpnB,KAAKC,IAAI,SAAW,IAElC,GAAI0uB,GAAOC,EAAK,CACf,IAAIQ,EAAKvsB,EAAOS,UAAU2T,QAAQ0X,GAC9BU,EAAKxsB,EAAOS,UAAU2T,QAAQ2X,GAE9BQ,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGjB,IAAIhX,EAAM,EACNT,EAAQ,EAEZ,IAAK,IAAIjO,EAAI0lB,EAAI1lB,GAAK2lB,EAAI3lB,IAAK,CAC9B,MACMU,EADKvH,EAAOS,UAAUoG,GACXzJ,IAAImnB,GACR,MAAThd,IACHgO,GAAOhO,EACPuN,I,CAIF,MAAM2X,EAAUlX,EAAMT,EAEtB8S,EAAKxoB,IAAI,SAAUitB,GACnBxE,EAAKzoB,IAAI,SAAUktB,GAEnBnvB,KAAK6iB,YAAY4H,EAAM,SAAUyE,GACjClvB,KAAK6iB,YAAY6H,EAAM,SAAUyE,GACjCnvB,KAAK6iB,YAAY4H,EAAM,SAAU6E,GAAS,GAC1CtvB,KAAK6iB,YAAY6H,EAAM,SAAU4E,GAAS,GAE1CtvB,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,E,EAGxB1qB,KAAKmjB,iB,CAEP,EC7ED,SAAS9b,GAAMkoB,EAAgBC,GAC9B,MAAMliB,EAASlG,KAAAgH,IAAA,GAAMohB,GACrB,OAAOpoB,KAAKC,MAAMkoB,EAASjiB,GAAUA,CACtC,CAGA,SAASmiB,GAAOrsB,GAAoD,IAArBosB,EAAAE,UAAAnsB,OAAA,QAAAqE,IAAA8nB,UAAA,GAAAA,UAAA,GAAoB,EAClE,MAAMtX,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACzB,IAAIxO,EAAM,EAEV,IAAK,IAAI+lB,EAAI,EAAGA,EAAIvsB,EAAKG,OAAQosB,IACb,OAAfvsB,EAAKusB,GAAG,KACX/lB,IACAwO,EAAI,IAAMhV,EAAKusB,GAAG,GAClBvX,EAAI,IAAMhV,EAAKusB,GAAG,GAClBvX,EAAI,IAAMhV,EAAKusB,GAAG,GAAKvsB,EAAKusB,GAAG,GAC/BvX,EAAI,IAAMhV,EAAKusB,GAAG,GAAKvsB,EAAKusB,GAAG,GAC/BvX,EAAI,IAAMhV,EAAKusB,GAAG,GAAKvsB,EAAKusB,GAAG,IAIjC,MAAMC,EAAQhmB,EAAMwO,EAAI,GAAOA,EAAI,GAAKA,EAAI,GACtCyX,EAASjmB,EAAMwO,EAAI,GAAOA,EAAI,GAAKA,EAAI,GACvC0X,EAAmB,IAARF,EAAY,EAAIvoB,GAAMwoB,EAAOD,EAAKJ,GAC7CO,EAAY1oB,GAAO+Q,EAAI,GAAKxO,EAASkmB,EAAW1X,EAAI,GAAMxO,EAAM4lB,GAStE,OAAOpsB,EAAK4sB,KAAI1O,IAAS2O,MANjB,CACN5oB,GAFemP,EAOgB8K,EAAM,GAL5BkO,GACTnoB,GAAOyoB,EAAWtZ,EAAKuZ,EAAWP,IAHpC,IAAiBhZ,CAOyB,GAC3C,CD3BC7W,OAAAC,eAAAqvB,GAAA,a,gDAAkC,kBAClCtvB,OAAAC,eAAAqvB,GAAA,c,gDAA0CnF,GAAiBzlB,WAAWC,OAAO,CAAC2qB,GAAc1qB,cCsCvF,MAAO2rB,WAAyBpG,GAAtCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,cAsElB,CApEWC,YACTC,MAAMD,YACNG,KAAKyD,WAAW,mBAAmB,GACnCzD,KAAKiC,IAAI,cAAc,EACxB,CAEUihB,eAAehP,GACxB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3BrR,EAAS7C,KAAKC,IAAI,UACxB,GAAI4C,GAAU4nB,GAAQC,EAAM,CAC3B,MAAMjpB,EAAQoB,EAAO5C,IAAI,SAEzB,IAAIivB,EAAKlvB,KAAK0iB,WAAW+H,EAAKxqB,IAAI,WAC9BkvB,EAAKnvB,KAAK0iB,WAAWgI,EAAKzqB,IAAI,WAElC,MAAM0uB,EAAMltB,EAAMkmB,cAAc9kB,EAAQpB,EAAMsgB,gBAAgBmN,IACxDN,EAAMntB,EAAMkmB,cAAc9kB,EAAQpB,EAAMsgB,gBAAgBoN,IACxD/H,EAAQpnB,KAAKC,IAAI,SAAW,IAElC,GAAI0uB,GAAOC,EAAK,CACf,MAAMtrB,EAAYT,EAAOS,UAEzB,IAAImU,EAAanU,EAAU2T,QAAQ0X,GAC/BjX,EAAWpU,EAAU2T,QAAQ2X,GAE7BuB,GAAW,EACX1Y,EAAaC,IAChByY,GAAW,GACV1Y,EAAYC,GAAY,CAACA,EAAUD,IAGrC,MAAMiS,EAAkC,GACxC,IAAI0G,EAAK,EACT,IAAK,IAAI1mB,EAAI+N,EAAY/N,GAAKgO,EAAUhO,IAAK,CAC5C,MAAMM,EAAW1G,EAAUoG,GAC3BggB,EAAOlpB,KAAK,CAAC4vB,EAAIpmB,EAAS/J,IAAImnB,KAC9BgJ,G,CAGD,MAAMC,EAAeZ,GAAO/F,GAG5B,GAFY2G,EAAa9sB,OAEf,EAAG,CACZ,MAAMonB,EAAK0F,EAAa,GAClBzF,EAAKyF,EAAaA,EAAa9sB,OAAS,GAC9C,GAAIonB,GAAMC,EAAI,CACb,IAAImB,EAAKpB,EAAG,GACRqB,EAAKpB,EAAG,GAERuF,KACFpE,EAAIC,GAAM,CAACA,EAAID,IAGjB/rB,KAAK6iB,YAAY4H,EAAM,SAAUsB,GAAI,GACrC/rB,KAAK6iB,YAAY6H,EAAM,SAAUsB,GAAI,GAErChsB,KAAK6iB,YAAY4H,EAAM,SAAUyE,GACjClvB,KAAK6iB,YAAY6H,EAAM,SAAUyE,GAEjCnvB,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,E,IAK3B,EA5EA/qB,OAAAC,eAAAswB,GAAA,a,gDAAkC,qBAClCvwB,OAAAC,eAAAswB,GAAA,c,gDAA0CpG,GAAiBzlB,WAAWC,OAAO,CAAC4rB,GAAiB3rB,cCxC1F,MAAO+rB,WAAqBtU,GAAlCtc,c,oBAQCC,OAAAC,eAAA,c,yDACAD,OAAAC,eAAA,c,yDAGAD,OAAAC,eAAA,gB,gDAA4B,IAE5BD,OAAAC,eAAA,a,gDAAiB,WAEjBD,OAAAC,eAAA,c,iDAA2B,GA0F5B,CAxFWC,YACTC,MAAMD,YACNG,KAAKyD,WAAW,mBAAmB,GACnCzD,KAAKme,QAAQhF,QAEbnZ,KAAKyI,QAAQ/B,SAASrE,OAAO,CAC5BsF,KAAMa,YAAM,UACZ+O,YAAa,GAEf,CAEU2O,mBAAmBtH,GAC5B9e,MAAMomB,mBAAmBtH,GAErB5e,KAAKqd,iBAAmBrd,KAAKqhB,gBAChCrhB,KAAKuwB,sBAAsB3R,EAE7B,CAEU2R,sBAAsB3R,GAC/B,MAAMxe,EAAQJ,KAAKI,MACnB,GAAIA,EAAO,CACV,MAAMqB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBqhB,EAAQlhB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAE1CpX,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBH,EAAM9K,KAChFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAKoE,GAErFgK,EAAQlU,KAAKmgB,OACnBngB,KAAKoD,KAAK5C,KAAK,CAAE+J,OAAQA,EAAQL,OAAQA,EAAQgK,MAAOA,EAAO+L,OAAQjgB,KAAK2f,QAASJ,UAAWvf,KAAKglB,aACrG,MAAMpb,EAAM5J,KAAKsD,UAAUC,OAErByG,EAAWhK,KAAKsD,UAAUsG,EAAM,GACtC5J,KAAK8iB,cAAc9Y,EAAUE,GAE7BlK,KAAK2f,UAEL3f,KAAKyD,WAAW,aAAc,GAC9BzD,KAAKyD,WAAW,WAAYmG,E,CAE9B,CAEU0T,mBAAmBsB,GAE5B,MAAMxe,EAAQJ,KAAKI,MACnB,GAAIA,GAC+B,GAA9BJ,KAAKihB,sBAA4B,CACpCnhB,MAAMwd,mBAAmBsB,GACzB5e,KAAK+kB,iBACL/kB,KAAK2f,QAAU,EAEf3f,KAAKwwB,MAAQpwB,EAAMH,IAAI,QACvBD,KAAKywB,MAAQrwB,EAAMH,IAAI,QAEvBG,EAAM6B,IAAI,QAAQ,GAClB7B,EAAM6B,IAAI,QAAQ,GAElB,MAAMyuB,EAAStwB,EAAMH,IAAI,UACrBywB,GACHA,EAAOjtB,WAAW,WAAW,GAG9BzD,KAAK2wB,OAAQ,EAEb3wB,KAAKoD,KAAK5C,KAAK,CAAEkH,OAAQ1H,KAAKokB,qBAAsB9d,OAAQtG,KAAKgpB,cAAe9U,MAAOlU,KAAKmgB,OAAQF,OAAQjgB,KAAK2f,QAASJ,UAAWvf,KAAKglB,Y,CAG7I,CAEUe,iBAAiBnH,GAC1B9e,MAAMimB,iBAAiBnH,GACvB,MAAMxe,EAAQJ,KAAKI,MACfA,GAASJ,KAAK2wB,QACjB3wB,KAAK2wB,OAAQ,EACb3wB,KAAK6kB,YAAW,KACfzkB,EAAM6B,IAAI,OAAQjC,KAAKwwB,OACvBpwB,EAAM6B,IAAI,OAAQjC,KAAKywB,OACvB,MAAMC,EAAStwB,EAAMH,IAAI,UACrBywB,GACHA,EAAOjtB,WAAW,WAAW,E,GAE5B,KAEHzD,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,QAEjE,EAxGAxgB,OAAAC,eAAA0wB,GAAA,a,gDAAkC,iBAClC3wB,OAAAC,eAAA0wB,GAAA,c,gDAA0CtU,GAAc3X,WAAWC,OAAO,CAACgsB,GAAa/rB,cCqCnF,MAAOqsB,WAAmB7H,GAAhCrpB,c,oBAQCC,OAAAC,eAAA,sB,yDAEAD,OAAAC,eAAA,a,gDAAiB,QAmRlB,CAjRWC,YACTC,MAAMD,YAENG,KAAK8gB,cAAgB9gB,KAAKmf,iBAAiB2B,cAE3C9gB,KAAKme,QAAQhF,QAEbnZ,KAAKyI,QAAQ/B,SAASzE,IAAI,WAAW,GACrCjC,KAAKyG,MAAMC,SAASzE,IAAI,WAAW,GAEnCjC,KAAKme,QAAQ3d,MAAK,CAACH,EAAM+d,EAASpU,KACjC,MAAMsI,EAActI,EAASsI,YACvB5L,EAAW4L,EAAY8Q,SAC7B,GAAI1c,EAAU,CACb,MAAMJ,EAASX,IAASjF,IAAIL,EAAM,CACjCic,WAAW,EACX3b,UAAW,CAAC,SACV+F,GAkCH,OAhCA4L,EAAYhM,OAASA,EAErBtG,KAAK6e,sBAAsBvY,GAE3BA,EAAOtF,OAAOC,GAAG,SAAU4vB,IAC1B,MAAM/P,EAAgB9gB,KAAK8gB,cACvBA,EAAc7gB,IAAI,WAAaqG,EAClCwa,EAAc7e,IAAI,cAAU2F,GAG5BkZ,EAAc7e,IAAI,SAAUqE,E,IAI9BA,EAAOtF,OAAOC,GAAG,eAAe,KAC/BjB,KAAK+d,UAAW,CAAI,IAGrBzX,EAAOtF,OAAOC,GAAG,cAAc,KAC9BjB,KAAK+d,UAAW,CAAK,IAGtB/d,KAAK8gB,cAAc7e,IAAI,cAAU2F,GAEjCtB,EAAOrF,GAAG,SAAU6vB,IACnBpqB,EAASzE,IAAI,QAAS6uB,EAAM,IAG7BxqB,EAAOrF,GAAG,YAAa8vB,IACtBrqB,EAASzE,IAAI,WAAY8uB,EAAS,IAG5BhS,KAAOre,IAAIV,KAAKM,MAAO,CAC7B0e,eAAWpX,EACXtB,OAAQA,G,IAIZ,CAEU8iB,kBAAkB4H,GAAiB,CAEnClM,oBAAoBlG,GAC7B,GAAI5e,KAAK+f,UAAUxc,OAAS,EAC3BvD,KAAK6gB,eACL7gB,KAAKihB,2BAED,GAAIjhB,KAAKqd,kBACRrd,KAAK+d,SAAU,CACnBje,MAAMglB,oBAAoBlG,GAEP5e,KAAKoD,KAAKma,SAASvd,KAAKoD,KAAKG,OAAS,GAC9C6f,SAAWpjB,KAAKixB,mBAE3BjxB,KAAK+kB,iBACL/kB,KAAKqe,IAAIre,KAAKmgB,QAAU,CAAC,EAEzBngB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,O,CAGjEngB,KAAK+jB,WAAU,EAChB,CAEOrE,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtBhK,KAAK8gB,cAAc7e,IAAI,cAAU2F,GACjC5H,KAAK+d,UAAW,CACjB,CAEU2F,eAAexP,EAAekP,GAEvC,IAAI1c,EACAJ,EAFJxG,MAAM4jB,eAAexP,EAAOkP,GAI5B,IAAImF,EAAUvoB,KAAKsoB,YAAYpU,GAC/B,GAAIqU,IACHjiB,EAASiiB,EAAQjiB,OACjBI,EAAW6hB,EAAQnF,SAEf9c,GAAQ,CAEX,MAAM4qB,EAAUlxB,KAAKC,IAAI,eACnByW,EAAU1W,KAAKC,IAAI,eACnBkxB,EAAUnxB,KAAKC,IAAI,eAEzBqG,EAAOrE,IAAI,UAAWivB,GACtB5qB,EAAOrE,IAAI,UAAWyU,GACtBpQ,EAAOrE,IAAI,UAAWkvB,GAEtB,MAAM3N,EAAeld,EAAOkG,OAAOiX,OAAO,WAC1CD,EAAavhB,IAAI,UAAWivB,GAC5B1N,EAAavhB,IAAI,UAAWyU,GAC5B8M,EAAavhB,IAAI,UAAWkvB,GAExBzqB,IACHA,EAASzE,IAAI,UAAWivB,GACxBxqB,EAASzE,IAAI,UAAWyU,GACxBhQ,EAASzE,IAAI,UAAWkvB,IAGrB/N,GACH5D,QAAa4D,GAAU,CAAC3e,EAAK2F,KAC5B9D,EAAOrE,IAAIwC,EAAY2F,GACvBoZ,EAAavhB,IAAIwC,EAAY2F,GACzB1D,GACHA,EAASzE,IAAIwC,EAAK2F,E,IAMxB,CAEUof,iBAEV,CAEUyH,mBACT,MAAMvqB,EAAgB,CAAC,EAEjB0qB,EAAcpxB,KAAKC,IAAI,eACV,MAAfmxB,IACH1qB,EAASwqB,QAAUE,GAGpB,MAAMC,EAAYrxB,KAAKC,IAAI,aACV,MAAboxB,IACH3qB,EAASoqB,MAAQO,GAGlB,MAAMC,EAActxB,KAAKC,IAAI,eACV,MAAfqxB,IACH5qB,EAASgQ,QAAU4a,GAGpB,MAAMC,EAAcvxB,KAAKC,IAAI,eACV,MAAfsxB,IACH7qB,EAASyqB,QAAUI,GAGpB,MAAMlN,EAAcrkB,KAAKC,IAAI,eACV,MAAfokB,IACH3d,EAASgB,OAAS2c,GAGnB,MAAMhB,EAAgBrjB,KAAKC,IAAI,iBACV,MAAjBojB,IACH3c,EAAS2c,cAAgBA,GAG1B,MAAMc,EAAYnkB,KAAKC,IAAI,aACV,MAAbkkB,IACHzd,EAASiB,KAAOwc,GAGjB,MAAM5M,EAAcvX,KAAKC,IAAI,eAK7B,OAJmB,MAAfsX,IACH7Q,EAAS6Q,YAAcA,GAGjB4E,KAASzb,IAAIgG,EACrB,CAEOga,eAAetW,GACrBtK,MAAM4gB,eAAetW,GAErBL,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMmU,EAAUnU,EAASmU,QACrBA,GACHpU,OAAYoU,GAAUyC,IACrB,MAAMta,EAASsa,EAAO3gB,IAAI,UACtBqG,GACHA,EAAOrE,IAAI,iBAAkBmI,E,MAKlC,CAEOvC,mBACN/H,MAAM+H,mBACF7H,KAAKiI,QAAQ,gBAEhB8B,OAAY/J,KAAK+f,WAAYrW,IAC5B1J,KAAK0jB,eAAeha,EAAE,GAGzB,CAEUwe,gBAAgBrI,EAAoB3L,G,MAC7C,MAAMqU,EAAUvoB,KAAKsoB,YAAYpU,GACjC,GAAIqU,EAAS,CACZ,MAAMjiB,EAASiiB,EAAQjiB,OAEvB,GAAIA,EAAQ,CACPA,EAAO0D,WAA4C,QAAhC9H,EAAAlC,KAAK8gB,cAAc7gB,IAAI,iBAAS,IAAAiC,OAAA,EAAAA,EAAE8H,UACxD6V,EAAS/b,KAAK,IAGwB,GAAlC9D,KAAK+f,UAAU9I,QAAQ/C,IAC1B2L,EAASzb,KAAK,GAIhB,MAAMgkB,EAAkBpoB,KAAKC,IAAI,kBAAmB,GAEpD,IAAIuxB,EAASlrB,EAAOkrB,SAEhB3C,EAAK2C,EAAOC,MAAQD,EAAOE,KAA0B,EAAlBtJ,EACnCzX,EAAK6gB,EAAOG,OAASH,EAAOI,IAAyB,EAAlBxJ,EAEvCvI,EAASxd,OAAO,CACfgmB,MAAOwG,EACP3oB,OAAQyK,EACR6F,EAAGgb,EAAOE,KAAOtJ,EACjBtiB,EAAG0rB,EAAOI,IAAMxJ,G,EAIpB,CAEO/B,cAAcC,GACpBvc,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMmU,EAAUnU,EAASmU,QACrBA,GACHpU,OAAYoU,GAAUyC,IACrB,MAAMta,EAASsa,EAAO3gB,IAAI,UACtBqG,GACHA,EAAOrE,IAAI,iBAAkBqkB,E,MAKlC,CAGU3B,uBAAuB/F,GAEhC5e,KAAK6gB,aAAajC,EAAM7H,QACxB,MAAMhX,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWihB,kBAAkBpC,EAE/B,CAEUgG,sBAAsBhG,GAC/B,MAAM7e,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWohB,iBAAiBvC,GAE7B5e,KAAKM,MAAMU,OAAOulB,KAAK,cAAc,KACpCvmB,KAAK+iB,iBAAiBnE,EAAM7H,OAAO/M,SAA0C,GAE/E,EA3RArK,OAAAC,eAAAgxB,GAAA,a,gDAAkC,eAClCjxB,OAAAC,eAAAgxB,GAAA,c,gDAA0C7H,GAAe1kB,WAAWC,OAAO,CAACssB,GAAWrsB,c,cCDlF,MAAOstB,WAAoB9I,GAAjCrpB,c,oBAQCC,OAAAC,eAAA,sB,yDAEAD,OAAAC,eAAA,a,gDAAiB,UAEjBD,OAAAC,eAAA,mB,iDAAgC,IAEhCD,OAAAC,eAAA,oB,iDAAiC,GAgSlC,CA9RWC,YACTC,MAAMD,YAENG,KAAK8gB,cAAgB9gB,KAAKmf,iBAAiB2B,cAE3C9gB,KAAKyI,QAAQ/B,SAASzE,IAAI,WAAW,GACrCjC,KAAKyG,MAAMC,SAASzE,IAAI,WAAW,GAEnCjC,KAAKa,OAAOb,KAAK6c,KAClB,CAEU2M,iBAEV,CAEUJ,kBAAkB4H,GAAiB,CAEnClS,aAAaN,EAAsBxU,GAC5C,MAAMsI,EAActI,EAASsI,YACvBoD,EAAOpD,EAAYoD,KACnBhP,EAAW4L,EAAY8Q,SAE7B,GAAI1c,EAAU,CACb,MAAMorB,EAAQtT,EAAUvb,SAASzC,KAAKuxB,KAAcrxB,IAAIV,KAAKM,MAAO,CACnEK,UAAW,CAAC,SACZ+U,KAAMA,EACNsc,OAAQ,QACNtrB,IAEHorB,EAAM7wB,GAAG,QAASyU,IACjBpD,EAAYoD,KAAOA,CAAI,IAGxB1V,KAAKyD,WAAW,QAASquB,GAEzBA,EAAM7wB,GAAG,UAAU,KAKlB,GAJAjB,KAAK6kB,YAAW,KACf7kB,KAAKiyB,WAAaH,EAAM7xB,IAAI,UAAU,EAAM,GAC1C,MAEE6xB,EAAM7xB,IAAI,UAAW,CACzBD,KAAK6kB,YAAW,KACXiN,GACsB,IAArBA,EAAM7xB,IAAI,SACbD,KAAKmd,cAAc7K,EAAY4B,M,GAG/B,KAIH,MAAMnU,EAAaC,KAAKmf,iBAClBta,EAAO,kBACT9E,EAAWiB,OAAOujB,UAAU1f,IAC/B9E,EAAWiB,OAAOwjB,SAAS3f,EAAM,CAAEA,KAAMA,EAAMkS,OAAQhX,G,KAK1Dye,EAAUxd,OAAOC,GAAG,SAAUC,IAC7B,MAAM4f,EAAgB9gB,KAAK8gB,cACvBA,EAAc7gB,IAAI,WAAa6xB,GAClC9xB,KAAKiyB,YAAa,EAClBH,EAAM7vB,IAAI,UAAU,GACpBjC,KAAK4d,eAAetL,EAAY4B,MAAQhT,EAAEkc,cAAsBS,SAAS,GACzEiD,EAAc7e,IAAI,cAAU2F,KAG5B5H,KAAKiyB,YAAa,EAClBjyB,KAAKkyB,aAAc,EACnBpR,EAAc7e,IAAI,SAAU6vB,G,IAI9BtT,EAAUxd,OAAOC,GAAG,eAAe,KAClCjB,KAAK+d,UAAW,CAAI,IAGrBS,EAAUxd,OAAOC,GAAG,cAAc,KACjCjB,KAAK+d,UAAW,CAAK,IAGtB+T,EAAM7wB,GAAG,SAAU6vB,IAClBpqB,EAASzE,IAAI,QAAS6uB,EAAM,IAG7BgB,EAAM7wB,GAAG,YAAa8vB,IACrBrqB,EAASzE,IAAI,WAAY8uB,EAAS,IAGnCe,EAAM9wB,OAAOC,GAAG,iBAAiB,KAChCjB,KAAKijB,WAAW,IAGjB3Q,EAAYhM,OAASkY,EACrBlM,EAAYwf,MAAQA,EAEpB9xB,KAAKmyB,cAAcL,EAAO9nB,E,CAE5B,CAEUmoB,cAAcC,EAAuBhS,GAE/C,CAEU0E,oBAAoBlG,GAC7B,IAAI5e,KAAKiyB,WAAT,CAGA,GAAIjyB,KAAK+f,UAAUxc,OAAS,GAAKvD,KAAKkyB,YACrClyB,KAAKkyB,aAAc,EACnBlyB,KAAK6gB,eACL7gB,KAAKihB,2BAED,GAAIjhB,KAAKqd,kBACRrd,KAAK+d,SAAU,CACnB/d,KAAK+jB,WAAU,GACf/jB,KAAK+kB,iBACL/kB,KAAKqe,IAAIre,KAAKmgB,QAAU,CAAC,EAEzBngB,KAAKspB,UAAU1K,GAEf,MAAMtM,EAActS,KAAKoD,KAAKma,SAASvd,KAAKoD,KAAKG,OAAS,GAC1D+O,EAAYoD,KAAO,GACnBpD,EAAY4B,MAAQlU,KAAKmgB,OACzB7N,EAAY2N,OAAS,EACrB3N,EAAY8Q,SAAWpjB,KAAKqyB,oBAC5BryB,KAAKsyB,eAAehgB,GAEpBtS,KAAKM,MAAMU,OAAOulB,KAAK,cAAc,KACpCjU,EAAYwf,MAAM7vB,IAAI,UAAU,GAChCjC,KAAKiyB,YAAa,CAAI,IAGvBjyB,KAAK8gB,cAAc7e,IAAI,cAAU2F,GAEjC5H,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,O,CAIjEngB,KAAK+jB,WAAU,E,CAChB,CAEUuO,eAAeC,GAEzB,CAEUF,oBACT,MAAM3rB,EAAgB,CAAC,EAEjB8rB,EAAgBxyB,KAAKC,IAAI,iBACV,MAAjBuyB,IACH9rB,EAAS+rB,SAAWD,GAGrB,MAAME,EAAkB1yB,KAAKC,IAAI,mBACV,MAAnByyB,IACHhsB,EAASisB,WAAaD,GAGvB,MAAME,EAAkB5yB,KAAKC,IAAI,mBACV,MAAnB2yB,IACHlsB,EAASmsB,WAAaD,GAGvB,MAAME,EAAiB9yB,KAAKC,IAAI,kBACV,MAAlB6yB,IACHpsB,EAASqsB,UAAYD,GAGtB,MAAME,EAAYhzB,KAAKC,IAAI,aAK3B,OAJiB,MAAb+yB,IACHtsB,EAASiB,KAAOqrB,GAGV7W,KAASzb,IAAIgG,EACrB,CAEOgZ,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtBhK,KAAK8gB,cAAc7e,IAAI,cAAU2F,GACjC5H,KAAK+d,UAAW,CACjB,CAEUkV,kBAEV,CAEU/K,gBAAgBrI,EAAoB3L,G,MAC7C,MAAMqU,EAAUvoB,KAAKsoB,YAAYpU,GACjC,GAAIqU,EAAS,CACZ,MAAMjiB,EAASiiB,EAAQjiB,OAEvB,GAAIA,EAAQ,CACPA,EAAO0D,WAA4C,QAAhC9H,EAAAlC,KAAK8gB,cAAc7gB,IAAI,iBAAS,IAAAiC,OAAA,EAAAA,EAAE8H,UACxD6V,EAAS/b,KAAK,IAGwB,GAAlC9D,KAAK+f,UAAU9I,QAAQ/C,IAC1B2L,EAASzb,KAAK,GAIhB,MAAMgkB,EAAkBpoB,KAAKC,IAAI,kBAAmB,GAEpD,IAAIuxB,EAASlrB,EAAOkrB,SAEhB3C,EAAK2C,EAAOC,MAAQD,EAAOE,KAA0B,EAAlBtJ,EACnCzX,EAAK6gB,EAAOG,OAASH,EAAOI,IAAyB,EAAlBxJ,EAEvCvI,EAASxd,OAAO,CACfgmB,MAAOwG,EACP3oB,OAAQyK,EACR6F,EAAGgb,EAAOE,KAAOtJ,EACjBtiB,EAAG0rB,EAAOI,IAAMxJ,G,EAIpB,CAEOvgB,mBACN/H,MAAM+H,oBACF7H,KAAKiI,QAAQ,kBAAoBjI,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,mBAAqBjI,KAAKiI,QAAQ,eACzJ8B,OAAY/J,KAAK+f,WAAYrW,IAC5B1J,KAAK0jB,eAAeha,EAAE,GAGzB,CAEUga,eAAexP,EAAekP,GACvCtjB,MAAM4jB,eAAexP,EAAOkP,GAC5B,IAAImF,EAAUvoB,KAAKsoB,YAAYpU,GAE/B,GAAIqU,EAAS,CACZ,IAAIuJ,EAAQvJ,EAAQuJ,MAEpB,GAAIA,EAAO,CACV,IAAIprB,EAAW6hB,EAAQnF,SAEvB,MAAM8P,EAAgB,CACrBT,SAAUzyB,KAAKC,IAAI,iBACnB0yB,WAAY3yB,KAAKC,IAAI,mBACrB4yB,WAAY7yB,KAAKC,IAAI,mBACrB8yB,UAAW/yB,KAAKC,IAAI,kBACpB0H,KAAM3H,KAAKC,IAAI,aACfkkB,UAAWnkB,KAAKC,IAAI,cAGfujB,EAAesO,EAAMtlB,OAAOiX,OAAO,WACrCyP,GACH1T,QAAa0T,GAAe,CAACzuB,EAAK2F,KACjC0nB,EAAM7vB,IAAIwC,EAAY2F,GACtBoZ,EAAavhB,IAAIwC,EAAY2F,GACzB1D,GACHA,EAASzE,IAAIwC,EAAK2F,E,KAMxB,CAEUua,uBAAuB/F,GAEhC,MAAM7e,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWihB,kBAAkBpC,EAE/B,CAEUgG,sBAAsBhG,GAC/B,MAAM7e,EAAaC,KAAKmf,iBACpBpf,GACHA,EAAWohB,iBAAiBvC,GAG7B5e,KAAKM,MAAMU,OAAOulB,KAAK,cAAc,KACpCvmB,KAAK+iB,iBAAiBnE,EAAM7H,OAAO/M,SAA6C,GAElF,CAEOqc,cAAcC,GACpBtmB,KAAKuc,MAAMnD,MAAMoN,IAChBA,EAAKvkB,IAAI,iBAAkBqkB,EAAQ,GAErC,EA5SA3mB,OAAAC,eAAAiyB,GAAA,a,gDAAkC,gBAClClyB,OAAAC,eAAAiyB,GAAA,c,gDAA0C9I,GAAe1kB,WAAWC,OAAO,CAACutB,GAAYttB,c,sBCnCnF,MAAO4uB,WAAsBtB,GAAnCnyB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,WAoJlB,CAlJWuyB,cAAcL,EAAc9nB,GACrC,MAAMsI,EAActI,EAASsI,YACvB8gB,EAAatB,EAAM7vB,IAAI,aAAcoxB,KAAiB3yB,IAAIV,KAAKM,MAAO,CAAEK,UAAW,CAAC,YAAc2R,EAAYghB,aACpHhhB,EAAY8gB,WAAaA,CAC1B,CAEUtU,aAAaN,EAAsBxU,GAC5ClK,MAAMgf,aAAaN,EAAWxU,GAE9BwU,EAAUxd,OAAOuyB,IAAI,SAErB,MAAMjhB,EAActI,EAASsI,YACvB5L,EAAW4L,EAAY8Q,SAE7B,GAAI1c,EAAU,CACb,MAAMorB,EAAQ9xB,KAAK+V,WAAW,SAC9B,GAAI+b,EAAO,CACVA,EAAM9wB,OAAOC,GAAG,mBAAmB,KAClCjB,KAAKM,MAAMU,OAAOulB,KAAK,cAAc,KACpCvmB,KAAKwzB,eAAe1B,EAAM,GACzB,IAGHA,EAAM9wB,OAAOC,GAAG,SAAUC,IACzB,MAAM4f,EAAgB9gB,KAAK8gB,cACvBA,EAAc7gB,IAAI,WAAa6xB,GAClC9xB,KAAKiyB,YAAa,EAClBH,EAAM7vB,IAAI,UAAU,GACpBjC,KAAK4d,eAAetL,EAAY4B,MAAQhT,EAAEkc,cAAsBS,SAAS,GACzEiD,EAAc7e,IAAI,cAAU2F,KAG5B5H,KAAKiyB,YAAa,EAClBjyB,KAAKkyB,aAAc,EACnBlyB,KAAK4d,eAAetL,EAAY4B,MAAQhT,EAAEkc,cAAsBS,SAAS,GACzEiD,EAAc7e,IAAI,SAAU6vB,IAEzB9xB,KAAKkd,iBACRld,KAAKmd,cAAc7K,EAAY4B,M,IAIjC4d,EAAM7wB,GAAG,SAAS,KACjBjB,KAAKwzB,eAAe1B,EAAM,IAG3BA,EAAM7wB,GAAG,YAAY,KACpBjB,KAAKwzB,eAAe1B,EAAM,IAG3BA,EAAMzvB,OAAO,CAAEia,WAAW,IAE1BwV,EAAM7wB,GAAG,KAAMuV,IACd9P,EAASzE,IAAI,IAAKuU,EAAE,IAGrBsb,EAAM7wB,GAAG,KAAM6E,IACdY,EAASzE,IAAI,IAAK6D,EAAE,IAGrB,MAAM0d,EAAesO,EAAMtlB,OAAOiX,OAAO,WACzCoB,YAAW,KACViN,EAAM2B,QAAQ,CAAEhvB,IAAK,IAAKivB,IAAK5B,EAAM5rB,SAAW,EAAI,GAAIytB,KAAM,EAAG5vB,SAAUyf,EAAavjB,IAAI,yBAA0B,KAAM2zB,OAAQpQ,EAAavjB,IAAI,uBAAwB4zB,OAAUA,YAAgB,GACrM,G,EAGN,CAEUL,eAAe1B,GACxB,MAAMsB,EAAatB,EAAM7xB,IAAI,cAC7B,GAAImzB,aAAsBC,KAAkB,CAC3C,MAAMS,EAAShC,EAAMgC,OACrB,GAAIA,EAAQ,CACX,IAAIxS,EAAQwS,EAAOC,SAAS,CAAEvd,EAAG,EAAG1Q,EAAG,IACvCwb,EAAQ8R,EAAW7R,QAAQD,GAC3B8R,EAAW/wB,OAAO,CAAE2xB,SAAU1S,EAAM9K,EAAGyd,SAAU3S,EAAMxb,G,EAIzD9F,KAAKijB,WACN,CAEUqP,eAAehgB,GACxBA,EAAYghB,WAAatzB,KAAKk0B,gBAC/B,CAEUjB,kBAEV,CAEUiB,iBACT,MAAMxtB,EAAgB,CAAC,EAEjBiB,EAAO3H,KAAKC,IAAI,aACV,MAAR0H,IACHjB,EAASiB,KAAOA,GAGjB,MAAM4P,EAAcvX,KAAKC,IAAI,eACV,MAAfsX,IACH7Q,EAAS6Q,YAAcA,GAGxB,MAAM8L,EAAgBrjB,KAAKC,IAAI,iBACV,MAAjBojB,IACH3c,EAAS2c,cAAgBA,GAG1B,MAAM3b,EAAS1H,KAAKC,IAAI,eAKxB,OAJc,MAAVyH,IACHhB,EAASgB,OAASA,GAGZyU,KAASzb,IAAIgG,EACrB,CAEUgd,eAAexP,EAAekP,GACvCtjB,MAAM4jB,eAAexP,EAAOkP,GAE5B,MAAMmF,EAAUvoB,KAAKsoB,YAAYpU,GACjC,GAAIqU,GAAWnF,EAAU,CACxB,MAAMgQ,EAAa7K,EAAQ6K,WAE3B,GAAIA,EAAY,CACf,IAAI1sB,EAAW6hB,EAAQ+K,gBAEF1rB,GAAjBwb,EAASzb,OACZyrB,EAAWnxB,IAAI,OAAQmhB,EAASzb,MAChCjB,EAASzE,IAAI,OAAQmhB,EAASzb,YAEHC,GAAxBwb,EAAS7L,cACZ6b,EAAWnxB,IAAI,cAAemhB,EAAS7L,aACvC7Q,EAASzE,IAAI,cAAemhB,EAAS7L,mBAER3P,GAA1Bwb,EAASC,gBACZ+P,EAAWnxB,IAAI,gBAAiBmhB,EAASC,eACzC3c,EAASzE,IAAI,gBAAiBmhB,EAASC,qBAGjBzb,GAAnBwb,EAAS1b,SACZ0rB,EAAWnxB,IAAI,SAAUmhB,EAAS1b,QAClChB,EAASzE,IAAI,SAAUmhB,EAAS1b,Q,EAIpC,EA1JA/H,OAAAC,eAAAuzB,GAAA,a,gDAAkC,kBAClCxzB,OAAAC,eAAAuzB,GAAA,c,gDAA0CtB,GAAYxtB,WAAWC,OAAO,CAAC6uB,GAAc5uB,c,cCFlF,MAAO4vB,WAAsBnY,GAAnCtc,c,oBAQCC,OAAAC,eAAA,kB,gDAAsC,KAEtCD,OAAAC,eAAA,a,gDAAiB,YACjBD,OAAAC,eAAA,iB,gDAA6B,IAC7BD,OAAAC,eAAA,iB,gDAA6B,IAY7BD,OAAAC,eAAA,iB,gDAAkDI,KAAKe,YAAY,IAAImb,KACtEC,KAASzb,IAAI,CAAE0zB,QAAS,EAAGC,QAAS,KACpC,IAAMC,KAAQlY,KAAKpc,KAAKM,MAAO,CAAE8zB,QAAS,EAAGC,QAAS,EAAGrX,cAAe,YAAc,CAAChd,KAAKu0B,SAAS7tB,eAgYvG,CAzYQ8tB,cACN,MAAMC,EAAUz0B,KAAKu0B,SAAS9V,OAG9B,OAFAze,KAAKgpB,cAAc/lB,SAASzC,KAAKi0B,GACjCz0B,KAAKu0B,SAAS/zB,KAAKi0B,GACZA,CACR,CAOU50B,YACTC,MAAMD,YAENG,KAAKyD,WAAW,mBAAmB,GAEnCzD,KAAKyI,QAAQ/B,SAASzE,IAAI,WAAW,GACrCjC,KAAKyG,MAAMC,SAASzE,IAAI,WAAW,GAEnC,MAAMyyB,EAAkB10B,KAAKu0B,SAAS7tB,SACtCguB,EAAgB1zB,OAAOC,GAAG,eAAgBC,IACzClB,KAAKge,oBAAoB9c,EAAE6V,OAAO9W,IAAI,YAAY,IASnDy0B,EAAgB1zB,OAAOC,GAAG,aAAcC,IACvClB,KAAK0d,cAAcxc,EAAGA,EAAE6V,OAAO9W,IAAI,YAAY,IAGhDy0B,EAAgB1zB,OAAOC,GAAG,YAAaC,IACtClB,KAAK8d,aAAa5c,EAAGA,EAAE6V,OAAO9W,IAAI,YAAY,IAG/Cy0B,EAAgB1zB,OAAOC,GAAG,SAAUC,IACnC,MAAMgT,EAAQhT,EAAE6V,OAAO9W,IAAI,YACvBD,KAAKkd,gBACRld,KAAKmd,cAAcjJ,GAGnBlU,KAAK4d,eAAe1J,EAAQhT,EAAEkc,cAAsBS,Q,GAGvD,CAEU6F,eAAexP,EAAekP,GAEvC,IAAI1c,EADJ5G,MAAM4jB,eAAexP,EAAOkP,GAE5BrZ,OAAY/J,KAAKsD,WAAY0G,IAC5B,MAAMsI,EAActI,EAASsI,YACzBA,EAAY4B,OAASA,GACpB5B,EAAY8Q,WACf1c,EAAW4L,EAAY8Q,S,IAK1B,MAAMqR,EAAUz0B,KAAK8f,WAAW9f,KAAKu0B,SAAUrgB,GAC/C,GAAIugB,EAAS,CACZ,MAAMjR,EAAeiR,EAAQjoB,OAAOiX,OAAO,WAC3CjE,QAAa4D,GAAU,CAAC3e,EAAK2F,KAC5BqqB,EAAQxyB,IAAIwC,EAAY2F,GACxBoZ,EAAavhB,IAAIwC,EAAY2F,GACzB1D,GACHA,EAASzE,IAAIwC,EAAK2F,E,IAItB,CAEUgX,oBAAoBxC,EAA4B1K,GACzDpU,MAAMshB,oBAAoBxC,EAAO1K,GAEjC,MAAMygB,EAAQ30B,KAAKqe,IAAInK,GACjB0gB,EAAMD,EAAS,EACfE,EAAMF,EAAS,EACfG,EAAMH,EAAS,EACfI,EAAMJ,EAAS,EAEflzB,EAAQzB,KAAKC,IAAI,SAEvB,GAAI20B,GAAOC,GAAOC,GAAOC,EAAK,CAC7B,MAAMC,EAAYvzB,EAAMsgB,gBAAgBgT,EAAI90B,IAAI,SAAU,IACpDg1B,EAAYxzB,EAAMsgB,gBAAgB+S,EAAI70B,IAAI,SAAU,IAE1D,IAAIi1B,EAAKl1B,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB0tB,GAAaC,EAAYD,GAAa,IACrFh1B,KAAK6iB,YAAYgS,EAAK,SAAUK,GAChCl1B,KAAK6iB,YAAY+R,EAAK,SAAUM,GAEhCl1B,KAAK8iB,cAAc+R,EAAKK,GACxBl1B,KAAK8iB,cAAc8R,EAAKM,E,CAE1B,CAGUzQ,qBAAqB7F,GAC9B,MAAM5U,EAAW4U,EAAM7H,OAAO/M,SAExBmrB,EAAanrB,EAAS/J,IAAI,UAC1Bm1B,EAAgBprB,EAAS/J,IAAI,aAC7Bo1B,EAAarrB,EAAS/J,IAAI,UAEhCH,MAAM2kB,qBAAqB7F,GAE3B,MAAM6K,EAAYzpB,KAAKymB,kBACvB,GAAIzc,GAAYyf,EAAW,CAC1B,MAAMnX,EAActI,EAASsI,YACvB4B,EAAQ5B,EAAY4B,MACpB+L,EAAS3N,EAAY2N,OAErBxe,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBiK,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAEzFuY,EAAK,SACLE,EAAK,SACL2S,EAAM,gBAENX,EAAQ30B,KAAKqe,IAAInK,GACjB0gB,EAAMD,EAAS,EACfE,EAAMF,EAAS,EACfG,EAAMH,EAAS,EACfI,EAAMJ,EAAS,EAGrB,GAAIC,GAAOC,GAAOC,GAAOC,EAAK,CAC7B,GAAc,KAAV9U,EAAe,CAClB,MAAMsV,EAAUV,EAAI50B,IAAIq1B,EAAK,GAC7Bt1B,KAAK6iB,YAAY+R,EAAKjS,EAAIpY,GAAQ,GAElC,IAAIirB,EAAKD,GAAWhrB,EAASgrB,GAAW,EAExCv1B,KAAK6iB,YAAYiS,EAAKnS,EAAI6S,GAAI,GAC9Bx1B,KAAK6iB,YAAYkS,EAAKpS,EAAI6S,GAAI,GAC9Bx1B,KAAK6iB,YAAY+R,EAAKnS,EAAI0S,GAE1BP,EAAI3yB,IAAI,YAAamzB,E,CAGtB,GAAc,KAAVnV,EAAe,CAClB,MAAMsV,EAAUX,EAAI30B,IAAIq1B,EAAK,GAE7Bt1B,KAAK6iB,YAAYgS,EAAKlS,EAAIpY,GAAQ,GAElC,IAAIirB,EAAKD,GAAWhrB,EAASgrB,GAAW,EAExCv1B,KAAK6iB,YAAYiS,EAAKnS,EAAI6S,GAAI,GAC9Bx1B,KAAK6iB,YAAYkS,EAAKpS,EAAI6S,GAAI,GAC9Bx1B,KAAK6iB,YAAYgS,EAAKpS,EAAI0S,GAE1BN,EAAI5yB,IAAI,YAAamzB,E,CAGtB,GAAc,KAAVnV,EAAe,CAClB,MAAMwV,EAAUX,EAAI70B,IAAIwiB,EAAI,GACtBiT,EAAaj0B,EAAMsgB,gBAAgB0T,GACnCE,EAAYl0B,EAAMsgB,gBAAgB7X,GAExClK,KAAK6iB,YAAYkS,EAAKtS,EAAIvY,GAC1BlK,KAAK8iB,cAAciS,EAAK7qB,GAExB,IAAI0rB,EAAOF,GAAcC,EAAYD,GAAc,EAC/CR,EAAKl1B,KAAK0iB,WAAWjhB,EAAM6F,gBAAgBsuB,IAC/C51B,KAAK6iB,YAAYgS,EAAKpS,EAAIyS,GAC1Bl1B,KAAK6iB,YAAY+R,EAAKnS,EAAIyS,GAE1Bl1B,KAAK8iB,cAAc+R,EAAKK,GACxBl1B,KAAK8iB,cAAc8R,EAAKM,GAExBl1B,KAAK6iB,YAAYkS,EAAKpS,EAAI0S,GAAY,E,CAEvC,GAAc,KAAVpV,EAAe,CAClB,MAAMwV,EAAUV,EAAI90B,IAAIwiB,EAAI,GACtBiT,EAAaj0B,EAAMsgB,gBAAgB0T,GACnCE,EAAYl0B,EAAMsgB,gBAAgB7X,GAExClK,KAAK6iB,YAAYiS,EAAKrS,EAAIvY,GAC1BlK,KAAK8iB,cAAcgS,EAAK5qB,GAExB,IAAI0rB,EAAOF,GAAcC,EAAYD,GAAc,EAC/CR,EAAKl1B,KAAK0iB,WAAWjhB,EAAM6F,gBAAgBsuB,IAE/C51B,KAAK6iB,YAAYgS,EAAKpS,EAAIyS,GAC1Bl1B,KAAK6iB,YAAY+R,EAAKnS,EAAIyS,GAE1Bl1B,KAAK8iB,cAAc+R,EAAKK,GACxBl1B,KAAK8iB,cAAc8R,EAAKM,GAExBl1B,KAAK6iB,YAAYiS,EAAKnS,EAAI0S,GAAY,E,EAIxCr1B,KAAK+iB,iBAAiB/Y,E,CAExB,CAEU8a,oBAAoBlG,GACzB5e,KAAKqd,kBACRvd,MAAMglB,oBAAoBlG,GAErB5e,KAAK0kB,cACJ1kB,KAAK2d,YAUT3d,KAAK+jB,WAAU,GACf/jB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,SAV7B,GAA9BngB,KAAKihB,wBACRjhB,KAAK+kB,iBACL/kB,KAAK+jB,WAAU,GACf/jB,KAAK6gB,aAAajC,EAAM7H,QACxB/W,KAAKie,iBAAiB7Z,OACtBpE,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,UASjC,CAEUD,gBAAgBhM,EAAelK,GACxC,IAAKhK,KAAK61B,UAAU3hB,GAAQ,CAC3B,MAAMugB,EAAUz0B,KAAKw0B,cACrBC,EAAQqB,aAAa9rB,GACrBhK,KAAK61B,UAAU3hB,GAASugB,EACxBA,EAAQpyB,OAAO,CAAEoe,SAAUvM,KAClB,OAARlK,QAAQ,IAARA,OAAQ,EAARA,EAAUsI,aAAoBhM,OAASmuB,C,CAE1C,CAEUvO,mBAAmBtH,GAE5B,GADA9e,MAAMomB,mBAAmBtH,GACrB5e,KAAK2d,WAAY,CACpB,MAAM8L,EAAYzpB,KAAKymB,kBAEvB,GAAIgD,EAAW,CAEd,MAAMhoB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBiU,EAAQlU,KAAKmgB,OAGnB,GAFkBngB,KAAKqe,IAAInK,GAEZ,CACd,MAAM6hB,EAAM/1B,KAAKqe,IAAInK,GAAU,EACzB8hB,EAAMh2B,KAAKqe,IAAInK,GAAU,EACzB+hB,EAAMj2B,KAAKqe,IAAInK,GAAU,EACzBgiB,EAAMl2B,KAAKqe,IAAInK,GAAU,EAEzBqhB,EAAUv1B,KAAKm2B,SAEfR,EAAYl0B,EAAMggB,qBAAqBgI,EAAUjT,GACjDkf,EAAa11B,KAAKo2B,SAElBlsB,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAE/F,GAAI8rB,GAAOC,GAAOC,GAAOH,EAAK,CAC7B/1B,KAAK6iB,YAAYmT,EAAK,SAAUzrB,GAAQ,GAExC,MAAMirB,EAAKD,GAAWhrB,EAASgrB,GAAW,EACpCL,EAAKl1B,KAAK0iB,WAAWjhB,EAAM6F,gBAAgBouB,GAAcC,EAAYD,GAAc,IAEzF11B,KAAK6iB,YAAYqT,EAAK,SAAUV,GAAI,GACpCx1B,KAAK6iB,YAAYoT,EAAK,SAAUT,GAAI,GAEpCx1B,KAAK6iB,YAAYmT,EAAK,SAAUd,GAChCl1B,KAAK6iB,YAAYkT,EAAK,SAAUb,GAEhCl1B,KAAK8iB,cAAckT,EAAKd,GACxBl1B,KAAK8iB,cAAciT,EAAKb,GAExBl1B,KAAK6iB,YAAYqT,EAAK,SAAUhsB,GAChClK,KAAK8iB,cAAcoT,EAAKhsB,E,IAK7B,CAEUohB,WAAW1M,EAA4B1K,GAChD,MAAM9T,EAAQJ,KAAKI,MAEnB,GAAIA,EAAO,CACVJ,KAAKoD,KAAK5C,KAAK,CAAE4iB,SAAUpjB,KAAKq2B,sBAAuB3uB,OAAQ1H,KAAKokB,qBAAsBlQ,MAAOA,EAAO+L,OAAQ,IAAKV,UAAWvf,KAAKglB,aAErI,MAAMvjB,EAAQzB,KAAKC,IAAI,SACjBwC,EAAQzC,KAAKC,IAAI,SAEjBqhB,EAAQlhB,EAAM6F,cAAcsb,QAAQ3C,EAAM0C,OAChDthB,KAAKo2B,SAAW30B,EAAMggB,qBAAqBH,EAAM9K,GAEjD,MAAMtM,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgBtH,KAAKo2B,WACpD7rB,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBH,EAAMxb,IAAKoE,GAE3FlK,KAAKm2B,SAAW5rB,EAEhBvK,KAAKqe,IAAInK,GAAS,CAAC,EAEnBlU,KAAKspB,UAAUpf,EAAQK,EAAQ,IAAK2J,GACpClU,KAAKspB,UAAUpf,EAAQK,EAAQ,IAAK2J,GACpClU,KAAKspB,UAAUpf,EAAQK,EAAQ,IAAK2J,GACpClU,KAAKspB,UAAUpf,EAAQK,EAAQ,IAAK2J,E,CAEtC,CAEUoV,UAAUpf,EAAgBK,EAAgB0V,EAAgB/L,GACnElU,KAAKoD,KAAK5C,KAAK,CAAE+J,OAAQA,EAAQL,OAAQA,EAAQgK,MAAOA,EAAO+L,OAAQA,EAAQV,UAAWvf,KAAKglB,aAC/F,MAAMpb,EAAM5J,KAAKsD,UAAUC,OACrByG,EAAWhK,KAAKsD,UAAUsG,EAAM,GAClCI,IACHhK,KAAK8iB,cAAc9Y,EAAUE,GAC7BlK,KAAKyD,WAAW,aAAc,GAC9BzD,KAAKyD,WAAW,WAAYmG,GAE9B,CAEO4B,kBACN1L,MAAM0L,kBAEN,IAAI0I,EAAQ,EACZnK,OAAY/J,KAAKqe,KAAM/a,IACtB,GAAIA,EAAW,CACd,MAAMyyB,EAAMzyB,EAAa,EACnB0yB,EAAM1yB,EAAa,EACnB2yB,EAAM3yB,EAAa,EACnB4yB,EAAM5yB,EAAa,EACzB,GAAIyyB,GAAOC,GAAOC,GAAOC,EAAK,CAC7B,MAAMI,EAAKP,EAAI91B,IAAI,SACbs2B,EAAKP,EAAI/1B,IAAI,SACbu2B,EAAKN,EAAIj2B,IAAI,SACbw2B,EAAKR,EAAIh2B,IAAI,SAEnB,GAAIq2B,GAAMC,GAAMC,GAAMC,EAAI,CACzB,MAAMC,GAAMF,EAAGhgB,EAAIigB,EAAGjgB,GAAK,EACrBmgB,GAAMJ,EAAGzwB,EAAIwwB,EAAGxwB,GAAK,EACrB0Q,EAAIigB,EAAGjgB,EAAIkgB,EACX5wB,EAAIwwB,EAAGxwB,EAAI6wB,EACXlC,EAAUz0B,KAAK61B,UAAU3hB,GAC3BugB,GACHA,EAAQpyB,OAAO,CAAEmU,EAAGA,EAAG1Q,EAAGA,EAAGsuB,QAASsC,EAAIrC,QAASsC,G,GAKvDziB,GAAO,GAET,CAEOwL,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtB,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MACpBugB,EAAUz0B,KAAK61B,UAAU3hB,GAC3BugB,WACKz0B,KAAK61B,UAAU3hB,GACvBlU,KAAKu0B,SAASlzB,YAAYozB,GAC1BA,EAAQvoB,U,CAGX,CAEUmqB,sBACT,MAAM3vB,EAAW1G,KAAKokB,qBAEhBD,EAAYnkB,KAAKC,IAAI,aACV,MAAbkkB,GACHzd,EAASzE,IAAI,OAAQkiB,GAGtB,MAAM5M,EAAcvX,KAAKC,IAAI,eAK7B,OAJmB,MAAfsX,GACH7Q,EAASzE,IAAI,cAAesV,GAGtB7Q,CACR,CAEOga,eAAetW,GACrBtK,MAAM4gB,eAAetW,GACrBpK,KAAKu0B,SAAS7tB,SAASzE,IAAI,iBAAkBmI,EAC9C,CAEOuW,uBAAuBvW,GAC7BtK,MAAM6gB,uBAAuBvW,GAC7BpK,KAAKu0B,SAAS7tB,SAASzE,IAAI,iBAAkBmI,EAC9C,EAxZAzK,OAAAC,eAAAu0B,GAAA,a,gDAAkC,kBAClCx0B,OAAAC,eAAAu0B,GAAA,c,gDAA0CnY,GAAc3X,WAAWC,OAAO,CAAC6vB,GAAc5vB,cCXpF,MAAOqyB,WAAwB9M,GAArCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,aAwClB,CAtCWC,YACTC,MAAMD,YACNG,KAAKyD,WAAW,mBAAmB,GACnCzD,KAAKiC,IAAI,cAAc,EACxB,CAEUihB,eAAehP,GACxB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3BrR,EAAS7C,KAAKC,IAAI,UACxB,GAAI4C,GAAU4nB,GAAQC,EAAM,CAE3B,MAAMjpB,EAAQzB,KAAKC,IAAI,SAEvB,IAAIivB,EAAKlvB,KAAK0iB,WAAW+H,EAAKxqB,IAAI,WAC9BkvB,EAAKnvB,KAAK0iB,WAAWgI,EAAKzqB,IAAI,WAElC,MAAM0uB,EAAMltB,EAAMkmB,cAAc9kB,EAAQuE,KAAK+J,IAAI,EAAG1P,EAAMsgB,gBAAgBmN,KACpEN,EAAMntB,EAAMkmB,cAAc9kB,EAAQuE,KAAK4I,IAAI,EAAGvO,EAAMsgB,gBAAgBoN,KAEpE/H,EAAQpnB,KAAKC,IAAI,SAAW,IAElC,GAAI0uB,GAAOC,EAAK,CACf,IAAI7C,EAAK4C,EAAI1uB,IAAImnB,GACb4E,EAAK4C,EAAI3uB,IAAImnB,GAEjBpnB,KAAK6iB,YAAY4H,EAAM,SAAUsB,GAAI,GACrC/rB,KAAK6iB,YAAY6H,EAAM,SAAUsB,GAAI,GAErChsB,KAAK6iB,YAAY4H,EAAM,SAAUyE,GACjClvB,KAAK6iB,YAAY6H,EAAM,SAAUyE,GAEjCnvB,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,E,EAGzB,EA9CA/qB,OAAAC,eAAAg3B,GAAA,a,gDAAkC,oBAClCj3B,OAAAC,eAAAg3B,GAAA,c,gDAA0C9M,GAAiBzlB,WAAWC,OAAO,CAACsyB,GAAgBryB,cCFzF,MAAOsyB,WAA2B/M,GAAxCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,YAiIlB,CA/HWC,YACTC,MAAMD,YACNG,KAAKyI,QAAQ/B,SAASzE,IAAI,WAAW,EACtC,CAEUihB,eAAehP,GACxB,MAAMuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAIjC,GAFelU,KAAKC,IAAI,WAEVwqB,GAAQC,EAAM,CAC3B,IAAIwE,EAAKlvB,KAAK0iB,WAAW+H,EAAKxqB,IAAI,WAC9BkvB,EAAKnvB,KAAK0iB,WAAWgI,EAAKzqB,IAAI,WAElC,MAAMmnB,EAAQpnB,KAAKC,IAAI,SAAW,IAElC,IAAI8rB,EAAK/rB,KAAK4hB,WAAW6I,EAAKxqB,IAAImnB,GAAe8H,GAAI,GACjDlD,EAAKhsB,KAAK4hB,WAAW8I,EAAKzqB,IAAImnB,GAAe+H,GAAI,GAErDnvB,KAAK6iB,YAAY4H,EAAM,SAAUsB,GAAI,GACrC/rB,KAAK6iB,YAAY6H,EAAM,SAAUsB,GAAI,GAErChsB,KAAK+iB,iBAAiB0H,GACtBzqB,KAAK+iB,iBAAiB2H,E,CAExB,CAEOlf,kBAEN1L,MAAM0L,kBAEN,MAAMpL,EAAQJ,KAAKI,MAEnB,GADAJ,KAAKyG,MAAM0S,QACP/Y,EACH,IAAK,IAAIsJ,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAC5C,MAAMwgB,EAAOlqB,KAAKqqB,OAAO3gB,GACzB,GAAIwgB,EAAM,CACT,MAAMO,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GAEvB4I,EADKtS,KAAKqe,IAAI3U,GAAM,EACH4I,YAEjBwkB,EAAQ92B,KAAKksB,SAASlsB,KAAKyG,OAC3BswB,EAAQ/2B,KAAKksB,SAASlsB,KAAKyG,OAGjC,IAAK,IAAIwH,EADKjO,KAAKsD,UAAU2T,QAAQwT,GACjBxc,GAAK,EAAGA,IAAK,CAChC,MACMvH,EADc1G,KAAKsD,UAAU2K,GAAGqE,YACT3K,KACzBjB,IACHowB,EAAMpwB,SAAWA,EACjBqwB,EAAMrwB,SAAWA,E,CAInB,MAAM+Z,EAAW,CAACzgB,KAAKsD,UAAU2T,QAAQwT,GAAOzqB,KAAKsD,UAAU2T,QAAQyT,IAEvE,IAAIvG,EAAYnkB,KAAKC,IAAI,YAAaD,KAAKC,IAAI,SAE/C,MAAM0jB,EAAerR,EAAY3K,KAE7Bgc,IACHQ,EAAYR,EAAa1jB,IAAI,SAG9B,MAAMmjB,EAAW,CAAE3C,SAAUA,EAAU9Y,KAAMwc,GAC7C2S,EAAMz0B,OAAO+gB,GACb2T,EAAM10B,OAAO+gB,GACb2T,EAAM90B,IAAI,iBAAiB,GAE3B,MAAM0oB,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SAEpB,GAAI0qB,GAAMC,EAAI,CACb,MAAMxI,GAAMwI,EAAG9kB,EAAI6kB,EAAG7kB,GAAK,EACrBkxB,EAAMrM,EAAG7kB,EAAIsc,EACb6U,EAAMtM,EAAG7kB,EAAS,EAALsc,EACb8U,EAAMvM,EAAG7kB,EAAS,EAALsc,EAEnB8H,EAAKjoB,IAAI,QAASkqB,IACjBA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGmU,EAAG7kB,GAExBqmB,EAAQC,OAAOzB,EAAGnU,EAAGwgB,GACrB7K,EAAQE,OAAOzB,EAAGpU,EAAGwgB,GAErB7K,EAAQC,OAAOzB,EAAGnU,EAAGygB,GACrB9K,EAAQE,OAAOzB,EAAGpU,EAAGygB,GAErB9K,EAAQC,OAAOzB,EAAGnU,EAAG0gB,GACrB/K,EAAQE,OAAOzB,EAAGpU,EAAG0gB,GAErB/K,EAAQC,OAAOzB,EAAGnU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,EAAE,IAG3BgxB,EAAM70B,IAAI,QAASkqB,IAClBA,EAAQC,OAAOzB,EAAGnU,EAAGmU,EAAG7kB,GACxBqmB,EAAQE,OAAOzB,EAAGpU,EAAGmU,EAAG7kB,GAExBqmB,EAAQE,OAAOzB,EAAGpU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGoU,EAAG9kB,GACxBqmB,EAAQE,OAAO1B,EAAGnU,EAAGmU,EAAG7kB,EAAE,IAG3BixB,EAAM90B,IAAI,QAASkqB,IAClBA,EAAQC,OAAOzB,EAAGnU,EAAGwgB,GACrB7K,EAAQE,OAAOzB,EAAGpU,EAAGwgB,GAErB7K,EAAQE,OAAOzB,EAAGpU,EAAG0gB,GACrB/K,EAAQE,OAAO1B,EAAGnU,EAAG0gB,GACrB/K,EAAQE,OAAO1B,EAAGnU,EAAGwgB,EAAI,G,GAM/B,CAEUrK,YAEV,CAEU3B,cAEV,EAvIArrB,OAAAC,eAAAi3B,GAAA,a,gDAAkC,uBAClCl3B,OAAAC,eAAAi3B,GAAA,c,gDAA0C/M,GAAiBzlB,WAAWC,OAAO,CAACuyB,GAAmBtyB,c,aCmB5F,MAAO4yB,WAAwBrN,GAArCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,cACjBD,OAAAC,eAAA,gB,gDAAyC,KACzCD,OAAAC,eAAA,e,gDAA2C,KAC3CD,OAAAC,eAAA,iB,gDAA6C,KAmB7CD,OAAAC,eAAA,e,gDAA8CI,KAAKe,YAAY,IAAImb,KAClEC,KAASzb,IAAI,CAAC,IACd,IAAM02B,KAAMhb,KAAKpc,KAAKM,MAAO,CAAC,EAAG,CAACN,KAAKoW,OAAO1P,eAmMhD,CAnNQ2wB,YACN,MAAMvF,EAAQ9xB,KAAKoW,OAAOqI,OAG1B,OAFAze,KAAKie,iBAAiBhb,SAASzC,KAAKsxB,GACpC9xB,KAAKoW,OAAO5V,KAAKsxB,GACVA,CACR,CAcOtmB,kBACN1L,MAAM0L,kBACNxL,KAAKs3B,qBACN,CAEUra,UAAU3W,GACnB,OAAOA,EAAOrG,IAAI,WACnB,CAEUq3B,sBAGT,GAFct3B,KAAKI,MAER,CACV,MAAMqC,EAAQzC,KAAKC,IAAI,SAEvB,IAAK,IAAIyJ,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAE5C,GADa1J,KAAKqqB,OAAO3gB,GACf,CACT,MAAM+gB,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GAE7B,GAAI+gB,GAAQC,EAAM,CAEjB,MAAMC,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SAEpB,GAAI0qB,GAAMC,EAAI,CACb,MAAM2M,EAAWv3B,KAAKC,IAAI,WAAY,IACtC,IAAIqK,EAAY,EAEhB,MAAM8L,EAASpW,KAAKw3B,QAAQ9tB,GACtBjB,EAAUzI,KAAKy3B,SAAS/tB,GACxBjD,EAAQzG,KAAK03B,OAAOhuB,GAE1B,IAAK,IAAIA,EAAI,EAAGA,EAAI6tB,EAASh0B,OAAQmG,IAAK,CACzC,MAAMU,EAAQmtB,EAAS7tB,GAAK,EAEtBooB,EAAQ1b,EAAO1M,GAEf/B,EAAOlB,EAAMiD,GACbhC,EAASe,EAAQiB,GAEvB,IAAIya,EAAYnkB,KAAKC,IAAI,SAAU,IAAIyJ,GACnC2a,EAAcF,EAElBxc,EAAK1F,IAAI,OAAQkiB,GACjBxc,EAAK1F,IAAI,cAAejC,KAAKC,IAAI,cAAe,IAChDyH,EAAOzF,IAAI,SAAUoiB,GACrB3c,EAAOzF,IAAI,gBAAiBjC,KAAKC,IAAI,gBAAiB,IAEtD,MAAM8rB,EAAKpB,EAAG7kB,GAAK8kB,EAAG9kB,EAAI6kB,EAAG7kB,GAAKwE,EAC5B0hB,EAAKrB,EAAG7kB,GAAK8kB,EAAG9kB,EAAI6kB,EAAG7kB,IAAMsE,EAE7Bsd,EAAYjlB,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBuK,IAEnErkB,EAAKlE,WAAW,WAAW,GAC3BiE,EAAOjE,WAAW,WAAW,GAE7BkE,EAAK1F,IAAI,QAASkqB,IACjBA,EAAQC,OAAOzB,EAAGnU,EAAGuV,GACrBI,EAAQE,OAAOzB,EAAGpU,EAAGuV,GAErBI,EAAQE,OAAOzB,EAAGpU,EAAGwV,GACrBG,EAAQE,OAAO1B,EAAGnU,EAAGwV,GACrBG,EAAQE,OAAO1B,EAAGnU,EAAGuV,EAAG,IAGzBrkB,EAAOzF,IAAI,QAASkqB,IACnBA,EAAQC,OAAOzB,EAAGnU,EAAGwV,GACrBG,EAAQE,OAAOzB,EAAGpU,EAAGwV,EAAG,IAGzB,MAAMhiB,EAAW8nB,EAAM9nB,SACnBA,GACHA,EAAS/H,IAAI,QAAgBylB,GAG9BoK,EAAMzvB,OAAO,CAAEmU,EAAGoU,EAAGpU,EAAG1Q,EAAGkmB,EAAIrkB,KAAMwc,IACrC2N,EAAMpc,KAAKiiB,gBAEXrtB,GAAaF,C,MAOpB,CAEU8V,gBAAgBhM,GAGzB,GAFApU,MAAMogB,gBAAgBhM,IAEjBlU,KAAK03B,OAAOxjB,GAAQ,CAExB,MAAM0jB,EAAW,GACXC,EAAW,GACXC,EAAa,GAEbP,EAAWv3B,KAAKC,IAAI,WAAY,IAEtC,IAAK,IAAIyJ,EAAI,EAAGA,EAAI6tB,EAASh0B,OAAQmG,IAAK,CACzC,MAAMooB,EAAQ9xB,KAAKq3B,YACbrtB,EAAWhK,KAAKkF,aAAa,CAAC,GACpC8E,EAAS/H,IAAI,WAAmBs1B,EAAS7tB,IACzCooB,EAAMgE,aAAa9rB,GACnB4tB,EAASp3B,KAAKsxB,GAEd,MAAMnqB,EAAO3H,KAAKksB,SAASlsB,KAAKyG,OAChCoxB,EAASr3B,KAAKmH,GACdA,EAAK1F,IAAI,WAAYiS,GACrBvM,EAAK6E,OAAOurB,OAAO,SAEnB,MAAMrwB,EAAS1H,KAAKg4B,WAAWh4B,KAAKyI,SACpCf,EAAOzF,IAAI,WAAYiS,GACvB4jB,EAAWt3B,KAAKkH,E,CAGjB1H,KAAKw3B,QAAQtjB,GAAS0jB,EACtB53B,KAAK03B,OAAOxjB,GAAS2jB,EACrB73B,KAAKy3B,SAASvjB,GAAS4jB,C,CAEzB,CAEUnL,YAEV,CAEUsL,cAEV,CAEUjN,cAEV,CAEUkN,iBAEV,CAsBOxY,gBAAgB1V,GACtBlK,MAAM4f,gBAAgB1V,GACtB,MAAMsI,EAActI,EAASsI,YAC7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MACpBkC,EAASpW,KAAKw3B,QAAQtjB,GACtBzN,EAAQzG,KAAK03B,OAAOxjB,GACpBzL,EAAUzI,KAAKy3B,SAASvjB,GAE1BkC,IACHrM,OAAYqM,GAAS+hB,IACpBA,EAAKjsB,UACLlM,KAAKoW,OAAO/U,YAAY82B,EAAK,WAGtBn4B,KAAKw3B,QAAQtjB,IAElBzN,IACHsD,OAAYtD,GAAQ0xB,IACnBn4B,KAAKyG,MAAMpF,YAAY82B,GACvBA,EAAKjsB,SAAS,WAEPlM,KAAK03B,OAAOxjB,IAEjBzL,IACHsB,OAAYtB,GAAU0vB,IACrBn4B,KAAKyI,QAAQpH,YAAY82B,GACzBA,EAAKjsB,SAAS,WAEPlM,KAAKy3B,SAASvjB,G,CAGzB,EAjOAvU,OAAAC,eAAAu3B,GAAA,a,gDAAkC,oBAClCx3B,OAAAC,eAAAu3B,GAAA,c,gDAA0CrN,GAAiBzlB,WAAWC,OAAO,CAAC6yB,GAAgB5yB,cCtBzF,MAAO6zB,WAAgCjB,GAA7Cz3B,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,qBAkIlB,CAhIWy4B,mBAAmBnkB,GAC5B,MAAM5Q,EAAYtD,KAAKqe,IAAInK,GAE3B,GAAI5Q,EAAW,CACd,MAAMmnB,EAAOnnB,EAAc,GACrBonB,EAAOpnB,EAAc,GACvBmnB,GAAQC,IACX1qB,KAAK6iB,YAAY6H,EAAM,SAAUD,EAAKxqB,IAAI,SAAU,IAAI,GACxDwqB,EAAKlb,OAAO,YAAa,GACzBmb,EAAKnb,OAAO,YAAa,G,CAG5B,CAEU2T,eAAehP,GACxBpU,MAAMojB,eAAehP,GACrBlU,KAAKq4B,mBAAmBnkB,EACzB,CAEOojB,sBACN,MAAMl3B,EAAQJ,KAAKI,MAEnB,GAAIA,EACH,IAAK,IAAIsJ,EAAI,EAAGA,EAAI1J,KAAKqqB,OAAO9mB,OAAQmG,IAAK,CAE5C,GADa1J,KAAKqqB,OAAO3gB,GACf,CACT,MAAM+gB,EAAOzqB,KAAKqe,IAAI3U,GAAO,GACvBghB,EAAO1qB,KAAKqe,IAAI3U,GAAO,GACvBwE,EAAKlO,KAAKqe,IAAI3U,GAAM,EAEpBihB,EAAKF,EAAKxqB,IAAI,SACd2qB,EAAKF,EAAKzqB,IAAI,SAEdq4B,EAAQ7N,EAAW,KACnB8N,EAAQ7N,EAAW,KAEnBjpB,EAAQzB,KAAKC,IAAI,SAEvB,GAAIq4B,GAASC,GAASrqB,EAAI,CACzB,MAAMif,EAAUmL,EAAc,OAExBE,EADUD,EAAc,OACPpL,EAEvB,GAAIxC,GAAMC,EAAI,CACb,MAAMtY,EAAcpE,EAAGoE,YAEjBilB,EAAWv3B,KAAKC,IAAI,WAAY,IAChCmW,EAASpW,KAAKw3B,QAAQ9tB,GACtBjD,EAAQzG,KAAK03B,OAAOhuB,GACpBjB,EAAUzI,KAAKy3B,SAAS/tB,GAE9B,IAAK,IAAIA,EAAI,EAAGA,EAAI6tB,EAASh0B,OAAQmG,IAAK,CACzC,MAAMU,EAAQmtB,EAAS7tB,GACjBooB,EAAQ1b,EAAO1M,GACf/B,EAAOlB,EAAMiD,GACbhC,EAASe,EAAQiB,GAEvB1J,KAAKgpB,cAAc/lB,SAASsiB,UAAU5d,EAAM,GAE5C,MAAM8wB,EAAWtL,EAAUqL,EAAOpuB,EAC5B8kB,EAAKvE,EAAGnU,EACR2Y,EAAK1tB,EAAMxB,IAAI,YAAYy4B,qBAAqBj3B,EAAMsgB,gBAAgB0W,IAEtE1M,EAAK,EACLC,EAAK5rB,EAAM6F,cAAcC,SAE/ByB,EAAKlE,WAAW,WAAW,GAC3BiE,EAAOjE,WAAW,WAAW,GAE7B,MAAMkgB,EAAerR,EAAY3K,KACjC,IAAIwc,EAAYnkB,KAAKC,IAAI,SAAU,IAAIyJ,GACnC2a,EAAcF,EAgBlB,GAdAxc,EAAK1F,IAAI,cAA4C,GAA7BjC,KAAKC,IAAI,cAAe,IAChDyH,EAAOzF,IAAI,gBAAiBjC,KAAKC,IAAI,gBAAiB,IAEjDkkB,IAEAR,IACHQ,EAAYR,EAAa1jB,IAAI,SAGzBkkB,IACJA,EAAYnkB,KAAKC,IAAI,YAAaD,KAAKC,IAAI,OAAQuI,YAAM,QAItD6b,EAAa,CACjB,MAAM9F,EAAiBjM,EAAY5K,OAC/B6W,IACH8F,EAAc9F,EAAete,IAAI,WAE7BokB,IACJA,EAAcrkB,KAAKC,IAAI,cAAeD,KAAKC,IAAI,SAAUuI,YAAM,K,CAIjEb,EAAK1F,IAAI,OAAQkiB,GACjBzc,EAAOzF,IAAI,SAAUoiB,GAGrB1c,EAAK1F,IAAI,QAASkqB,IACjBA,EAAQC,OAAO8C,EAAInD,GACnBI,EAAQE,OAAO8C,EAAIpD,GACnBI,EAAQE,OAAO8C,EAAInD,GACnBG,EAAQE,OAAO6C,EAAIlD,GACnBG,EAAQE,OAAO6C,EAAInD,EAAG,IAGvBrkB,EAAOzF,IAAI,QAASkqB,IACnBA,EAAQC,OAAO+C,EAAIpD,GACnBI,EAAQE,OAAO8C,EAAInD,EAAG,IAGvB,MAAMhiB,EAAW8nB,EAAM9nB,SACnBA,GACHA,EAAS/H,IAAI,QAAgBmI,GAG9B0nB,EAAMzvB,OAAO,CAAEmU,EAAG2Y,EAAIrpB,EAAGkmB,EAAI5J,IAAK,KAClC0P,EAAMpc,KAAKiiB,e,KAOlB,EAxIAh4B,OAAAC,eAAAw4B,GAAA,a,gDAAkC,4BAClCz4B,OAAAC,eAAAw4B,GAAA,c,gDAA0CjB,GAAgB9yB,WAAWC,OAAO,CAAC8zB,GAAwB7zB,cCAhG,MAAOo0B,WAA4B7O,GAAzCpqB,c,oBAQCC,OAAAC,eAAA,a,gDAAiB,OA8ElB,CA3EWC,YACTC,MAAMD,YACNG,KAAK+pB,MAAMrjB,SAASzE,IAAI,eAAe,EACxC,CAEUwiB,qBAAqB7F,GAC9B9e,MAAM2kB,qBAAqB7F,GAE3B,MACMtM,EADWsM,EAAM7H,OAAO/M,SACDsI,YAE7B,GAAIA,EAAa,CAChB,MAAM4B,EAAQ5B,EAAY4B,MACpBuW,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAE3BuV,EAAYzpB,KAAKymB,kBAEvB,GAAIgE,GAAQC,GAAQjB,EAAW,CAC9B,MAAMhnB,EAAQzC,KAAKC,IAAI,SACjBwB,EAAQzB,KAAKC,IAAI,SAEjBiK,EAASlK,KAAK0iB,WAAWjhB,EAAM6F,gBAAgB7F,EAAMggB,qBAAqBgI,EAAUjT,KACpFjM,EAASvK,KAAK4hB,WAAWnf,EAAM6E,gBAAgB7E,EAAMgf,qBAAqBgI,EAAU3jB,IAAKoE,GAEzF8F,EAAMvO,EAAMsU,WAAW,MAAO,GAC9B5E,EAAM1P,EAAMsU,WAAW,MAAO,GAEpC/V,KAAK6iB,YAAY4H,EAAM,SAAUlgB,GAAQ,GACzCvK,KAAK6iB,YAAY6H,EAAM,SAAUngB,GAAQ,GAEzCvK,KAAK6iB,YAAY4H,EAAM,SAAUvgB,GACjClK,KAAK6iB,YAAY6H,EAAM,SAAUvZ,EAAoB,KAAbA,EAAMnB,IAE9ChQ,KAAK8iB,cAAc2H,EAAMA,EAAKxqB,IAAI,SAAU,IAE5CD,KAAK+iB,iBAAiB0H,E,EAGzB,CAEUc,yBAEV,CAEUrI,eAAehP,GACxB,GAAIlU,KAAKqe,IAAInK,GAAQ,CACpB,MAAMwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GAEjC,GAAIwW,EAAM,CACT,MAAMjpB,EAAQzB,KAAKC,IAAI,SACjB+P,EAAMvO,EAAMsU,WAAW,MAAO,GAC9B5E,EAAM1P,EAAMsU,WAAW,MAAO,GAGpC/V,KAAK6iB,YAAY6H,EAAM,SAAUvZ,EAAoB,KAAbA,EAAMnB,IAAY,E,EAG7D,CAEUqb,wBAAwBzM,GAC7B5e,KAAKqd,kBACHrd,KAAK0kB,aACyB,GAA9B1kB,KAAKihB,wBACRjhB,KAAK+kB,iBACL/kB,KAAKsrB,WAAW1M,EAAO5e,KAAKmgB,QAC5BngB,KAAK+jB,WAAU,GACf/jB,KAAK6gB,eAEL7gB,KAAKkjB,eAAeljB,KAAKmgB,QACzBngB,KAAK4f,oBAAoB,eAAgB5f,KAAKglB,WAAYhlB,KAAKmgB,SAInE,EApFAxgB,OAAAC,eAAA+4B,GAAA,a,gDAAkC,wBAClCh5B,OAAAC,eAAA+4B,GAAA,c,gDAA0C7O,GAAiBzlB,WAAWC,OAAO,CAACq0B,GAAoBp0B,c,sBCU7F,MAAOq0B,WAAgB9M,GAA7BpsB,c,oBAQCC,OAAAC,eAAA,e,gDAAgC,KAChCD,OAAAC,eAAA,gB,gDAAkC,KAElCD,OAAAC,eAAA,a,gDAAiB,YAgBjBD,OAAAC,eAAA,e,gDAA8CI,KAAKe,YAAY,IAAImb,KAClEC,KAASzb,IAAI,CAAC,IACd,IAAM02B,KAAMhb,KAAKpc,KAAKM,MAAO,CAAC,EAAG,CAACN,KAAKoW,OAAO1P,eAuLhD,CAvMQ7G,YACNC,MAAMD,YACNG,KAAKiC,IAAI,cAAc,GACvBjC,KAAKyI,QAAQ/B,SAASzE,IAAI,qBAAiB2F,GAC3C5H,KAAKyG,MAAMC,SAASzE,IAAI,qBAAiB2F,EAC1C,CAiBOyvB,YACN,MAAMvF,EAAQ9xB,KAAKoW,OAAOqI,OAQ1B,OAPAze,KAAKie,iBAAiBhb,SAASzC,KAAKsxB,GACpCA,EAAMzvB,OAAO,CACZw2B,cAAc,EACdzF,WAAY0F,KAAiBp4B,IAAIV,KAAKM,MAAO,CAAEK,UAAW,CAAC,kBAE5DmxB,EAAMgE,aAAa,IAAIiD,KAAS/4B,KAAM,CAAC,EAAG,CAAC,IAC3CA,KAAKoW,OAAO5V,KAAKsxB,GACVA,CACR,CAEU5R,gBAAgBhM,GAEzB,GADApU,MAAMogB,gBAAgBhM,IACjBlU,KAAKw3B,QAAQtjB,GAAQ,CACzB,MAAM4d,EAAQ9xB,KAAKq3B,YACnBr3B,KAAKw3B,QAAQtjB,GAAS4d,C,CAExB,CAEU3U,cAAcjJ,GACvBpU,MAAMqd,cAAcjJ,GACpB,MAAM4d,EAAQ9xB,KAAKw3B,QAAQtjB,GACvB4d,IACHA,EAAM5lB,iBACElM,KAAKw3B,QAAQtjB,IAGtB,MAAMgW,EAAOlqB,KAAKqqB,OAAOnW,GACrBgW,IACHA,EAAKhe,iBACGlM,KAAKqqB,OAAOnW,GAEtB,CAEUqY,cAAcrY,EAAe+X,EAAwBtB,EAAYC,GAC1E,MAAMnpB,EAAQzB,KAAKC,IAAI,SACjBa,EAAQW,EAAMrB,MACd8pB,EAAOlqB,KAAKqqB,OAAOnW,GAEzB,IAAI5D,EAAgBtQ,KAAKM,MAAM04B,gBAAgB/4B,IAAI,YAC/CoQ,EAAgBrQ,KAAKM,MAAM04B,gBAAgB/4B,IAAI,YAEnD,MAAMF,EAAae,EAAMiV,WAAW,cAEpC,IAAIrL,EAEA3K,IACHuQ,EAAgBvQ,EAAWE,IAAI,qBAAsBqQ,GACrDD,EAAgBtQ,EAAWE,IAAI,qBAAsBoQ,GACrD3F,EAAe3K,EAAWE,IAAI,iBAG/B,IAAIg5B,EAAK,EACLtO,EAAGnU,EAAIoU,EAAGpU,IACbyiB,GAAM,GAGP,MAAMnH,EAAQ9xB,KAAKw3B,QAAQtjB,GACrBglB,EAAUpH,EAAM7xB,IAAI,cAEpBwqB,EAAOzqB,KAAKqe,IAAInK,GAAW,GAC3BwW,EAAO1qB,KAAKqe,IAAInK,GAAW,GACjC,IAAI1L,EAAQ8H,EACR6oB,EAAK,EACLxO,EAAG7kB,EAAI8kB,EAAG9kB,IACbqzB,GAAM,EACN3wB,EAAQ6H,GAGT4b,EAAahqB,IAAI,OAAQuG,GACzByjB,EAAahqB,IAAI,cAAe,IAChCioB,EAAKjoB,IAAI,SAAUuG,GACnB0wB,EAAQj3B,IAAI,OAAQuG,GAEpBxI,KAAK0c,aAAatD,MAAMuF,IACvBA,EAAY1c,IAAI,SAAUuG,EAAM,IAGjC,MAAM0sB,EAAKvK,EAAGnU,GAAKoU,EAAGpU,EAAImU,EAAGnU,GAAK,EAC5Bgf,EAAK7K,EAAG7kB,GAAK8kB,EAAG9kB,EAAI6kB,EAAG7kB,GAAK,EAElCokB,EAAKjoB,IAAI,WAAY,CAAC,CAAC,CAAC,CAAEuU,EAAG0e,EAAIpvB,EAAG6kB,EAAG7kB,GAAK,CAAE0Q,EAAG0e,EAAIpvB,EAAG8kB,EAAG9kB,KAAO,CAAC,CAAC,CAAE0Q,EAAG0e,EAAK,EAAGpvB,EAAG8kB,EAAG9kB,EAAI,EAAIqzB,GAAM,CAAE3iB,EAAG0e,EAAIpvB,EAAG8kB,EAAG9kB,GAAK,CAAE0Q,EAAG0e,EAAK,EAAGpvB,EAAG8kB,EAAG9kB,EAAI,EAAIqzB,KAAQ,CAAC,CAAC,CAAE3iB,EAAGmU,EAAGnU,EAAG1Q,EAAG0vB,GAAM,CAAEhf,EAAGoU,EAAGpU,EAAG1Q,EAAG0vB,KAAQ,CAAC,CAAC,CAAEhf,EAAGoU,EAAGpU,EAAI,EAAIyiB,EAAInzB,EAAG0vB,EAAK,GAAK,CAAEhf,EAAGoU,EAAGpU,EAAG1Q,EAAG0vB,GAAM,CAAEhf,EAAGoU,EAAGpU,EAAI,EAAIyiB,EAAInzB,EAAG0vB,EAAK,OAE3R,MAAM4D,EAAS3O,EAAKxqB,IAAI,SAAU,GAC5Bo5B,EAAS3O,EAAKzqB,IAAI,SAAU,GAE5BiI,EAAkBlI,KAAKmI,qBACvBiC,EAAQlC,EAAgBK,OAAQ8wB,EAASD,GACzC3iB,EAAUvO,EAAgBK,QAAQ8wB,EAASD,GAAUA,EAAS,KAAO,IACrE13B,EAAeD,EAAMsU,WAAW,gBAEhCujB,EAAQ7O,EAAKxqB,IAAI,SAAU,GAC3Bs5B,EAAQ7O,EAAKzqB,IAAI,SAAU,GAE3B4C,EAAS7C,KAAKC,IAAI,UAExB,IAAI0X,EAAQ,EACZ,GAAI9U,EAAQ,CACX,MAAM8rB,EAAMltB,EAAMkmB,cAAc9kB,EAAQpB,EAAMsgB,gBAAgBuX,IACxD1K,EAAMntB,EAAMkmB,cAAc9kB,EAAQpB,EAAMsgB,gBAAgBwX,IAC1D5K,GAAOC,IACVjX,EAAQ9U,EAAOS,UAAU2T,QAAQ2X,GAAO/rB,EAAOS,UAAU2T,QAAQ0X,GAAO,EAEpE3uB,KAAKC,IAAI,eACZ0X,I,CAKH,IAAI6hB,EAAgBpyB,KAAK0Q,MAAMyhB,EAAQD,GAAS73B,EAAMkI,eAAiBjI,EAAaiW,OAChF6hB,EAAgB7hB,IACnB6hB,EAAgB7hB,GAIjB,IAAI7M,EAAS,EACb,GAAIJ,EAAc,CACjB,MAAM+uB,EAAOh4B,EAAMkmB,cAAcjd,EAAcjJ,EAAMsgB,gBAAgBuX,IAC/DI,EAAOj4B,EAAMkmB,cAAcjd,EAAcjJ,EAAMsgB,gBAAgBwX,IAErE,GAAIE,GAAQC,EAAM,CACjB,MAAMp2B,EAAYoH,EAAapH,UAC/B,IAAI8rB,EAAK9rB,EAAU2T,QAAQwiB,GACvBpK,EAAK/rB,EAAU2T,QAAQyiB,GAEvBtK,EAAKC,KACPD,EAAIC,GAAM,CAACA,EAAID,IAGjB,IAAK,IAAI1lB,EAAI0lB,EAAI1lB,EAAI2lB,EAAI3lB,IAAK,CAC7B,MAAMM,EAAW1G,EAAUoG,GAC3B,GAAIM,EAAU,CACb,MAAMI,EAAQJ,EAAS/J,IAAI,UACvB8F,WAAeqE,KAClBU,GAAUV,E,IAQf,IAAIsL,EAAO1V,KAAKC,IAAI,YAAa,IAC7B6K,EAAS,IACZ4K,GAAQ1V,KAAKC,IAAI,oBAclB6xB,EAAM9nB,SAAUsI,YAAc,CAC7BlI,MAAOA,EACPqM,QAASA,EACTkB,MAAOA,EACP6hB,cAAeA,EACfG,aAAc35B,KAAKM,MAAMqE,SAASC,aAhBjB,CACjBg1B,YAAa,KACbC,OAAQ,IACRC,OAAQ,IACRC,KAAM,IACNC,IAAK,IACLC,KAAM,KACNC,MAAO,KACPC,KAAM,KAQmDz4B,EAAaqlB,WACtEjc,OAAQA,GAGTgnB,EAAMzvB,OAAO,CACZqT,KAAMA,EACNc,EAAG0e,EACHpvB,EAAG0vB,IAGJ1D,EAAMpc,KAAKiiB,eACZ,EAjNAh4B,OAAAC,eAAAg5B,GAAA,a,gDAAkC,YAClCj5B,OAAAC,eAAAg5B,GAAA,c,gDAA0C9M,GAAgBznB,WAAWC,OAAO,CAACs0B,GAAQr0B,c,+BCwChF,MAAO61B,WAAqBC,KAAlC36B,c,oBAQCC,OAAAC,eAAA,qB,wDA6ED,CA3EWC,YACTC,MAAMD,YAGNG,KAAKs6B,eAAiBt6B,KAAKC,IAAI,cAAcq6B,eAC7Cx6B,MAAMy6B,uBAENv6B,KAAKw6B,gBACLx6B,KAAKy6B,iBAELz6B,KAAKM,MAAMS,YAAYf,MAEvBA,KAAKgB,OAAOwjB,SAAS,UAAW,CAC/B3f,KAAM,UACNkS,OAAQ/W,MAEV,CAEO06B,gBACN56B,MAAM46B,gBAEF16B,KAAKiI,QAAQ,aAIbjI,KAAKiI,QAAQ,mBACZjI,KAAKC,IAAI,iBACZD,KAAKy6B,iBAEGz6B,KAAK26B,cACb36B,KAAK26B,aAAazuB,WAIhBlM,KAAKiI,QAAQ,aAChBjI,KAAKw6B,eAGP,CAEU32B,WACT/D,MAAM+D,WAEF7D,KAAK26B,cACR36B,KAAK26B,aAAazuB,UAGnB,MAAM0uB,EAAW56B,KAAKC,IAAI,WAAY,IACtC8J,OAAY6wB,GAAU,CAACC,EAAS1a,KAC/B0a,EAAQ3uB,SAAS,GAEnB,CAEQsuB,gBACP,MAAMI,EAAW56B,KAAKC,IAAI,WAAY,IACtC8J,OAAY6wB,GAAU,CAACC,EAAS1a,KAC1B0a,EAAQ9kB,WAAW,aAEvB8kB,EAAQp3B,WAAW,UAAWzD,MAC9BA,KAAKC,IAAI,aAAc66B,YAAYD,EAAQ9kB,WAAW,W,GAGzD,CAOO0kB,iBACN,MAAMM,EAAWC,aAAgBC,iBAAqBj7B,KAAKM,MAAM46B,KAAMl7B,KAAKM,OAC5EN,KAAKm7B,WAAW36B,KAAKu6B,GACrB/6B,KAAK26B,aAAeI,CACrB,EAlFAp7B,OAAAC,eAAAw6B,GAAA,a,gDAAkC,iBAClCz6B,OAAAC,eAAAw6B,GAAA,c,gDAA0CC,KAAOh2B,WAAWC,OAAO,CAAC81B,GAAa71B,c,wBCG5E,MAAO62B,WAAqBC,KAAlC37B,c,oBAQCC,OAAAC,eAAA,8B,wDA0UD,CAtUWC,YACTC,MAAMD,YACNG,KAAKs7B,oBACLt7B,KAAKM,MAAMS,YAAYf,KACxB,CAEUu7B,gBACTz7B,MAAMy7B,gBAGN,MAAM/c,EAAYxe,KAAK+V,WAAW,aAG9B/V,KAAKC,IAAI,eACZD,KAAKw7B,cAIN,MAAMC,EAAOC,SAASC,cAAc,MACpCF,EAAKl3B,UAAY,wBAEjBia,EAAUsc,YAAYW,GACtBz7B,KAAKyD,WAAW,OAAQg4B,GAExBz7B,KAAK47B,YACN,CAEUC,aACT,MAAMJ,EAAOz7B,KAAK+V,WAAW,QACzB0lB,IACHA,EAAKK,MAAMC,UAAa/7B,KAAKK,KAAKme,UAAUtY,SAAW,IAAO,KAC9Du1B,EAAKK,MAAME,SAAW,OAExB,CASOC,cACNj8B,KAAK47B,YACN,CAEUA,WAAWjH,GACP30B,KAAK+V,WAAW,QACxBmmB,UAAY,GAEZvH,IACJA,EAAQ30B,KAAKC,IAAI,QAAS,KAG3B,MAAMk8B,EAAen8B,KAAKC,IAAI,UAAW,IACzC8J,OAAY4qB,GAAQwD,KACc,GAA7BgE,EAAQllB,QAAQkhB,EAAK7Y,KACxBtf,KAAKo8B,QAAQjE,E,IAIXn4B,KAAKC,IAAI,eACZD,KAAK67B,aAGN77B,KAAKq8B,sBACN,CAEUb,cACT,IAAIc,EAAYt8B,KAAK+V,WAAW,UAChC,GAAI/V,KAAKC,IAAI,eACZ,IAAKq8B,EAAW,CACf,MAAM9d,EAAYxe,KAAK+V,WAAW,aAClCumB,EAAYZ,SAASC,cAAc,OACnCW,EAAU/3B,UAAY,uBACtBia,EAAUsc,YAAYwB,GACtBt8B,KAAKyD,WAAW,SAAU64B,GAE1B,MAAMC,EAAQb,SAASC,cAAc,SACrCY,EAAM13B,KAAO,OACb03B,EAAMC,YAAcx8B,KAAKM,MAAMqE,SAASC,aAAa,UACrD03B,EAAUxB,YAAYyB,GAEtBv8B,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBsB,EAAO,SAAUE,IAC7Dz8B,KAAK08B,aAAaH,EAAMnyB,MAAM,KAG/BpK,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBsB,EAAO,SAAUE,IAC7Dz8B,KAAK28B,2BAAwB/0B,CAAS,I,OAIhC00B,IACRA,EAAUR,MAAM3P,QAAU,OAE5B,CAEOyQ,iBACN98B,MAAM88B,iBAEF58B,KAAKiI,QAAQ,UAChBjI,KAAK47B,aAGF57B,KAAKiI,QAAQ,eAChBjI,KAAKw7B,cAGFx7B,KAAK68B,eAAe,aAIpB78B,KAAKiI,QAAQ,YAChBjI,KAAKq8B,sBAGP,CAEUx4B,WACT/D,MAAM+D,UAKP,CAEgB64B,aAAaI,G,mDAC5B,MAAMC,EAAiB/8B,KAAKC,IAAI,kBAChC,GAAc,IAAV68B,EACH98B,KAAK47B,WAAW57B,KAAKC,IAAI,eAErB,GAAI88B,GAAkBD,EAAQ,CAClC,MAAME,EAAWh9B,KAAKC,IAAI,iBAAkB,KAC5C,IAAI00B,QAAcoI,EAAe54B,KAAKnE,KAAM88B,GACxCE,GAAarI,EAAMpxB,OAASy5B,IAC/BrI,EAAQA,EAAMsI,MAAM,EAAGD,EAAW,GAClCrI,EAAMn0B,KAAK,CACV8e,GAAI,GACJ/a,UAAW,qBACXutB,MAAO9xB,KAAKM,MAAMqE,SAASC,aAAa,yCAAqCgD,EAAW,GAAKo1B,MAG/Fh9B,KAAK47B,WAAWjH,E,KAEZ,CACJ,MAAM8G,EAAOz7B,KAAK+V,WAAW,QAC7B,GAAI0lB,EAAM,CACT,MAAM9G,EAAQ8G,EAAKyB,qBAAqB,MACxCnzB,OAAY4qB,GAAQwD,IACnB,MAAMgF,EAAQ,IAAIC,OAAON,GAAU,GAAI,MAClCA,GAAU3E,EAAKkF,UAAUC,MAAMH,GACnChF,EAAK2D,MAAM3P,QAAU,GAGrBgM,EAAK2D,MAAM3P,QAAU,M,KAK1B,G,CAEOiQ,QAAQmB,GACd,MAAM9B,EAAOz7B,KAAK+V,WAAW,QACvBoiB,EAAOuD,SAASC,cAAc,MAYpC,IAAI6B,EACJ,GAZArF,EAAK5zB,UAAY,qBACjB4zB,EAAKsF,aAAa,QAASF,EAAKG,UAAYH,EAAKzL,OAE7CyL,EAAKh5B,YACR4zB,EAAK5zB,WAAa,IAAMg5B,EAAKh5B,WAG1Bg5B,EAAK73B,MACRyyB,EAAK2C,YAAYyC,EAAK73B,MAInB63B,EAAKI,KAAM,CACd,MAAMpB,EAA0Bb,SAASC,cAAc,SACvD6B,EAAU,iBAAmBD,EAAKje,GAClCid,EAAM13B,KAAO04B,EAAKI,KAClBpB,EAAMkB,aAAa,WAAY,MAC3BF,EAAKnzB,QACRmyB,EAAMnyB,MAAQmzB,EAAKnzB,OAEH,SAAbmzB,EAAKI,OACRpB,EAAM73B,KAAO64B,EAAKje,GAClBke,GAAW,IAAMD,EAAKnzB,OAEnBmzB,EAAKK,UACRrB,EAAMqB,SAAU,GAGjBrB,EAAMjd,GAAKke,EAEXx9B,KAAKm7B,WAAW36B,KAAKy6B,oBAAwB9C,EAAM,SAAU0F,IAExDA,EAAG9mB,SAAWwlB,IACjBA,EAAMqB,SAAWrB,EAAMqB,SAExB59B,KAAKgB,OAAOwjB,SAAS,UAAW,CAC/B3f,KAAM,UACNszB,KAAMoF,EACNnzB,MAAOmyB,EAAMqB,QACbA,QAASrB,EAAMqB,QACf7mB,OAAQ/W,MACP,KAGHm4B,EAAK2C,YAAYyB,E,CAGlB,MAAMzK,EAAQ4J,SAASC,cAAc,SAOrC,GANA7J,EAAMoK,UAAYqB,EAAKzL,MACL,IAAdyL,EAAKzL,QACRA,EAAMgK,MAAM3P,QAAU,QAEvBgM,EAAK2C,YAAYhJ,GAEbyL,EAAKG,SAAU,CAClB,MAAMA,EAAWhC,SAASC,cAAc,SACxC+B,EAASn5B,UAAY,oBACrBm5B,EAASxB,UAAYqB,EAAKG,SAC1BvF,EAAK2C,YAAY4C,E,CAGH,aAAXH,EAAKje,KACR6Y,EAAK+D,UAAY,QAGlBT,EAAKX,YAAY3C,GAGboF,EAAKO,SACR3F,EAAK5zB,WAAa,qBAGlBvE,KAAKm7B,WAAW36B,KAAKy6B,oBAAwB9C,EAAM,SAAUsE,IAC5Dz8B,KAAK8D,OACL9D,KAAKgB,OAAOwjB,SAAS,UAAW,CAC/B3f,KAAM,UACNszB,KAAMoF,EACNxmB,OAAQ/W,MACP,IAGL,CAEO8D,OACNhE,MAAMgE,OACN9D,KAAK08B,eACL,IAAIJ,EAAYt8B,KAAK+V,WAAW,UAChC,GAAIumB,EAAW,CACd,MAAMyB,EAASzB,EAAUY,qBAAqB,SAC9C,IAAIc,GAAiB,EACrBj0B,OAAYg0B,GAASxB,IACA,KAAhBA,EAAMnyB,QACT4zB,GAAiB,EACjBzB,EAAMnyB,MAAQ,G,IAIZpK,KAAKC,IAAI,mBAAqB+9B,GACjCh+B,KAAK47B,Y,CAIP57B,KAAK28B,2BAAwB/0B,CAC9B,CAEU0zB,oBACT,GAAIL,YAAgB,kBAAmB,CACtC,MAAMh0B,EAASjH,KAAKC,IAAI,WAAW8V,WAAW,UAC9C/V,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBS,SAAU,WAAYmC,IAClE,GAAI79B,KAAKi+B,gBACJvC,SAASwC,gBAAkBxC,SAASwC,gBAAkBj3B,GAAUg0B,YAAgBh0B,EAAQy0B,SAASwC,gBACpG,GAAkB,IAAdL,EAAGM,QAEFzC,SAASwC,gBAAkBj3B,GAC7By0B,SAASwC,cAA8BE,aAGrC,GAAkB,IAAdP,EAAGM,SAA+B,IAAdN,EAAGM,QAAe,CAC9C,MAAME,EAAoB,IAAdR,EAAGM,SAAiB,EAAI,EACpC,IAAIjqB,EAA4BlU,KAAK28B,2BACvB/0B,IAAVsM,EACHA,EAAQ,EAGRA,GAASmqB,EAEV,MAAM1J,EAAQ30B,KAAKs+B,kBACfpqB,EAAQ,EACXA,EAAQygB,EAAMpxB,OAAS,EAEf2Q,GAASygB,EAAMpxB,SACvB2Q,EAAQ,GAGTlU,KAAK6kB,YAAW,KACfoW,SAAatG,EAAMwD,KAAKjkB,IACxBlU,KAAK28B,sBAAwBzoB,CAAK,GAChC,G,MAMT,CAEUmoB,uBAET,GADAv8B,MAAMu8B,uBACFr8B,KAAKi+B,eAAgB,CAGVj+B,KAAKs+B,kBACbC,SAASpG,IACbA,EAAqBsF,aAAa,WAAY,MAC9CtF,EAAqBsF,aAAa,aAAetF,EAAqBqG,aAAa,UAAY,GAAG,G,CAGtG,CAEUF,kBACT,OAAOt+B,KAAK+V,WAAW,QAAS0oB,iBAAiB,2FAClD,EA/UA9+B,OAAAC,eAAAw7B,GAAA,a,gDAAkC,iBAClCz7B,OAAAC,eAAAw7B,GAAA,c,gDAA0CC,KAASh3B,WAAWC,OAAO,CAAC82B,GAAa72B,c,aCxC9E,MAAOm6B,WAA2BC,KAQ7B9+B,YAGTC,MAAMD,YAGN,MAAM47B,EAAOL,GAAa16B,IAAIV,KAAKM,MAAO,CACzCu6B,QAAS76B,KACT8zB,OAAQ9zB,KAAK+V,WAAW,UACxB6oB,WAAY5+B,KAAKC,IAAI,cAAc,KAEpCD,KAAKyD,WAAW,OAAQg4B,GAExBA,EAAKz6B,OAAOC,GAAG,UAAWw7B,IACzBz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1Bw5B,EAAKz6B,OAAOC,GAAG,WAAY48B,IAC1B79B,KAAK6+B,QAAsBhB,EAAG1F,KAAKrG,OACnC9xB,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNi6B,KAAoBjB,EAAG1F,KAAK7Y,GAC5BvI,OAAQ/W,MACP,IAGHA,KAAKiB,GAAG,UAAW89B,IACdA,EACH/+B,KAAK6kB,YAAW,IAAM4W,EAAKr3B,QAAQ,IAGnCq3B,EAAK33B,M,IAIP,MAAMmD,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,6BAEtCvE,KAAKg/B,YACN,CAEOH,QAAQC,GACd9+B,KAAK+V,WAAW,QAASmmB,UAAY,GACrCl8B,KAAK+V,WAAW,QAAS+kB,YAAY96B,KAAKi/B,aAAaH,IAEvD9+B,KAAKk/B,UAAUl/B,KAAKM,MAAMqE,SAASC,aAAak6B,GACjD,CAEUE,aACT,MAAMvD,EAAOz7B,KAAK+V,WAAW,QACvBopB,EAAQn/B,KAAKC,IAAI,SACjB00B,EAA6B,GACnC5qB,OAAYo1B,GAAQL,IACnBnK,EAAMn0B,KAAK,CACV8e,GAAIwf,EACJhN,MAAO9xB,KAAKM,MAAMqE,SAASC,aAAak6B,GACxCp5B,KAAM1F,KAAKi/B,aAAaH,IACvB,IAEHrD,EAAKx5B,IAAI,QAAS0yB,EACnB,CAEUsK,aAAaH,GACtB,OAAOM,KAAWC,QAAQP,EAC3B,CAEOpE,gBACN56B,MAAM46B,gBAEF16B,KAAKiI,QAAQ,UAChBjI,KAAKg/B,YAQP,CAEUn7B,WACT/D,MAAM+D,UAKP,EA7FAlE,OAAAC,eAAA8+B,GAAA,a,gDAAkC,uBAClC/+B,OAAAC,eAAA8+B,GAAA,c,gDAA0CC,KAAat6B,WAAWC,OAAO,CAACo6B,GAAmBn6B,c,cCmCxF,MAAO+6B,WAA4BX,KAQ9B9+B,YAETC,MAAMD,YAEN,MAAMoH,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,4BACvC,CAEUg3B,gBACTz7B,MAAMy7B,gBAMN,MAAMgE,EAAwB,CAC7B1E,QAAS76B,KACT8zB,OAAQ9zB,KAAK+V,WAAW,UACxBypB,WAAYx/B,KAAKC,IAAI,cAAc,GACnC2+B,WAAY5+B,KAAKC,IAAI,cAAc,GACnC00B,MAAO,GACPwH,QAASn8B,KAAKC,IAAI,YAGbw/B,EAAiBz/B,KAAKC,IAAI,kBAC5Bw/B,IACHF,EAAiBE,eAAiBA,GAGnC,MAAM1C,EAAiB/8B,KAAKC,IAAI,kBAC5B88B,IACHwC,EAAiBxC,eAAiBA,GAGnC,MAAMpI,EAAQ30B,KAAKC,IAAI,SACvB,IAAIy/B,EAAc1/B,KAAKC,IAAI,eACvB00B,GACH5qB,OAAY4qB,GAAQwD,IACnB,MAAMwH,EAAa55B,WAAeoyB,GAAQ,CACzC7Y,GAAI6Y,EACJrG,MAAOqG,GACJA,EACJoH,EAAiB5K,MAAMn0B,KAAKm/B,GAExB55B,WAAe25B,IAAgBA,GAAeC,EAAWrgB,KAC5DogB,EAAcC,E,IAKjB,MAAMC,EAAWxE,GAAa16B,IAAIV,KAAKM,MAAOi/B,GAC9Cv/B,KAAKyD,WAAW,WAAYm8B,GAExBF,GACH1/B,KAAK6/B,QAAQH,GAGdE,EAAS5+B,OAAOC,GAAG,UAAWw7B,IAC7Bz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1B29B,EAAS5+B,OAAOC,GAAG,WAAY48B,IAC9B79B,KAAK6/B,QAAQhC,EAAG1F,MAChBn4B,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNszB,KAAM0F,EAAG1F,KACTphB,OAAQ/W,MACP,IAGHA,KAAKiB,GAAG,UAAW89B,IACdA,EAEH/+B,KAAK6kB,YAAW,IAAM+a,EAASx7B,QAAQ,IAGvCw7B,EAAS97B,M,GAGZ,CAEO+7B,QAAQ1H,GACd,IAA+B,IAA3Bn4B,KAAKC,IAAI,cAAwB,CACpC,MAAM6xB,EAAQ9xB,KAAK+V,WAAW,SAC9B,GAAIhQ,WAAeoyB,GAClBrG,EAAMoK,UAAY/D,MAEd,CACJ,GAAIA,EAAKzyB,KAAM,CACd,MAAMA,EAAO1F,KAAK+V,WAAW,QAC7BrQ,EAAKw2B,UAAY,GACjBx2B,EAAKo1B,YAAY3C,EAAKzyB,KAAKo6B,WAAU,IACrCp6B,EAAKo2B,MAAM3P,QAAU,E,CAMlBgM,EAAKrG,OACRA,EAAMoK,UAAY/D,EAAKrG,MACvBA,EAAMgK,MAAM3P,QAAU,KAGtB2F,EAAMoK,UAAY,GAClBpK,EAAMgK,MAAM3P,QAAU,O,EAI1B,CAQO4T,YAAYzgB,GAClB,MAAM6Y,EAAOn4B,KAAKggC,YAAY1gB,QACjB1X,IAATuwB,IACHn4B,KAAK6/B,QAAQ1H,GAEbn4B,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNszB,KAAMA,EACNphB,OAAQ/W,OAGX,CASOggC,YAAY1gB,GAClB,IAAI2gB,EACJ,MAAMtL,EAAQ30B,KAAKC,IAAI,QAAS,IAShC,OARA8J,eAAoB4qB,GAAQwD,IACdpyB,WAAeoyB,GAAQA,EAAK7Y,GAAK6Y,IAChC7Y,IACb2gB,EAAQ9H,GACD,KAIF8H,CACR,CAEOrD,iBAEN,GADA98B,MAAM88B,iBACF58B,KAAKiI,QAAQ,SAAU,CAC1B,MAAM23B,EAAW5/B,KAAK+V,WAAW,YACjC,GAAI6pB,EAAU,CACb,MAAMjL,EAAQ30B,KAAKC,IAAI,SACjBigC,EAAqC,GAC3C,IAAIR,EAAc1/B,KAAKC,IAAI,eACvB00B,GACH5qB,OAAY4qB,GAAQwD,IACnB,MAAMwH,EAAa55B,WAAeoyB,GAAQ,CACzC7Y,GAAI6Y,EACJrG,MAAOqG,GACJA,EACJ+H,EAAc1/B,KAAKm/B,GAEf55B,WAAe25B,IAAgBA,GAAeC,EAAWrgB,KAC5DogB,EAAcC,E,IAIjBC,EAAS39B,IAAI,QAASi+B,E,EAIzB,CAEUr8B,WACT/D,MAAM+D,UACP,CAEUw4B,uBAET,GADAv8B,MAAMu8B,uBACFr8B,KAAKi+B,eAAgB,CACxB,MAAMh3B,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAOw2B,aAAa,aAAcx2B,EAAOu3B,aAAa,SAAW,KAAOx+B,KAAKmgC,GAAG,8CAE5ElF,YAAgB,mBACnBj7B,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBS,SAAU,WAAYmC,IAC9DnC,SAASwC,eAAiBj3B,IACX,IAAd42B,EAAGM,SAA+B,IAAdN,EAAGM,SAErBn+B,KAAKC,IAAI,WACbD,KAAKogC,e,KAOZ,EA/MAzgC,OAAAC,eAAA0/B,GAAA,a,gDAAkC,wBAClC3/B,OAAAC,eAAA0/B,GAAA,c,gDAA0CX,KAAat6B,WAAWC,OAAO,CAACg7B,GAAoB/6B,cClDzF,MAAO87B,WAAwB1B,KAQ1B9+B,YACTC,MAAMD,YAEN,MAAMoH,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,4BACvC,CAEOq4B,iBAEN,GADA98B,MAAM88B,iBACF58B,KAAKiI,QAAQ,QAAS,CACPjI,KAAK+V,WAAW,eAEjC/V,KAAK+V,WAAW,aAAcmmB,UAAYl8B,KAAKC,IAAI,OAAQ,I,CAG9D,CAEUs7B,gBACTz7B,MAAMy7B,gBAGN,MAAMgE,EAAwB,CAC7B1E,QAAS76B,KACT8zB,OAAQ9zB,KAAK+V,WAAW,UACxB6oB,WAAY5+B,KAAKC,IAAI,cAAc,IAG9B2/B,EAAWvE,KAAS36B,IAAIV,KAAKM,MAAOi/B,GAC1Cv/B,KAAKyD,WAAW,WAAYm8B,GAE5B,MAAMphB,EAAYkd,SAASC,cAAc,OACzCnd,EAAUja,UAAY,wBAEtBq7B,EAAS7pB,WAAW,aAAc+kB,YAAYtc,GAC9Cxe,KAAKyD,WAAW,YAAa+a,GAE7B,MAAM8hB,EAAOtgC,KAAKC,IAAI,OAAQ,IAC9Bue,EAAU0d,UAAYoE,EAEtBV,EAAS5+B,OAAOC,GAAG,UAAWw7B,IAC7Bz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1BjC,KAAKiB,GAAG,UAAW89B,IACdA,EACH/+B,KAAK6kB,YAAW,IAAM+a,EAASx7B,QAAQ,IAGvCw7B,EAAS97B,M,GAGZ,CAEUD,WACT/D,MAAM+D,UACP,EA9DAlE,OAAAC,eAAAygC,GAAA,a,gDAAkC,oBAClC1gC,OAAAC,eAAAygC,GAAA,c,gDAA0C1B,KAAat6B,WAAWC,OAAO,CAAC+7B,GAAgB97B,c,cCSrF,MAAOg8B,WAAoB5B,KAQtB9+B,YAGTC,MAAMD,YAGN,MAAM47B,EAAOL,GAAa16B,IAAIV,KAAKM,MAAO,CACzCu6B,QAAS76B,KACT8zB,OAAQ9zB,KAAK+V,WAAW,UACxBypB,YAAY,IAEbx/B,KAAKyD,WAAW,OAAQg4B,GACxBA,EAAK1lB,WAAW,QAASxR,UAAY,yBAErCk3B,EAAKz6B,OAAOC,GAAG,UAAWw7B,IACzBz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1Bw5B,EAAKz6B,OAAOC,GAAG,WAAY48B,IAC1B,MAAM1F,EAAcqI,KAAKC,MAAM5C,EAAG1F,KAAK7Y,IACvC,IAAI5Z,EACJ,MAAMg7B,EAAQ1gC,KAAKC,IAAI,SACvB8J,OAAY22B,GAAQC,IACfxI,EAAKjH,SAAWyP,EAASzP,UAC5BxrB,EAAOi7B,E,IAGLj7B,IACH1F,KAAK4gC,QAAQl7B,GACb1F,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNa,KAAMA,EACNqR,OAAQ/W,O,IAKXA,KAAKiB,GAAG,UAAW89B,IACdA,EACH/+B,KAAK6kB,YAAW,IAAM4W,EAAKr3B,QAAQ,IAGnCq3B,EAAK33B,M,IAIP9D,KAAK6gC,YACN,CAEOD,QAAQl7B,GACd1F,KAAK+V,WAAW,QAASmmB,UAAY,GACrCl8B,KAAK+V,WAAW,QAAS+kB,YAAY96B,KAAK8gC,gBAAgBp7B,GAE3D,CAQOq7B,cAAcC,GACpB,MAAMt7B,EAAO1F,KAAKihC,cAAcD,QACnBp5B,IAATlC,IACH1F,KAAK4gC,QAAQl7B,GAEb1F,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNa,KAAMA,EACNqR,OAAQ/W,OAGX,CASOihC,cAAcD,GACpB,IAAIf,EACJ,MAAMS,EAAQ1gC,KAAKC,IAAI,QAAS,IAQhC,OAPA8J,eAAoB22B,GAAQh7B,GACvBA,EAAKwrB,SAAW8P,IACnBf,EAAQv6B,GACD,KAIFu6B,CACR,CAEUY,aACT,MAAMpF,EAAOz7B,KAAK+V,WAAW,QACvB2qB,EAAQ1gC,KAAKC,IAAI,SACjB00B,EAA6B,GACnC5qB,OAAY22B,GAAQh7B,IACnBivB,EAAMn0B,KAAK,CACV8e,GAAIkhB,KAAKU,UAAUx7B,GACnBosB,MAAO,GACPpsB,KAAM1F,KAAK8gC,gBAAgBp7B,IAC1B,IAEH+1B,EAAKx5B,IAAI,QAAS0yB,EACnB,CAEOmM,gBAAgBp7B,GACtB,OAAO05B,KAAW+B,QAAQ,CAAEC,QAAS,YAAaJ,KAAMt7B,EAAKwrB,SAC9D,CAEOwJ,gBACN56B,MAAM46B,gBAEF16B,KAAKiI,QAAQ,UAChBjI,KAAK6gC,YAEP,CAEUh9B,WACT/D,MAAM+D,UACP,EAjIAlE,OAAAC,eAAA2gC,GAAA,a,gDAAkC,gBAClC5gC,OAAAC,eAAA2gC,GAAA,c,gDAA0C5B,KAAat6B,WAAWC,OAAO,CAACi8B,GAAYh8B,c,wBC2LjF,MAAO88B,WAAuB1C,KAApCj/B,c,oBAQCC,OAAAC,eAAA,uB,gDAA+D,CAAC,IAChED,OAAAC,eAAA,8B,gDAAiD,IAmsClD,CAjsCWC,YACTC,MAAMD,YAGFG,KAAK+V,WAAW,YACnB/V,KAAKshC,eAGN,MAAMvhC,EAAaC,KAAKC,IAAI,cAC5BF,EAAWQ,OAAOS,OAAOugC,OAAM,IAAMvhC,KAAKwhC,yBAE1CzhC,EAAWiB,OAAOC,GAAG,mBAAoB48B,IAExC,MAAMiB,EAAO9+B,KAAKyhC,eAAe5D,EAAGh7B,QAGpC,GAFA7C,KAAKiC,IAAI,OAAQ68B,IAEZ9+B,KAAK0hC,YACT,OAID,MAAMnZ,EAAUsV,EAAGh7B,OAAO2lB,WAAWqV,EAAGte,WAExC,GAAY,SAARuf,GAA2B,WAARA,EAAmB,CASzC,MAAM1b,EAAWmF,EAAQnF,SACrBA,IACHpjB,KAAK+V,WAAW,oBAAqB4rB,SAASve,EAASnjB,IAAI,SAC3DD,KAAK+V,WAAW,wBAAyBgqB,YAAY3c,EAASnjB,IAAI,aAClED,KAAK+V,WAAW,eAAgB9T,IAAI,SAAwC,QAA9BmhB,EAASnjB,IAAI,eAC3DD,KAAK+V,WAAW,iBAAkB9T,IAAI,SAAuC,UAA7BmhB,EAASnjB,IAAI,cAC7DD,KAAK+V,WAAW,0BAA2BgqB,YAAY3c,EAASnjB,IAAI,gBAIrE,MAAM2hC,EAAKrZ,EAAQ+K,WACnB,GAAIsO,EAAI,CACP,MAAMC,EAAgB7hC,KAAK+V,WAAW,iBACtC8rB,EAAcF,SAASC,EAAG3hC,IAAI,WAC9B4hC,EAAcC,WAAWF,EAAG3hC,IAAI,kBAEhC,MAAM8hC,EAAc/hC,KAAK+V,WAAW,eACpCgsB,EAAYJ,SAASC,EAAG3hC,IAAI,SAC5B8hC,EAAYD,WAAWF,EAAG3hC,IAAI,e,MAI3B,CASJ,MAAMyH,EAAS6gB,EAAQ7gB,QAAU6gB,EAAQnF,SACzC,GAAI1b,EAAQ,CACX,MAAMm6B,EAAgB7hC,KAAK+V,WAAW,iBACtC8rB,EAAcF,SAASj6B,EAAOzH,IAAI,WAClC4hC,EAAcC,WAAWp6B,EAAOzH,IAAI,kBACpCD,KAAK+V,WAAW,sBAAuBgqB,YAAYr4B,EAAOzH,IAAI,eAAiB,MAC/ED,KAAK+V,WAAW,0BAA2BgqB,YAAYS,KAAKU,UAAUx5B,EAAOzH,IAAI,oB,CAIlF,MAAM0H,EAAO4gB,EAAQ5gB,MAAQ4gB,EAAQnF,SACrC,GAAIzb,EAAM,CACT,MAAMo6B,EAAc/hC,KAAK+V,WAAW,eACpCgsB,EAAYJ,SAASh6B,EAAK1H,IAAI,SAC9B8hC,EAAYD,WAAWn6B,EAAK1H,IAAI,e,CAIjC,MAAMqG,EAASiiB,EAAQnF,UAAYmF,EAAQjiB,OACvCA,GAAUA,EAAOrG,IAAI,YACxBD,KAAK+V,WAAW,eAAgBgrB,cAAcz6B,EAAOrG,IAAI,W,IAM7D,CAEUs7B,gBACTz7B,MAAMy7B,eACP,CAEUmG,YACT,QAAO1hC,KAAK+V,WAAW,iBACxB,CAEUisB,iBACThiC,KAAK+V,WAAW,iBAAkB9T,IAAI,UAAU,EACjD,CAEUq/B,eACT,MAAMvhC,EAAaC,KAAKC,IAAI,cACtB2Q,EAAI5Q,KAAKM,MAAMqE,SAGfs9B,EAAUjiC,KAAK+V,WAAW,WAC1BmsB,EAAiBxG,SAASC,cAAc,OAC9CuG,EAAe39B,UAAY,iCAC3B29B,EAAepG,MAAM3P,QAAU,OAC/BnsB,KAAKyD,WAAW,iBAAkBy+B,GAClCD,EAAQhiC,IAAI,aAAa66B,YAAYoH,GAKrC,MAAMC,EAAczD,GAAmBh+B,IAAIV,KAAKM,MAAO,CACtDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,gBAC5Bu6B,MAAOn/B,KAAKC,IAAI,SAChB2+B,WAAY5+B,KAAKC,IAAI,cAAc,KAGpCkiC,EAAY1+B,WAAW,UAAWw+B,GAElCC,EAAepH,YAAYqH,EAAYpsB,WAAW,WAClD/V,KAAKyD,WAAW,cAAe0+B,GAE/BA,EAAYnhC,OAAOC,GAAG,YAAa48B,IAClCwE,EAAcpgC,IAAI,UAAU,GAC5BjC,KAAKiC,IAAI,OAAQ47B,EAAGiB,KAAK,IAG1BqD,EAAYnhC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKpD,MAAMsiC,EAAetiC,KAAKC,IAAI,gBACxBsiC,EAAchC,GAAY7/B,IAAIV,KAAKM,MAAO,CAC/CP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,sBAC5B87B,MAAO4B,IAGRC,EAAY9+B,WAAW,UAAWw+B,GAElCM,EAAY3B,QAAQ5gC,KAAKC,IAAI,cAAeqiC,EAAa,KACzDJ,EAAepH,YAAYyH,EAAYxsB,WAAW,WAClD/V,KAAKyD,WAAW,cAAe8+B,GAE/BA,EAAYvhC,OAAOC,GAAG,YAAa48B,IAClC79B,KAAKiC,IAAI,cAAe47B,EAAGn4B,KAAK,IAGjC68B,EAAYvhC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKpD,MAAMwiC,EAAc7D,KAAaj+B,IAAIV,KAAKM,MAAO,CAChDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,qBAC5Bc,KAAM05B,KAAWC,QAAQ,UAG1BmD,EAAY/+B,WAAW,UAAWw+B,GAElCO,EAAY1+B,OACZo+B,EAAepH,YAAY0H,EAAYzsB,WAAW,WAClD/V,KAAKyD,WAAW,cAAe++B,GAC3BxiC,KAAKC,IAAI,eACZuiC,EAAYvgC,IAAI,UAAU,GAE3BugC,EAAYvhC,GAAG,UAAWw7B,IACzBz8B,KAAKiC,IAAI,aAA2C,GAA7BugC,EAAYviC,IAAI,UAAkB,IAG1DuiC,EAAYxhC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKpD,MAAM6hC,EAAgBY,KAAa/hC,IAAIV,KAAKM,MAAO,CAClDP,WAAYA,EACZ2iC,OAAQ1iC,KAAKC,IAAI,UACjBmiC,YAAaxxB,EAAEhM,aAAa,gBAG7Bi9B,EAAcp+B,WAAW,UAAWw+B,GAEpCJ,EAAc/9B,OACd+9B,EAAcp+B,WAAW,QAASzD,KAAKC,IAAI,cAAeuI,YAAM,KAChEq5B,EAAcp+B,WAAW,UAAWzD,KAAKC,IAAI,gBAAiB,IAC9DiiC,EAAepH,YAAY+G,EAAc9rB,WAAW,WACpD/V,KAAKyD,WAAW,gBAAiBo+B,GACjCA,EAAc7gC,OAAOC,GAAG,YAAa48B,IACpC79B,KAAKiC,IAAI,cAAe47B,EAAGr1B,MAAM,IAElCq5B,EAAc7gC,OAAOC,GAAG,mBAAoB48B,IAC3C79B,KAAKiC,IAAI,gBAAiB47B,EAAG3f,QAAQ,IAGtC2jB,EAAc7gC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKtD,MAAM2iC,EAAyB,GAC/B54B,OAAY/J,KAAKC,IAAI,eAAgB,KAAMooB,IAC1Csa,EAAaniC,KAAK6nB,EAAQ,KAAK,IAEhC,MAAMua,EAAqBtD,GAAoB5+B,IAAIV,KAAKM,MAAO,CAC9DP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,kBAC5B86B,YAAa1/B,KAAKC,IAAI,cAAe,MAAQ,KAC7C00B,MAAOgO,IAGRC,EAAmBn/B,WAAW,UAAWw+B,GAEzCW,EAAmB9+B,OAEnB8+B,EAAmB7sB,WAAW,QAAS+lB,MAAM3P,QAAU,OACvD+V,EAAepH,YAAY8H,EAAmB7sB,WAAW,WACzD/V,KAAKyD,WAAW,qBAAsBm/B,GACtCA,EAAmB5hC,OAAOC,GAAG,YAAa48B,IACzC79B,KAAKiC,IAAI,cAAe8D,WAAeA,WAAe83B,EAAG1F,MAAQ0F,EAAG1F,KAAO0F,EAAG1F,KAAK7Y,IAAI,IAGxFsjB,EAAmB5hC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAK3D,MAAM6iC,EAAwC,GAC9C,IAAIC,EACJ,MAAMxf,EAAkBtjB,KAAKC,IAAI,kBAAmB,IACpD8J,OAAY/J,KAAKC,IAAI,mBAAoB,KAAM8iC,IAC9C,MAAMr9B,EAAO05B,KAAWC,QAAQ,QAC1B/f,EAAKkhB,KAAKU,UAAU6B,GAC1Br9B,EAAK+3B,aAAa,SAAU,QAC5B/3B,EAAK+3B,aAAa,mBAAoBsF,EAAUC,KAAK,MACrDt9B,EAAK+3B,aAAa,QAAS,sBAC3BoF,EAAiBriC,KAAK,CACrB8e,GAAIA,EACJwS,MAAO,GACPpsB,KAAMA,IAGH4Z,GAAMkhB,KAAKU,UAAU5d,KACxBwf,EAAyB1D,KAAWC,QAAQ,QAC5CyD,EAAuBrF,aAAa,SAAU,QAC9CqF,EAAuBrF,aAAa,mBAAoBsF,EAAUC,KAAK,MACvEF,EAAuBrF,aAAa,QAAS,sB,IAG/C,MAAMwF,EAAyB3D,GAAoB5+B,IAAIV,KAAKM,MAAO,CAClEP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,cAC5B+vB,MAAOkO,IAGRI,EAAuBx/B,WAAW,UAAWw+B,GAE7CgB,EAAuBn/B,OACnBg/B,GACHG,EAAuBpD,QAAQ,CAC9BvgB,GAAI,GACJ5Z,KAAMo9B,EACNhR,MAAO,KAGTmR,EAAuBltB,WAAW,QAAS0nB,aAAa,QAAS,4CACjEyE,EAAepH,YAAYmI,EAAuBltB,WAAW,WAC7D/V,KAAKyD,WAAW,yBAA0Bw/B,GAC1CA,EAAuBjiC,OAAOC,GAAG,YAAa48B,IAC7C79B,KAAKiC,IAAI,kBAAmBu+B,KAAKC,MAA0B5C,EAAG1F,KAAM7Y,IAAI,IAGzE2jB,EAAuBjiC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAK/D,MAAM+hC,EAAcU,KAAa/hC,IAAIV,KAAKM,MAAO,CAChDP,WAAYA,EACZ2iC,OAAQ1iC,KAAKC,IAAI,UACjByE,KAAMkM,EAAEhM,aAAa,QACrBw9B,YAAaxxB,EAAEhM,aAAa,gBAE7Bm9B,EAAYj+B,OACZi+B,EAAYt+B,WAAW,UAAWw+B,GAClCF,EAAYt+B,WAAW,QAASzD,KAAKC,IAAI,YAAauI,YAAM,KAC5Du5B,EAAYt+B,WAAW,UAAWzD,KAAKC,IAAI,cAAe,IAC1DiiC,EAAepH,YAAYiH,EAAYhsB,WAAW,WAClD/V,KAAKyD,WAAW,cAAes+B,GAC/BA,EAAY/gC,OAAOC,GAAG,YAAa48B,IAClC79B,KAAKiC,IAAI,YAAa47B,EAAGr1B,MAAM,IAEhCu5B,EAAY/gC,OAAOC,GAAG,mBAAoB48B,IACzC79B,KAAKiC,IAAI,cAAe47B,EAAG3f,QAAQ,IAGpC6jB,EAAY/gC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKpD,MAAMkjC,EAAmBT,KAAa/hC,IAAIV,KAAKM,MAAO,CACrDP,WAAYA,EACZ2iC,OAAQ1iC,KAAKC,IAAI,UACjByE,KAAMkM,EAAEhM,aAAa,QACrBw9B,YAAaxxB,EAAEhM,aAAa,cAC5Bu+B,YAAY,IAEbD,EAAiBp/B,OACjBo/B,EAAiBz/B,WAAW,UAAWw+B,GACvCiB,EAAiBz/B,WAAW,QAASzD,KAAKC,IAAI,YAAauI,YAAM,KACjE05B,EAAepH,YAAYoI,EAAiBntB,WAAW,WACvD/V,KAAKyD,WAAW,mBAAoBy/B,GACpCA,EAAiBliC,OAAOC,GAAG,YAAa48B,IACvC79B,KAAKiC,IAAI,YAAa47B,EAAGr1B,MAAM,IAGhC06B,EAAiBliC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKzD,MAAMojC,EAAsB,GAC5Br5B,OAAY/J,KAAKC,IAAI,iBAAkB,KAAMojC,IAC5CD,EAAU5iC,KAAK6iC,EAAO,GAAG,IAE1B,MAAMC,EAAkBhE,GAAoB5+B,IAAIV,KAAKM,MAAO,CAC3DP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,mBAC5B86B,YAAa1/B,KAAKC,IAAI,gBAAiB,QAAU,GACjD00B,MAAOyO,EACP19B,KAAM,SAEP49B,EAAgBx/B,OAChBw/B,EAAgB7/B,WAAW,UAAWw+B,GAEtCC,EAAepH,YAAYwI,EAAgBvtB,WAAW,WACtD/V,KAAKyD,WAAW,uBAAwB6/B,GACxCA,EAAgBtiC,OAAOC,GAAG,YAAa48B,IACtC79B,KAAKiC,IAAI,gBAAiB8D,WAAe83B,EAAG1F,MAAQ0F,EAAG1F,KAAO0F,EAAG1F,KAAK7Y,GAAG,IAG1EgkB,EAAgBtiC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKxD,MAAMujC,EAAc5E,KAAaj+B,IAAIV,KAAKM,MAAO,CAChDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,QAC5Bc,KAAM05B,KAAWC,QAAQ,UAE1BkE,EAAYz/B,OACZy/B,EAAY9/B,WAAW,UAAWw+B,GAClCC,EAAepH,YAAYyI,EAAYxtB,WAAW,WAClD/V,KAAKyD,WAAW,cAAe8/B,GAC/BA,EAAYtiC,GAAG,UAAWw7B,IACzBz8B,KAAKiC,IAAI,kBAAmBshC,EAAYtjC,IAAI,UAAY,OAAS,SAAS,IAG3EsjC,EAAYviC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKpD,MAAMwjC,EAAgB7E,KAAaj+B,IAAIV,KAAKM,MAAO,CAClDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,UAC5Bc,KAAM05B,KAAWC,QAAQ,YAE1BmE,EAAc1/B,OACd0/B,EAAc//B,WAAW,UAAWw+B,GACpCC,EAAepH,YAAY0I,EAAcztB,WAAW,WACpD/V,KAAKyD,WAAW,gBAAiB+/B,GACjCA,EAAcviC,GAAG,UAAWw7B,IAC3Bz8B,KAAKiC,IAAI,iBAAkBuhC,EAAcvjC,IAAI,UAAY,SAAW,SAAS,IAG9EujC,EAAcxiC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKtD,MAAMyjC,EAAyB,GAC/B15B,OAAY/J,KAAKC,IAAI,oBAAqB,KAAMojC,IAC/CI,EAAajjC,KAAK6iC,EAAO,GAAG,IAE7B,MAAMK,EAAoBpE,GAAoB5+B,IAAIV,KAAKM,MAAO,CAC7DP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,qBAC5B86B,YAAa1/B,KAAKC,IAAI,kBAAmB,SACzC00B,MAAO8O,EACP/9B,KAAM,SAEPg+B,EAAkB5/B,OAClB4/B,EAAkBjgC,WAAW,UAAWw+B,GACxCC,EAAepH,YAAY4I,EAAkB3tB,WAAW,WACxD/V,KAAKyD,WAAW,yBAA0BigC,GAC1CA,EAAkB1iC,OAAOC,GAAG,YAAa48B,IACxC79B,KAAKiC,IAAI,kBAAmB8D,WAAe83B,EAAG1F,MAAQ0F,EAAG1F,KAAO0F,EAAG1F,KAAK7Y,GAAG,IAG5EokB,EAAkB1iC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAK1D,MAAM2jC,EAAmBhF,KAAaj+B,IAAIV,KAAKM,MAAO,CACrDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,uBAC5Bc,KAAM05B,KAAWC,QAAQ,oBAE1BsE,EAAiB7/B,OACjB6/B,EAAiBlgC,WAAW,UAAWw+B,GACvCC,EAAepH,YAAY6I,EAAiB5tB,WAAW,WACvD/V,KAAKyD,WAAW,mBAAoBkgC,GAChC3jC,KAAKC,IAAI,kBACZ0jC,EAAiB1hC,IAAI,UAAU,GAEhC0hC,EAAiB1iC,GAAG,UAAWw7B,IAC9Bz8B,KAAKiC,IAAI,gBAAmD,GAAlC0hC,EAAiB1jC,IAAI,UAAkB,IAGlE0jC,EAAiB3iC,OAAOC,GAAG,QAASjB,KAAKgiC,eAAgBhiC,MAKzD,MAAM4jC,EAAgBjF,KAAaj+B,IAAIV,KAAKM,MAAO,CAClDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,UAC5Bc,KAAM05B,KAAWC,QAAQ,UACzBN,OAAQh/B,EAAWE,IAAI,2BAA2B,KAEnDD,KAAKm7B,WAAW36B,KAAKT,EAAWkB,GAAG,2BAA4B89B,IAC9D6E,EAAc3hC,IAAI,SAAU88B,EAAO,KAGpC6E,EAAcngC,WAAW,UAAWw+B,GACpCC,EAAepH,YAAY8I,EAAc7tB,WAAW,WACpD/V,KAAKyD,WAAW,gBAAiBmgC,GACjCA,EAAc3iC,GAAG,UAAWw7B,IAC3B,MAAMsC,EAAS6E,EAAc3jC,IAAI,UAAU,GAC3CF,EAAWkC,IAAI,0BAA2B88B,EAAO,IAMlD,MAAMsD,EAAgB1D,KAAaj+B,IAAIV,KAAKM,MAAO,CAClDP,WAAYA,EACZqiC,YAAaxxB,EAAEhM,aAAa,UAC5Bc,KAAM05B,KAAWC,QAAQ,YAG1Br/B,KAAKm7B,WAAW36B,KAAKT,EAAWkB,GAAG,kBAAmB89B,IACrDsD,EAAcpgC,IAAI,SAAU88B,EAAO,KAGpCsD,EAAc5+B,WAAW,UAAWw+B,GACpCC,EAAepH,YAAYuH,EAActsB,WAAW,WACpD/V,KAAKyD,WAAW,gBAAiB4+B,GACjCA,EAAcphC,GAAG,UAAWw7B,IAC3B,MAAMsC,EAASsD,EAAcpiC,IAAI,UAAU,GAC3CD,KAAK6jC,UAAU9E,EAAO,IAMvB,MAAM+E,EAAenF,KAAaj+B,IAAIV,KAAKM,MAAO,CACjDP,WAAYA,EACZ2E,KAAMkM,EAAEhM,aAAa,SACrBw9B,YAAaxxB,EAAEhM,aAAa,sBAC5Bc,KAAM05B,KAAWC,QAAQ,SACzB0E,WAAW,IAEZD,EAAargC,WAAW,UAAWw+B,GACnCC,EAAepH,YAAYgJ,EAAa/tB,WAAW,WACnD/V,KAAKyD,WAAW,eAAgBqgC,GAChC9jC,KAAKm7B,WAAW36B,KAAKy6B,oBAAwB6I,EAAa/tB,WAAW,UAAY,SAAU0mB,IAC1F4F,EAAcpgC,IAAI,UAAU,GAC5BjC,KAAKugB,eAAe,KAIjBvgB,KAAKC,IAAI,WACZD,KAAKgkC,SAAShkC,KAAKC,IAAI,QAEzB,CAQO4jC,UAAU9E,GAChB/+B,KAAKC,IAAI,cAAcgC,IAAI,iBAAkB88B,EAC9C,CAOOxe,gBACNf,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IAExBA,EAAO0d,eAAe,GACrB,GAEJ,CAEOqc,iBACN98B,MAAM88B,iBACN,MAAMwH,EAAWpkC,KAAK0hC,YAEtB,GAAI1hC,KAAKiI,QAAQ,SAAU,CAC1B,MAAMk6B,EAAcniC,KAAK+V,WAAW,eAChCosB,GACHA,EAAYlgC,IAAI,QAASjC,KAAKC,IAAI,S,CAIhCD,KAAK68B,eAAe,YACnB78B,KAAK+V,WAAW,YACnB/V,KAAKshC,eAIHthC,KAAKiI,QAAQ,YAChBjI,KAAKC,IAAI,cAAcomB,cAAcrmB,KAAKC,IAAI,WAE1CD,KAAKC,IAAI,WACRmkC,IACHpkC,KAAK+V,WAAW,kBAAmB+lB,MAAM3P,QAAU,SAEpDnsB,KAAKgkC,SAAShkC,KAAKC,IAAI,SACnBmkC,GACHnJ,SAAaj7B,KAAK+V,WAAW,eAAgBA,WAAW,aAIrDquB,IACHpkC,KAAK+V,WAAW,kBAAmB+lB,MAAM3P,QAAU,QAEpDnsB,KAAKgkC,aAKHhkC,KAAKiI,QAAQ,SAAWjI,KAAKC,IAAI,WACpCD,KAAKgkC,SAAShkC,KAAKC,IAAI,SAGxB,MAAMokC,EAAarkC,KAAKM,MAAMU,QAC1BhB,KAAKiI,QAAQ,gBAAkBjI,KAAKiI,QAAQ,gBAAkBjI,KAAKiI,QAAQ,kBAAoBjI,KAAKiI,QAAQ,qBAC/Go8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAKskC,YAAY,KAIftkC,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,iBAC7Co8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAKukC,UAAU,KAIbvkC,KAAKiI,QAAQ,cAAgBjI,KAAKiI,QAAQ,kBAAoBjI,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,oBAAsBjI,KAAKiI,QAAQ,oBACpJo8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAKk/B,WAAW,IAIdl/B,KAAKiI,QAAQ,kBAChBo8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAKwkC,eAAe,IAIlBxkC,KAAKiI,QAAQ,gBAChBo8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAKykC,iBAAiB,IAIpBzkC,KAAKiI,QAAQ,eAChBo8B,EAAW9d,KAAK,cAAc,KAC7BvmB,KAAK0kC,UAAU,GAIlB,CAEUV,SAASlF,GAClB,MAAMsF,EAAWpkC,KAAK0hC,YAStB,GANA33B,OAAY/J,KAAK2kC,uBAAwB9hC,IACxCA,EAAO4iB,gBAAgB,IAExBzlB,KAAK2kC,sBAAwB,IAGxB7F,EAKJ,OAJIsF,GACHpkC,KAAK+V,WAAW,iBAAkB9T,IAAI,UAAU,QAEjDjC,KAAKC,IAAI,cAAcgC,IAAI,2BAA2B,GAKvDjC,KAAK4kC,qBAAqB9F,GAC1B,IAEI+F,EAFAV,EAAankC,KAAKikC,eAAenF,GAWrC,GARA/0B,OAAYo6B,GAAathC,IACpBgiC,IAAchiC,EAAOzC,QACxByC,EAAO2iB,gBACPxlB,KAAK2kC,sBAAsBnkC,KAAKqC,GAChCgiC,EAAYhiC,EAAOzC,M,IAIjBgkC,EAAU,CACbpkC,KAAK+V,WAAW,eAAgB8oB,QAAQC,GAGxC,MAAMlE,EAAgB,CACrBiH,cAAe,CAAC,UAAW,UAAW,SAAU,UAAW,YAAa,qBAAsB,kBAAmB,iBAAkB,qBAAsB,OAAQ,aAAc,mBAAoB,WAAY,WAAY,WAAY,gBAAiB,YAAa,aAAc,aAAc,iBACjSe,mBAAoB,CAAC,UAAW,SAAU,UAAW,kBAAmB,iBAAkB,qBAAsB,OAAQ,aAAc,WAAY,WAAY,WAAY,gBAAiB,YAAa,aAAc,aAAc,gBAAiB,oBACrPK,uBAAwB,CAAC,UAAW,SAAU,UAAW,kBAAmB,iBAAkB,qBAAsB,OAAQ,aAAc,WAAY,WAAY,WAAY,gBAAiB,YAAa,aAAc,aAAc,iBACxOU,iBAAkB,CAAC,UAAW,OAAQ,aAAc,cACpD5B,YAAa,CAAC,UAAW,UAAW,gBAAiB,YAAa,mBAAoB,WAAY,WAAY,WAAY,WAAY,qBAAsB,sBAE5JmB,iBAAkB,CAAC,UAAW,SAC9B4B,qBAAsB,CAAC,UAAW,SAClCC,uBAAwB,CAAC,UAAW,SACpCxB,YAAa,CAAC,UAAW,SACzBC,cAAe,CAAC,UAAW,SAE3BjB,YAAa,CAAC,sBACdC,YAAa,CAAC,UAAW,qBAAsB,OAAQ,aAAc,WAAY,WAAY,WAAY,mBAAoB,QAAS,UAAW,kBAAmB,iBAAkB,gBAAiB,gBAAiB,YAAa,UAAW,cAGjPhjB,QAAaob,GAAU,CAACC,EAASsE,KAChC,MAAM6F,EAAuBhlC,KAAM+V,WAAW8kB,IAClB,GAAxBsE,EAAMloB,QAAQ6nB,GACjBkG,EAAelhC,OAGfkhC,EAAe5gC,M,IAKnB,CAEUwgC,qBAAqB9F,GAC9B,IAAIqF,EAAankC,KAAKikC,eAAenF,GAChCqF,IACJA,EAAa,IAId,MAAMc,EAAkC,GACxCl7B,OAAYo6B,GAAathC,IACxBoiC,EAAkBzkC,KAAKqC,EAAOzC,MAAoB,IAInD,MAAM8kC,EAA0BllC,KAAKC,IAAI,SAAU,IAC7CF,EAAaC,KAAKC,IAAI,cAa5B,GAVAF,EAAWQ,OAAO6Y,MAAMtY,IACvB,IAAyC,GAArCmkC,EAAkBhuB,QAAQnW,GAAc,CAC3C,MAAMqkC,EAAenlC,KAAKolC,oBAAoBtkC,GAC1CqkC,GACHD,EAAY1kC,KAAK2kC,E,KAMhBD,EAAY3hC,OAAS,EAAG,CAC3B,MAAM8hC,EAAoBrlC,KAAKC,IAAI,eAAgB,CAAC,GAGpD8J,OAAYm7B,GAAcA,IACzB,IAAIriC,EACJ,MAAMpB,EAAayjC,EAAYjlC,IAAI,SAC7BwC,EAAayiC,EAAYjlC,IAAI,SAC7Ba,EAAQokC,EAAY9kC,MAC1B,IAAIsG,EACJ,GAAI2+B,EAAavG,GAAO,CACvBp4B,EAAWyV,KAASzb,IAAI2kC,EAAavG,IACrC,MAAMwG,EAAqBtlC,KAAK+V,WAAW,gBAAiB,CAAC,GAC7DuvB,EAAcxG,GAAQp4B,EACtB1G,KAAKyD,WAAW,gBAAiB6hC,E,CAGlC,OAAQxG,GACP,IAAK,qBACJ,MAAMp5B,EAAO1F,KAAKC,IAAI,cAAeD,KAAKC,IAAI,gBAAiB,IAC/D4C,EAAS+tB,GAAWlwB,IAAIV,KAAKM,MAAO,CACnCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,EACP2uB,YAAa1rB,EAAKwrB,QAClBG,UAAW3rB,EAAKorB,MAChBQ,YAAa5rB,EAAKgR,QAClB6a,YAAa7rB,EAAKyrB,SAChBzqB,GACH,MACD,IAAK,UACJ7D,EAASosB,GAAcvuB,IAAIV,KAAKM,MAAO,CACtCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,UACJ7D,EAASswB,GAAczyB,IAAIV,KAAKM,MAAO,CACtCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,SACJ7D,EAASytB,GAAa5vB,IAAIV,KAAKM,MAAO,CACrCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH7D,EAAO4D,MAAMC,SAASrE,OAAO,CAC5BD,aAAa,IAEd,MACD,IAAK,UACJS,EAASsxB,GAAczzB,IAAIV,KAAKM,MAAO,CACtCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,YACJ7D,EAASs0B,GAAgBz2B,IAAIV,KAAKM,MAAO,CACxCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,qBACJ7D,EAASu1B,GAAwB13B,IAAIV,KAAKM,MAAO,CAChDuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,kBACJ7D,EAASksB,GAAqBruB,IAAIV,KAAKM,MAAO,CAC7CuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,iBACJ7D,EAAS81B,GAAoBj4B,IAAIV,KAAKM,MAAO,CAC5CuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,QACJ7D,EAASgvB,GAAYnxB,IAAIV,KAAKM,MAAO,CACpCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,OACJ7D,EAASinB,GAAiBppB,IAAIV,KAAKM,MAAO,CACzCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,aACJ7D,EAASurB,GAAgB1tB,IAAIV,KAAKM,MAAO,CACxCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,UACJ7D,EAAS+1B,GAAQl4B,IAAIV,KAAKM,MAAO,CAChCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,mBACJ7D,EAAS+pB,GAAsBlsB,IAAIV,KAAKM,MAAO,CAC9CuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,WACJ7D,EAASkmB,GAAeroB,IAAIV,KAAKM,MAAO,CACvCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH7D,EAAO4D,MAAMC,SAASrE,OAAO,CAC5BD,aAAa,IAEd,MACD,IAAK,WACJS,EAASkmB,GAAeroB,IAAIV,KAAKM,MAAO,CACvCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,EACP8iC,WAAW,GACT7+B,GACH7D,EAAO4D,MAAMC,SAASrE,OAAO,CAC5BD,aAAa,IAEd,MACD,IAAK,WACJS,EAASkmB,GAAeroB,IAAIV,KAAKM,MAAO,CACvCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,EACP8iC,WAAW,EACXC,WAAY,GACV9+B,GACH7D,EAAO4D,MAAMC,SAASrE,OAAO,CAC5BD,aAAa,IAEd,MACD,IAAK,gBACJS,EAASg0B,GAAmBn2B,IAAIV,KAAKM,MAAO,CAC3CuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,YACJ7D,EAASipB,GAAgBprB,IAAIV,KAAKM,MAAO,CACxCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,aACJ7D,EAASqtB,GAAiBxvB,IAAIV,KAAKM,MAAO,CACzCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,aACJ7D,EAAS+zB,GAAgBl2B,IAAIV,KAAKM,MAAO,CACxCuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GACH,MACD,IAAK,gBACJ7D,EAASmsB,GAAmBtuB,IAAIV,KAAKM,MAAO,CAC3CuC,OAAQqiC,EACRzjC,MAAOA,EACPgB,MAAOA,GACLiE,GAKD7D,IACHshC,EAAW3jC,KAAKqC,GAChB/B,EAAM2kC,SAASjlC,KAAKqC,GACpBA,EAAOY,WAAW,kBAAmByhC,GACrCriC,EAAOZ,IAAI,aAAclC,EAAW2lC,iBAAiBR,EAAa,eAClEriC,EAAOZ,IAAI,uBAAuB,GAC9BlC,EAAWgW,WAAW,cACzBhW,EAAW4lC,iBAAgB,G,IAK9B3lC,KAAKikC,eAAenF,GAAQqF,EAE5BnkC,KAAKskC,aACLtkC,KAAKukC,WACLvkC,KAAKk/B,YACLl/B,KAAKykC,kBACLzkC,KAAK0kC,WACL1kC,KAAKwkC,e,CAEP,CAEUoB,sBAAsB9kC,GAC/B,MAAMqkC,EAAenlC,KAAKolC,oBAAoBtkC,GAC1CqkC,GACH3lB,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,cAAmBo6B,GAAathC,IAC3BA,EAAOzC,OAASU,IACfA,EAAM+kC,aACT97B,SAAco6B,EAAYthC,IAG1BA,EAAOZ,IAAI,SAAUkjC,GACrBtiC,EAAOY,WAAW,kBAAmB0hC,I,GAGtC,GAGL,CAEUC,oBAAoBtkC,GAC7B,MACMZ,EADaF,KAAKC,IAAI,cACGA,IAAI,eACnC,IAAIklC,EAOJ,OALCA,EADGjlC,GAAeA,EAAYE,OAASU,EACxBZ,EAGAY,EAAM+B,OAAO0a,SAAS,GAE/B4nB,CACR,CAEU3D,uBACUxhC,KAAKC,IAAI,cACjBM,OAAO6Y,MAAMtY,IACvBA,EAAM+B,OAAO7B,OAAOugC,OAAM,IAAMvhC,KAAK4lC,sBAAsB9kC,IAAO,GAEpE,CAEUwjC,aACT9kB,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IACxBA,EAAOR,OAAO,CACbgiB,YAAarkB,KAAKC,IAAI,eACtBsjB,YAAavjB,KAAKC,IAAI,eACtBojB,cAAerjB,KAAKC,IAAI,iBACxBqjB,gBAAiBtjB,KAAKC,IAAI,oBACzB,GACD,GAEJ,CAEUskC,WACT/kB,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IACxBA,EAAOR,OAAO,CACb8hB,UAAWnkB,KAAKC,IAAI,aACpBsX,YAAavX,KAAKC,IAAI,gBACrB,GACD,GAGJ,CAEUi/B,YACT,MAAM4G,EAAa,CAAC,UAAW,SAC/BtmB,QAAaxf,KAAKikC,gBAAgB,CAACnF,EAAMqF,MACC,GAArC2B,EAAW7uB,QAAgB6nB,IAC9B/0B,OAAYo6B,GAAathC,IACVA,EAAQR,OAAO,CAC5B2wB,UAAWhzB,KAAKC,IAAI,aACpBuyB,cAAexyB,KAAKC,IAAI,iBACxByyB,gBAAiB1yB,KAAKC,IAAI,mBAC1B2yB,gBAAiB5yB,KAAKC,IAAI,mBAC1B6yB,eAAgB9yB,KAAKC,IAAI,mBACxB,G,GAIN,CAEUukC,gBACThlB,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IACpBA,aAAkBinB,IACrBjnB,EAAOR,OAAO,CACbmpB,cAAexrB,KAAKC,IAAI,kB,GAGzB,GAEJ,CAEUwkC,kBACT,IAAKzkC,KAAK0hC,YACT,OAGD,MAAMh8B,EAAO1F,KAAKC,IAAI,cAAeD,KAAKC,IAAI,gBAAiB,IACzD8hC,EAAc/hC,KAAK+V,WAAW,eAChCrQ,EAAKqgC,aACRhE,EAAYj+B,OAGZi+B,EAAY39B,OAEbob,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IACpBA,aAAkB+tB,IACrB/tB,EAAOR,OAAO,CACb+uB,YAAa1rB,EAAKwrB,QAClBG,UAAW3rB,EAAKorB,MAChBQ,YAAa5rB,EAAKgR,QAClB6a,YAAa7rB,EAAKyrB,QAClB5Z,YAAa7R,EAAKqgC,aAAe,EAAI/lC,KAAKC,IAAI,gB,GAG/C,GAEJ,CAEUykC,WACT,MAAMsB,EAAOhmC,KAAKC,IAAI,cAAc,GACpCuf,QAAaxf,KAAKikC,gBAAgB,CAACC,EAAOC,KACzCp6B,OAAYo6B,GAAathC,IACpBA,EAAOkT,WAAW,oBACrBlT,EAAOZ,IAAI,aAAc+jC,E,GAEzB,GAEJ,CAEUC,kBACT,OAAO7G,KAAWC,QAAQ,OAC3B,CAEUx7B,WACT/D,MAAM+D,WACN,MAAMq+B,EAAiBliC,KAAK+V,WAAW,kBACnCmsB,GACHjH,iBAAqBiH,EAEvB,CAEUT,eAAe5+B,GACxB,GAAIA,aAAkBmZ,GAAe,CACpC,IAAItX,EAAO7B,EAAO0B,UAClB,MAAY,oBAARG,EACI,OAES,cAARA,EACD,qBAES,kBAARA,GAA4E,GAA/C7B,EAA0B5C,IAAI,cAC5D,WAES,kBAARyE,GAA6B7B,EAA0B5C,IAAI,aAC5D,YAERyE,EAAOu2B,cAAkBv2B,EAAKwhC,QAAQ,SAAU,KACzCxhC,E,CAET,CAaOyhC,oBAAyE,IAAvDC,EAAA1W,UAAAnsB,OAAA,QAAAqE,IAAA8nB,UAAA,GAAAA,UAAA,GAA8B,SAAU2W,EAAe3W,UAAAnsB,OAAA,EAAAmsB,UAAA,QAAA9nB,EAC/E,MAAM0+B,EAAkB,GAsBxB,OArBAtmC,KAAKC,IAAI,cAAcM,OAAO6Y,MAAK,CAACtY,EAAOylC,KAC1CzlC,EAAM+B,OAAOuW,MAAMvW,IAClB,GAAIA,EAAO2jC,OAAsB,iBAAkB,CAClD,MAAMC,EAAaC,KAAWhmC,IAAIV,KAAKK,KAAM,CAC5CsmC,gBAAiB,CAAC,cAAe,YAAa,gBAAiB,cAAe,cAAe,kBAAmB,QAAS,aAAc,UAAW,gBAAiB,kBAAmB,kBAAmB,iBAAkB,YAAa,iBAExOC,SAAU,IAEX/jC,EAAOO,KAAKuI,OAAOqkB,KAAK6W,IACvBA,EAAIC,SAAU,CAAI,IAEnB,MAAMC,EAAY,CACjBC,OAAQhnC,KAAKyhC,eAAe5+B,GAC5BokC,aAAcV,EACdW,UAAWT,EAAWU,UAAUtkC,EAAOO,KAAKuI,OAAQ,GAAG,IAGxD26B,EAAI9lC,KAAKumC,E,IAET,IAEc,UAAVX,EAAqBE,EAAM9F,KAAKU,UAAUoF,OAAK1+B,EAAWy+B,EAClE,CAUOe,oBAAoBhkC,GAC1B,MAAMrD,EAAaC,KAAKC,IAAI,cACxB8F,WAAe3C,KAClBA,EAAOo9B,KAAKC,MAAMr9B,IAEd2C,UAAc3C,KAClBA,EAAO,CAACA,IAET2G,OAAY3G,GAAOikC,IAElB,IAAIvmC,EAAQf,EAAWQ,OAAOgd,SAAS8pB,EAAQJ,cAAgB,GAE/D,GAAInmC,EAAO,CACV,MAAMg+B,EAAOuI,EAAQL,OAKrB,IAAIM,EAHJtnC,KAAK4kC,qBAAqB9F,GAI1B/0B,OAAY/J,KAAKikC,eAAenF,IAAS,IAAKj8B,IACzCA,EAAOzC,QAAUU,IACpBwmC,EAAgBzkC,E,IAIbwkC,EAAQjkB,WACZikB,EAAQjkB,SAAW,CAAC,GAIrBmkB,KAAW7mC,IAAIV,KAAKM,OAAOmgC,MAAM4G,EAAQH,WAAWM,MAAMC,IACzDznC,KAAK0nC,sBAAsBD,EAAaH,EAAcnnB,OAAQmnB,GAC9DA,EAAclkC,KAAKukC,QAAQF,EAAY,G,MAMxC1nC,EAAWQ,OAAOS,OAAOulB,KAAK,QAASsX,IACtCA,EAAG+J,SAAS/kC,OAAO7B,OAAOulB,KAAK,QAASkW,IACvCz8B,KAAKonC,oBAAoBC,EAAQ,GAChC,G,GAIN,CAEUK,sBAAsBD,EAAkBvzB,EAAeozB,GAC5DvhC,UAAc0hC,GACjB19B,OAAY09B,GAActP,IACzBn4B,KAAK0nC,sBAAsBvP,EAAMjkB,EAAOozB,EAAc,IAG/CvhC,WAAe0hC,SAA6C7/B,IAAtB6/B,EAAYvzB,QAC1DuzB,EAAYvzB,OAASA,EACrBozB,EAAcnnB,OAASsnB,EAAYvzB,MAErC,CAQA,iBAAWozB,GACV,OAAOtnC,KAAKikC,cACb,CAYOpY,QAAQiT,EAA8Dh+B,EAAmBwgB,GAC/FthB,KAAK4kC,qBAAqB9F,GAC1B,MAAMqF,EAAankC,KAAKikC,eAAenF,GACvC,IAAIqG,EACJp7B,OAAYo6B,GAAathC,IACpB/B,IAAU+B,EAAOzC,QACpB+kC,EAAetiC,E,IAGbsiC,GACHA,EAAatZ,QAAQvK,EAEvB,EA1sCA3hB,OAAAC,eAAAyhC,GAAA,a,gDAAkC,mBAClC1hC,OAAAC,eAAAyhC,GAAA,c,gDAA0C1C,KAAat6B,WAAWC,OAAO,CAAC+8B,GAAe98B,cC/IpF,MAAOsjC,WAAyBvI,GAQ3Bz/B,YAGTC,MAAMD,YAGN,MAAM47B,EAAOz7B,KAAK+V,WAAW,YAC7B/V,KAAKyD,WAAW,OAAQg4B,GAExBA,EAAKz6B,OAAOC,GAAG,WAAY48B,IAC1B,MAAMiK,EAAY9nC,KAAK+nC,aAAyBlK,EAAG1F,KAAK7Y,IACpDtf,KAAKgB,OAAOujB,UAAU,aAAeujB,GACxC9nC,KAAKgB,OAAOwjB,SAAS,WAAY,CAChC3f,KAAM,WACNkS,OAAQ/W,KACR8nC,UAAWA,EACX3P,KAAM0F,EAAG1F,M,IAKZsD,EAAKz6B,OAAOC,GAAG,UAAWw7B,IACzBz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1BjC,KAAKiB,GAAG,UAAW89B,IACdA,EACH/+B,KAAK6kB,YAAW,IAAM4W,EAAKr3B,QAAQ,IAGnCq3B,EAAK33B,M,IAIP,MAAMmD,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,6BAEtCvE,KAAKgoC,YAILhoC,KAAKC,IAAI,cAAcgB,GAAG,gBAAgB,IAAMjB,KAAKgoC,aACtD,CAEUA,YACT,MAAMvM,EAAOz7B,KAAK+V,WAAW,QACvB3U,EAAapB,KAAKC,IAAI,cACtB00B,EAA6B,GACnC5qB,OAAY3I,GAAa0mC,IACpB/hC,WAAe+hC,GACd9nC,KAAKioC,kBAAkBH,EAAUxoB,KACpCqV,EAAMn0B,KAAK,CACV8e,GAAIwoB,EAAUxoB,GACdwS,MAAOgW,EAAUpjC,OAKf1E,KAAKioC,kBAAkBH,IAC1BnT,EAAMn0B,KAAK,CACV8e,GAAIwoB,EACJhW,MAAO9xB,KAAKM,MAAMqE,SAASC,aAAakjC,I,IAK5CrM,EAAKx5B,IAAI,QAAS0yB,EACnB,CAQOsT,kBAAkBC,GAGxB,SAFmBloC,KAAKC,IAAI,cAETA,IAAI,kBAA8D,IAD5D,CAAC,qBAAsB,qBAAsB,oBAAqB,qBAAsB,SAAU,iBAAkB,QAClFgX,QAAQixB,GACpE,CAEUjC,kBACT,OAAO7G,KAAWC,QAAQ,YAC3B,CAEOzC,iBACN98B,MAAM88B,iBACF58B,KAAKiI,QAAQ,eAChBjI,KAAKgoC,WAEP,CAOOG,kBACanoC,KAAKC,IAAI,cACjBmB,WAAWgnC,aAAaN,IAClCA,EAAU57B,SAAS,GAErB,CAQO67B,aAAaG,GAEnB,IAAKloC,KAAKioC,kBAAkBC,GAC3B,OAGD,MAAMnoC,EAAaC,KAAKC,IAAI,cAC5B,IAAI6nC,EACJ,MAAM5nC,EAAcH,EAAWE,IAAI,eAC7ByK,EAAe3K,EAAWE,IAAI,gBAC9B8C,EAAS/C,KAAKC,IAAI,UAExB,OAAQioC,GACP,IAAK,qBACJJ,EAAY36B,EAAkBzM,IAAIV,KAAKK,KAAM,CAC5CN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MAED,IAAK,4BACJ+kC,EAAYz4B,EAAyB3O,IAAIV,KAAKK,KAAM,CACnDN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,2BACJ+kC,EAAYl4B,EAAuBlP,IAAIV,KAAKK,KAAM,CACjDN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,QACJ+kC,EAAYv2B,EAAM7Q,IAAIV,KAAKK,KAAM,CAChCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,qBACJ+kC,EAAY/yB,EAAkBrU,IAAIV,KAAKK,KAAM,CAC5CN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,kBACJ+kC,EAAYj6B,EAAenN,IAAIV,KAAKK,KAAM,CACzCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,kBACJ+kC,EAAYr0B,EAAc/S,IAAIV,KAAKK,KAAM,CACxCN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,qBACJ+kC,EAAYz0B,EAAiB3S,IAAIV,KAAKK,KAAM,CAC3CN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,qBACJ+kC,EAAYt0B,EAAkB9S,IAAIV,KAAKK,KAAM,CAC5CN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,0BACJ+kC,EAAYxuB,EAAsB5Y,IAAIV,KAAKK,KAAM,CAChDN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,kBACJ4nC,EAAYpuB,GAAehZ,IAAIV,KAAKK,KAAM,CACzCN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,OACJ4nC,EAAY51B,EAAKxR,IAAIV,KAAKK,KAAM,CAC/BN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,eACJ+kC,EAAYztB,GAAY3Z,IAAIV,KAAKK,KAAM,CACtCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,WACJ+kC,EAAY39B,EAASzJ,IAAIV,KAAKK,KAAM,CACnCN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,uBACJ4nC,EAAY30B,EAAQzS,IAAIV,KAAKK,KAAM,CAClCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,iBACJ+kC,EAAYp/B,EAAchI,IAAIV,KAAKK,KAAM,CACxCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,2BACJ+kC,EAAY37B,EAAuBzL,IAAIV,KAAKK,KAAM,CACjDN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,0BACJ+kC,EAAY18B,EAAsB1K,IAAIV,KAAKK,KAAM,CAChDN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,qBACJ+kC,EAAYjuB,GAAkBnZ,IAAIV,KAAKK,KAAM,CAC5CN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,OACJ+kC,EAAY7tB,GAAKvZ,IAAIV,KAAKK,KAAM,CAC/BN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,gBACJ+kC,EAAYhuB,GAAapZ,IAAIV,KAAKK,KAAM,CACvCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACD,IAAK,qBACH+kC,EAAYtsB,GAAiB9a,IAAIV,KAAKK,KAAM,CAC3CN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAET,MACF,IAAK,oBACJ+kC,EAAYl0B,EAAgBlT,IAAIV,KAAKK,KAAM,CAC1CN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,qBACJ+kC,EAAYh0B,EAAIpT,IAAIV,KAAKK,KAAM,CAC9BN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,0BACJ+kC,EAAYv5B,EAAsB7N,IAAIV,KAAKK,KAAM,CAChDN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,4BACJ4nC,EAAYzzB,EAAwB3T,IAAIV,KAAKK,KAAM,CAClDN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,wBACJ4nC,EAAY9zB,EAAqBtT,IAAIV,KAAKK,KAAM,CAC/CN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,aACJ4nC,EAAYzyB,EAAU3U,IAAIV,KAAKK,KAAM,CACpCN,WAAYA,EACZG,YAAaA,IAEd,MACD,IAAK,SACJ4nC,EAAYxyB,EAAO5U,IAAIV,KAAKK,KAAM,CACjCN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,IAEf,MACD,IAAK,iBACJo9B,EAAYryB,EAAc/U,IAAIV,KAAKK,KAAM,CACxCN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,OACJ+kC,EAAYt9B,EAAK9J,IAAIV,KAAKK,KAAM,CAC/BN,WAAYA,EACZG,YAAaA,EACbwK,aAAcA,EACd3H,OAAQA,IAET,MACD,IAAK,SACJ+kC,EAAYvtB,GAAO7Z,IAAIV,KAAKK,KAAM,CACjCN,WAAYA,EACZG,YAAaA,EACb6C,OAAQA,IAgBX,GAXK+kC,GAEJ/9B,eAAoB/J,KAAKC,IAAI,aAAc,KAAMk4B,IAC5CpyB,WAAeoyB,IAASA,EAAK7Y,IAAM4oB,IACtCJ,EAAY3P,EAAKkQ,SAASlkC,KAAKnE,OACxB,KAMN8nC,IACH/nC,EAAWqB,WAAWZ,KAAKsnC,GACvBA,EAAUnkC,kBAAkBJ,QAAUukC,EAAU7nC,IAAI,oBAAoB,IAAO,CAClF,MAAMqoC,EAAQvoC,EAAWgW,WAAW,iBACpCuyB,EAAMtnC,OAAOulB,KAAK,QAASsX,IACtBiK,IACEjK,EAAGza,UACP0kB,EAAU57B,U,IAIbo8B,EAAMC,cAAcT,E,CAKtB,OAAOA,CACR,CAcOU,sBAA2E,IAAvDpC,EAAA1W,UAAAnsB,OAAA,QAAAqE,IAAA8nB,UAAA,GAAAA,UAAA,GAA8B,SAAU2W,EAAe3W,UAAAnsB,OAAA,EAAAmsB,UAAA,QAAA9nB,EACjF,MAAM0+B,EAAkB,GAClBvmC,EAAaC,KAAKC,IAAI,cAgC5B,OA/BAF,EAAWqB,WAAWgY,MAAM0uB,IAC3B,MAAMrB,EAAaC,KAAWhmC,IAAIV,KAAKM,MAAO,CAC7CmoC,gBAAiB,CAAC,aAAc,cAAe,eAAgB,YAI1D1B,EAAY,CAAC,EAGfe,EAAU7nC,IAAI,iBACjB8mC,EAAK2B,eAAgB,GAGlBZ,EAAU7nC,IAAI,kBACjB8mC,EAAK4B,gBAAiB,GAGvB,MAAM5lC,EAAS+kC,EAAU7nC,IAAI,UACzB8C,GACHA,EAAO6lC,cAAc9U,IAChBA,EAAO0S,OAAO,gBACjBO,EAAK8B,cAAgB9oC,EAAWQ,OAAO0W,QAAQ6c,G,IAMlDiT,EAAK+B,YAAcrC,EAAWU,UAAUW,EAAW,GAEnDxB,EAAI9lC,KAAKumC,EAAK,IAEE,UAAVX,EAAqBE,EAAM9F,KAAKU,UAAUoF,OAAK1+B,EAAWy+B,EAClE,CAUO0C,sBAAsB3lC,GAC5B,MAAMrD,EAAaC,KAAKC,IAAI,cACxB8F,WAAe3C,KAClBA,EAAOo9B,KAAKC,MAAMr9B,IAEnB2G,OAAY3G,GAAO0kC,IAgBlB,GAbKA,EAAUgB,YAAY1lB,WAC1B0kB,EAAUgB,YAAY1lB,SAAW,CAAC,GAEnC0kB,EAAUgB,YAAY1lB,SAASrjB,WAAaA,EAExC+nC,EAAUY,gBAAkBZ,EAAUgB,YAAY1lB,SAASljB,cAC9D4nC,EAAUgB,YAAY1lB,SAASljB,YAAcH,EAAWE,IAAI,gBAGzD6nC,EAAUa,iBAAmBb,EAAUgB,YAAY1lB,SAAS1Y,eAC/Do9B,EAAUgB,YAAY1lB,SAAS1Y,aAAe3K,EAAWE,IAAI,sBAG9B2H,IAA5BkgC,EAAUe,gBAAgCf,EAAUgB,YAAY1lB,SAASrgB,OAAQ,CAEpF,MAAMjC,EAAQf,EAAWQ,OAAOgd,SAASuqB,EAAUe,eAC/C/nC,GACHA,EAAMkoC,cAAcza,IACfA,EAAMiY,OAAO,iBAChBsB,EAAUgB,YAAY1lB,SAASrgB,OAASwrB,E,IAO5CgZ,KAAW7mC,IAAIV,KAAKM,OAAOmgC,MAAMqH,EAAUgB,aAAatB,MAAMM,IACzDA,aAAqBroC,KACxBM,EAAWqB,WAAWZ,KAAKsnC,E,GAE3B,GAGJ,EAteAnoC,OAAAC,eAAAioC,GAAA,a,gDAAkC,qBAClCloC,OAAAC,eAAAioC,GAAA,c,gDAA0CvI,GAAoBj7B,WAAWC,OAAO,CAACujC,GAAiBtjC,cCrF5F,IAAI0kC,GAAQ,CACf,WACA,UACA,cACA,YACA,YACA,gBACA,SACA,gBACA,UACA,gBACA,eACA,yBAEOC,GAAW,CAClBC,SAAU,GACVC,YAAY,EACZC,qBAAqB,EACrBC,UAAW,SACXC,UAAU,EACVC,cAAe,qBACf/V,QAA2B,kBAAXgW,SACoC,IAAhDA,OAAOC,UAAUC,UAAU1yB,QAAQ,QACvC2yB,eAAgB,SAChBC,qBAAqB,EACrBC,YAAY,EACZC,eAAe,EACfC,YAAa,KACbC,WAAY,QACZC,YAAa,GACbC,cAAe,EACfC,eAAgB,EAChBC,QAAS,GACTC,eAAe,EACfC,eAAe,EACfC,YAAY,EACZC,aAAc,SAAUC,GACpB,MAA0B,qBAAZC,SAA2BA,QAAQC,KAAKF,EAC1D,EACAG,QAAS,SAAUC,GACf,IAAIC,EAAO,IAAI7lB,KAAK4lB,EAAU3lB,WAC9B4lB,EAAKC,SAAS,EAAG,EAAG,EAAG,GACvBD,EAAKE,QAAQF,EAAKG,UAAY,GAAMH,EAAKI,SAAW,GAAK,GACzD,IAAIC,EAAQ,IAAIlmB,KAAK6lB,EAAKM,cAAe,EAAG,GAC5C,OAAQ,EACJjkC,KAAKC,QAAQ0jC,EAAK5lB,UAAYimB,EAAMjmB,WAAa,MAC7C,GACEimB,EAAMD,SAAW,GAAK,GACxB,EACZ,EACAG,cAAe,EACfC,qBAAsB,GACtBC,QAAQ,EACR5kB,OAAQ,UACR6kB,gBAAiB,EACjBC,KAAM,SACNC,kBAAmB,WACnBC,UAAW,yOACXC,YAAY,EACZC,IAAK,IAAI5mB,KACT6mB,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,cAAe,GACfC,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,cAAe,GACfC,aAAc,GACdC,sBAAuB,GACvBC,QAAS,GACTzlC,SAAU,OACV0lC,qBAAiBhlC,EACjBilC,UAAW,uOACXC,uBAAuB,EACvBC,WAAY,EACZC,QAAQ,EACRC,WAAW,EACXC,aAAa,EACbC,MAAM,GCjFCC,GAAU,CACjBC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CACN,SACA,SACA,UACA,YACA,WACA,SACA,aAGRC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,aAGRE,YAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC1D9mB,eAAgB,EAChB+mB,QAAS,SAAUC,GACf,IAAInjB,EAAImjB,EAAM,IACd,GAAInjB,EAAI,GAAKA,EAAI,GACb,MAAO,KACX,OAAQA,EAAI,IACR,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,KAAK,EACD,MAAO,KACX,QACI,MAAO,KAEnB,EACAojB,eAAgB,OAChBC,iBAAkB,KAClBC,YAAa,sBACbC,YAAa,kBACbC,KAAM,CAAC,KAAM,MACbC,cAAe,OACfC,eAAgB,QAChBC,cAAe,OACfC,gBAAiB,SACjBnB,WAAW,GAEAG,MCvEJiB,GAAM,SAAU9e,EAAQhsB,GAE/B,YADe,IAAXA,IAAqBA,EAAS,IAC1B,MAAQgsB,GAAQ0N,OAAgB,EAAV15B,EAClC,EACW+qC,GAAM,SAAUC,GAAQ,OAAiB,IAATA,EAAgB,EAAI,CAAI,EAC5D,SAASC,GAASC,EAAIC,GACzB,IAAIv+B,EACJ,OAAO,WACH,IAAIw+B,EAAQ3uC,KACR4uC,EAAOlf,UACXmf,aAAa1+B,GACbA,EAAI0U,YAAW,WAAc,OAAO4pB,EAAGK,MAAMH,EAAOC,EAAO,GAAGF,EAClE,CACJ,CACO,IAAIK,GAAW,SAAUC,GAC5B,OAAOA,aAAeC,MAAQD,EAAM,CAACA,EACzC,EChBO,SAASE,GAAYC,EAAM5qC,EAAWgqC,GACzC,IAAa,IAATA,EACA,OAAOY,EAAKC,UAAUvpC,IAAItB,GAC9B4qC,EAAKC,UAAUrX,OAAOxzB,EAC1B,CACO,SAASo3B,GAAc0T,EAAK9qC,EAAW+qC,GAC1C,IAAIpuC,EAAIuoC,OAAO/N,SAASC,cAAc0T,GAMtC,OALA9qC,EAAYA,GAAa,GACzB+qC,EAAUA,GAAW,GACrBpuC,EAAEqD,UAAYA,OACEqD,IAAZ0nC,IACApuC,EAAEquC,YAAcD,GACbpuC,CACX,CACO,SAASsuC,GAAUC,GACtB,KAAOA,EAAKC,YACRD,EAAKE,YAAYF,EAAKC,WAC9B,CACO,SAASE,GAAWH,EAAMI,GAC7B,OAAIA,EAAUJ,GACHA,EACFA,EAAKK,WACHF,GAAWH,EAAKK,WAAYD,QADlC,CAGT,CACO,SAASE,GAAkBC,EAAgBC,GAC9C,IAAIC,EAAUvU,GAAc,MAAO,mBAAoBwU,EAAWxU,GAAc,QAAS,YAAcqU,GAAiBI,EAAUzU,GAAc,OAAQ,WAAY0U,EAAY1U,GAAc,OAAQ,aAQtM,IAPiD,IAA7C+N,UAAUC,UAAU1yB,QAAQ,YAC5Bk5B,EAAStrC,KAAO,UAGhBsrC,EAAStrC,KAAO,OAChBsrC,EAASG,QAAU,aAEV1oC,IAATqoC,EACA,IAAK,IAAIxrC,KAAOwrC,EACZE,EAAS1S,aAAah5B,EAAKwrC,EAAKxrC,IAIxC,OAHAyrC,EAAQpV,YAAYqV,GACpBD,EAAQpV,YAAYsV,GACpBF,EAAQpV,YAAYuV,GACbH,CACX,CACO,SAASK,GAAe3xB,GAC3B,IACI,MAAkC,oBAAvBA,EAAM4xB,aACF5xB,EAAM4xB,eACL,GAET5xB,EAAM7H,MACjB,CACA,MAAO05B,GACH,OAAO7xB,EAAM7H,MACjB,CACJ,CCpDA,IAAI25B,GAAY,WAAgC,EACrCC,GAAa,SAAUC,EAAatD,EAAW1mB,GAAU,OAAOA,EAAO4mB,OAAOF,EAAY,YAAc,YAAYsD,EAAc,EAClIC,GAAY,CACnBC,EAAGJ,GACHK,EAAG,SAAUC,EAASC,EAAWrqB,GAC7BoqB,EAAQE,SAAStqB,EAAO4mB,OAAOD,SAASt2B,QAAQg6B,GACpD,EACAE,EAAG,SAAUH,EAASjX,GAClBiX,EAAQhG,UAAUgG,EAAQI,YAAc,GAAK,GAAK,GAAKC,WAAWtX,GACtE,EACAuX,EAAG,SAAUN,EAASjX,GAClBiX,EAAQhG,SAASqG,WAAWtX,GAChC,EACAwX,EAAG,SAAUP,EAAShX,GAClBgX,EAAQ/F,QAAQoG,WAAWrX,GAC/B,EACAwX,EAAG,SAAUR,EAAShD,EAAMpnB,GACxBoqB,EAAQhG,SAAUgG,EAAQI,WAAa,GACnC,GAAK9C,GAAI,IAAIlR,OAAOxW,EAAOonB,KAAK,GAAI,KAAKyD,KAAKzD,IACtD,EACA0D,EAAG,SAAUV,EAASW,EAAY/qB,GAC9BoqB,EAAQE,SAAStqB,EAAO4mB,OAAOF,UAAUr2B,QAAQ06B,GACrD,EACAC,EAAG,SAAUZ,EAASa,GAClBb,EAAQc,WAAWT,WAAWQ,GAClC,EACAE,EAAG,SAAUC,EAAGC,GAAe,OAAO,IAAI/sB,KAA+B,IAA1BmsB,WAAWY,GAAsB,EAChFC,EAAG,SAAUlB,EAASmB,EAASvrB,GAC3B,IAAIwrB,EAAaC,SAASF,GACtBpH,EAAO,IAAI7lB,KAAK8rB,EAAQ3F,cAAe,EAAG,EAAuB,GAAlB+G,EAAa,GAAQ,EAAG,EAAG,EAAG,GAEjF,OADArH,EAAKE,QAAQF,EAAKG,UAAYH,EAAKI,SAAWvkB,EAAOD,gBAC9CokB,CACX,EACAuH,EAAG,SAAUtB,EAAS7W,GAClB6W,EAAQuB,YAAYlB,WAAWlX,GACnC,EACAqY,EAAG,SAAUR,EAAGS,GAAW,OAAO,IAAIvtB,KAAKutB,EAAU,EACrD99B,EAAG,SAAUq8B,EAAShX,GAClBgX,EAAQ/F,QAAQoG,WAAWrX,GAC/B,EACArpB,EAAG,SAAUqgC,EAASjX,GAClBiX,EAAQhG,UAAUgG,EAAQI,YAAc,GAAK,GAAK,GAAKC,WAAWtX,GACtE,EACArwB,EAAG,SAAUsnC,EAAS0B,GAClB1B,EAAQ2B,WAAWtB,WAAWqB,GAClC,EACAzkC,EAAG,SAAU+iC,EAAShX,GAClBgX,EAAQ/F,QAAQoG,WAAWrX,GAC/B,EACAppB,EAAG8/B,GACHkC,EAAG,SAAU5B,EAAS9W,GAClB8W,EAAQE,SAASG,WAAWnX,GAAS,EACzC,EACAvK,EAAG,SAAUqhB,EAAS9W,GAClB8W,EAAQE,SAASG,WAAWnX,GAAS,EACzC,EACA1P,EAAG,SAAUwmB,EAASa,GAClBb,EAAQc,WAAWT,WAAWQ,GAClC,EACAgB,EAAG,SAAUb,EAAGc,GACZ,OAAO,IAAI5tB,KAAKmsB,WAAWyB,GAC/B,EACAjkB,EAAG6hB,GACH5qC,EAAG,SAAUkrC,EAAS7W,GAClB6W,EAAQuB,YAAY,IAAOlB,WAAWlX,GAC1C,GAEO4Y,GAAa,CACpBjC,EAAG,GACHC,EAAG,GACHI,EAAG,eACHG,EAAG,eACHC,EAAG,mBACHC,EAAG,GACHE,EAAG,GACHE,EAAG,eACHG,EAAG,OACHG,EAAG,eACHI,EAAG,WACHE,EAAG,OACH79B,EAAG,eACHhE,EAAG,eACHjH,EAAG,eACHuE,EAAG,eACH2C,EAAG,GACHgiC,EAAG,eACHjjB,EAAG,eACHnF,EAAG,eACHqoB,EAAG,OACHhkB,EAAG,eACH/oB,EAAG,YAEIktC,GAAU,CACjBR,EAAG,SAAUzH,GAAQ,OAAOA,EAAKkI,aAAe,EAChDnC,EAAG,SAAU/F,EAAMnkB,EAAQje,GACvB,OAAOie,EAAOymB,SAASC,UAAU0F,GAAQnkB,EAAEkc,EAAMnkB,EAAQje,GAC7D,EACAooC,EAAG,SAAUhG,EAAMnkB,EAAQje,GACvB,OAAOgoC,GAAWqC,GAAQrjB,EAAEob,EAAMnkB,EAAQje,GAAW,GAAG,EAAOie,EACnE,EACAuqB,EAAG,SAAUpG,EAAMnkB,EAAQje,GACvB,OAAO0lC,GAAI2E,GAAQriC,EAAEo6B,EAAMnkB,EAAQje,GACvC,EACA2oC,EAAG,SAAUvG,GAAQ,OAAOsD,GAAItD,EAAKqG,WAAa,EAClDG,EAAG,SAAUxG,EAAMnkB,GACf,YAA0Bhf,IAAnBgf,EAAO8mB,QACR3C,EAAKG,UAAYtkB,EAAO8mB,QAAQ3C,EAAKG,WACrCH,EAAKG,SACf,EACAsG,EAAG,SAAUzG,EAAMnkB,GAAU,OAAOA,EAAOonB,KAAKM,GAAIvD,EAAKqG,WAAa,IAAM,EAC5EM,EAAG,SAAU3G,EAAMnkB,GACf,OAAO+pB,GAAW5F,EAAKmI,YAAY,EAAMtsB,EAC7C,EACAgrB,EAAG,SAAU7G,GAAQ,OAAOsD,GAAItD,EAAKoI,aAAe,EACpDpB,EAAG,SAAUhH,GAAQ,OAAOA,EAAK5lB,UAAY,GAAM,EACnD+sB,EAAG,SAAUnH,EAAMiH,EAAGrpC,GAClB,OAAOA,EAAQkiC,QAAQE,EAC3B,EACAuH,EAAG,SAAUvH,GAAQ,OAAOsD,GAAItD,EAAKM,cAAe,EAAI,EACxD12B,EAAG,SAAUo2B,GAAQ,OAAOsD,GAAItD,EAAKG,UAAY,EACjDv6B,EAAG,SAAUo6B,GAAQ,OAAQA,EAAKqG,WAAa,GAAKrG,EAAKqG,WAAa,GAAK,EAAK,EAChF1nC,EAAG,SAAUqhC,GAAQ,OAAOsD,GAAItD,EAAKqI,aAAe,EACpDnlC,EAAG,SAAU88B,GAAQ,OAAOA,EAAKG,SAAW,EAC5Ct6B,EAAG,SAAUm6B,EAAMnkB,GACf,OAAOA,EAAOymB,SAASE,SAASxC,EAAKI,SACzC,EACAyH,EAAG,SAAU7H,GAAQ,OAAOsD,GAAItD,EAAKmI,WAAa,EAAI,EACtDvjB,EAAG,SAAUob,GAAQ,OAAOA,EAAKmI,WAAa,CAAG,EACjD1oB,EAAG,SAAUugB,GAAQ,OAAOA,EAAKoI,YAAc,EAC/CN,EAAG,SAAU9H,GAAQ,OAAOA,EAAK5lB,SAAW,EAC5C0J,EAAG,SAAUkc,GAAQ,OAAOA,EAAKI,QAAU,EAC3CrlC,EAAG,SAAUilC,GAAQ,OAAOsI,OAAOtI,EAAKM,eAAeiI,UAAU,EAAI,GCjI9DC,GAAsB,SAAUrxC,GACvC,IAAIsxC,EAAKtxC,EAAGuxC,OAAQA,OAAgB,IAAPD,EAAgBtK,GAAWsK,EAAIE,EAAKxxC,EAAGyxC,KAAMA,OAAc,IAAPD,EAAgBtG,GAAUsG,EAAIE,EAAK1xC,EAAG2xC,SAAUA,OAAkB,IAAPD,GAAwBA,EACpK,OAAO,SAAU5C,EAAS8C,EAAMC,GAC5B,IAAIntB,EAASmtB,GAAkBJ,EAC/B,YAA0B/rC,IAAtB6rC,EAAOO,YAA6BH,EAGjCC,EACFG,MAAM,IACNjkB,KAAI,SAAUvf,EAAG/G,EAAGwqC,GACrB,OAAOlB,GAAQviC,IAAqB,OAAfyjC,EAAIxqC,EAAI,GACvBspC,GAAQviC,GAAGugC,EAASpqB,EAAQ6sB,GACtB,OAANhjC,EACIA,EACA,EACd,IACKuyB,KAAK,IAXCyQ,EAAOO,WAAWhD,EAAS8C,EAAMltB,EAYhD,CACJ,EACWutB,GAAmB,SAAUjyC,GACpC,IAAIsxC,EAAKtxC,EAAGuxC,OAAQA,OAAgB,IAAPD,EAAgBtK,GAAWsK,EAAIE,EAAKxxC,EAAGyxC,KAAMA,OAAc,IAAPD,EAAgBtG,GAAUsG,EAC3G,OAAO,SAAU3I,EAAMqJ,EAAaC,EAAUC,GAC1C,GAAa,IAATvJ,GAAeA,EAAnB,CAEA,IACIwJ,EADA3tB,EAAS0tB,GAAgBX,EAEzBa,EAAWzJ,EACf,GAAIA,aAAgB7lB,KAChBqvB,EAAa,IAAIrvB,KAAK6lB,EAAK5lB,gBAC1B,GAAoB,kBAAT4lB,QACKnjC,IAAjBmjC,EAAK0J,QACLF,EAAa,IAAIrvB,KAAK6lB,QACrB,GAAoB,kBAATA,EAAmB,CAC/B,IAAIxiC,EAAS6rC,IAAgBX,GAAUvK,IAAUe,WAC7CyK,EAAUrB,OAAOtI,GAAM4J,OAC3B,GAAgB,UAAZD,EACAH,EAAa,IAAIrvB,KACjBmvB,GAAW,OAEV,GAAIZ,GAAUA,EAAOmB,UACtBL,EAAad,EAAOmB,UAAU7J,EAAMxiC,QAEnC,GAAI,KAAKkpC,KAAKiD,IACf,OAAOjD,KAAKiD,GACZH,EAAa,IAAIrvB,KAAK6lB,OAErB,CAED,IADA,IAAI8J,OAAU,EAAQC,EAAM,GACnBprC,EAAI,EAAGqrC,EAAa,EAAGC,EAAW,GAAItrC,EAAInB,EAAOhF,OAAQmG,IAAK,CACnE,IAAIurC,EAAQ1sC,EAAOmB,GACfwrC,EAAwB,OAAVD,EACdE,EAA4B,OAAlB5sC,EAAOmB,EAAI,IAAewrC,EACxC,GAAInC,GAAWkC,KAAWE,EAAS,CAC/BH,GAAYjC,GAAWkC,GACvB,IAAI3X,EAAQ,IAAIF,OAAO4X,GAAUI,KAAKrK,GAClCzN,IAAUuX,GAAU,IACpBC,EAAc,MAAVG,EAAgB,OAAS,WAAW,CACpCxG,GAAIoC,GAAUoE,GACdj/B,IAAKsnB,IAAQyX,IAGzB,MACUG,IACNF,GAAY,IACpB,CACAT,EACKd,GAAWA,EAAO5H,WAEb,IAAI3mB,MAAK,IAAIA,MAAO8lB,SAAS,EAAG,EAAG,EAAG,IADtC,IAAI9lB,MAAK,IAAIA,MAAOmmB,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,GAE5DyJ,EAAIvW,SAAQ,SAAUr8B,GAClB,IAAIusC,EAAKvsC,EAAGusC,GAAIz4B,EAAM9T,EAAG8T,IACzB,OAAQu+B,EAAa9F,EAAG8F,EAAYv+B,EAAK4Q,IAAW2tB,CACxD,IACAA,EAAaM,EAAUN,OAAa3sC,CACxC,CACJ,CACA,GAAM2sC,aAAsBrvB,OAAS/V,MAAMolC,EAAWpvB,WAMtD,OAFiB,IAAbkvB,GACAE,EAAWvJ,SAAS,EAAG,EAAG,EAAG,GAC1BuJ,EALHd,EAAOhJ,aAAa,IAAI4K,MAAM,0BAA4Bb,GAtD1C,CA4DxB,CACJ,EACO,SAASc,GAAaC,EAAOC,EAAOnB,GAEvC,YADiB,IAAbA,IAAuBA,GAAW,IACrB,IAAbA,EACQ,IAAInvB,KAAKqwB,EAAMpwB,WAAW6lB,SAAS,EAAG,EAAG,EAAG,GAChD,IAAI9lB,KAAKswB,EAAMrwB,WAAW6lB,SAAS,EAAG,EAAG,EAAG,GAE7CuK,EAAMpwB,UAAYqwB,EAAMrwB,SACnC,CAOO,IAGIswB,GAAgC,SAAUC,EAAOhD,EAASb,GACjE,OAAe,KAAR6D,EAAyB,GAAVhD,EAAeb,CACzC,EAKW9tC,GACF,MAEF,SAAS4xC,GAAgBlC,GAC5B,IAAIiC,EAAQjC,EAAOvJ,YACfwI,EAAUe,EAAOtJ,cACjB0H,EAAU4B,EAAOrJ,eACrB,QAAuBxiC,IAAnB6rC,EAAOmC,QAAuB,CAC9B,IAAIC,EAAUpC,EAAOmC,QAAQxE,WACzB0E,EAAarC,EAAOmC,QAAQxC,aAC5B2C,EAAatC,EAAOmC,QAAQzC,aAC5BuC,EAAQG,IACRH,EAAQG,GAERH,IAAUG,GAAWnD,EAAUoD,IAC/BpD,EAAUoD,GAEVJ,IAAUG,GAAWnD,IAAYoD,GAAcjE,EAAUkE,IACzDlE,EAAU4B,EAAOmC,QAAQzC,aACjC,CACA,QAAuBvrC,IAAnB6rC,EAAOuC,QAAuB,CAC9B,IAAIC,EAAQxC,EAAOuC,QAAQ5E,WACvB8E,EAAazC,EAAOuC,QAAQ5C,cAChCsC,EAAQtuC,KAAK4I,IAAI0lC,EAAOO,MACVA,IACVvD,EAAUtrC,KAAK4I,IAAIkmC,EAAYxD,IAC/BgD,IAAUO,GAASvD,IAAYwD,IAC/BrE,EAAU4B,EAAOuC,QAAQ7C,aACjC,CACA,MAAO,CAAEuC,MAAOA,EAAOhD,QAASA,EAASb,QAASA,EACtD,C,WC9IIsE,GAAsC,WAStC,OARAA,GAAWx2C,OAAOy2C,QAAU,SAASjmC,GACjC,IAAK,IAAIqa,EAAG9gB,EAAI,EAAGimB,EAAID,UAAUnsB,OAAQmG,EAAIimB,EAAGjmB,IAE5C,IAAK,IAAIqJ,KADTyX,EAAIkF,UAAUhmB,GACO/J,OAAO02C,UAAUC,eAAenyC,KAAKqmB,EAAGzX,KACzD5C,EAAE4C,GAAKyX,EAAEzX,IAEjB,OAAO5C,CACX,EACOgmC,GAASrH,MAAM9uC,KAAM0vB,UAChC,EACI6mB,GAAkD,WAClD,IAAK,IAAI/rB,EAAI,EAAG9gB,EAAI,EAAG8sC,EAAK9mB,UAAUnsB,OAAQmG,EAAI8sC,EAAI9sC,IAAK8gB,GAAKkF,UAAUhmB,GAAGnG,OACxE,IAAI4kB,EAAI8mB,MAAMzkB,GAAInZ,EAAI,EAA3B,IAA8B3H,EAAI,EAAGA,EAAI8sC,EAAI9sC,IACzC,IAAK,IAAI+sC,EAAI/mB,UAAUhmB,GAAIuE,EAAI,EAAGyoC,EAAKD,EAAElzC,OAAQ0K,EAAIyoC,EAAIzoC,IAAKoD,IAC1D8W,EAAE9W,GAAKolC,EAAExoC,GACjB,OAAOka,CACX,EASA,SAASwuB,GAAkBC,EAASC,GAChC,IAAIC,EAAO,CACPrD,OAAQ0C,GAASA,GAAS,CAAC,EAAGY,IAAiBC,GAAUC,eACzDtD,KAAMuD,IA4DV,SAASC,IACL,IAAIj1C,EACJ,OAA2C,QAAjCA,EAAK40C,EAAKM,yBAAsC,IAAPl1C,OAAgB,EAASA,EAAGm1C,eAC1EnZ,eAAiBxC,SAASwC,aACnC,CACA,SAASoZ,EAAe7I,GACpB,OAAOA,EAAG8I,KAAKT,EACnB,CACA,SAASU,IACL,IAAI/D,EAASqD,EAAKrD,QACS,IAAvBA,EAAOvG,aAA+C,IAAtBuG,EAAO1G,aAGZ,IAAtB0G,EAAO5H,YACZpC,OAAOgO,uBAAsB,WAKzB,QAJ+B7vC,IAA3BkvC,EAAKM,oBACLN,EAAKM,kBAAkBtb,MAAM4b,WAAa,SAC1CZ,EAAKM,kBAAkBtb,MAAM3P,QAAU,cAEhBvkB,IAAvBkvC,EAAKa,cAA6B,CAClC,IAAIC,GAAad,EAAKe,KAAKC,YAAc,GAAKrE,EAAO1G,WACrD+J,EAAKa,cAAc7b,MAAMzT,MAAQuvB,EAAY,KAC7Cd,EAAKM,kBAAkBtb,MAAMzT,MACzBuvB,QAC0BhwC,IAArBkvC,EAAKiB,YACAjB,EAAKiB,YAAYD,YACjB,GACN,KACRhB,EAAKM,kBAAkBtb,MAAMkc,eAAe,cAC5ClB,EAAKM,kBAAkBtb,MAAMkc,eAAe,UAChD,CACJ,GAER,CACA,SAASC,EAAW/2C,GAChB,GAAkC,IAA9B41C,EAAKoB,cAAc30C,OAAc,CACjC,IAAI40C,OAAsCvwC,IAAxBkvC,EAAKrD,OAAOmC,SAC1BN,GAAa,IAAIpwB,KAAQ4xB,EAAKrD,OAAOmC,UAAY,EAC/C,IAAI1wB,KACJ,IAAIA,KAAK4xB,EAAKrD,OAAOmC,QAAQzwB,WAC/B+jB,EAAWyM,GAAgBmB,EAAKrD,QACpC0E,EAAYnN,SAAS9B,EAASwM,MAAOxM,EAASwJ,QAASxJ,EAAS2I,QAASsG,EAAYC,mBACrFtB,EAAKoB,cAAgB,CAACC,GACtBrB,EAAKuB,sBAAwBF,CACjC,MACUvwC,IAAN1G,GAA8B,SAAXA,EAAE2D,MAywD7B,SAAqB3D,GACjBA,EAAEo3C,iBACF,IAAIC,EAAuB,YAAXr3C,EAAE2D,KAAoB2zC,EAAcjI,GAAervC,GAAIq7B,EAAQic,OAC7D5wC,IAAdkvC,EAAK9I,MAAsBwK,IAAgB1B,EAAK9I,OAChD8I,EAAK9I,KAAKuB,YACNuH,EAAKnD,KAAK3F,KAAKM,GAAIwI,EAAK9I,KAAKuB,cAAgBuH,EAAKnD,KAAK3F,KAAK,MAEpE,IAAIh+B,EAAMqhC,WAAW9U,EAAMiC,aAAa,QAASrtB,EAAMkgC,WAAW9U,EAAMiC,aAAa,QAASvoB,EAAOo7B,WAAW9U,EAAMiC,aAAa,SAAUia,EAAWpG,SAAS9V,EAAMnyB,MAAO,IAAKsuC,EAAQx3C,EAAEw3C,QACxLH,EAAyB,KAAZr3C,EAAEy3C,MAAe,GAAK,EAAK,GACzC/Q,EAAW6Q,EAAWxiC,EAAOyiC,EACjC,GAA2B,qBAAhBnc,EAAMnyB,OAAgD,IAAvBmyB,EAAMnyB,MAAM7G,OAAc,CAChE,IAAIq1C,EAAarc,IAAUua,EAAK+B,YAAaC,EAAevc,IAAUua,EAAKiC,cACvEnR,EAAW53B,GACX43B,EACIz2B,EACIy2B,EACA0G,IAAKsK,IACJtK,GAAIsK,IAAetK,IAAKwI,EAAK9I,OAClC8K,GACAE,OAAkBpxC,GAAY,EAAGkvC,EAAK+B,cAErCjR,EAAWz2B,IAChBy2B,EACIrL,IAAUua,EAAK+B,YAAcjR,EAAWz2B,EAAMm9B,IAAKwI,EAAK9I,MAAQh+B,EAChE8oC,GACAE,OAAkBpxC,EAAW,EAAGkvC,EAAK+B,cAEzC/B,EAAK9I,MACL4K,IACU,IAAT3iC,EACK2xB,EAAW6Q,IAAa,GACxBrxC,KAAK4H,IAAI44B,EAAW6Q,GAAYxiC,KACtC6gC,EAAK9I,KAAKuB,YACNuH,EAAKnD,KAAK3F,KAAKM,GAAIwI,EAAK9I,KAAKuB,cAAgBuH,EAAKnD,KAAK3F,KAAK,MAEpEzR,EAAMnyB,MAAQikC,GAAIzG,EACtB,CACJ,CA7yDQqR,CAAY/3C,GAEhB,IAAIoJ,EAAYwsC,EAAKoC,OAAO9uC,MAC5B+uC,IACAC,IACItC,EAAKoC,OAAO9uC,QAAUE,GACtBwsC,EAAKuC,kBAEb,CAaA,SAASF,IACL,QAAyBvxC,IAArBkvC,EAAK+B,kBAAoDjxC,IAAvBkvC,EAAKiC,cAA3C,CAEA,IAfmBhf,EAAMiU,EAerB0H,GAASrD,SAASyE,EAAK+B,YAAYzuC,MAAM6yB,OAAO,GAAI,KAAO,GAAK,GAAIyV,GAAWL,SAASyE,EAAKiC,cAAc3uC,MAAO,KAAO,GAAK,GAAIynC,OAAiCjqC,IAAvBkvC,EAAKwC,eAC9IjH,SAASyE,EAAKwC,cAAclvC,MAAO,KAAO,GAAK,GAChD,OACYxC,IAAdkvC,EAAK9I,OAlBUjU,EAmBO2b,EAnBD1H,EAmBQ8I,EAAK9I,KAAKuB,YAAvCmG,EAlBI3b,EAAO,GAAM,GAAKuU,GAAIN,IAAS8I,EAAKnD,KAAK3F,KAAK,KAoBtD,IAAIuL,OAAwC3xC,IAAxBkvC,EAAKrD,OAAO+F,SAC3B1C,EAAKrD,OAAOmC,SACTkB,EAAK2C,gBACL3C,EAAKuB,uBAED,IADJ/C,GAAawB,EAAKuB,sBAAuBvB,EAAKrD,OAAOmC,SAAS,GAElE8D,OAAwC9xC,IAAxBkvC,EAAKrD,OAAOkG,SAC3B7C,EAAKrD,OAAOuC,SACTc,EAAK8C,gBACL9C,EAAKuB,uBAED,IADJ/C,GAAawB,EAAKuB,sBAAuBvB,EAAKrD,OAAOuC,SAAS,GAEtE,QAA4BpuC,IAAxBkvC,EAAKrD,OAAOkG,cACY/xC,IAAxBkvC,EAAKrD,OAAO+F,SACZ1C,EAAKrD,OAAO+F,QAAU1C,EAAKrD,OAAOkG,QAAS,CAC3C,IAAIE,EAAWpE,GAA8BqB,EAAKrD,OAAO+F,QAAQpI,WAAY0F,EAAKrD,OAAO+F,QAAQpG,aAAc0D,EAAKrD,OAAO+F,QAAQrG,cAC/H2G,EAAWrE,GAA8BqB,EAAKrD,OAAOkG,QAAQvI,WAAY0F,EAAKrD,OAAOkG,QAAQvG,aAAc0D,EAAKrD,OAAOkG,QAAQxG,cAC/H4G,EAActE,GAA8BC,EAAOhD,EAASb,GAChE,GAAIkI,EAAcD,GAAYC,EAAcF,EAAU,CAClD,IAAIG,ED5EM,SAAUC,GAChC,IAAIvE,EAAQtuC,KAAKyQ,MAAMoiC,EAAuB,MAAOvH,GAAWuH,EAA+B,KAARvE,GAAgB,GACvG,MAAO,CAACA,EAAOhD,EAASuH,EAA+B,KAARvE,EAAyB,GAAVhD,EAClE,CCyE6BwH,CAAaL,GAC1BnE,EAAQsE,EAAO,GACftH,EAAUsH,EAAO,GACjBnI,EAAUmI,EAAO,EACrB,CACJ,KACK,CACD,GAAIN,EAAe,CACf,IAAIC,OAAkC/xC,IAAxBkvC,EAAKrD,OAAOkG,QACpB7C,EAAKrD,OAAOkG,QACZ7C,EAAKrD,OAAOuC,SAClBN,EAAQtuC,KAAK4I,IAAI0lC,EAAOiE,EAAQvI,eAClBuI,EAAQvI,aAClBsB,EAAUtrC,KAAK4I,IAAI0iC,EAASiH,EAAQvG,eACpCV,IAAYiH,EAAQvG,eACpBvB,EAAUzqC,KAAK4I,IAAI6hC,EAAS8H,EAAQxG,cAC5C,CACA,GAAIoG,EAAe,CACf,IAAIC,OAAkC5xC,IAAxBkvC,EAAKrD,OAAO+F,QACpB1C,EAAKrD,OAAO+F,QACZ1C,EAAKrD,OAAOmC,SAClBF,EAAQtuC,KAAK+J,IAAIukC,EAAO8D,EAAQpI,eAClBoI,EAAQpI,YAAcsB,EAAU8G,EAAQpG,eAClDV,EAAU8G,EAAQpG,cAClBV,IAAY8G,EAAQpG,eACpBvB,EAAUzqC,KAAK+J,IAAI0gC,EAAS2H,EAAQrG,cAC5C,CACJ,CACAnI,EAAS0K,EAAOhD,EAASb,EAtDf,CAuDd,CACA,SAASsI,EAAiBnJ,GACtB,IAAIjG,EAAOiG,GAAW8F,EAAKuB,sBACvBtN,GAAQA,aAAgB7lB,MACxB8lB,EAASD,EAAKqG,WAAYrG,EAAKqI,aAAcrI,EAAKoI,aAE1D,CACA,SAASnI,EAAS0K,EAAOhD,EAASb,QACKjqC,IAA/BkvC,EAAKuB,uBACLvB,EAAKuB,sBAAsBrN,SAAS0K,EAAQ,GAAIhD,EAASb,GAAW,EAAG,GAEtEiF,EAAK+B,aAAgB/B,EAAKiC,gBAAiBjC,EAAKjD,WAErDiD,EAAK+B,YAAYzuC,MAAQikC,GAAKyI,EAAKrD,OAAOxG,UAEpCyI,GADE,GAAKA,GAAS,GAAM,GAAKpH,GAAIoH,EAAQ,KAAO,IAEpDoB,EAAKiC,cAAc3uC,MAAQikC,GAAIqE,QACb9qC,IAAdkvC,EAAK9I,OACL8I,EAAK9I,KAAKuB,YAAcuH,EAAKnD,KAAK3F,KAAKM,GAAIoH,GAAS,WAC7B9tC,IAAvBkvC,EAAKwC,gBACLxC,EAAKwC,cAAclvC,MAAQikC,GAAIwD,IACvC,CACA,SAASuI,EAAYx7B,GACjB,IAAI45B,EAAcjI,GAAe3xB,GAC7Bub,EAAOkY,SAASmG,EAAYpuC,QAAUwU,EAAM85B,OAAS,IACrDve,EAAO,IAAO,GACC,UAAdvb,EAAMna,MAAoB,QAAQgtC,KAAKtX,EAAKkgB,cAC7CC,EAAWngB,EAEnB,CACA,SAASod,EAAKX,EAASh4B,EAAO27B,EAAS5xC,GACnC,OAAIiW,aAAiBqwB,MACVrwB,EAAM2f,SAAQ,SAAUV,GAAM,OAAO0Z,EAAKX,EAAS/Y,EAAI0c,EAAS5xC,EAAU,IACjFiuC,aAAmB3H,MACZ2H,EAAQrY,SAAQ,SAAUic,GAAM,OAAOjD,EAAKiD,EAAI57B,EAAO27B,EAAS5xC,EAAU,KACrFiuC,EAAQ6D,iBAAiB77B,EAAO27B,EAAS5xC,QACzCmuC,EAAK4D,UAAUl6C,KAAK,CAChBu3B,OAAQ,WAAc,OAAO6e,EAAQ+D,oBAAoB/7B,EAAO27B,EAAS5xC,EAAU,IAE3F,CACA,SAASiyC,IACLC,EAAa,WACjB,CA8DA,SAASC,EAAWC,EAAUH,GAC1B,IAAII,OAAsBpzC,IAAbmzC,EACPjE,EAAKlC,UAAUmG,GACfjE,EAAKuB,wBACFvB,EAAKrD,OAAOmC,SAAWkB,EAAKrD,OAAOmC,QAAUkB,EAAKhL,IAC7CgL,EAAKrD,OAAOmC,QACZkB,EAAKrD,OAAOuC,SAAWc,EAAKrD,OAAOuC,QAAUc,EAAKhL,IAC9CgL,EAAKrD,OAAOuC,QACZc,EAAKhL,KACnBmP,EAAUnE,EAAKoE,YACfC,EAAWrE,EAAKsE,aACpB,SACmBxzC,IAAXozC,IACAlE,EAAKoE,YAAcF,EAAO3P,cAC1ByL,EAAKsE,aAAeJ,EAAO9H,WAEnC,CACA,MAAOhyC,GACHA,EAAEm6C,QAAU,0BAA4BL,EACxClE,EAAKrD,OAAOhJ,aAAavpC,EAC7B,CACI05C,GAAiB9D,EAAKoE,cAAgBD,IACtCJ,EAAa,gBACbS,MAEAV,GACC9D,EAAKoE,cAAgBD,GAAWnE,EAAKsE,eAAiBD,GACvDN,EAAa,iBAEjB/D,EAAKyE,QACT,CACA,SAASC,EAAct6C,GACnB,IAAIs3C,EAAcjI,GAAervC,IAC5Bs3C,EAAYj0C,UAAU0S,QAAQ,UAC/B+hC,EAAkB93C,EAAGs3C,EAAYpJ,UAAUqM,SAAS,WAAa,GAAK,EAC9E,CACA,SAASzC,EAAkB93C,EAAGw3C,EAAOgD,GACjC,IAAI3kC,EAAS7V,GAAKqvC,GAAervC,GAC7Bq7B,EAAQmf,GACP3kC,GAAUA,EAAO+4B,YAAc/4B,EAAO+4B,WAAWJ,WAClD9wB,EAAQ+8B,EAAY,aACxB/8B,EAAM85B,MAAQA,EACdnc,GAASA,EAAMqf,cAAch9B,EACjC,CAyDA,SAASi9B,EAAUt3C,EAAWwmC,EAAM+Q,EAAYpyC,GAC5C,IAAIqyC,EAAgBx3B,EAAUwmB,GAAM,GAAOiR,EAAargB,GAAc,OAAQp3B,EAAWwmC,EAAKG,UAAUmP,YAuCxG,OAtCA2B,EAAWhL,QAAUjG,EACrBiR,EAAWC,GAAKvyC,EAChBsyC,EAAWve,aAAa,aAAcqZ,EAAK9C,WAAWjJ,EAAM+L,EAAKrD,OAAO7J,kBACnC,IAAjCrlC,EAAU0S,QAAQ,WACe,IAAjCq+B,GAAavK,EAAM+L,EAAKhL,OACxBgL,EAAKoF,cAAgBF,EACrBA,EAAW5M,UAAUvpC,IAAI,SACzBm2C,EAAWve,aAAa,eAAgB,SAExCse,GACAC,EAAWG,UAAY,EACnBC,EAAerR,KACfiR,EAAW5M,UAAUvpC,IAAI,YACzBixC,EAAKuF,iBAAmBL,EACC,UAArBlF,EAAKrD,OAAO/H,OACZwD,GAAY8M,EAAY,aAAclF,EAAKoB,cAAc,IACD,IAApD5C,GAAavK,EAAM+L,EAAKoB,cAAc,IAAI,IAC9ChJ,GAAY8M,EAAY,WAAYlF,EAAKoB,cAAc,IACC,IAApD5C,GAAavK,EAAM+L,EAAKoB,cAAc,IAAI,IAC5B,iBAAd3zC,GACAy3C,EAAW5M,UAAUvpC,IAAI,cAKrCm2C,EAAW5M,UAAUvpC,IAAI,sBAEJ,UAArBixC,EAAKrD,OAAO/H,MAk4CpB,SAAuBX,GACnB,QAAyB,UAArB+L,EAAKrD,OAAO/H,MAAoBoL,EAAKoB,cAAc30C,OAAS,KAExD+xC,GAAavK,EAAM+L,EAAKoB,cAAc,KAAO,GACjD5C,GAAavK,EAAM+L,EAAKoB,cAAc,KAAO,EACrD,CAt4CYoE,CAAcvR,KAAUqR,EAAerR,IACvCiR,EAAW5M,UAAUvpC,IAAI,WAE7BixC,EAAK5J,aACsB,IAA3B4J,EAAKrD,OAAO1G,YACE,iBAAdxoC,GACAmF,EAAI,IAAM,GACVotC,EAAK5J,YAAYqP,mBAAmB,YAAa,+BAAiCzF,EAAKrD,OAAO5I,QAAQE,GAAQ,WAElH8P,EAAa,cAAemB,GACrBA,CACX,CACA,SAASQ,EAAeC,GACpBA,EAAWC,QACc,UAArB5F,EAAKrD,OAAO/H,MACZiR,EAAYF,EACpB,CACA,SAASG,EAAqBlE,GAG1B,IAFA,IAAImE,EAAanE,EAAQ,EAAI,EAAI5B,EAAKrD,OAAO1G,WAAa,EACtD+P,EAAWpE,EAAQ,EAAI5B,EAAKrD,OAAO1G,YAAc,EAC5C6F,EAAIiK,EAAYjK,GAAKkK,EAAUlK,GAAK8F,EAIzC,IAHA,IAAIxe,EAAQ4c,EAAKa,cAAc10C,SAAS2vC,GACpCn7B,EAAaihC,EAAQ,EAAI,EAAIxe,EAAMj3B,SAASM,OAAS,EACrDmU,EAAWghC,EAAQ,EAAIxe,EAAMj3B,SAASM,QAAU,EAC3CmG,EAAI+N,EAAY/N,GAAKgO,EAAUhO,GAAKgvC,EAAO,CAChD,IAAIjoC,EAAIypB,EAAMj3B,SAASyG,GACvB,IAAuC,IAAnC+G,EAAElM,UAAU0S,QAAQ,WAAoBsN,EAAU9T,EAAEugC,SACpD,OAAOvgC,CACf,CAGR,CA2BA,SAASssC,EAAWC,EAASvzC,GACzB,IAAIy0B,EAAgBiZ,IAChB8F,EAAaC,EAAShf,GAAiBxC,SAASyhB,MAChDC,OAAwBx1C,IAAZo1C,EACVA,EACAC,EACI/e,OAC0Bt2B,IAA1BkvC,EAAKuF,kBAAkCa,EAASpG,EAAKuF,kBACjDvF,EAAKuF,sBACkBz0C,IAAvBkvC,EAAKoF,eAA+BgB,EAASpG,EAAKoF,eAC9CpF,EAAKoF,cACLU,EAAqBnzC,EAAS,EAAI,GAAK,QACvC7B,IAAdw1C,EACAtG,EAAKoC,OAAOwD,QAENO,EAzCd,SAA6BD,EAAStE,GAMlC,IALA,IAAI2E,GAAqD,IAAxCL,EAAQz4C,UAAU0S,QAAQ,SACrC+lC,EAAQhM,QAAQkC,WAChB4D,EAAKsE,aACP0B,EAAWpE,EAAQ,EAAI5B,EAAKrD,OAAO1G,YAAc,EACjDuQ,EAAY5E,EAAQ,EAAI,GAAK,EACxB9F,EAAIyK,EAAavG,EAAKsE,aAAcxI,GAAKkK,EAAUlK,GAAK0K,EAQ7D,IAPA,IAAIpjB,EAAQ4c,EAAKa,cAAc10C,SAAS2vC,GACpCn7B,EAAa4lC,EAAavG,EAAKsE,eAAiBxI,EAC9CoK,EAAQf,GAAKvD,EACbA,EAAQ,EACJxe,EAAMj3B,SAASM,OAAS,EACxB,EACNg6C,EAAerjB,EAAMj3B,SAASM,OACzBmG,EAAI+N,EAAY/N,GAAK,GAAKA,EAAI6zC,GAAgB7zC,IAAMgvC,EAAQ,EAAI6E,GAAgB,GAAI7zC,GAAK4zC,EAAW,CACzG,IAAI7sC,EAAIypB,EAAMj3B,SAASyG,GACvB,IAAuC,IAAnC+G,EAAElM,UAAU0S,QAAQ,WACpBsN,EAAU9T,EAAEugC,UACZ5pC,KAAK4H,IAAIguC,EAAQf,GAAKvyC,IAAMtC,KAAK4H,IAAI0pC,GACrC,OAAO8D,EAAe/rC,EAC9B,CAEJqmC,EAAK0G,YAAYF,GACjBP,EAAWH,EAAqBU,GAAY,EAEhD,CAoBQG,CAAoBL,EAAW3zC,GAH/B+yC,EAAeY,EAKvB,CACA,SAASM,EAAevjB,EAAMD,GAK1B,IAJA,IAAIyjB,GAAgB,IAAIz4B,KAAKiV,EAAMD,EAAO,GAAGiR,SAAW2L,EAAKnD,KAAKhtB,eAAiB,GAAK,EACpFi3B,EAAgB9G,EAAK+G,MAAMC,gBAAgB5jB,EAAQ,EAAI,IAAM,GAAIC,GACjEsT,EAAcqJ,EAAK+G,MAAMC,eAAe5jB,EAAOC,GAAO0d,EAAOpO,OAAO/N,SAASqiB,yBAA0BC,EAAelH,EAAKrD,OAAO1G,WAAa,EAAGkR,EAAoBD,EAAe,sBAAwB,eAAgBE,EAAoBF,EAAe,sBAAwB,eACxRG,EAAYP,EAAgB,EAAID,EAAcS,EAAW,EACtDD,GAAaP,EAAeO,IAAaC,IAC5CvG,EAAK/c,YAAY+gB,EAAU,iBAAmBoC,EAAmB,IAAI/4B,KAAKiV,EAAMD,EAAQ,EAAGikB,GAAYA,EAAWC,IAEtH,IAAKD,EAAY,EAAGA,GAAa1Q,EAAa0Q,IAAaC,IACvDvG,EAAK/c,YAAY+gB,EAAU,gBAAiB,IAAI32B,KAAKiV,EAAMD,EAAOikB,GAAYA,EAAWC,IAE7F,IAAK,IAAIC,EAAS5Q,EAAc,EAAG4Q,GAAU,GAAKV,IAClB,IAA3B7G,EAAKrD,OAAO1G,YAAoBqR,EAAW,IAAM,GAAIC,IAAUD,IAChEvG,EAAK/c,YAAY+gB,EAAU,iBAAmBqC,EAAmB,IAAIh5B,KAAKiV,EAAMD,EAAQ,EAAGmkB,EAAS5Q,GAAc4Q,EAAQD,IAE9H,IAAIE,EAAe3iB,GAAc,MAAO,gBAExC,OADA2iB,EAAaxjB,YAAY+c,GAClByG,CACX,CACA,SAASC,IACL,QAA2B32C,IAAvBkvC,EAAKa,cAAT,CAGAnI,GAAUsH,EAAKa,eACXb,EAAK5J,aACLsC,GAAUsH,EAAK5J,aAEnB,IADA,IAAIsR,EAAO9iB,SAASqiB,yBACXr0C,EAAI,EAAGA,EAAIotC,EAAKrD,OAAO1G,WAAYrjC,IAAK,CAC7C,IAAIiL,EAAI,IAAIuQ,KAAK4xB,EAAKoE,YAAapE,EAAKsE,aAAc,GACtDzmC,EAAEu8B,SAAS4F,EAAKsE,aAAe1xC,GAC/B80C,EAAK1jB,YAAY4iB,EAAe/oC,EAAE02B,cAAe12B,EAAEu+B,YACvD,CACA4D,EAAKa,cAAc7c,YAAY0jB,GAC/B1H,EAAKe,KAAOf,EAAKa,cAAcjI,WACN,UAArBoH,EAAKrD,OAAO/H,MAAkD,IAA9BoL,EAAKoB,cAAc30C,QACnDo5C,GAbJ,CAeJ,CACA,SAASrB,IACL,KAAIxE,EAAKrD,OAAO1G,WAAa,GACS,aAAlC+J,EAAKrD,OAAO9H,mBADhB,CAGA,IAAI8S,EAAmB,SAAUvkB,GAC7B,aAA4BtyB,IAAxBkvC,EAAKrD,OAAOmC,SACZkB,EAAKoE,cAAgBpE,EAAKrD,OAAOmC,QAAQvK,eACzCnR,EAAQ4c,EAAKrD,OAAOmC,QAAQ1C,oBAGCtrC,IAAxBkvC,EAAKrD,OAAOuC,SACjBc,EAAKoE,cAAgBpE,EAAKrD,OAAOuC,QAAQ3K,eACzCnR,EAAQ4c,EAAKrD,OAAOuC,QAAQ9C,WACpC,EACA4D,EAAK4H,wBAAwBvC,UAAY,EACzCrF,EAAK4H,wBAAwBxiB,UAAY,GACzC,IAAK,IAAIxyB,EAAI,EAAGA,EAAI,GAAIA,IACpB,GAAK+0C,EAAiB/0C,GAAtB,CAEA,IAAIwwB,EAAQyB,GAAc,SAAU,iCACpCzB,EAAM9vB,MAAQ,IAAI8a,KAAK4xB,EAAKoE,YAAaxxC,GAAGwpC,WAAWmH,WACvDngB,EAAMqV,YAAcoB,GAAWjnC,EAAGotC,EAAKrD,OAAO3G,sBAAuBgK,EAAKnD,MAC1EzZ,EAAMiiB,UAAY,EACdrF,EAAKsE,eAAiB1xC,IACtBwwB,EAAMykB,UAAW,GAErB7H,EAAK4H,wBAAwB5jB,YAAYZ,EAR7B,CAfN,CAyBd,CACA,SAAS0kB,IACL,IAEIC,EAFArgC,EAAYmd,GAAc,MAAO,mBACjCmjB,EAAmBrV,OAAO/N,SAASqiB,yBAEnCjH,EAAKrD,OAAO1G,WAAa,GACS,WAAlC+J,EAAKrD,OAAO9H,kBACZkT,EAAeljB,GAAc,OAAQ,cAGrCmb,EAAK4H,wBAA0B/iB,GAAc,SAAU,kCACvDmb,EAAK4H,wBAAwBjhB,aAAa,aAAcqZ,EAAKnD,KAAKzF,gBAClEqJ,EAAKT,EAAK4H,wBAAyB,UAAU,SAAUx9C,GACnD,IAAI6V,EAASw5B,GAAervC,GACxB69C,EAAgB1M,SAASt7B,EAAO3M,MAAO,IAC3C0sC,EAAK0G,YAAYuB,EAAgBjI,EAAKsE,cACtCP,EAAa,gBACjB,IACAS,IACAuD,EAAe/H,EAAK4H,yBAExB,IAAIM,EAAYjP,GAAkB,WAAY,CAAEkP,SAAU,OACtDC,EAAcF,EAAU9hB,qBAAqB,SAAS,GAC1DgiB,EAAYzhB,aAAa,aAAcqZ,EAAKnD,KAAK1F,eAC7C6I,EAAKrD,OAAOmC,SACZsJ,EAAYzhB,aAAa,MAAOqZ,EAAKrD,OAAOmC,QAAQvK,cAAcgP,YAElEvD,EAAKrD,OAAOuC,UACZkJ,EAAYzhB,aAAa,MAAOqZ,EAAKrD,OAAOuC,QAAQ3K,cAAcgP,YAClE6E,EAAYphB,WACNgZ,EAAKrD,OAAOmC,SACVkB,EAAKrD,OAAOmC,QAAQvK,gBAAkByL,EAAKrD,OAAOuC,QAAQ3K,eAEtE,IAAI+P,EAAezf,GAAc,MAAO,2BAKxC,OAJAyf,EAAatgB,YAAY+jB,GACzBzD,EAAatgB,YAAYkkB,GACzBF,EAAiBhkB,YAAYsgB,GAC7B58B,EAAUsc,YAAYgkB,GACf,CACHtgC,UAAWA,EACX0gC,YAAaA,EACbL,aAAcA,EAEtB,CACA,SAASM,IACL3P,GAAUsH,EAAKsI,UACftI,EAAKsI,SAAStkB,YAAYgc,EAAKuI,cAC3BvI,EAAKrD,OAAO1G,aACZ+J,EAAKwI,aAAe,GACpBxI,EAAKyI,cAAgB,IAEzB,IAAK,IAAI3M,EAAIkE,EAAKrD,OAAO1G,WAAY6F,KAAM,CACvC,IAAI1Y,EAAQ0kB,IACZ9H,EAAKwI,aAAa9+C,KAAK05B,EAAMglB,aAC7BpI,EAAKyI,cAAc/+C,KAAK05B,EAAM2kB,cAC9B/H,EAAKsI,SAAStkB,YAAYZ,EAAM1b,UACpC,CACAs4B,EAAKsI,SAAStkB,YAAYgc,EAAK0I,aACnC,CA8FA,SAASC,IACA3I,EAAK4I,iBAGNlQ,GAAUsH,EAAK4I,kBAFf5I,EAAK4I,iBAAmB/jB,GAAc,MAAO,sBAGjD,IAAK,IAAIjyB,EAAIotC,EAAKrD,OAAO1G,WAAYrjC,KAAM,CACvC,IAAI8U,EAAYmd,GAAc,MAAO,8BACrCmb,EAAK4I,iBAAiB5kB,YAAYtc,EACtC,CAEA,OADAmhC,IACO7I,EAAK4I,gBAChB,CACA,SAASC,IACL,GAAK7I,EAAK4I,iBAAV,CAGA,IAAI/4B,EAAiBmwB,EAAKnD,KAAKhtB,eAC3B0mB,EAAWkJ,GAAeO,EAAKnD,KAAKtG,SAASC,WAC7C3mB,EAAiB,GAAKA,EAAiB0mB,EAAS9pC,SAChD8pC,EAAWkJ,GAAelJ,EAASuS,OAAOj5B,EAAgB0mB,EAAS9pC,QAAS8pC,EAASuS,OAAO,EAAGj5B,KAEnG,IAAK,IAAIjd,EAAIotC,EAAKrD,OAAO1G,WAAYrjC,KACjCotC,EAAK4I,iBAAiBz8C,SAASyG,GAAGwyB,UAAY,qDAAuDmR,EAASrK,KAAK,2CAA6C,yBAPpK,CASJ,CAYA,SAASwa,EAAYpzC,EAAOy1C,QACP,IAAbA,IAAuBA,GAAW,GACtC,IAAInH,EAAQmH,EAAWz1C,EAAQA,EAAQ0sC,EAAKsE,aACvC1C,EAAQ,IAAkC,IAA7B5B,EAAKgJ,qBAClBpH,EAAQ,IAAkC,IAA7B5B,EAAKiJ,sBAEvBjJ,EAAKsE,cAAgB1C,GACjB5B,EAAKsE,aAAe,GAAKtE,EAAKsE,aAAe,MAC7CtE,EAAKoE,aAAepE,EAAKsE,aAAe,GAAK,GAAK,EAClDtE,EAAKsE,cAAgBtE,EAAKsE,aAAe,IAAM,GAC/CP,EAAa,gBACbS,KAEJiD,IACA1D,EAAa,iBACbmF,IACJ,CA4GA,SAASC,EAAe9Q,GACpB,OAAO2H,EAAKM,kBAAkBqE,SAAStM,EAC3C,CACA,SAAS+Q,EAAch/C,GACnB,GAAI41C,EAAKqJ,SAAWrJ,EAAKrD,OAAOjI,OAAQ,CACpC,IAAI4U,EAAgB7P,GAAervC,GAC/Bm/C,EAAoBJ,EAAeG,GAQnCE,IAPUF,IAAkBtJ,EAAKva,OACjC6jB,IAAkBtJ,EAAKvN,UACvBuN,EAAKF,QAAQ6E,SAAS2E,IACrBl/C,EAAE8/B,MACC9/B,EAAE8/B,KAAK/pB,WACL/V,EAAE8/B,KAAK/pB,QAAQ6/B,EAAKva,SACjBr7B,EAAE8/B,KAAK/pB,QAAQ6/B,EAAKvN,cAE5B8W,IACAJ,EAAe/+C,EAAEq/C,eAClBC,GAAa1J,EAAKrD,OAAOlI,qBAAqBkV,MAAK,SAAUtR,GAC7D,OAAOA,EAAKsM,SAAS2E,EACzB,IACIE,GAAaE,IACT1J,EAAKrD,OAAOrK,YACZ0N,EAAK7L,QAAQ6L,EAAKoC,OAAO9uC,OAAO,EAAO0sC,EAAKrD,OAAOlK,SAC7CuN,EAAKrD,OAAOnK,UACZwN,EAAKrD,OAAOxJ,iBAEKriC,IAAvBkvC,EAAK4J,oBACkB94C,IAAvBkvC,EAAKiC,oBACgBnxC,IAArBkvC,EAAK+B,aACgB,KAArB/B,EAAKva,MAAMnyB,YACUxC,IAArBkvC,EAAKva,MAAMnyB,OACX6tC,IAEJnB,EAAKrnC,QACDqnC,EAAKrD,QACgB,UAArBqD,EAAKrD,OAAO/H,MACkB,IAA9BoL,EAAKoB,cAAc30C,QACnBuzC,EAAK39B,OAAM,GAEvB,CACJ,CACA,SAASmhC,EAAWqG,GAChB,MAAKA,GACA7J,EAAKrD,OAAOmC,SAAW+K,EAAU7J,EAAKrD,OAAOmC,QAAQvK,eACrDyL,EAAKrD,OAAOuC,SAAW2K,EAAU7J,EAAKrD,OAAOuC,QAAQ3K,eAF1D,CAIA,IAAIuV,EAAaD,EAASE,EAAY/J,EAAKoE,cAAgB0F,EAC3D9J,EAAKoE,YAAc0F,GAAc9J,EAAKoE,YAClCpE,EAAKrD,OAAOuC,SACZc,EAAKoE,cAAgBpE,EAAKrD,OAAOuC,QAAQ3K,cACzCyL,EAAKsE,aAAeh0C,KAAK4I,IAAI8mC,EAAKrD,OAAOuC,QAAQ9C,WAAY4D,EAAKsE,cAE7DtE,EAAKrD,OAAOmC,SACjBkB,EAAKoE,cAAgBpE,EAAKrD,OAAOmC,QAAQvK,gBACzCyL,EAAKsE,aAAeh0C,KAAK+J,IAAI2lC,EAAKrD,OAAOmC,QAAQ1C,WAAY4D,EAAKsE,eAElEyF,IACA/J,EAAKyE,SACLV,EAAa,gBACbS,IAdM,CAgBd,CACA,SAAS/2B,EAAUwmB,EAAMsJ,GACrB,IAAInyC,OACa,IAAbmyC,IAAuBA,GAAW,GACtC,IAAIyM,EAAchK,EAAKlC,UAAU7J,OAAMnjC,EAAWysC,GAClD,GAAKyC,EAAKrD,OAAOmC,SACbkL,GACAxL,GAAawL,EAAahK,EAAKrD,OAAOmC,aAAsBhuC,IAAbysC,EAAyBA,GAAYyC,EAAK2C,gBAAkB,GAC1G3C,EAAKrD,OAAOuC,SACT8K,GACAxL,GAAawL,EAAahK,EAAKrD,OAAOuC,aAAsBpuC,IAAbysC,EAAyBA,GAAYyC,EAAK8C,gBAAkB,EAC/G,OAAO,EACX,IAAK9C,EAAKrD,OAAOsN,QAAyC,IAA/BjK,EAAKrD,OAAOpJ,QAAQ9mC,OAC3C,OAAO,EACX,QAAoBqE,IAAhBk5C,EACA,OAAO,EAEX,IADA,IAAIvS,IAASuI,EAAKrD,OAAOsN,OAAQC,EAAsC,QAA7B9+C,EAAK40C,EAAKrD,OAAOsN,cAA2B,IAAP7+C,EAAgBA,EAAK40C,EAAKrD,OAAOpJ,QACvG3gC,EAAI,EAAGiL,OAAI,EAAQjL,EAAIs3C,EAAMz9C,OAAQmG,IAAK,CAE/C,GAAiB,oBADjBiL,EAAIqsC,EAAMt3C,KAENiL,EAAEmsC,GACF,OAAOvS,EACN,GAAI55B,aAAauQ,WACFtd,IAAhBk5C,GACAnsC,EAAEwQ,YAAc27B,EAAY37B,UAC5B,OAAOopB,EACN,GAAiB,kBAAN55B,EAAgB,CAC5B,IAAIssC,EAASnK,EAAKlC,UAAUjgC,OAAG/M,GAAW,GAC1C,OAAOq5C,GAAUA,EAAO97B,YAAc27B,EAAY37B,UAC5CopB,GACCA,CACX,CACK,GAAiB,kBAAN55B,QACI/M,IAAhBk5C,GACAnsC,EAAEgf,MACFhf,EAAE+e,IACFotB,EAAY37B,WAAaxQ,EAAEgf,KAAKxO,WAChC27B,EAAY37B,WAAaxQ,EAAE+e,GAAGvO,UAC9B,OAAOopB,CACf,CACA,OAAQA,CACZ,CACA,SAAS2O,EAAS/N,GACd,YAA2BvnC,IAAvBkvC,EAAKa,iBACyC,IAAtCxI,EAAK5qC,UAAU0S,QAAQ,YACuB,IAAlDk4B,EAAK5qC,UAAU0S,QAAQ,uBACvB6/B,EAAKa,cAAc8D,SAAStM,GAExC,CACA,SAAS+R,EAAOhgD,GACZ,IAAIigD,EAAUjgD,EAAE6V,SAAW+/B,EAAKoC,OAC5BkI,EAAetK,EAAKoC,OAAO9uC,MAAMi3C,YAAcC,KAC/CH,IACAC,GACElgD,EAAEq/C,eAAiBN,EAAe/+C,EAAEq/C,gBACtCzJ,EAAK7L,QAAQ6L,EAAKoC,OAAO9uC,OAAO,EAAMlJ,EAAE6V,SAAW+/B,EAAKvN,SAClDuN,EAAKrD,OAAOnK,UACZwN,EAAKrD,OAAOxJ,WAE1B,CACA,SAASkC,EAAUjrC,GACf,IAAIs3C,EAAcjI,GAAervC,GAC7BigD,EAAUrK,EAAKrD,OAAOtG,KACpByJ,EAAQ6E,SAASjD,GACjBA,IAAgB1B,EAAKoC,OACvB9P,EAAa0N,EAAKrD,OAAOrK,WACzBmY,EAAezK,EAAKqJ,UAAY/W,IAAe+X,GAC/CK,EAAqB1K,EAAKrD,OAAOjI,QAAU2V,IAAY/X,EAC3D,GAAkB,KAAdloC,EAAEi9B,SAAkBgjB,EAAS,CAC7B,GAAI/X,EAKA,OAJA0N,EAAK7L,QAAQ6L,EAAKoC,OAAO9uC,OAAO,EAAMouC,IAAgB1B,EAAKvN,SACrDuN,EAAKrD,OAAOnK,UACZwN,EAAKrD,OAAOxJ,YAClB6M,EAAKrnC,QACE+oC,EAAYiJ,OAGnB3K,EAAKjwB,MAEb,MACK,GAAIo5B,EAAezH,IACpB+I,GACAC,EAAoB,CACpB,IAAIE,IAAc5K,EAAK4J,eACnB5J,EAAK4J,cAAcjF,SAASjD,GAChC,OAAQt3C,EAAEi9B,SACN,KAAK,GACGujB,GACAxgD,EAAEo3C,iBACFL,IACA0J,KAGAC,EAAW1gD,GACf,MACJ,KAAK,GACDA,EAAEo3C,iBACFqJ,IACA,MACJ,KAAK,EACL,KAAK,GACGR,IAAYrK,EAAKrD,OAAOrK,aACxBloC,EAAEo3C,iBACFxB,EAAK39B,SAET,MACJ,KAAK,GACL,KAAK,GACD,GAAKuoC,GAAcP,EAgBVrK,EAAK+B,aACV/B,EAAK+B,YAAY6D,YAjBO,CACxBx7C,EAAEo3C,iBACF,IAAIpa,EAAgBiZ,IACpB,QAA2BvvC,IAAvBkvC,EAAKa,iBACW,IAAfvO,GACIlL,GAAiBgf,EAAShf,IAAkB,CACjD,IAAI2jB,EAAwB,KAAd3gD,EAAEi9B,QAAiB,GAAK,EACjCj9B,EAAE2c,SAGH3c,EAAE4gD,kBACFtE,EAAYqE,GACZ9E,EAAWH,EAAqB,GAAI,IAJpCG,OAAWn1C,EAAWi6C,EAM9B,CACJ,CAGA,MACJ,KAAK,GACL,KAAK,GACD3gD,EAAEo3C,iBACF,IAAII,EAAsB,KAAdx3C,EAAEi9B,QAAiB,GAAK,EAC/B2Y,EAAKa,oBACa/vC,IAAnB4wC,EAAYyD,IACZzD,IAAgB1B,EAAKva,OACrBic,IAAgB1B,EAAKvN,SACjBroC,EAAE2c,SACF3c,EAAE4gD,kBACFxH,EAAWxD,EAAKoE,YAAcxC,GAC9BqE,EAAWH,EAAqB,GAAI,IAE9B8E,GACN3E,OAAWn1C,EAAmB,EAAR8wC,GAErBF,IAAgB1B,EAAKiL,mBAC1BzH,EAAWxD,EAAKoE,YAAcxC,GAEzB5B,EAAKrD,OAAOjJ,cACZkX,GAAa5K,EAAK+B,aACnB/B,EAAK+B,YAAY6D,QACrBzE,EAAW/2C,GACX41C,EAAKuC,oBAET,MACJ,KAAK,EACD,GAAIqI,EAAW,CACX,IAAIM,EAAQ,CACRlL,EAAK+B,YACL/B,EAAKiC,cACLjC,EAAKwC,cACLxC,EAAK9I,MAEJ1pC,OAAOwyC,EAAKmL,gBACZC,QAAO,SAAU1rC,GAAK,OAAOA,CAAG,IACjC9M,EAAIs4C,EAAM/qC,QAAQuhC,GACtB,IAAW,IAAP9uC,EAAU,CACV,IAAIqN,EAASirC,EAAMt4C,GAAKxI,EAAEihD,UAAY,EAAI,IAC1CjhD,EAAEo3C,kBACDvhC,GAAU+/B,EAAKoC,QAAQwD,OAC5B,CACJ,MACU5F,EAAKrD,OAAO5H,YAClBiL,EAAKa,eACLb,EAAKa,cAAc8D,SAASjD,IAC5Bt3C,EAAEihD,WACFjhD,EAAEo3C,iBACFxB,EAAKoC,OAAOwD,SAM5B,CACA,QAAkB90C,IAAdkvC,EAAK9I,MAAsBwK,IAAgB1B,EAAK9I,KAChD,OAAQ9sC,EAAEuD,KACN,KAAKqyC,EAAKnD,KAAK3F,KAAK,GAAGoU,OAAO,GAC9B,KAAKtL,EAAKnD,KAAK3F,KAAK,GAAGoU,OAAO,GAAGC,cAC7BvL,EAAK9I,KAAKuB,YAAcuH,EAAKnD,KAAK3F,KAAK,GACvCmL,IACAC,IACA,MACJ,KAAKtC,EAAKnD,KAAK3F,KAAK,GAAGoU,OAAO,GAC9B,KAAKtL,EAAKnD,KAAK3F,KAAK,GAAGoU,OAAO,GAAGC,cAC7BvL,EAAK9I,KAAKuB,YAAcuH,EAAKnD,KAAK3F,KAAK,GACvCmL,IACAC,KAIR+H,GAAWlB,EAAezH,KAC1BqC,EAAa,YAAa35C,EAElC,CACA,SAASy7C,EAAYxN,EAAMmT,GAEvB,QADkB,IAAdA,IAAwBA,EAAY,iBACN,IAA9BxL,EAAKoB,cAAc30C,UAClB4rC,GACKA,EAAKC,UAAUqM,SAAS6G,KACtBnT,EAAKC,UAAUqM,SAAS,uBAHpC,CAUA,IALA,IAAI8G,EAAYpT,EACVA,EAAK6B,QAAQ7rB,UACb2xB,EAAKe,KAAK2K,kBAAkBxR,QAAQ7rB,UAAWs9B,EAAc3L,EAAKlC,UAAUkC,EAAKoB,cAAc,QAAItwC,GAAW,GAAMud,UAAWu9B,EAAiBt7C,KAAK4I,IAAIuyC,EAAWzL,EAAKoB,cAAc,GAAG/yB,WAAYw9B,EAAev7C,KAAK+J,IAAIoxC,EAAWzL,EAAKoB,cAAc,GAAG/yB,WACjQy9B,GAAmB,EACnBC,EAAW,EAAGC,EAAW,EACpB3yC,EAAIuyC,EAAgBvyC,EAAIwyC,EAAcxyC,GAAKpM,GAC3CwgB,EAAU,IAAIW,KAAK/U,IAAI,KACxByyC,EACIA,GAAqBzyC,EAAIuyC,GAAkBvyC,EAAIwyC,EAC/CxyC,EAAIsyC,KAAiBI,GAAY1yC,EAAI0yC,GACrCA,EAAW1yC,EACNA,EAAIsyC,KAAiBK,GAAY3yC,EAAI2yC,KAC1CA,EAAW3yC,IAGF8+B,MAAMtb,KAAKmjB,EAAKiM,WAAWtkB,iBAAiB,kBAAoBqY,EAAKrD,OAAO1G,WAAa,QAAUuV,IACzG/jB,SAAQ,SAAUykB,GAC7B,IDlkCqBC,EAAIC,EAAKC,ECmkC1BC,EADOJ,EAAQhS,QACE7rB,UACjBk+B,EAAcR,EAAW,GAAKO,EAAYP,GACzCC,EAAW,GAAKM,EAAYN,EACjC,GAAIO,EAKA,OAJAL,EAAQ5T,UAAUvpC,IAAI,kBACtB,CAAC,UAAW,aAAc,YAAY04B,SAAQ,SAAU9tB,GACpDuyC,EAAQ5T,UAAUrX,OAAOtnB,EAC7B,IAGKmyC,IAAqBS,IAE9B,CAAC,aAAc,UAAW,WAAY,cAAc9kB,SAAQ,SAAU9tB,GAClEuyC,EAAQ5T,UAAUrX,OAAOtnB,EAC7B,SACa7I,IAATunC,IACAA,EAAKC,UAAUvpC,IAAI08C,GAAazL,EAAKoB,cAAc,GAAG/yB,UAChD,aACA,YACFs9B,EAAcF,GAAaa,IAAcX,EACzCO,EAAQ5T,UAAUvpC,IAAI,cACjB48C,EAAcF,GAAaa,IAAcX,GAC9CO,EAAQ5T,UAAUvpC,IAAI,YACtBu9C,GAAaP,IACC,IAAbC,GAAkBM,GAAaN,KD3lCfI,EC4lCIT,ED5lCCU,EC4lCYZ,GD5lCrBU,EC4lCHG,GD3lCdh8C,KAAK4I,IAAIkzC,EAAKC,IAAQF,EAAK77C,KAAK+J,IAAI+xC,EAAKC,KC4lCrCH,EAAQ5T,UAAUvpC,IAAI,YAElC,GA/CU,CAgDd,CACA,SAASy9C,KACDxM,EAAKqJ,QAAWrJ,EAAKrD,OAAOzG,QAAW8J,EAAKrD,OAAOjI,QACnD+X,GACR,CAqCA,SAASC,EAAiB3+C,GACtB,OAAO,SAAUkmC,GACb,IAAIiG,EAAW8F,EAAKrD,OAAO,IAAM5uC,EAAO,QAAUiyC,EAAKlC,UAAU7J,EAAM+L,EAAKrD,OAAOxJ,YAC/EwZ,EAAiB3M,EAAKrD,OAAO,KAAgB,QAAT5uC,EAAiB,MAAQ,OAAS,aAC1D+C,IAAZopC,IACA8F,EAAc,QAATjyC,EAAiB,iBAAmB,kBACrCmsC,EAAQI,WAAa,GACjBJ,EAAQoC,aAAe,GACvBpC,EAAQmC,aAAe,GAE/B2D,EAAKoB,gBACLpB,EAAKoB,cAAgBpB,EAAKoB,cAAcgK,QAAO,SAAUvtC,GAAK,OAAO4P,EAAU5P,EAAI,IAC9EmiC,EAAKoB,cAAc30C,QAAmB,QAATsB,GAC9Bs1C,EAAiBnJ,GACrBoI,KAEAtC,EAAKa,gBACL4D,SACgB3zC,IAAZopC,EACA8F,EAAKiL,mBAAmBl9C,GAAQmsC,EAAQ3F,cAAcgP,WAEtDvD,EAAKiL,mBAAmB2B,gBAAgB7+C,GAC5CiyC,EAAKiL,mBAAmBjkB,WAClB2lB,QACc77C,IAAZopC,GACAyS,EAAepY,gBAAkB2F,EAAQ3F,cAEzD,CACJ,CA4GA,SAASsY,IACL,OAAO7M,EAAKrD,OAAOtG,KACbyJ,EAAQgN,cAAc,gBACtBhN,CACV,CACA,SAASiN,IAC6B,kBAAvB/M,EAAKrD,OAAO7sB,QAC4B,qBAAxCowB,GAAU8M,MAAMhN,EAAKrD,OAAO7sB,SACnCkwB,EAAKrD,OAAOhJ,aAAa,IAAI4K,MAAM,6BAA+ByB,EAAKrD,OAAO7sB,SAClFkwB,EAAKnD,KAAOwC,GAASA,GAAS,CAAC,EAAGa,GAAU8M,MAAMC,SAAyC,kBAAvBjN,EAAKrD,OAAO7sB,OAC1EkwB,EAAKrD,OAAO7sB,OACW,YAAvBkwB,EAAKrD,OAAO7sB,OACRowB,GAAU8M,MAAMhN,EAAKrD,OAAO7sB,aAC5Bhf,GACVmrC,GAAWjC,EAAI,IAAMgG,EAAKnD,KAAKtG,SAASC,UAAUtK,KAAK,KAAO,IAC9D+P,GAAWniC,EAAI,IAAMkmC,EAAKnD,KAAKtG,SAASE,SAASvK,KAAK,KAAO,IAC7D+P,GAAWrB,EAAI,IAAMoF,EAAKnD,KAAKnG,OAAOF,UAAUtK,KAAK,KAAO,IAC5D+P,GAAWhC,EAAI,IAAM+F,EAAKnD,KAAKnG,OAAOD,SAASvK,KAAK,KAAO,IAC3D+P,GAAWvB,EAAI,IAAMsF,EAAKnD,KAAK3F,KAAK,GAAK,IAAM8I,EAAKnD,KAAK3F,KAAK,GAAK,IAAM8I,EAAKnD,KAAK3F,KAAK,GAAGqU,cAAgB,IAAMvL,EAAKnD,KAAK3F,KAAK,GAAGqU,cAAgB,SAEtHz6C,IADZuuC,GAASA,GAAS,CAAC,EAAGU,GAAiBrW,KAAKC,MAAMD,KAAKU,UAAU0V,EAAQoN,SAAW,CAAC,KACvF/W,gBAC2BrlC,IAAtCovC,GAAUC,cAAchK,YACxB6J,EAAKrD,OAAOxG,UAAY6J,EAAKnD,KAAK1G,WAEtC6J,EAAK9C,WAAaT,GAAoBuD,GACtCA,EAAKlC,UAAYT,GAAiB,CAAEV,OAAQqD,EAAKrD,OAAQE,KAAMmD,EAAKnD,MACxE,CACA,SAAS4P,EAAiBU,GACtB,GAAoC,oBAAzBnN,EAAKrD,OAAOvsC,UAGvB,QAA+BU,IAA3BkvC,EAAKM,kBAAT,CAEAyD,EAAa,yBACb,IAAIjO,EAAkBqX,GAAyBnN,EAAKoN,iBAChDC,EAAiBlV,MAAMoH,UAAU+N,OAAOjgD,KAAK2yC,EAAKM,kBAAkBn0C,UAAW,SAAUohD,EAAK91B,GAAS,OAAO81B,EAAM91B,EAAM+1B,YAAc,GAAI,GAAIC,EAAgBzN,EAAKM,kBAAkBU,YAAa0M,EAAY1N,EAAKrD,OAAOvsC,SAAS+sC,MAAM,KAAMwQ,EAAoBD,EAAU,GAAIE,EAAsBF,EAAUjhD,OAAS,EAAIihD,EAAU,GAAK,KAAMG,EAAc/X,EAAgBgY,wBAAyBC,EAAqBpb,OAAOqb,YAAcH,EAAYhzB,OAAQozB,EAAkC,UAAtBN,GAC/b,UAAtBA,GACGI,EAAqBV,GACrBQ,EAAY/yB,IAAMuyB,EACtBvyB,EAAM6X,OAAOub,YACbL,EAAY/yB,KACVmzB,GAAgDZ,EAAiB,EAArDvX,EAAgB0X,aAAe,GAGjD,GAFApV,GAAY4H,EAAKM,kBAAmB,YAAa2N,GACjD7V,GAAY4H,EAAKM,kBAAmB,cAAe2N,IAC/CjO,EAAKrD,OAAOjI,OAAhB,CAEA,IAAI9Z,EAAO+X,OAAOwb,YAAcN,EAAYjzB,KACxCwzB,GAAW,EACXC,GAAU,EACc,WAAxBT,GACAhzB,IAAS6yB,EAAgBI,EAAYt8B,OAAS,EAC9C68B,GAAW,GAEkB,UAAxBR,IACLhzB,GAAQ6yB,EAAgBI,EAAYt8B,MACpC88B,GAAU,GAEdjW,GAAY4H,EAAKM,kBAAmB,aAAc8N,IAAaC,GAC/DjW,GAAY4H,EAAKM,kBAAmB,cAAe8N,GACnDhW,GAAY4H,EAAKM,kBAAmB,aAAc+N,GAClD,IAAI1zB,EAAQgY,OAAO/N,SAASyhB,KAAKrF,aAC5BrO,OAAOwb,YAAcN,EAAYlzB,OAClC2zB,EAAY1zB,EAAO6yB,EAAgB9a,OAAO/N,SAASyhB,KAAKrF,YACxDuN,EAAa5zB,EAAQ8yB,EAAgB9a,OAAO/N,SAASyhB,KAAKrF,YAE9D,GADA5I,GAAY4H,EAAKM,kBAAmB,YAAagO,IAC7CtO,EAAKrD,OAAOzG,OAGhB,GADA8J,EAAKM,kBAAkBtb,MAAMlK,IAAMA,EAAM,KACpCwzB,EAIA,GAAKC,EAIL,CACD,IAAIC,EAgBZ,WAEI,IADA,IAAIC,EAAgB,KACX77C,EAAI,EAAGA,EAAIgyB,SAAS8pB,YAAYjiD,OAAQmG,IAAK,CAClD,IAAI+7C,EAAQ/pB,SAAS8pB,YAAY97C,GACjC,GAAK+7C,EAAMC,SAAX,CAEA,IACID,EAAMC,QACV,CACA,MAAOhb,GACH,QACJ,CACA6a,EAAgBE,EAChB,KARY,CAShB,CACA,OAAwB,MAAjBF,EAAwBA,EAEnC,WACI,IAAIzpB,EAAQJ,SAASC,cAAc,SAEnC,OADAD,SAASiqB,KAAK7qB,YAAYgB,GACnBA,EAAM2pB,KACjB,CANmDG,EACnD,CAhCkBC,GACV,QAAYj+C,IAAR09C,EACA,OACJ,IAAIQ,EAAYrc,OAAO/N,SAASyhB,KAAKrF,YACjCiO,EAAa3+C,KAAK+J,IAAI,EAAG20C,EAAY,EAAIvB,EAAgB,GAGzDyB,EAAcV,EAAII,SAASniD,OAC3B0iD,EAAc,SAAWtB,EAAYjzB,KAAO,kBAChDwd,GAAY4H,EAAKM,kBAAmB,aAAa,GACjDlI,GAAY4H,EAAKM,kBAAmB,cAAc,GAClDkO,EAAIY,WAAWC,6EAAmCF,EAAaD,GAC/DlP,EAAKM,kBAAkBtb,MAAMpK,KAAOq0B,EAAa,KACjDjP,EAAKM,kBAAkBtb,MAAMrK,MAAQ,MACzC,MAlBIqlB,EAAKM,kBAAkBtb,MAAMpK,KAAO,OACpColB,EAAKM,kBAAkBtb,MAAMrK,MAAQA,EAAQ,UAL7CqlB,EAAKM,kBAAkBtb,MAAMpK,KAAOA,EAAO,KAC3ColB,EAAKM,kBAAkBtb,MAAMrK,MAAQ,MAzB/B,CAbA,OAHMqlB,EAAKrD,OAAOvsC,SAAS4vC,EAAMmN,EA+D/C,CAuBA,SAAS1I,IACDzE,EAAKrD,OAAO5H,YAAciL,EAAKjD,WAEnCyH,IACA0E,IACAzB,IACJ,CACA,SAASoD,IACL7K,EAAKoC,OAAOwD,SACwC,IAAhDjT,OAAOC,UAAUC,UAAU1yB,QAAQ,cACJrP,IAA/B8hC,UAAU0c,iBACVvhC,WAAWiyB,EAAKrnC,MAAO,GAGvBqnC,EAAKrnC,OAEb,CACA,SAASmyC,EAAW1gD,GAChBA,EAAEo3C,iBACFp3C,EAAE4gD,kBACF,IAMI3xC,EAAIy/B,GAAWW,GAAervC,IANf,SAAU84B,GACzB,OAAOA,EAAIoV,WACPpV,EAAIoV,UAAUqM,SAAS,mBACtBzhB,EAAIoV,UAAUqM,SAAS,wBACvBzhB,EAAIoV,UAAUqM,SAAS,aAChC,IAEA,QAAU7zC,IAANuI,EAAJ,CAEA,IAAI4G,EAAS5G,EACTk2C,EAAgBvP,EAAKuB,sBAAwB,IAAInzB,KAAKnO,EAAOi6B,QAAQ7rB,WACrEmhC,GAAqBD,EAAanT,WAAa4D,EAAKsE,cACpDiL,EAAanT,WACT4D,EAAKsE,aAAetE,EAAKrD,OAAO1G,WAAa,IAC5B,UAArB+J,EAAKrD,OAAO/H,KAEhB,GADAoL,EAAKuF,iBAAmBtlC,EACC,WAArB+/B,EAAKrD,OAAO/H,KACZoL,EAAKoB,cAAgB,CAACmO,QACrB,GAAyB,aAArBvP,EAAKrD,OAAO/H,KAAqB,CACtC,IAAI6a,EAAgBnK,EAAeiK,GAC/BE,EACAzP,EAAKoB,cAAc0H,OAAOvN,SAASkU,GAAgB,GAEnDzP,EAAKoB,cAAc13C,KAAK6lD,EAChC,KAC8B,UAArBvP,EAAKrD,OAAO/H,OACiB,IAA9BoL,EAAKoB,cAAc30C,QACnBuzC,EAAK39B,OAAM,GAAO,GAEtB29B,EAAKuB,sBAAwBgO,EAC7BvP,EAAKoB,cAAc13C,KAAK6lD,GACwC,IAA5D/Q,GAAa+Q,EAAcvP,EAAKoB,cAAc,IAAI,IAClDpB,EAAKoB,cAAcsO,MAAK,SAAU/P,EAAGv7B,GAAK,OAAOu7B,EAAEtxB,UAAYjK,EAAEiK,SAAW,KAGpF,GADAg0B,IACImN,EAAmB,CACnB,IAAIzF,EAAY/J,EAAKoE,cAAgBmL,EAAahb,cAClDyL,EAAKoE,YAAcmL,EAAahb,cAChCyL,EAAKsE,aAAeiL,EAAanT,WAC7B2N,IACAhG,EAAa,gBACbS,KAEJT,EAAa,gBACjB,CAcA,GAbAmF,IACAzB,IACAnF,IACKkN,GACoB,UAArBxP,EAAKrD,OAAO/H,MACe,IAA3BoL,EAAKrD,OAAO1G,gBAEmBnlC,IAA1BkvC,EAAKuF,uBACWz0C,IAArBkvC,EAAK+B,aACL/B,EAAKuF,kBAAoBvF,EAAKuF,iBAAiBK,QAH/CF,EAAezlC,QAKMnP,IAArBkvC,EAAK+B,kBACgBjxC,IAArBkvC,EAAK+B,aAA6B/B,EAAK+B,YAAY6D,QACnD5F,EAAKrD,OAAO1J,cAAe,CAC3B,IAAI0c,EAA8B,WAArB3P,EAAKrD,OAAO/H,OAAsBoL,EAAKrD,OAAOjJ,WACvDkc,EAA6B,UAArB5P,EAAKrD,OAAO/H,MACU,IAA9BoL,EAAKoB,cAAc30C,SAClBuzC,EAAKrD,OAAOjJ,YACbic,GAAUC,IACV/E,GAER,CACA/G,GA3DU,CA4Dd,CAniDA9D,EAAKlC,UAAYT,GAAiB,CAAEV,OAAQqD,EAAKrD,OAAQE,KAAMmD,EAAKnD,OACpEmD,EAAK4D,UAAY,GACjB5D,EAAKmL,eAAiB,GACtBnL,EAAK6P,cAAgB,GACrB7P,EAAK8P,MAAQrP,EACbT,EAAK+P,kBAAoB1M,EACzBrD,EAAKgQ,kBAAoBvD,EACzBzM,EAAK0G,YAAcA,EACnB1G,EAAKwD,WAAaA,EAClBxD,EAAK39B,MAsvBL,SAAe4tC,EAAoBC,QACJ,IAAvBD,IAAiCA,GAAqB,QACxC,IAAdC,IAAwBA,GAAY,GACxClQ,EAAKva,MAAMnyB,MAAQ,QACGxC,IAAlBkvC,EAAKvN,WACLuN,EAAKvN,SAASn/B,MAAQ,SACDxC,IAArBkvC,EAAKmQ,cACLnQ,EAAKmQ,YAAY78C,MAAQ,IAC7B0sC,EAAKoB,cAAgB,GACrBpB,EAAKuB,2BAAwBzwC,GACX,IAAdo/C,IACAlQ,EAAKoE,YAAcpE,EAAKoQ,aAAa7b,cACrCyL,EAAKsE,aAAetE,EAAKoQ,aAAahU,YAE1C,IAA+B,IAA3B4D,EAAKrD,OAAOjJ,WAAqB,CACjC,IAAItoC,EAAKyzC,GAAgBmB,EAAKrD,QAC9BzI,EAD+C9oC,EAAGwzC,MAAiBxzC,EAAGwwC,QAAmBxwC,EAAG2vC,QAEhG,CACAiF,EAAKyE,SACDwL,GACAlM,EAAa,WACrB,EA1wBA/D,EAAKrnC,MA2wBL,WACIqnC,EAAKqJ,QAAS,EACTrJ,EAAKjD,gBACyBjsC,IAA3BkvC,EAAKM,mBACLN,EAAKM,kBAAkBhI,UAAUrX,OAAO,aAExBnwB,IAAhBkvC,EAAKoC,QACLpC,EAAKoC,OAAO9J,UAAUrX,OAAO,WAGrC8iB,EAAa,UACjB,EArxBA/D,EAAK6F,YAAcA,EACnB7F,EAAKqQ,eAAiBxrB,GACtBmb,EAAK+E,UAAYA,EACjB/E,EAAKsQ,QAmxBL,gBACwBx/C,IAAhBkvC,EAAKrD,QACLoH,EAAa,aACjB,IAAK,IAAInxC,EAAIotC,EAAK4D,UAAUn3C,OAAQmG,KAChCotC,EAAK4D,UAAUhxC,GAAGquB,SAGtB,GADA+e,EAAK4D,UAAY,GACb5D,EAAKmQ,YACDnQ,EAAKmQ,YAAYnX,YACjBgH,EAAKmQ,YAAYnX,WAAWH,YAAYmH,EAAKmQ,aACjDnQ,EAAKmQ,iBAAcr/C,OAElB,GAAIkvC,EAAKM,mBAAqBN,EAAKM,kBAAkBtH,WACtD,GAAIgH,EAAKrD,OAAOzG,QAAU8J,EAAKM,kBAAkBtH,WAAY,CACzD,IAAII,EAAU4G,EAAKM,kBAAkBtH,WAErC,GADAI,EAAQmX,WAAanX,EAAQP,YAAYO,EAAQmX,WAC7CnX,EAAQJ,WAAY,CACpB,KAAOI,EAAQR,YACXQ,EAAQJ,WAAWwX,aAAapX,EAAQR,WAAYQ,GACxDA,EAAQJ,WAAWH,YAAYO,EACnC,CACJ,MAEI4G,EAAKM,kBAAkBtH,WAAWH,YAAYmH,EAAKM,mBAEvDN,EAAKvN,WACLuN,EAAKva,MAAM13B,KAAO,OACdiyC,EAAKvN,SAASuG,YACdgH,EAAKvN,SAASuG,WAAWH,YAAYmH,EAAKvN,iBACvCuN,EAAKvN,UAEZuN,EAAKva,QACLua,EAAKva,MAAM13B,KAAOiyC,EAAKva,MAAMgrB,MAC7BzQ,EAAKva,MAAM6S,UAAUrX,OAAO,mBAC5B+e,EAAKva,MAAMmnB,gBAAgB,aAE/B,CACI,iBACA,wBACA,sBACA,sBACA,uBACA,uBACA,WACA,SACA,mBACA,iBACA,iBACA,OACA,gBACA,SACA,mBACA,iBACA,aACA,WACA,gBACA,oBACA,mBACA,eACA,eACA,0BACA,sBACA,qBACA,yBACA,mBACA,UACFnlB,SAAQ,SAAUltB,GAChB,WACWylC,EAAKzlC,EAChB,CACA,MAAO2gC,GAAK,CAChB,GACJ,EA11BA8E,EAAKvyB,UAAYA,EACjBuyB,EAAKgE,WAAaA,EAClBhE,EAAKsC,YAAcA,EACnBtC,EAAKjwB,KA0pCL,SAAc3lB,EAAG0rC,QACW,IAApBA,IAA8BA,EAAkBkK,EAAKoN,kBACzD,IAAsB,IAAlBpN,EAAKjD,SAAmB,CACxB,GAAI3yC,EAAG,CACHA,EAAEo3C,iBACF,IAAIE,EAAcjI,GAAervC,GAC7Bs3C,GACAA,EAAYiJ,MAEpB,CAMA,YALyB75C,IAArBkvC,EAAKmQ,cACLnQ,EAAKmQ,YAAYvK,QACjB5F,EAAKmQ,YAAY7oB,cAErByc,EAAa,SAEjB,CACK,GAAI/D,EAAKoC,OAAOpb,UAAYgZ,EAAKrD,OAAOjI,OACzC,OAEJ,IAAIgc,EAAU1Q,EAAKqJ,OACnBrJ,EAAKqJ,QAAS,EACTqH,IACD1Q,EAAKM,kBAAkBhI,UAAUvpC,IAAI,QACrCixC,EAAKoC,OAAO9J,UAAUvpC,IAAI,UAC1Bg1C,EAAa,UACb0I,EAAiB3W,KAEU,IAA3BkK,EAAKrD,OAAOjJ,aAAkD,IAA3BsM,EAAKrD,OAAO5H,cAChB,IAA3BiL,EAAKrD,OAAOrK,iBACLxhC,IAAN1G,GACI41C,EAAK4J,cAAcjF,SAASv6C,EAAEq/C,gBACnC17B,YAAW,WAAc,OAAOiyB,EAAK+B,YAAY4O,QAAU,GAAG,IAG1E,EA5rCA3Q,EAAKyE,OAASA,EACdzE,EAAK70C,IAmiDL,SAAaylD,EAAQt9C,GACjB,GAAe,OAAXs9C,GAAqC,kBAAXA,EAE1B,IAAK,IAAIjjD,KADT9E,OAAOy2C,OAAOU,EAAKrD,OAAQiU,GACXA,OACW9/C,IAAnB+/C,EAAUljD,IACVkjD,EAAUljD,GAAK85B,SAAQ,SAAU/nB,GAAK,OAAOA,GAAK,SAI1DsgC,EAAKrD,OAAOiU,GAAUt9C,OACIxC,IAAtB+/C,EAAUD,GACVC,EAAUD,GAAQnpB,SAAQ,SAAU/nB,GAAK,OAAOA,GAAK,IAChDyyB,GAAMhyB,QAAQywC,IAAW,IAC9B5Q,EAAKrD,OAAOiU,GAAU3Y,GAAS3kC,IAEvC0sC,EAAKyE,SACLnC,GAAY,EAChB,EAnjDAtC,EAAK7L,QAslDL,SAAiBF,EAAM6P,EAAeryC,QACZ,IAAlBqyC,IAA4BA,GAAgB,QACjC,IAAXryC,IAAqBA,EAASuuC,EAAKrD,OAAOxJ,YAC9C,GAAc,IAATc,IAAeA,GAAUA,aAAgBkE,OAAyB,IAAhBlE,EAAKxnC,OACxD,OAAOuzC,EAAK39B,MAAMyhC,GACtBgN,EAAgB7c,EAAMxiC,GACtBuuC,EAAKuB,sBACDvB,EAAKoB,cAAcpB,EAAKoB,cAAc30C,OAAS,GACnDuzC,EAAKyE,SACLT,OAAWlzC,EAAWgzC,GACtBT,IACkC,IAA9BrD,EAAKoB,cAAc30C,QACnBuzC,EAAK39B,OAAM,GAEfigC,EAAYwB,GACRA,GACAC,EAAa,WACrB,EAtmDA/D,EAAK+Q,OA2uDL,SAAgB3mD,GACZ,IAAoB,IAAhB41C,EAAKqJ,OACL,OAAOrJ,EAAKrnC,QAChBqnC,EAAKjwB,KAAK3lB,EACd,EAjOA,IAAIymD,EAAY,CACZ/gC,OAAQ,CAACi9B,EAAalE,GACtB5S,WAAY,CAACoS,EAAa3H,EAAkBiI,GAC5C7J,QAAS,CAACkF,GACV9E,QAAS,CAAC8E,GACVlO,gBAAiB,CAACkb,GAClBhe,WAAY,CACR,YACmC,IAA3BgN,EAAKrD,OAAO3J,YACZyN,EAAKT,EAAKoC,OAAQ,QAASpC,EAAKjwB,MAChC0wB,EAAKT,EAAKoC,OAAQ,QAASpC,EAAKjwB,QAGhCiwB,EAAKoC,OAAOyB,oBAAoB,QAAS7D,EAAKjwB,MAC9CiwB,EAAKoC,OAAOyB,oBAAoB,QAAS7D,EAAKjwB,MAEtD,IAqBR,SAAS+gC,EAAgBG,EAAWx/C,GAChC,IAAIy/C,EAAQ,GACZ,GAAID,aAAqB9Y,MACrB+Y,EAAQD,EAAU/3B,KAAI,SAAUrb,GAAK,OAAOmiC,EAAKlC,UAAUjgC,EAAGpM,EAAS,SACtE,GAAIw/C,aAAqB7iC,MAA6B,kBAAd6iC,EACzCC,EAAQ,CAAClR,EAAKlC,UAAUmT,EAAWx/C,SAClC,GAAyB,kBAAdw/C,EACZ,OAAQjR,EAAKrD,OAAO/H,MAChB,IAAK,SACL,IAAK,OACDsc,EAAQ,CAAClR,EAAKlC,UAAUmT,EAAWx/C,IACnC,MACJ,IAAK,WACDy/C,EAAQD,EACH9T,MAAM6C,EAAKrD,OAAOzJ,aAClBha,KAAI,SAAU+a,GAAQ,OAAO+L,EAAKlC,UAAU7J,EAAMxiC,EAAS,IAChE,MACJ,IAAK,QACDy/C,EAAQD,EACH9T,MAAM6C,EAAKnD,KAAK/F,gBAChB5d,KAAI,SAAU+a,GAAQ,OAAO+L,EAAKlC,UAAU7J,EAAMxiC,EAAS,SAOxEuuC,EAAKrD,OAAOhJ,aAAa,IAAI4K,MAAM,0BAA4B7U,KAAKU,UAAU6mB,KAClFjR,EAAKoB,cAAiBpB,EAAKrD,OAAOpK,oBAC5B2e,EACAA,EAAM9F,QAAO,SAAUvtC,GAAK,OAAOA,aAAauQ,MAAQX,EAAU5P,GAAG,EAAQ,IAC1D,UAArBmiC,EAAKrD,OAAO/H,MACZoL,EAAKoB,cAAcsO,MAAK,SAAU/P,EAAGv7B,GAAK,OAAOu7B,EAAEtxB,UAAYjK,EAAEiK,SAAW,GACpF,CAmBA,SAAS8iC,EAAe/T,GACpB,OAAOA,EACFjX,QACAjN,KAAI,SAAUk4B,GACf,MAAoB,kBAATA,GACS,kBAATA,GACPA,aAAgBhjC,KACT4xB,EAAKlC,UAAUsT,OAAMtgD,GAAW,GAElCsgD,GACW,kBAATA,GACPA,EAAKv0B,MACLu0B,EAAKx0B,GACE,CACHC,KAAMmjB,EAAKlC,UAAUsT,EAAKv0B,UAAM/rB,GAChC8rB,GAAIojB,EAAKlC,UAAUsT,EAAKx0B,QAAI9rB,IAE7BsgD,CACX,IACKhG,QAAO,SAAU1rC,GAAK,OAAOA,CAAG,GACzC,CAoEA,SAASsxC,IACLhR,EAAKoN,iBAAmBpN,EAAKrD,OAAO7G,iBAAmBkK,EAAKoC,MAChE,CA+CA,SAAS2B,EAAaj8B,EAAOxb,GACzB,QAAoBwE,IAAhBkvC,EAAKrD,OAAT,CAEA,IAAI0U,EAAQrR,EAAKrD,OAAO70B,GACxB,QAAchX,IAAVugD,GAAuBA,EAAM5kD,OAAS,EACtC,IAAK,IAAImG,EAAI,EAAGy+C,EAAMz+C,IAAMA,EAAIy+C,EAAM5kD,OAAQmG,IAC1Cy+C,EAAMz+C,GAAGotC,EAAKoB,cAAepB,EAAKva,MAAMnyB,MAAO0sC,EAAM1zC,GAE/C,aAAVwb,IACAk4B,EAAKva,MAAMqf,cAAcD,EAAY,WACrC7E,EAAKva,MAAMqf,cAAcD,EAAY,UAR/B,CAUd,CACA,SAASA,EAAYj3C,GACjB,IAAIxD,EAAIw6B,SAASigB,YAAY,SAE7B,OADAz6C,EAAEknD,UAAU1jD,GAAM,GAAM,GACjBxD,CACX,CACA,SAASk7C,EAAerR,GACpB,IAAK,IAAIrhC,EAAI,EAAGA,EAAIotC,EAAKoB,cAAc30C,OAAQmG,IAAK,CAChD,IAAI28C,EAAevP,EAAKoB,cAAcxuC,GACtC,GAAI28C,aAAwBnhC,MACa,IAArCowB,GAAa+Q,EAActb,GAC3B,MAAO,GAAKrhC,CACpB,CACA,OAAO,CACX,CAOA,SAASs2C,IACDlJ,EAAKrD,OAAO5H,YAAciL,EAAKjD,WAAaiD,EAAKsI,WAErDtI,EAAKwI,aAAa/gB,SAAQ,SAAU2gB,EAAax1C,GAC7C,IAAIiL,EAAI,IAAIuQ,KAAK4xB,EAAKoE,YAAapE,EAAKsE,aAAc,GACtDzmC,EAAEu8B,SAAS4F,EAAKsE,aAAe1xC,GAC3BotC,EAAKrD,OAAO1G,WAAa,GACS,WAAlC+J,EAAKrD,OAAO9H,kBACZmL,EAAKyI,cAAc71C,GAAG6lC,YAClBoB,GAAWh8B,EAAEu+B,WAAY4D,EAAKrD,OAAO3G,sBAAuBgK,EAAKnD,MAAQ,IAG7EmD,EAAK4H,wBAAwBt0C,MAAQuK,EAAEu+B,WAAWmH,WAEtD6E,EAAY90C,MAAQuK,EAAE02B,cAAcgP,UACxC,IACAvD,EAAKgJ,yBACuBl4C,IAAxBkvC,EAAKrD,OAAOmC,UACPkB,EAAKoE,cAAgBpE,EAAKrD,OAAOmC,QAAQvK,cACpCyL,EAAKsE,cAAgBtE,EAAKrD,OAAOmC,QAAQ1C,WACzC4D,EAAKoE,YAAcpE,EAAKrD,OAAOmC,QAAQvK,eACrDyL,EAAKiJ,yBACuBn4C,IAAxBkvC,EAAKrD,OAAOuC,UACPc,EAAKoE,cAAgBpE,EAAKrD,OAAOuC,QAAQ3K,cACpCyL,EAAKsE,aAAe,EAAItE,EAAKrD,OAAOuC,QAAQ9C,WAC5C4D,EAAKoE,YAAcpE,EAAKrD,OAAOuC,QAAQ3K,eACzD,CACA,SAASiW,EAAW+G,GAChB,IAAI9/C,EAAS8/C,IACRvR,EAAKrD,OAAOlK,SAAWuN,EAAKrD,OAAOnK,UAAYwN,EAAKrD,OAAOxJ,YAChE,OAAO6M,EAAKoB,cACPloB,KAAI,SAAUs4B,GAAQ,OAAOxR,EAAK9C,WAAWsU,EAAM//C,EAAS,IAC5D25C,QAAO,SAAUvtC,EAAGjL,EAAGwqC,GACxB,MAA4B,UAArB4C,EAAKrD,OAAO/H,MACfoL,EAAKrD,OAAOjJ,YACZ0J,EAAIj9B,QAAQtC,KAAOjL,CAC3B,IACKs5B,KAA0B,UAArB8T,EAAKrD,OAAO/H,KAChBoL,EAAKrD,OAAOzJ,YACZ8M,EAAKnD,KAAK/F,eACpB,CACA,SAASwL,EAAYwB,QACK,IAAlBA,IAA4BA,GAAgB,QACvBhzC,IAArBkvC,EAAKmQ,aAA6BnQ,EAAKyR,kBACvCzR,EAAKmQ,YAAY78C,WACkBxC,IAA/BkvC,EAAKuB,sBACCvB,EAAK9C,WAAW8C,EAAKuB,sBAAuBvB,EAAKyR,iBACjD,IAEdzR,EAAKva,MAAMnyB,MAAQk3C,EAAWxK,EAAKrD,OAAOxJ,iBACpBriC,IAAlBkvC,EAAKvN,WACLuN,EAAKvN,SAASn/B,MAAQk3C,EAAWxK,EAAKrD,OAAOnK,aAE3B,IAAlBsR,GACAC,EAAa,gBACrB,CACA,SAAS2N,GAAgBtnD,GACrB,IAAIs3C,EAAcjI,GAAervC,GAC7BunD,EAAc3R,EAAKuI,aAAa5D,SAASjD,GACzCkQ,EAAc5R,EAAK0I,aAAa/D,SAASjD,GACzCiQ,GAAeC,EACflL,EAAYiL,GAAe,EAAI,GAE1B3R,EAAKwI,aAAaroC,QAAQuhC,IAAgB,EAC/CA,EAAYiP,SAEPjP,EAAYpJ,UAAUqM,SAAS,WACpC3E,EAAKwD,WAAWxD,EAAKoE,YAAc,GAE9B1C,EAAYpJ,UAAUqM,SAAS,cACpC3E,EAAKwD,WAAWxD,EAAKoE,YAAc,EAE3C,CAwCA,OAr3DA,WACIpE,EAAKF,QAAUE,EAAKva,MAAQqa,EAC5BE,EAAKqJ,QAAS,EAysClB,WACI,IAAIwI,EAAW,CACX,OACA,cACA,aACA,sBACA,aACA,YACA,aACA,aACA,WACA,wBACA,SACA,SACA,gBACA,iBAEAC,EAAazS,GAASA,GAAS,CAAC,EAAG3V,KAAKC,MAAMD,KAAKU,UAAU0V,EAAQoN,SAAW,CAAC,KAAMnN,GACvF7D,EAAU,CAAC,EACf8D,EAAKrD,OAAOmB,UAAYgU,EAAWhU,UACnCkC,EAAKrD,OAAOO,WAAa4U,EAAW5U,WACpCr0C,OAAOC,eAAek3C,EAAKrD,OAAQ,SAAU,CACzCxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAOoV,OAAS,EAC/C5mD,IAAK,SAAU+lD,GACXlR,EAAKrD,OAAOoV,QAAUZ,EAAeD,EACzC,IAEJroD,OAAOC,eAAek3C,EAAKrD,OAAQ,UAAW,CAC1CxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAOtK,QAAU,EAChDlnC,IAAK,SAAU+lD,GACXlR,EAAKrD,OAAOtK,SAAW8e,EAAeD,EAC1C,IAEJ,IAAIc,EAA+B,SAApBF,EAAWld,KAC1B,IAAKkd,EAAW3e,aAAe2e,EAAWpe,YAAcse,GAAW,CAC/D,IAAIC,EAAoB/R,GAAUC,cAAchN,YAAc8M,GAAe9M,WAC7E+I,EAAQ/I,WACJ2e,EAAW/c,YAAcid,EACnB,OAASF,EAAWre,cAAgB,KAAO,IAC3Cwe,EAAoB,QAAUH,EAAWre,cAAgB,KAAO,GAC9E,CACA,GAAIqe,EAAWrf,WACVqf,EAAWpe,YAAcse,KACzBF,EAAWtf,UAAW,CACvB,IAAI0f,EAAmBhS,GAAUC,cAAc3N,WAAayN,GAAezN,UAC3E0J,EAAQ1J,UACJsf,EAAW/c,YAAcid,EACnB,OAASF,EAAWre,cAAgB,OAAS,MAC7Cye,EAAoB,QAAUJ,EAAWre,cAAgB,KAAO,IAAM,IACpF,CACA5qC,OAAOC,eAAek3C,EAAKrD,OAAQ,UAAW,CAC1CxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAOwV,QAAU,EAChDhnD,IAAKuhD,EAAiB,SAE1B7jD,OAAOC,eAAek3C,EAAKrD,OAAQ,UAAW,CAC1CxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAOyV,QAAU,EAChDjnD,IAAKuhD,EAAiB,SAE1B,IAAI2F,EAAmB,SAAUtkD,GAAQ,OAAO,SAAUmR,GACtD8gC,EAAKrD,OAAgB,QAAT5uC,EAAiB,WAAa,YAAciyC,EAAKlC,UAAU5+B,EAAK,QAChF,CAAG,EACHrW,OAAOC,eAAek3C,EAAKrD,OAAQ,UAAW,CAC1CxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAO2V,QAAU,EAChDnnD,IAAKknD,EAAiB,SAE1BxpD,OAAOC,eAAek3C,EAAKrD,OAAQ,UAAW,CAC1CxzC,IAAK,WAAc,OAAO62C,EAAKrD,OAAO4V,QAAU,EAChDpnD,IAAKknD,EAAiB,SAEF,SAApBP,EAAWld,OACXoL,EAAKrD,OAAO5H,YAAa,EACzBiL,EAAKrD,OAAOjJ,YAAa,GAE7B7qC,OAAOy2C,OAAOU,EAAKrD,OAAQT,EAAS4V,GACpC,IAAK,IAAIl/C,EAAI,EAAGA,EAAIi/C,EAASplD,OAAQmG,IACjCotC,EAAKrD,OAAOkV,EAASj/C,KACY,IAA7BotC,EAAKrD,OAAOkV,EAASj/C,KACY,SAA7BotC,EAAKrD,OAAOkV,EAASj/C,IACjCu/B,GAAMiZ,QAAO,SAAUoH,GAAQ,YAA6B1hD,IAAtBkvC,EAAKrD,OAAO6V,EAAqB,IAAG/qB,SAAQ,SAAU+qB,GACxFxS,EAAKrD,OAAO6V,GAAQva,GAAS+H,EAAKrD,OAAO6V,IAAS,IAAIt5B,IAAIsnB,EAC9D,IACAR,EAAKjD,UACAiD,EAAKrD,OAAOnJ,gBACRwM,EAAKrD,OAAOjI,QACQ,WAArBsL,EAAKrD,OAAO/H,OACXoL,EAAKrD,OAAOpJ,QAAQ9mC,SACpBuzC,EAAKrD,OAAOsN,SACZjK,EAAKrD,OAAOvG,aACb,iEAAiEuE,KAAK/H,UAAUC,WACxF,IAASjgC,EAAI,EAAGA,EAAIotC,EAAKrD,OAAO9G,QAAQppC,OAAQmG,IAAK,CACjD,IAAI6/C,EAAazS,EAAKrD,OAAO9G,QAAQjjC,GAAGotC,IAAS,CAAC,EAClD,IAAK,IAAIryC,KAAO8kD,EACRtgB,GAAMhyB,QAAQxS,IAAQ,EACtBqyC,EAAKrD,OAAOhvC,GAAOsqC,GAASwa,EAAW9kD,IAClCurB,IAAIsnB,GACJhzC,OAAOwyC,EAAKrD,OAAOhvC,IAEQ,qBAApBmkD,EAAWnkD,KACvBqyC,EAAKrD,OAAOhvC,GAAO8kD,EAAW9kD,GAE1C,CACKmkD,EAAWpf,gBACZsN,EAAKrD,OAAOjK,cACRma,IAAep/C,UAAY,IAAMuyC,EAAKrD,OAAOjK,eAErDqR,EAAa,gBACjB,CAlzCI2O,GACA3F,IAqpDJ,WAEI,GADA/M,EAAKva,MAAQonB,KACR7M,EAAKva,MAEN,YADAua,EAAKrD,OAAOhJ,aAAa,IAAI4K,MAAM,oCAGvCyB,EAAKva,MAAMgrB,MAAQzQ,EAAKva,MAAM13B,KAC9BiyC,EAAKva,MAAM13B,KAAO,OAClBiyC,EAAKva,MAAM6S,UAAUvpC,IAAI,mBACzBixC,EAAKoC,OAASpC,EAAKva,MACfua,EAAKrD,OAAOlK,WACZuN,EAAKvN,SAAW5N,GAAcmb,EAAKva,MAAMktB,SAAU3S,EAAKrD,OAAOjK,eAC/DsN,EAAKoC,OAASpC,EAAKvN,SACnBuN,EAAKvN,SAAS/M,YAAcsa,EAAKva,MAAMC,YACvCsa,EAAKvN,SAASzL,SAAWgZ,EAAKva,MAAMuB,SACpCgZ,EAAKvN,SAASmgB,SAAW5S,EAAKva,MAAMmtB,SACpC5S,EAAKvN,SAAS4S,SAAWrF,EAAKva,MAAM4f,SACpCrF,EAAKvN,SAAS1kC,KAAO,OACrBiyC,EAAKva,MAAMkB,aAAa,OAAQ,WAC3BqZ,EAAKrD,OAAOzG,QAAU8J,EAAKva,MAAMuT,YAClCgH,EAAKva,MAAMuT,WAAWwX,aAAaxQ,EAAKvN,SAAUuN,EAAKva,MAAMotB,cAEhE7S,EAAKrD,OAAOrK,YACb0N,EAAKoC,OAAOzb,aAAa,WAAY,YACzCqqB,GACJ,CA7qDI8B,GA2mDJ,WACI9S,EAAKoB,cAAgB,GACrBpB,EAAKhL,IAAMgL,EAAKlC,UAAUkC,EAAKrD,OAAO3H,MAAQ,IAAI5mB,KAClD,IAAI2kC,EAAgB/S,EAAKrD,OAAO0E,cACF,UAAxBrB,EAAKva,MAAMktB,UACe,aAAxB3S,EAAKva,MAAMktB,WACX3S,EAAKva,MAAMC,aACXsa,EAAKva,MAAMnyB,QAAU0sC,EAAKva,MAAMC,YAE9Bsa,EAAKva,MAAMnyB,MADX,MAENy/C,GACAjC,EAAgBiC,EAAe/S,EAAKrD,OAAOxJ,YAC/C6M,EAAKoQ,aACDpQ,EAAKoB,cAAc30C,OAAS,EACtBuzC,EAAKoB,cAAc,GACnBpB,EAAKrD,OAAOmC,SACVkB,EAAKrD,OAAOmC,QAAQzwB,UAAY2xB,EAAKhL,IAAI3mB,UACvC2xB,EAAKrD,OAAOmC,QACZkB,EAAKrD,OAAOuC,SACVc,EAAKrD,OAAOuC,QAAQ7wB,UAAY2xB,EAAKhL,IAAI3mB,UACvC2xB,EAAKrD,OAAOuC,QACZc,EAAKhL,IACvBgL,EAAKoE,YAAcpE,EAAKoQ,aAAa7b,cACrCyL,EAAKsE,aAAetE,EAAKoQ,aAAahU,WAClC4D,EAAKoB,cAAc30C,OAAS,IAC5BuzC,EAAKuB,sBAAwBvB,EAAKoB,cAAc,SACxBtwC,IAAxBkvC,EAAKrD,OAAO+F,UACZ1C,EAAKrD,OAAO+F,QAAU1C,EAAKlC,UAAUkC,EAAKrD,OAAO+F,QAAS,aAClC5xC,IAAxBkvC,EAAKrD,OAAOkG,UACZ7C,EAAKrD,OAAOkG,QAAU7C,EAAKlC,UAAUkC,EAAKrD,OAAOkG,QAAS,QAC9D7C,EAAK2C,iBACC3C,EAAKrD,OAAOmC,UACTkB,EAAKrD,OAAOmC,QAAQxE,WAAa,GAC9B0F,EAAKrD,OAAOmC,QAAQxC,aAAe,GACnC0D,EAAKrD,OAAOmC,QAAQzC,aAAe,GAC/C2D,EAAK8C,iBACC9C,EAAKrD,OAAOuC,UACTc,EAAKrD,OAAOuC,QAAQ5E,WAAa,GAC9B0F,EAAKrD,OAAOuC,QAAQ5C,aAAe,GACnC0D,EAAKrD,OAAOuC,QAAQ7C,aAAe,EACnD,CAlpDI2W,GAhBAhT,EAAK+G,MAAQ,CACTC,eAAgB,SAAU5jB,EAAO6vB,GAG7B,YAFc,IAAV7vB,IAAoBA,EAAQ4c,EAAKsE,mBAC1B,IAAP2O,IAAiBA,EAAKjT,EAAKoE,aACjB,IAAVhhB,IAAiB6vB,EAAK,IAAM,GAAKA,EAAK,MAAQ,GAAMA,EAAK,MAAQ,GAC1D,GACJjT,EAAKnD,KAAKlG,YAAYvT,EACjC,GAWC4c,EAAKjD,UAgSd,WACI,IAAImW,EAAWvgB,OAAO/N,SAASqiB,yBAG/B,GAFAjH,EAAKM,kBAAoBzb,GAAc,MAAO,sBAC9Cmb,EAAKM,kBAAkB+E,UAAY,GAC9BrF,EAAKrD,OAAO5H,WAAY,CAGzB,GAFAme,EAASlvB,aA+Rbgc,EAAKsI,SAAWzjB,GAAc,MAAO,oBACrCmb,EAAKwI,aAAe,GACpBxI,EAAKyI,cAAgB,GACrBzI,EAAKuI,aAAe1jB,GAAc,OAAQ,wBAC1Cmb,EAAKuI,aAAanjB,UAAY4a,EAAKrD,OAAO5G,UAC1CiK,EAAK0I,aAAe7jB,GAAc,OAAQ,wBAC1Cmb,EAAK0I,aAAatjB,UAAY4a,EAAKrD,OAAO7H,UAC1CuT,IACAx/C,OAAOC,eAAek3C,EAAM,sBAAuB,CAC/C72C,IAAK,WAAc,OAAO62C,EAAKmT,oBAAsB,EACrDhoD,IAAK,SAAUssC,GACPuI,EAAKmT,uBAAyB1b,IAC9BW,GAAY4H,EAAKuI,aAAc,qBAAsB9Q,GACrDuI,EAAKmT,qBAAuB1b,EAEpC,IAEJ5uC,OAAOC,eAAek3C,EAAM,sBAAuB,CAC/C72C,IAAK,WAAc,OAAO62C,EAAKoT,oBAAsB,EACrDjoD,IAAK,SAAUssC,GACPuI,EAAKoT,uBAAyB3b,IAC9BW,GAAY4H,EAAK0I,aAAc,qBAAsBjR,GACrDuI,EAAKoT,qBAAuB3b,EAEpC,IAEJuI,EAAKiL,mBAAqBjL,EAAKwI,aAAa,GAC5CU,IACOlJ,EAAKsI,WA1TRtI,EAAKqT,eAAiBxuB,GAAc,MAAO,4BACvCmb,EAAKrD,OAAOvG,YAAa,CACzB,IAAIhrC,EAiZhB,WACI40C,EAAKM,kBAAkBhI,UAAUvpC,IAAI,YACrC,IAAIkyC,EAAcpc,GAAc,MAAO,yBACvCoc,EAAYjd,YAAYa,GAAc,OAAQ,oBAAqBmb,EAAKnD,KAAK9F,mBAC7E,IAAIX,EAAcvR,GAAc,MAAO,mBAEvC,OADAoc,EAAYjd,YAAYoS,GACjB,CACH6K,YAAaA,EACb7K,YAAaA,EAErB,CA3ZqBkd,GAAcrS,EAAc71C,EAAG61C,YAAa7K,EAAchrC,EAAGgrC,YACtE4J,EAAKqT,eAAervB,YAAYid,GAChCjB,EAAK5J,YAAcA,EACnB4J,EAAKiB,YAAcA,CACvB,CACAjB,EAAKiM,WAAapnB,GAAc,MAAO,wBACvCmb,EAAKiM,WAAWjoB,YAAY2kB,KACvB3I,EAAKa,gBACNb,EAAKa,cAAgBhc,GAAc,MAAO,kBAC1Cmb,EAAKa,cAAcwE,UAAY,GAEnCoC,IACAzH,EAAKiM,WAAWjoB,YAAYgc,EAAKa,eACjCb,EAAKqT,eAAervB,YAAYgc,EAAKiM,YACrCiH,EAASlvB,YAAYgc,EAAKqT,eAC9B,CACIrT,EAAKrD,OAAOjJ,YACZwf,EAASlvB,YAySjB,WACIgc,EAAKM,kBAAkBhI,UAAUvpC,IAAI,WACjCixC,EAAKrD,OAAO5H,YACZiL,EAAKM,kBAAkBhI,UAAUvpC,IAAI,cACzC,IAAIqjC,EAAWyM,GAAgBmB,EAAKrD,QACpCqD,EAAK4J,cAAgB/kB,GAAc,MAAO,kBAC1Cmb,EAAK4J,cAAcvE,UAAY,EAC/B,IAAIkO,EAAY1uB,GAAc,OAAQ,2BAA4B,KAC9D2uB,EAAYva,GAAkB,iBAAkB,CAChD,aAAc+G,EAAKnD,KAAKxF,gBAE5B2I,EAAK+B,YAAcyR,EAAUptB,qBAAqB,SAAS,GAC3D,IAAIqtB,EAAcxa,GAAkB,mBAAoB,CACpD,aAAc+G,EAAKnD,KAAKvF,kBAE5B0I,EAAKiC,cAAgBwR,EAAYrtB,qBAAqB,SAAS,GAC/D4Z,EAAK+B,YAAYsD,SAAWrF,EAAKiC,cAAcoD,UAAY,EAC3DrF,EAAK+B,YAAYzuC,MAAQikC,GAAIyI,EAAKuB,sBAC5BvB,EAAKuB,sBAAsBjH,WAC3B0F,EAAKrD,OAAOxG,UACR/D,EAASwM,MA5iBvB,SAAuB3b,GACnB,OAAQA,EAAO,IACX,KAAK,EACL,KAAK,GACD,OAAO,GACX,QACI,OAAOA,EAAO,GAE1B,CAqiBcywB,CAActhB,EAASwM,QACjCoB,EAAKiC,cAAc3uC,MAAQikC,GAAIyI,EAAKuB,sBAC9BvB,EAAKuB,sBAAsBjF,aAC3BlK,EAASwJ,SACfoE,EAAK+B,YAAYpb,aAAa,OAAQqZ,EAAKrD,OAAOnI,cAAc+O,YAChEvD,EAAKiC,cAActb,aAAa,OAAQqZ,EAAKrD,OAAOhI,gBAAgB4O,YACpEvD,EAAK+B,YAAYpb,aAAa,MAAOqZ,EAAKrD,OAAOxG,UAAY,IAAM,KACnE6J,EAAK+B,YAAYpb,aAAa,MAAOqZ,EAAKrD,OAAOxG,UAAY,KAAO,MACpE6J,EAAK+B,YAAYpb,aAAa,YAAa,KAC3CqZ,EAAKiC,cAActb,aAAa,MAAO,KACvCqZ,EAAKiC,cAActb,aAAa,MAAO,MACvCqZ,EAAKiC,cAActb,aAAa,YAAa,KAC7CqZ,EAAK4J,cAAc5lB,YAAYwvB,GAC/BxT,EAAK4J,cAAc5lB,YAAYuvB,GAC/BvT,EAAK4J,cAAc5lB,YAAYyvB,GAC3BzT,EAAKrD,OAAOxG,WACZ6J,EAAK4J,cAActR,UAAUvpC,IAAI,YACrC,GAAIixC,EAAKrD,OAAOlJ,cAAe,CAC3BuM,EAAK4J,cAActR,UAAUvpC,IAAI,cACjC,IAAI4kD,EAAc1a,GAAkB,oBACpC+G,EAAKwC,cAAgBmR,EAAYvtB,qBAAqB,SAAS,GAC/D4Z,EAAKwC,cAAclvC,MAAQikC,GAAIyI,EAAKuB,sBAC9BvB,EAAKuB,sBAAsBlF,aAC3BjK,EAAS2I,SACfiF,EAAKwC,cAAc7b,aAAa,OAAQqZ,EAAKiC,cAAcva,aAAa,SACxEsY,EAAKwC,cAAc7b,aAAa,MAAO,KACvCqZ,EAAKwC,cAAc7b,aAAa,MAAO,MACvCqZ,EAAKwC,cAAc7b,aAAa,YAAa,KAC7CqZ,EAAK4J,cAAc5lB,YAAYa,GAAc,OAAQ,2BAA4B,MACjFmb,EAAK4J,cAAc5lB,YAAY2vB,EACnC,CACK3T,EAAKrD,OAAOxG,YACb6J,EAAK9I,KAAOrS,GAAc,OAAQ,kBAAmBmb,EAAKnD,KAAK3F,KAAKM,IAAKwI,EAAKuB,sBACxEvB,EAAK+B,YAAYzuC,MACjB0sC,EAAKrD,OAAOvJ,aAAe,MACjC4M,EAAK9I,KAAK0c,MAAQ5T,EAAKnD,KAAK5F,YAC5B+I,EAAK9I,KAAKmO,UAAY,EACtBrF,EAAK4J,cAAc5lB,YAAYgc,EAAK9I,OAExC,OAAO8I,EAAK4J,aAChB,CAtW6BiK,IAEzBzb,GAAY4H,EAAKM,kBAAmB,YAAkC,UAArBN,EAAKrD,OAAO/H,MAC7DwD,GAAY4H,EAAKM,kBAAmB,WAAmC,IAAxBN,EAAKrD,OAAOhgB,SAC3Dyb,GAAY4H,EAAKM,kBAAmB,aAAcN,EAAKrD,OAAO1G,WAAa,GAC3E+J,EAAKM,kBAAkBtc,YAAYkvB,GACnC,IAAIY,OAAwChjD,IAAzBkvC,EAAKrD,OAAOoX,eACOjjD,IAAlCkvC,EAAKrD,OAAOoX,SAASC,SACzB,IAAIhU,EAAKrD,OAAOjI,QAAUsL,EAAKrD,OAAOzG,UAClC8J,EAAKM,kBAAkBhI,UAAUvpC,IAAIixC,EAAKrD,OAAOjI,OAAS,SAAW,UACjEsL,EAAKrD,OAAOjI,UACPof,GAAgB9T,EAAKF,QAAQ9G,WAC9BgH,EAAKF,QAAQ9G,WAAWwX,aAAaxQ,EAAKM,kBAAmBN,EAAKoC,OAAOyQ,kBAC3C/hD,IAAzBkvC,EAAKrD,OAAOoX,UACjB/T,EAAKrD,OAAOoX,SAAS/vB,YAAYgc,EAAKM,oBAE1CN,EAAKrD,OAAOzG,QAAQ,CACpB,IAAIkD,EAAUvU,GAAc,MAAO,qBAC/Bmb,EAAKF,QAAQ9G,YACbgH,EAAKF,QAAQ9G,WAAWwX,aAAapX,EAAS4G,EAAKF,SACvD1G,EAAQpV,YAAYgc,EAAKF,SACrBE,EAAKvN,UACL2G,EAAQpV,YAAYgc,EAAKvN,UAC7B2G,EAAQpV,YAAYgc,EAAKM,kBAC7B,CAECN,EAAKrD,OAAOzG,QAAW8J,EAAKrD,OAAOjI,cACV5jC,IAAzBkvC,EAAKrD,OAAOoX,SACP/T,EAAKrD,OAAOoX,SACZphB,OAAO/N,SAASyhB,MAAMriB,YAAYgc,EAAKM,kBACrD,CAtVQ2T,GAsLR,WACQjU,EAAKrD,OAAOtG,MACZ,CAAC,OAAQ,QAAS,SAAU,SAAS5O,SAAQ,SAAUysB,GACnD/b,MAAMoH,UAAU9X,QAAQp6B,KAAK2yC,EAAKF,QAAQnY,iBAAiB,SAAWusB,EAAM,MAAM,SAAUxQ,GACxF,OAAOjD,EAAKiD,EAAI,QAAS1D,EAAKkU,GAClC,GACJ,IAEJ,GAAIlU,EAAKjD,SAEL,YA6+CR,WACI,IAAIoX,EAAYnU,EAAKrD,OAAOjJ,WACtBsM,EAAKrD,OAAO5H,WACR,OACA,iBACJ,OACNiL,EAAKmQ,YAActrB,GAAc,QAASmb,EAAKva,MAAMh4B,UAAY,qBACjEuyC,EAAKmQ,YAAY9K,SAAW,EAC5BrF,EAAKmQ,YAAYpiD,KAAOomD,EACxBnU,EAAKmQ,YAAYnpB,SAAWgZ,EAAKva,MAAMuB,SACvCgZ,EAAKmQ,YAAYyC,SAAW5S,EAAKva,MAAMmtB,SACvC5S,EAAKmQ,YAAYzqB,YAAcsa,EAAKva,MAAMC,YAC1Csa,EAAKyR,gBACa,mBAAd0C,EACM,gBACc,SAAdA,EACI,QACA,QACVnU,EAAKoB,cAAc30C,OAAS,IAC5BuzC,EAAKmQ,YAAYiE,aAAepU,EAAKmQ,YAAY78C,MAAQ0sC,EAAK9C,WAAW8C,EAAKoB,cAAc,GAAIpB,EAAKyR,kBAErGzR,EAAKrD,OAAOmC,UACZkB,EAAKmQ,YAAYj3C,IAAM8mC,EAAK9C,WAAW8C,EAAKrD,OAAOmC,QAAS,UAC5DkB,EAAKrD,OAAOuC,UACZc,EAAKmQ,YAAY91C,IAAM2lC,EAAK9C,WAAW8C,EAAKrD,OAAOuC,QAAS,UAC5Dc,EAAKva,MAAMiC,aAAa,UACxBsY,EAAKmQ,YAAYhxC,KAAOo9B,OAAOyD,EAAKva,MAAMiC,aAAa,UAC3DsY,EAAKva,MAAM13B,KAAO,cACI+C,IAAlBkvC,EAAKvN,WACLuN,EAAKvN,SAAS1kC,KAAO,UACzB,IACQiyC,EAAKva,MAAMuT,YACXgH,EAAKva,MAAMuT,WAAWwX,aAAaxQ,EAAKmQ,YAAanQ,EAAKva,MAAMotB,YACxE,CACA,MAAOznD,GAAM,CACbq1C,EAAKT,EAAKmQ,YAAa,UAAU,SAAU/lD,GACvC41C,EAAK7L,QAAQsF,GAAervC,GAAGkJ,OAAO,EAAO0sC,EAAKyR,iBAClD1N,EAAa,YACbA,EAAa,UACjB,GACJ,CAthDQsQ,GAGJ,IAAIC,EAAkB5c,GAAS8U,EAAU,IACzCxM,EAAKuC,iBAAmB7K,GAASoM,EApPf,KAqPd9D,EAAKa,gBAAkB,oBAAoBlG,KAAK/H,UAAUC,YAC1D4N,EAAKT,EAAKa,cAAe,aAAa,SAAUz2C,GACnB,UAArB41C,EAAKrD,OAAO/H,MACZiR,EAAYpM,GAAervC,GACnC,IACJq2C,EAAKT,EAAKoC,OAAQ,UAAW/M,QACEvkC,IAA3BkvC,EAAKM,mBACLG,EAAKT,EAAKM,kBAAmB,UAAWjL,GAEvC2K,EAAKrD,OAAOjI,QAAWsL,EAAKrD,OAAOzG,QACpCuK,EAAK9N,OAAQ,SAAU2hB,QACCxjD,IAAxB6hC,OAAO4hB,aACP9T,EAAK9N,OAAO/N,SAAU,aAAcwkB,GAEpC3I,EAAK9N,OAAO/N,SAAU,YAAawkB,GACvC3I,EAAK9N,OAAO/N,SAAU,QAASwkB,EAAe,CAAEoL,SAAS,KAC1B,IAA3BxU,EAAKrD,OAAO3J,aACZyN,EAAKT,EAAKoC,OAAQ,QAASpC,EAAKjwB,MAChC0wB,EAAKT,EAAKoC,OAAQ,QAASpC,EAAKjwB,YAETjf,IAAvBkvC,EAAKa,gBACLJ,EAAKT,EAAKsI,SAAU,QAASoJ,IAC7BjR,EAAKT,EAAKsI,SAAU,CAAC,QAAS,aAAchF,GAC5C7C,EAAKT,EAAKa,cAAe,QAASiK,IAEtC,QAA2Bh6C,IAAvBkvC,EAAK4J,oBACkB94C,IAAvBkvC,EAAKiC,oBACgBnxC,IAArBkvC,EAAK+B,YAA2B,CAChC,IAAI0S,EAAU,SAAUrqD,GACpB,OAAOqvC,GAAervC,GAAGumD,QAC7B,EACAlQ,EAAKT,EAAK4J,cAAe,CAAC,aAAczI,GACxCV,EAAKT,EAAK4J,cAAe,OAAQzI,EAAY,CAAEqT,SAAS,IACxD/T,EAAKT,EAAK4J,cAAe,QAASlF,GAClCjE,EAAK,CAACT,EAAK+B,YAAa/B,EAAKiC,eAAgB,CAAC,QAAS,SAAUwS,QACtC3jD,IAAvBkvC,EAAKwC,eACL/B,EAAKT,EAAKwC,cAAe,SAAS,WAAc,OAAOxC,EAAKwC,eAAiBxC,EAAKwC,cAAcmO,QAAU,SAC5F7/C,IAAdkvC,EAAK9I,MACLuJ,EAAKT,EAAK9I,KAAM,SAAS,SAAU9sC,GAC/B+2C,EAAW/2C,EACf,GAER,CACI41C,EAAKrD,OAAOrK,YACZmO,EAAKT,EAAKoC,OAAQ,OAAQgI,EAElC,CAjPIsK,IACI1U,EAAKoB,cAAc30C,QAAUuzC,EAAKrD,OAAO5H,cACrCiL,EAAKrD,OAAOjJ,YACZ2P,EAAiBrD,EAAKrD,OAAO5H,WAAaiL,EAAKuB,2BAAwBzwC,GAE3EwxC,GAAY,IAEhB5B,IACA,IAAIiU,EAAW,iCAAiCha,KAAK/H,UAAUC,YAC1DmN,EAAKjD,UAAY4X,GAClBlI,IAEJ1I,EAAa,UACjB,CA61DA6Q,GACO5U,CACX,CACA,SAAS6U,GAAWC,EAAUnY,GAK1B,IAJA,IAAIoY,EAAQ5c,MAAMoH,UAAUpZ,MACvB94B,KAAKynD,GACL1J,QAAO,SAAU1rC,GAAK,OAAOA,aAAas1C,WAAa,IACxDC,EAAY,GACPriD,EAAI,EAAGA,EAAImiD,EAAMtoD,OAAQmG,IAAK,CACnC,IAAI+lC,EAAOoc,EAAMniD,GACjB,IACI,GAA0C,OAAtC+lC,EAAKjR,aAAa,gBAClB,cACoB52B,IAApB6nC,EAAKkc,aACLlc,EAAKkc,WAAWvE,UAChB3X,EAAKkc,gBAAa/jD,GAEtB6nC,EAAKkc,WAAahV,GAAkBlH,EAAMgE,GAAU,CAAC,GACrDsY,EAAUvrD,KAAKivC,EAAKkc,WACxB,CACA,MAAOzqD,GACHypC,QAAQ8F,MAAMvvC,EAClB,CACJ,CACA,OAA4B,IAArB6qD,EAAUxoD,OAAewoD,EAAU,GAAKA,CACnD,CAC2B,qBAAhBD,aACmB,qBAAnBE,gBACa,qBAAbC,WACPD,eAAe3V,UAAUW,UAAYiV,SAAS5V,UAAUW,UAAY,SAAUvD,GAC1E,OAAOkY,GAAW3rD,KAAMyzC,EAC5B,EACAqY,YAAYzV,UAAUW,UAAY,SAAUvD,GACxC,OAAOkY,GAAW,CAAC3rD,MAAOyzC,EAC9B,GAEJ,IAAIuD,GAAY,SAAUn3B,EAAU4zB,GAChC,MAAwB,kBAAb5zB,EACA8rC,GAAWliB,OAAO/N,SAAS+C,iBAAiB5e,GAAW4zB,GAEzD5zB,aAAoBqsC,KAClBP,GAAW,CAAC9rC,GAAW4zB,GAGvBkY,GAAW9rC,EAAU4zB,EAEpC,EACAuD,GAAUC,cAAgB,CAAC,EAC3BD,GAAU8M,MAAQ,CACdqI,GAAIhW,GAAS,CAAC,EAAGe,IACjB6M,QAAS5N,GAAS,CAAC,EAAGe,KAE1BF,GAAUoV,SAAW,SAAUzY,GAC3BqD,GAAU8M,MAAMC,QAAU5N,GAASA,GAAS,CAAC,EAAGa,GAAU8M,MAAMC,SAAUpQ,EAC9E,EACAqD,GAAUqV,YAAc,SAAU5Y,GAC9BuD,GAAUC,cAAgBd,GAASA,GAAS,CAAC,EAAGa,GAAUC,eAAgBxD,EAC9E,EACAuD,GAAUpC,UAAYT,GAAiB,CAAC,GACxC6C,GAAUhD,WAAaT,GAAoB,CAAC,GAC5CyD,GAAU1B,aAAeA,GACH,qBAAXgX,QAA+C,qBAAdA,OAAO7d,KAC/C6d,OAAO7d,GAAGuI,UAAY,SAAUvD,GAC5B,OAAOkY,GAAW3rD,KAAMyzC,EAC5B,GAEJvuB,KAAKmxB,UAAUkW,QAAU,SAAU1U,GAC/B,OAAO,IAAI3yB,KAAKllB,KAAKqrC,cAAerrC,KAAKkzC,WAAYlzC,KAAKkrC,WAA6B,kBAAT2M,EAAoBxF,SAASwF,EAAM,IAAMA,GAC3H,EACsB,qBAAXpO,SACPA,OAAOuN,UAAYA,IAERA,UC56DT,MAAOwV,WAA0B7tB,KAQ5B9+B,YAGTC,MAAMD,YAGN,MAAM+/B,EAAWvE,KAAS36B,IAAIV,KAAKM,MAAO,CACzCu6B,QAAS76B,KACT8zB,OAAQ9zB,KAAK+V,WAAW,YAEzB/V,KAAKyD,WAAW,WAAYm8B,GAE5BA,EAAS5+B,OAAOC,GAAG,UAAWw7B,IAC7Bz8B,KAAKiC,IAAI,UAAU,GACnBjC,KAAKysD,eAAe,IAGrB7sB,EAAS5+B,OAAOC,GAAG,UAAWw7B,IAC7Bz8B,KAAKiC,IAAI,UAAU,EAAM,IAG1BjC,KAAKiB,GAAG,UAAW89B,IACdA,EACH/+B,KAAK6kB,YAAW,KACf+a,EAASx7B,MAAM,GACb,IAGHw7B,EAAS97B,M,IAIX,MAAMmD,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,6BAElCvE,KAAKC,IAAI,iBAAiB,IAC7BD,KAAK0sD,kBAEN1sD,KAAK2sD,eACN,CAEUA,gBACT,MACMnuC,EADWxe,KAAK+V,WAAW,YACNA,WAAW,aAEhCu5B,EAAU5T,SAASC,cAAc,OACvC2T,EAAQ/qC,UAAY,eACpBia,EAAUsc,YAAYwU,GAGtB,MAAMsd,EAAalxB,SAASC,cAAc,OAC1CixB,EAAWroD,UAAY,kBACvB+qC,EAAQxU,YAAY8xB,GAEpB,MAAMC,EAAYnxB,SAASC,cAAc,OACzCkxB,EAAUtoD,UAAY,iBACtBqoD,EAAW9xB,YAAY+xB,GAEvB,MAAMC,EAAYpxB,SAASC,cAAc,OACzCmxB,EAAUvoD,UAAY,iBACtBuoD,EAAU5wB,UAAYl8B,KAAKM,MAAMqE,SAASooD,UAAU,eAAWnlD,EAAW,IAC1EilD,EAAU/xB,YAAYgyB,GAEtB,MAAME,EAAYtxB,SAASC,cAAc,SACzCqxB,EAAUnoD,KAAO,OACjBgoD,EAAU/xB,YAAYkyB,GACtBhtD,KAAKyD,WAAW,YAAaupD,GAG7B,MAAMC,EAAWvxB,SAASC,cAAc,OACxCsxB,EAAS1oD,UAAY,kBACrB+qC,EAAQxU,YAAYmyB,GAEpB,MAAMC,EAAUxxB,SAASC,cAAc,OACvCuxB,EAAQ3oD,UAAY,iBACpB0oD,EAASnyB,YAAYoyB,GAErB,MAAMC,EAAUzxB,SAASC,cAAc,OACvCwxB,EAAQ5oD,UAAY,iBACpB4oD,EAAQjxB,UAAYl8B,KAAKM,MAAMqE,SAASooD,UAAU,aAASnlD,EAAW,IACtEslD,EAAQpyB,YAAYqyB,GAEpB,MAAMC,EAAU1xB,SAASC,cAAc,SACvCyxB,EAAQvoD,KAAO,OACfqoD,EAAQpyB,YAAYsyB,GACpBptD,KAAKyD,WAAW,UAAW2pD,GAG3B,MAAMC,EAAertD,KAAKstD,mBAEpBC,EAAavW,GAAUgW,EAAW,CACvCxhB,QAAQ,EACRqf,SAAU+B,EACVxjB,YAAY,EACZxiB,OAAQymC,EACRrZ,WAAajJ,GACL/qC,KAAKwtD,YAAYziB,GAEzB6J,UAAY7J,GACJ/qC,KAAKytD,WAAW1iB,KAIzB/qC,KAAKyD,WAAW,aAAc8pD,GAE9B,MAAMG,EAAW1W,GAAUoW,EAAS,CACnC5hB,QAAQ,EACRqf,SAAUoC,EACV7jB,YAAY,EACZxiB,OAAQymC,EACRrZ,WAAajJ,GACL/qC,KAAKwtD,YAAYziB,GAEzB6J,UAAY7J,GACJ/qC,KAAKytD,WAAW1iB,KAIzB/qC,KAAKyD,WAAW,WAAYiqD,GAI5B,MAAMC,EAAUjyB,SAASC,cAAc,OACvCgyB,EAAQppD,UAAY,eACpBia,EAAUsc,YAAY6yB,GAEtB,MAAMC,EAAgBlyB,SAASC,cAAc,OAC7CiyB,EAAcrpD,UAAY,kBAC1Bia,EAAUsc,YAAY8yB,GAEtB,MAAMC,EAAanyB,SAASC,cAAc,SAC1CkyB,EAAWhpD,KAAO,SAClBgpD,EAAWzjD,MAAQpK,KAAKM,MAAMqE,SAASC,aAAa,SACpDipD,EAAWtpD,UAAY,qCACvBqpD,EAAc9yB,YAAY+yB,GAE1B,MAAMpsD,EAAQzB,KAAK8tD,WAEnBrsD,EAAMsO,UAAU,gBAAgB,KAC3B/P,KAAK+V,WAAW,cACnB/V,KAAKysD,gBACLzsD,KAAK+tD,e,IAIPtsD,EAAMsO,UAAU,gBAAgB,KAC3B/P,KAAK+V,WAAW,YACnB/V,KAAKysD,gBACLzsD,KAAK+tD,e,IAIPtsD,EAAMsO,UAAU,YAAY,KAC3B/P,KAAKguD,gBAAgB,IAGtBvsD,EAAMsO,UAAU,YAAY,KAC3B/P,KAAKguD,gBAAgB,IAGtBhuD,KAAKm7B,WAAW36B,KAAKy6B,oBAAwB4yB,EAAY,SAAS,KACjE,MAAMl6B,EAAO3zB,KAAKytD,WAAWT,EAAU5iD,OACjCspB,EAAK1zB,KAAKytD,WAAWL,EAAQhjD,OACnCspB,EAAGsX,SAAS,GAAI,GAAI,IACpBhrC,KAAKyD,WAAW,WAAYkwB,GAC5B3zB,KAAKyD,WAAW,SAAUiwB,GAC1BjyB,EAAMwsD,YAAYt6B,EAAMD,GACxB1zB,KAAK+tD,eACL/tD,KAAKiC,IAAI,UAAU,GAEnB,MAAM4C,EAAO,gBACT7E,KAAKgB,OAAOujB,UAAU1f,IACzB7E,KAAKgB,OAAOwjB,SAAS3f,EAAM,CAC1BA,KAAMA,EACNkS,OAAQ/W,KACRkuD,SAAUv6B,EACVw6B,OAAQz6B,G,KAKX,MAAM06B,EAAe1yB,SAASC,cAAc,SAC5CyyB,EAAavpD,KAAO,SACpBupD,EAAahkD,MAAQpK,KAAKM,MAAMqE,SAASC,aAAa,UACtDwpD,EAAa7pD,UAAY,sCACzBqpD,EAAc9yB,YAAYszB,GAE1BpuD,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBmzB,EAAc,SAAS,KACnEpuD,KAAKiC,IAAI,UAAU,EAAM,IAG3B,CAEUgkC,kBACT,OAAO7G,KAAWC,QAAQ,WAC3B,CAEO3E,gBACN56B,MAAM46B,eACP,CAEU+xB,gBACT,MAAMhrD,EAAQzB,KAAK8tD,WACb99C,EAAMvO,EAAMsU,WAAW,eAAgB,GACvC5E,EAAM1P,EAAMsU,WAAW,eAAgB,GAE7C,IAAK/F,IAAQmB,EACZ,OAGD,MAAMwiB,EAAO,IAAIzO,KAAKlV,EAAM,GACtB0jB,EAAK,IAAIxO,KAAK/T,EAAM,GAE1BnR,KAAKyD,WAAW,WAAYkwB,GAC5B3zB,KAAKyD,WAAW,SAAUiwB,GAE1B1zB,KAAK+V,WAAW,aAAa3L,MAAQpK,KAAKwtD,YAAY75B,GACtD3zB,KAAK+V,WAAW,WAAW3L,MAAQpK,KAAKwtD,YAAY95B,GAEpD,MAAM65B,EAAavtD,KAAK+V,WAAW,cAC7B6/B,EAAU2X,EAAW9Z,OAAOmC,SAC7BA,GAAYA,GAAWjiB,EAC3B45B,EAAWtiB,QAAQtX,GAGnB45B,EAAWtiB,QAAQ2K,GAGpB,MAAM8X,EAAW1tD,KAAK+V,WAAW,YAC3BigC,EAAU0X,EAASja,OAAOuC,SAC3BA,GAAYA,GAAWtiB,EAC3Bg6B,EAASziB,QAAQvX,GAGjBg6B,EAASziB,QAAQ+K,EAEnB,CAEUgY,iBACT,MAAMvsD,EAAQzB,KAAK8tD,WAEblY,EAAU51C,KAAKC,IAAI,WACnB+1C,EAAUh2C,KAAKC,IAAI,WACnBytD,EAAW1tD,KAAK+V,WAAW,YAC3Bw3C,EAAavtD,KAAK+V,WAAW,cAEnC,GAAe,QAAX6/B,EAAmB,CACtB,MAAM5lC,EAAMvO,EAAMsU,WAAW,YACzB/F,IACHu9C,EAAWtrD,IAAI,UAAW,IAAIijB,KAAKlV,EAAM,IACzC09C,EAASzrD,IAAI,UAAW,IAAIijB,KAAKlV,EAAM,I,MAGhC4lC,aAAmB1wB,MAC3BqoC,EAAWtrD,IAAI,UAAW2zC,GAC1B8X,EAASzrD,IAAI,UAAW2zC,KAGxB2X,EAAWtrD,IAAI,eAAW2F,GAC1B8lD,EAASzrD,IAAI,eAAW2F,IAGzB,GAAe,QAAXouC,EAAmB,CACtB,MAAM7kC,EAAM1P,EAAMsU,WAAW,YAAc,EACvC5E,IACHo8C,EAAWtrD,IAAI,UAAW,IAAIijB,KAAK/T,IACnCu8C,EAASzrD,IAAI,UAAW,IAAIijB,KAAK/T,I,MAG1B6kC,aAAmB9wB,MAC3BqoC,EAAWtrD,IAAI,UAAW+zC,GAC1B0X,EAASzrD,IAAI,UAAW+zC,KAGxBuX,EAAWtrD,IAAI,eAAW2F,GAC1B8lD,EAASzrD,IAAI,eAAW2F,GAE1B,CAEUmmD,eACT,MAAMp6B,EAAO3zB,KAAK+V,WAAW,YACvB2d,EAAK1zB,KAAK+V,WAAW,UAC3B,IAAI+b,EAAQ,GAEXA,EADG6B,GAAQD,EACH1zB,KAAKwtD,YAAY75B,GAAQ,OAAS3zB,KAAKwtD,YAAY95B,GAGnD1zB,KAAKM,MAAMqE,SAASC,aAAa,cAE1C5E,KAAKiC,IAAI,OAAQ6vB,EAClB,CAEU07B,YAAYziB,GACrB,OAAO/qC,KAAKM,MAAM+tD,cAAc9lD,OAAOwiC,EAAM/qC,KAAKsuD,kBAAkB,EACrE,CAEUb,WAAW1iB,GACpB,OAAO/qC,KAAKM,MAAM+tD,cAAc5tB,MAAMsK,EAAM/qC,KAAKsuD,iBAClD,CAEUA,iBACT,MAAM/lD,EAASvI,KAAKC,IAAI,aAAcD,KAAKM,MAAM+tD,cAAcpuD,IAAI,eACnE,OAAO8F,WAAewC,GAAUA,EAAS,YAC1C,CAEUulD,WAIT,OAHmB9tD,KAAKC,IAAI,cACHM,OAAOgd,SAAS,GAChBzb,MAAMyb,SAAS,EAEzC,CAEU+vC,mBACT,MAAM18C,EAAI5Q,KAAKM,MAAMqE,SACrB,MAAO,CACN0oC,SAAU,CACTC,UAAW,CACV18B,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,QAEbxf,SAAU,CACT38B,EAAEm8C,UAAU,UACZn8C,EAAEm8C,UAAU,UACZn8C,EAAEm8C,UAAU,WACZn8C,EAAEm8C,UAAU,aACZn8C,EAAEm8C,UAAU,YACZn8C,EAAEm8C,UAAU,UACZn8C,EAAEm8C,UAAU,cAGdvf,OAAQ,CACPF,UAAW,CACV18B,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,cACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,QAEbxf,SAAU,CACT38B,EAAEm8C,UAAU,WACZn8C,EAAEm8C,UAAU,YACZn8C,EAAEm8C,UAAU,SACZn8C,EAAEm8C,UAAU,SACZn8C,EAAEm8C,UAAU,OACZn8C,EAAEm8C,UAAU,QACZn8C,EAAEm8C,UAAU,QACZn8C,EAAEm8C,UAAU,UACZn8C,EAAEm8C,UAAU,aACZn8C,EAAEm8C,UAAU,WACZn8C,EAAEm8C,UAAU,YACZn8C,EAAEm8C,UAAU,cAGdpmC,eAAgB/V,EAAEm8C,UAAU,kBAC5Brf,QAAS98B,EAAE29C,cAAc,YACzB3gB,eAAgB,IAAMh9B,EAAEhM,aAAa,MAAQ,IAC7CipC,iBAAkBj9B,EAAEhM,aAAa,MACjCkpC,YAAal9B,EAAEhM,aAAa,uBAC5BmpC,YAAan9B,EAAEhM,aAAa,mBAC5BopC,KAAM,CAACp9B,EAAEm8C,UAAU,MAAOn8C,EAAEm8C,UAAU,OACtC9e,cAAer9B,EAAEhM,aAAa,QAC9BspC,eAAgBt9B,EAAEhM,aAAa,SAC/BupC,cAAev9B,EAAEhM,aAAa,QAC9BwpC,gBAAiBx9B,EAAEhM,aAAa,UAChCqoC,WAAW,EAEb,CAOUyf,kBACT,MAAM8B,EAAKxuD,KAAKM,MAAM04B,gBAEhBy1B,EAAUD,EAAGvuD,IAAI,iBAAkByuD,QACnCC,EAAWH,EAAGvuD,IAAI,sBAAuByuD,QACzCh5C,EAAO84C,EAAGvuD,IAAI,QAASyuD,QACvBE,EAASJ,EAAGvuD,IAAI,yBAA0ByuD,QAC1C9sB,EAAK4sB,EAAGvuD,IAAI,cAAeyuD,QAEjC1uD,KAAKm7B,WAAW36B,KAAK,IAAIquD,cAAW,KAAM,kfAqB5BjtB,45CAiDUgtB,k5BAyCDA,uEAGAhtB,2KAOHgtB,uEAGAhtB,oUAiBXlsB,eACDA,6hBAwBCA,eACDA,o8BA4CCi5C,2HAIDA,+vFA0Hej5C,gGAGHA,wtDAiEAksB,utBAiCXlsB,gxCAwDsBk5C,sCACAA,2LAQtBl5C,+5BAiCKi5C,uBACEA,kDAGAA,qFAIAA,qBACFA,gBACL/sB,moBAoBK6sB,0EAGL7sB,uBACO6sB,wiBAegBA,uCACAA,gQASDE,cAAqBA,sCACrBA,cAAqBA,gjBAoBrBF,cAAoBA,sCACpBA,cAAoBA,2PAarBG,qCACAA,w2CA+DPl5C,uFAGHA,sYAmBXA,ulBAyBAA,45CA8DWi5C,w3BA2BJA,oGAGOA,yMAKHA,yQAQJF,syBAkCbzuD,KAAKM,MAAMwuD,OACf,EAlwCAnvD,OAAAC,eAAA4sD,GAAA,a,gDAAkC,sBAClC7sD,OAAAC,eAAA4sD,GAAA,c,gDAA0C7tB,KAAat6B,WAAWC,OAAO,CAACkoD,GAAkBjoD,c,aCFvF,MAAOwqD,WAAuBpwB,KAApCj/B,c,oBAQCC,OAAAC,eAAA,wB,yDACAD,OAAAC,eAAA,wB,wDA4UD,CA1UWC,YACTC,MAAMD,YAEN,MAAMoH,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAO1C,UAAY0C,EAAO1C,UAAY,qBAEtCvE,KAAKgvD,oBACN,CAEUA,qBACT,MAAMxwC,EAAYxe,KAAK+V,WAAW,SAClCyI,EAAUsd,MAAM3P,QAAU,GAE1B,MAAM8iC,EAAUjvD,KAAKC,IAAI,UAAW,IAC9BivD,EAAOlvD,KAAK8tD,WAClBoB,EAAKn/C,UAAU,OAAO,IAAM/P,KAAKmvD,2BACjCD,EAAKn/C,UAAU,OAAO,IAAM/P,KAAKmvD,2BACjCplD,OAAYklD,GAAU/lD,IACrB,MAAMjC,EAASy0B,SAASC,cAAc,KACtC10B,EAAOi1B,UAAYhzB,EAAOxE,MAASwE,EAAO6d,SAASqoC,cAAgBlmD,EAAOyO,OAAS,IACnF1Q,EAAO1C,UAAY,gBACnB0C,EAAOw2B,aAAa,cAAev0B,EAAO6d,UAAY7d,EAAOyO,OAAS,KACtE6G,EAAUsc,YAAY7zB,GAEtBjH,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBh0B,EAAQ,SAAUw1B,IAC9Dz8B,KAAKyD,WAAW,cAAc,GAC9BzD,KAAKqvD,sBACLrvD,KAAKsvD,aAAapmD,GAClBlJ,KAAKyD,WAAW,cAAc,GAC9Bw3B,YAAgBh0B,EAAQ,mBACxB,MAAMsoD,EAAUvvD,KAAK+V,WAAW,gBAC5Bw5C,GACHA,EAAQrjD,UAETlM,KAAKyD,WAAW,eAAgBzD,KAAK6kB,YAAW,IAAM7kB,KAAKyD,WAAW,cAAc,IAAQyrD,EAAKjvD,IAAI,wBAAyB,KAAQ,KAAK,IACzI,IAGAg7B,YAAgB,mBACnBj7B,KAAKm7B,WAAW36B,KAAKy6B,oBAAwBS,SAAU,WAAYmC,IAClE,GAAI79B,KAAKi+B,eAAgB,CACxB,MAAMh3B,EAASjH,KAAK+V,WAAW,UAC/B,GAAI2lB,SAASwC,gBAAkBxC,SAASwC,gBAAkBj3B,GAAUg0B,YAAgBh0B,EAAQy0B,SAASwC,gBACpG,IAA8C,IAA1C,CAAC,GAAI,GAAI,GAAI,IAAIjnB,QAAQ4mB,EAAGM,SAAiB,CAChD,MAAME,EAAoB,IAAdR,EAAGM,SAA+B,IAAdN,EAAGM,SAAiB,EAAI,EAClDxJ,EAAQ30B,KAAKwvD,oBACb7Q,EAAWngC,EAAUigB,iBAAiB,wBAC5C,IAAIvqB,GAAiB,EACjByqC,EAASp7C,OAAS,GAErBoxB,EAAM4J,SAAQ,CAACpG,EAAM1zB,KAChB0zB,IAASwmB,EAASxmB,KAAK,KAC1BjkB,EAAQzP,E,IAIXyP,GAASmqB,EACLnqB,EAAQ,EACXA,EAAQygB,EAAMpxB,OAAS,EAEf2Q,GAASygB,EAAMpxB,SACvB2Q,EAAQ,GAET+mB,SAAatG,EAAMwD,KAAKjkB,G,MAEF,IAAd2pB,EAAGM,SAEVzC,SAASwC,cAA8BE,O,MAO7Cp+B,KAAKq8B,sBAEN,CAEUgzB,sBACT,IAAsC,IAAlCrvD,KAAK+V,WAAW,cAAwB,CAC3C,MACM43C,EADY3tD,KAAK+V,WAAW,SACR05C,uBAAuB,mBACjD1lD,OAAY4jD,GAAUzyC,IACrB+f,eAAgC/f,EAAG,kBAAkB,IAGtD,IAAIg0C,EAAOlvD,KAAK+V,WAAW,QACtBm5C,IACJA,EAAOlvD,KAAK8tD,WACZ9tD,KAAKyD,WAAW,OAAQyrD,GACxBlvD,KAAKm7B,WAAW36B,KAAK,IAAIkvD,KAAc,CACtCR,EAAMjuD,GAAG,SAAS,IAAMjB,KAAKqvD,wBAC7BH,EAAMjuD,GAAG,OAAO,IAAMjB,KAAKqvD,2B,CAI/B,CAEUF,yBACT,GAAInvD,KAAKC,IAAI,mBAAoB,CAChC,IAAIivD,EAAOlvD,KAAK+V,WAAW,QAC3B,MACM43C,EADY3tD,KAAK+V,WAAW,SACRmnB,qBAAqB,KAC/C,IAAKgyB,EAAM,CACVA,EAAOlvD,KAAK8tD,WACZ,MAAM99C,EAAMk/C,EAAMn5C,WAAW,MAAO,GAC9B5E,EAAM+9C,EAAMn5C,WAAW,MAAO,GACpC,GAAI/F,GAAOmB,EAAK,CACf,MAAMqnB,EAAOrnB,EAAMnB,EACbi/C,EAAUjvD,KAAKC,IAAI,UAAW,IACpC8J,OAAYklD,GAAU/lD,IACrB,GAAwB,QAApBA,EAAO6d,UAA0C,QAApB7d,EAAO6d,SAAoB,CAC3D,MAAM4oC,EAAO7oC,eAAkB5d,EAAO6d,SAAsB7d,EAAOyO,OAAS,GACtE2H,EAAKpW,EAAO6d,UAAY7d,EAAOyO,OAAS,IAC9C,IAAK,IAAIjO,EAAI,EAAGA,EAAIikD,EAAQpqD,OAAQmG,IAAK,CACxC,MAAMzC,EAAS0mD,EAAQjkD,GACnBzC,EAAOu3B,aAAa,gBAAkBlf,IACrCqwC,EAAOn3B,EACVyC,YAAgBh0B,EAAQ,mBAGxBg0B,eAAmBh0B,EAAQ,mB,QASpC,CAMOyzB,gBACN56B,MAAM46B,gBACF16B,KAAK68B,eAAe,YACvB78B,KAAKq8B,sBAEP,CAEUuzB,YACT,OAAO5vD,KAAKC,IAAI,cAAcM,OAAOgd,SAAS,EAC/C,CAEUuwC,WACT,OAAO9tD,KAAK4vD,YAAY9tD,MAAMyb,SAAS,EACxC,CAEUsyC,aAAalX,GACtB,MACM91C,EADa7C,KAAKC,IAAI,cACFA,IAAI,eACxBivD,EAAOlvD,KAAK8tD,WAClB,IAAI93C,EAAMk5C,EAAKn5C,WAAW4iC,GAC1B,GAAI91C,GAAWA,EAAOS,UAAUC,OAAS,EAAI,CAE5C,IAAI7B,EAAewtD,EAAKjvD,IAAI,gBACxB6vD,EAAwBpuD,EAAaqlB,SAAWrlB,EAAaiW,MACjE,MAAMo4C,EAAUltD,EAAOmtD,UAAUF,IAAkBjtD,EAAOS,UACpD0G,EAAW+lD,EAAiB,OAATpX,EAAiB,EAAIoX,EAAQxsD,OAAS,GAClD,OAATo1C,QAAoC/wC,IAAlBoC,EAAS6c,WAAkDjf,IAA5BoC,EAAS6c,KAAa,OAC1E7Q,EAAMhM,EAAS6c,KAAa,OAEX,OAAT8xB,QAAqC/wC,IAAnBoC,EAASyF,YAAoD7H,IAA7BoC,EAASyF,MAAc,SACjFuG,EAAMhM,EAASyF,MAAc,OAAI,E,CAGnC,OAAO,IAAIyV,KAAKlP,EACjB,CAGUi6C,UACT,OAAOjwD,KAAK6vD,aAAa,MAC1B,CAEUK,UACT,OAAOlwD,KAAK6vD,aAAa,MAC1B,CAEOP,aAAapmD,GACnB,MAAMrE,EAAO,iBACT7E,KAAKgB,OAAOujB,UAAU1f,IACzB7E,KAAKgB,OAAOwjB,SAAS3f,EAAM,CAC1BA,KAAMA,EACNkS,OAAQ/W,KACRkJ,OAAQA,IAIV,MAAMinD,EAAyC,SAA7BnwD,KAAKC,IAAI,SAAU,OAErC,GADAD,KAAKowD,iBAAiBlnD,GACC,OAAnBA,EAAO6d,SACV/mB,KAAK4vD,YAAYS,eAEb,GAAuB,UAAnBnnD,EAAO6d,SAAsB,CACrC,MAAMmoC,EAAOlvD,KAAK8tD,WAClB,IAAInsD,EAAQuH,EAAOvH,OAAS3B,KAAKkwD,UAC7BtuD,EAAMsH,EAAOtH,KAAO5B,KAAKiwD,UAC7Bf,EAAKjB,YAAYtsD,EAAOC,E,KAEpB,CACJ,MAAMstD,EAAOlvD,KAAK8tD,WAClB,IACInsD,EADAC,EAAM5B,KAAKiwD,UAEf,GAAuB,OAAnB/mD,EAAO6d,UAIV,GAHAplB,EAAQ,IAAIujB,KAAKtjB,EAAIypC,cAAe,EAAG,EAAG,EAAG,EAAG,EAAG,GAEnDzpC,EAAM5B,KAAKiwD,UACPf,EAAKjvD,IAAI,aAMZ,OALAivD,EAAKjB,YAAYtsD,EAAOC,EAAK,QAC7BijB,YAAW,KACVqqC,EAAKjB,YAAYtsD,EAAOC,EAAK,EAAE,GAC7B,QAKA,CACJ,MAAMmlB,EAAW7d,EAAO6d,SAExB,GAAImoC,EAAKjvD,IAAI,aAAc,CAE1B,MAAMqwD,EAAWpB,EAAKqB,iBAAiBzpC,eAAkBC,EAAU7d,EAAOyO,QAC1E,GAAI24C,EAAU,CAEb,MAAME,EAAWxwD,KAAKM,MAAMsmB,OAAOD,eAC7BM,EAAWjnB,KAAKM,MAAM2mB,SACtBD,EAAMhnB,KAAKM,MAAM0mB,IAEvB,GAAImpC,EAAW,CACdxuD,EAAQ3B,KAAKkwD,UAEb,IAAIO,EAAY9uD,EAAMwjB,UAEL,MAAbsrC,IAEH9uD,EAAQmlB,SAAY,IAAI5B,KAAKurC,GAAYH,EAASvpC,SAAUupC,EAAS34C,MAAO64C,EAAUxpC,OAAKpf,EAAWqf,GACtGtlB,EAAM+uD,QAAQ/uD,EAAMwjB,UAAY2B,eAAkBwpC,EAASvpC,SAA2B,IAAjBupC,EAAS34C,QAC9EhW,EAAQmlB,SAAYnlB,EAAO2uD,EAASvpC,SAAUupC,EAAS34C,MAAO64C,EAAUxpC,OAAKpf,EAAWqf,IAGzFrlB,EAAMklB,OAAU,IAAI5B,KAAKvjB,GAAQolB,EAAW7d,EAAOyO,OAAS,E,KAExD,CAGJ,IAAIg5C,EAAU3wD,KAAKiwD,UAAU9qC,UAEd,MAAXwrC,IAEH/uD,EAAMklB,SAAY,IAAI5B,KAAKyrC,GAAUL,EAASvpC,SAAUupC,EAAS34C,MAAO64C,EAAUxpC,OAAKpf,EAAWqf,GAClGrlB,EAAI8uD,QAAQ9uD,EAAIujB,UAAY2B,eAAkBwpC,EAASvpC,SAA2B,KAAjBupC,EAAS34C,QAC1E/V,EAAMklB,SAAYllB,EAAK0uD,EAASvpC,SAAUupC,EAAS34C,MAAO64C,EAAUxpC,OAAKpf,EAAWqf,IAGrFtlB,EAAQmlB,OAAU,IAAI5B,KAAKtjB,GAAMmlB,GAAiC,GAAtB7d,EAAOyO,OAAS,G,CAwB7D,OArBI3X,KAAK4wD,kBACR5wD,KAAK4wD,gBAAgB1kD,UACrBlM,KAAK4wD,qBAAkBhpD,GAGpB5H,KAAK6wD,iBACR7wD,KAAK6wD,gBAAgB3kD,UAGtBlM,KAAK4wD,gBAAkB1B,EAAKluD,OAAOulB,KAAK,wBAAwB,KAC/D2oC,EAAKjB,YAAYtsD,EAAOC,EAAK,EAAE,IAEhCstD,EAAKjB,YAAYtsD,EAAOC,EAAK,QAE7B5B,KAAK6wD,gBAAkB7wD,KAAK6kB,YAAW,KAClC7kB,KAAK4wD,iBACR5wD,KAAK4wD,gBAAgB1kD,UAEtBlM,KAAK6wD,qBAAkBjpD,CAAS,GAC9B,K,EAMDuoD,GACHxuD,EAAQ3B,KAAKkwD,UACbtuD,EAAMklB,OAAU,IAAI5B,KAAKvjB,GAAQolB,EAAW7d,EAAOyO,OAAS,IAG5DhW,EAAQmlB,OAAU,IAAI5B,KAAKtjB,GAAMmlB,GAAiC,GAAtB7d,EAAOyO,OAAS,G,CAI9Du3C,EAAKjB,YAAYtsD,EAAOC,E,CAE1B,CAEUwuD,iBAAiBlnD,GAC1B,MAAMoW,EAAKpW,EAAO6d,UAAY7d,EAAOyO,OAAS,IAExCg2C,EADY3tD,KAAK+V,WAAW,SACRmnB,qBAAqB,KAC/C,IAAK,IAAIxzB,EAAI,EAAGA,EAAIikD,EAAQpqD,OAAQmG,IAAK,CACxC,MAAMzC,EAAS0mD,EAAQjkD,GACnBzC,EAAOu3B,aAAa,gBAAkBlf,GAAY,UAANA,EAC/C2b,YAAgBh0B,EAAQ,mBAGxBg0B,eAAmBh0B,EAAQ,kB,CAG9B,CAEUo1B,uBAET,GADAv8B,MAAMu8B,uBACFr8B,KAAKi+B,eAAgB,CACxB,MAAMh3B,EAASjH,KAAK+V,WAAW,UAC/B9O,EAAOw2B,aAAa,aAAcx2B,EAAOu3B,aAAa,SAAW,KAAOx+B,KAAKmgC,GAAG,8CAClEngC,KAAKwvD,oBACbjxB,SAASpG,IACbA,EAAqBsF,aAAa,WAAY,MAC9CtF,EAAqBsF,aAAa,aAAetF,EAAqBqG,aAAa,UAAY,GAAG,G,CAGtG,CAEUgxB,oBACT,OAAOxvD,KAAK+V,WAAW,SAAU0oB,iBAAiB,iBACnD,EAlVA9+B,OAAAC,eAAAmvD,GAAA,a,gDAAkC,mBAClCpvD,OAAAC,eAAAmvD,GAAA,c,gDAA0CpwB,KAAat6B,WAAWC,OAAO,CAACyqD,GAAexqD,cCrEpF,MAAOusD,WAA0BxxB,IACtC3/B,OAAAC,eAAAkxD,GAAA,a,gDAAkC,sBAClCnxD,OAAAC,eAAAkxD,GAAA,c,gDAA0CxxB,GAAoBj7B,WAAWC,OAAO,CAACwsD,GAAkBvsD,cCW9F,MAAOwsD,WAAwBzxB,GAQ1B2G,kBACT,OAAO7G,KAAWC,QAAQ,WAC3B,EATA1/B,OAAAC,eAAAmxD,GAAA,a,gDAAkC,oBAClCpxD,OAAAC,eAAAmxD,GAAA,c,gDAA0CzxB,GAAoBj7B,WAAWC,OAAO,CAACysD,GAAgBxsD,cCV5F,MAAOysD,WAAqBryB,KAQvB9+B,YACTC,MAAMD,YAENG,KAAKgB,OAAOC,GAAG,SAAS,KACvB,MAAMlB,EAAaC,KAAKC,IAAI,cAC5BF,EAAWQ,OAAO6Y,MAAMtY,IACvBA,EAAM2kC,SAASrsB,MAAMiuB,IACpBA,EAAQjkC,KAAK+V,OAAO,GACnB,IAGHpZ,EAAWqB,WAAW+X,OAAO,GAE/B,CAEU8sB,kBACT,OAAO7G,KAAWC,QAAQ,QAC3B,EAxBA1/B,OAAAC,eAAAoxD,GAAA,a,gDAAkC,iBAClCrxD,OAAAC,eAAAoxD,GAAA,c,gDAA0CryB,KAAat6B,WAAWC,OAAO,CAAC0sD,GAAazsD,cCkDlF,MAAO0sD,WAAwB3xB,GAQ1Bz/B,YACTC,MAAMD,YAENG,KAAKyD,WAAW,YAAagmC,OAAOpjC,SAAS6qD,KAAO,IAAMlxD,KAAKK,KAAK66B,IAAI5b,IAExE,MAAMvf,EAAaC,KAAKC,IAAI,cACtB2/B,EAAW5/B,KAAK+V,WAAW,YAG7Bo7C,cAAwE,KAAxDA,aAAaC,QAAQpxD,KAAKqxD,cAAc,cAC3DrxD,KAAKK,KAAKW,OAAOulB,KAAK,cAAc,KACnCvmB,KAAKsxD,cACLtxD,KAAKiC,IAAI,YAAY,EAAK,IAI5B29B,EAAS5+B,OAAOC,GAAG,WAAY48B,IAC9B,GAAkB,YAAdA,EAAG1F,KAAK7Y,GAAkB,CAC7B,MAAMiyC,GAAY1zB,EAAG1F,KAAKyF,QAC1B59B,KAAKiC,IAAI,WAAYsvD,GACjBA,GACHvxD,KAAKwxD,U,KAKR5xB,EAAS5+B,OAAOC,GAAG,WAAY48B,IACZ,QAAdA,EAAG1F,KAAK7Y,GACXtf,KAAKwxD,WAEiB,WAAd3zB,EAAG1F,KAAK7Y,GAChBtf,KAAKsxD,cAEiB,SAAdzzB,EAAG1F,KAAK7Y,IAChBtf,KAAKyxD,W,IAKPzxD,KAAKiB,GAAG,UAAU,KACjBjB,KAAK0xD,iBAAiB,IAGvB3xD,EAAWiB,OAAOC,GAAG,mBAAoBw7B,IACpCz8B,KAAKC,IAAI,aACZD,KAAKwxD,U,IAIPzxD,EAAWiB,OAAOC,GAAG,qBAAsBw7B,IACtCz8B,KAAKC,IAAI,aACZD,KAAKwxD,U,GAIR,CAEO50B,iBAGN,GAFA98B,MAAM88B,iBAEF58B,KAAKiI,QAAQ,aAAekpD,aAAc,CAC5BnxD,KAAKC,IAAI,YAAY,GAErCkxD,aAAatxB,QAAQ7/B,KAAKqxD,cAAc,YAAa,KAIrDF,aAAaQ,WAAW3xD,KAAKqxD,cAAc,aAG5CrxD,KAAK0xD,iB,CAEP,CAEOF,WACN,GAAIL,aAAc,CACjB,MAAMS,EAAiB5xD,KAAK6xD,qBACtBC,EAAmB9xD,KAAK+xD,uBACxBtsB,EAAWmsB,EAAezrB,kBAAkB,SAAU,MACtD/kC,EAAa0wD,EAAiBtpB,oBAAoB,SAAU,MAClD,MAAZ/C,EACH0rB,aAAaQ,WAAW3xD,KAAKqxD,cAAc,aAG3CF,aAAatxB,QAAQ7/B,KAAKqxD,cAAc,YAAa5rB,GAEpC,MAAdrkC,EACH+vD,aAAaQ,WAAW3xD,KAAKqxD,cAAc,eAG3CF,aAAatxB,QAAQ7/B,KAAKqxD,cAAc,cAAejwD,GAExDpB,KAAKgB,OAAOwjB,SAAS,QAAS,CAC7BzN,OAAQ/W,KACR6E,KAAM,QACN4gC,SAAUA,EACVrkC,WAAYA,G,CAGf,CAEOkwD,cACN,GAAIH,aAAc,CACjB,MAAMpxD,EAAaC,KAAKC,IAAI,cAC5BF,EAAWQ,OAAO6Y,MAAMtY,IACvBA,EAAM2kC,SAASrsB,MAAMiuB,IACpBA,EAAQjkC,KAAK+V,OAAO,GACnB,IAGHpZ,EAAWqB,WAAW+X,QAEtB,MAAMy4C,EAAiB5xD,KAAK6xD,qBACtBC,EAAmB9xD,KAAK+xD,uBACxBtsB,EAAW0rB,aAAaC,QAAQpxD,KAAKqxD,cAAc,cAAgB,KACnEjwD,EAAa+vD,aAAaC,QAAQpxD,KAAKqxD,cAAc,gBAAkB,KAE7EO,EAAexqB,oBAAoB3B,GACnCqsB,EAAiB/oB,sBAAsB3nC,GACvCpB,KAAKgB,OAAOwjB,SAAS,WAAY,CAChCzN,OAAQ/W,KACR6E,KAAM,WACN4gC,SAAUA,EACVrkC,WAAYA,G,CAGf,CAEOqwD,YACFN,eACHA,aAAaQ,WAAW3xD,KAAKqxD,cAAc,aAC3CF,aAAaQ,WAAW3xD,KAAKqxD,cAAc,eAC3CrxD,KAAKgB,OAAOwjB,SAAS,UAAW,CAC/BzN,OAAQ/W,KACR6E,KAAM,YAGT,CAEUohC,kBACT,OAAO7G,KAAWC,QAAQ,OAC3B,CAEUqyB,kBACT,MAAM9xB,EAAW5/B,KAAK+V,WAAW,YAC3B4e,EAAQiL,EAAS3/B,IAAI,QAAS,IAC9BsxD,EAAWvxD,KAAKC,IAAI,YAAY,GAChC+xD,EAAcb,eAA0E,OAAzDA,aAAaC,QAAQpxD,KAAKqxD,cAAc,cAAoF,OAA3DF,aAAaC,QAAQpxD,KAAKqxD,cAAc,gBAC9ItnD,OAAY4qB,GAAQwD,IACdg5B,aAGe,WAAXh5B,EAAK7Y,GACb6Y,EAAK2F,SAAWyzB,IAAaS,EAEV,SAAX75B,EAAK7Y,GACb6Y,EAAK2F,UAAYk0B,EAEE,QAAX75B,EAAK7Y,GACb6Y,EAAK2F,SAAWyzB,EAEG,YAAXp5B,EAAK7Y,KACb6Y,EAAKyF,QAAU2zB,GAZfp5B,EAAK2F,UAAW,C,IAelB8B,EAAS3D,aACV,CAEUo1B,cAAcY,GACvB,MAAO,aAAejyD,KAAKC,IAAI,YAAaD,KAAK+V,WAAW,YAAa,KAAO,IAAMk8C,CACvF,CAEUJ,qBAET,IAAID,EAA6C5xD,KAAK+V,WAAW,kBACjE,GAAI67C,EACH,OAAOA,EAGR,MAAM7xD,EAAaC,KAAKC,IAAI,cAQ5B,OAPA2xD,EAAiB7xD,EAAWmyD,WAAW,kBAClCN,IACJA,EAAiBvwB,GAAe3gC,IAAIV,KAAKK,KAAM,CAC9CN,WAAYA,IAEbC,KAAKyD,WAAW,iBAAkBmuD,IAE5BA,CACR,CAEUG,uBAET,IAAID,EAAiD9xD,KAAK+V,WAAW,oBACrE,GAAI+7C,EACH,OAAOA,EAGR,MAAM/xD,EAAaC,KAAKC,IAAI,cAQ5B,OAPA6xD,EAAmB/xD,EAAWmyD,WAAW,oBACpCJ,IACJA,EAAmBjqB,GAAiBnnC,IAAIV,KAAKK,KAAM,CAClDN,WAAYA,IAEbC,KAAKyD,WAAW,mBAAoBquD,IAE9BA,CACR,EArNAnyD,OAAAC,eAAAqxD,GAAA,a,gDAAkC,oBAClCtxD,OAAAC,eAAAqxD,GAAA,c,gDAA0C3xB,GAAoBj7B,WAAWC,OAAO,CAAC2sD,GAAgB1sD,cC7B5F,MAAO4tD,WAAwB7yB,GAQ1Bz/B,YACTC,MAAMD,YAEN,MAAM+/B,EAAW5/B,KAAK+V,WAAW,YACjC6pB,EAAS5+B,OAAOC,GAAG,WAAY48B,IAC9B,MAAM99B,EAAaC,KAAKC,IAAI,cAkB5B,GAjBoBF,EAAWE,IAAI,iBAEhB,WAAd49B,EAAG1F,KAAK7Y,GACU,WAAjBue,EAAG1F,KAAK/tB,OACXrK,EAAW4lC,iBAAgB,GAC3B3lC,KAAKoyD,iBAAgB,KAGrBryD,EAAW4lC,iBAAgB,GAC3B3lC,KAAKoyD,gBAAiC,eAAjBv0B,EAAG1F,KAAK/tB,QAGR,SAAdyzB,EAAG1F,KAAK7Y,IAChBtf,KAAKqyD,UAAgBx0B,EAAID,UAIT,YAAdC,EAAG1F,KAAK7Y,GAAkB,CAC7B,MAAMiyC,EAAiB1zB,EAAID,QACL59B,KAAK+V,WAAW,mBACtB9T,IAAI,WAAYsvD,E,KAKlCvxD,KAAKiB,GAAG,UAAU,KACjBjB,KAAK0xD,iBAAiB,IAGvB1xD,KAAKm7B,WAAW36B,KAAKR,KAAKK,KAAKW,OAAOC,GAAG,cAAc,KACtD,MAAMlB,EAAaC,KAAKC,IAAI,cACtBqyD,KAAqBvyD,EAAWmyD,WAAW,sBAAuBnyD,EAAWmyD,WAAW,mBAC9F,IAAIK,EAAkBxyD,EAAWmyD,WAAW,mBAE5C,GAAKI,EAOCC,IACJA,EAAkBtB,GAAgBvwD,IAAIV,KAAKK,KAAM,CAChDN,WAAYA,EACZwxD,SAAUvxD,KAAKC,IAAI,YAAY,GAC/BuyD,UAAWxyD,KAAKC,IAAI,gBAGtBD,KAAKyD,WAAW,kBAAmB8uD,GACnCvyD,KAAKiC,IAAI,WAAaswD,EAAoCtyD,IAAI,aAC9DD,KAAK0xD,sBAhBkB,CACvB,MAAMv1B,EAAeyD,EAAS3/B,IAAI,UAAW,IAC7Ck8B,EAAQ37B,KAAK,QACb27B,EAAQ37B,KAAK,YACbo/B,EAAS39B,IAAI,UAAW,CAAC,OAAQ,Y,KAgBpC,CAEUgkC,kBACT,OAAO7G,KAAWC,QAAQ,WAC3B,CAEUqyB,kBAGT,MACM3zB,EADS/9B,KAAK+V,WAAW,UACTmnB,qBAAqB,SACrCu1B,EAAezyD,KAAK0yD,aAC1B,IAAK,IAAIhpD,EAAI,EAAGA,EAAIq0B,EAAOx6B,OAAQmG,IAAK,CACvC,MAAM6yB,EAAQwB,EAAOr0B,GACrB,OAAQ6yB,EAAMjd,IACb,IAAK,yBACJid,EAAMqB,QAAU59B,KAAKC,IAAI,WAAYD,KAAK+V,WAAW,mBAAoB9V,IAAI,YAAY,IACzF,MACD,IAAK,sBACJs8B,EAAMqB,QAAU59B,KAAK2yD,kBACrB,MACD,IAAK,gCACL,IAAK,gCACL,IAAK,oCACJp2B,EAAMqB,QAAUrB,EAAMnyB,OAASqoD,E,CAKnC,CAEUE,kBACT,MACMzyD,EADaF,KAAKC,IAAI,cACGA,IAAI,eACnC,GAAIC,EAAa,CAChB,MACMuG,EADQvG,EAAYD,IAAI,SACVA,IAAI,YAAY2yD,UAAUjnD,OAC9C,OAAQlF,EAAMlD,OAAS,GAAMkD,EAAM,GAAGxG,IAAI,WAAW,E,CAEtD,OAAO,CACR,CAEUyyD,aACT,MACMxyD,EADaF,KAAKC,IAAI,cACGA,IAAI,eACnC,GAAIC,EAAa,CAChB,MAAMuC,EAAQvC,EAAYD,IAAI,SAC9B,GAAIwC,aAAiBE,IAAW,CAC/B,GAAqC,gCAAjCzC,EAAYD,IAAI,cACnB,MAAO,UAER,GAAIwC,EAAMxC,IAAI,eACb,MAAO,a,EAIV,MAAO,SACR,CAEUmyD,gBAAgBhoD,GACzB,MACMlK,EADaF,KAAKC,IAAI,cACGA,IAAI,eACnC,GAAIC,EAAa,CAChB,MAAMuC,EAAQvC,EAAYD,IAAI,SAC1BwC,aAAiBE,MAEpBoH,OAAYtH,EAAMI,QAASA,IAC1BA,EAAOgwD,gBACPhwD,EAAOqkB,iBAAiB,IAGzBzkB,EAAMR,IAAI,cAAemI,G,CAG5B,CAEUioD,UAAU/rC,GACAtmB,KAAKC,IAAI,cACjBM,OAAO6Y,MAAMtY,IACvBA,EAAMgB,MAAMsX,MAAM3X,IACjBA,EAAMxB,IAAI,YAAY2yD,UAAUlsD,SAASzE,IAAI,UAAWqkB,GACxD7kB,EAAMxB,IAAI,YAAYkW,KAAKzP,SAASzE,IAAI,cAAeqkB,EAAQ,GAC9D,GAEJ,EAvJA3mB,OAAAC,eAAAuyD,GAAA,a,gDAAkC,oBAClCxyD,OAAAC,eAAAuyD,GAAA,c,gDAA0C7yB,GAAoBj7B,WAAWC,OAAO,CAAC6tD,GAAgB5tD,cC5B5F,MAAOuuD,WAA0BxzB,GAQ5B2G,kBACT,OAAO7G,KAAWC,QAAQ,aAC3B,EATA1/B,OAAAC,eAAAkzD,GAAA,a,gDAAkC,sBAClCnzD,OAAAC,eAAAkzD,GAAA,c,gDAA0CxzB,GAAoBj7B,WAAWC,OAAO,CAACwuD,GAAkBvuD,a,mCCpBpG,0GAqEM,MAAOmiC,UAAmBrM,IAAhC36B,c,oBASCC,OAAAC,eAAA,c,gDAA4C,CAAC,GA4H9C,CAlHQunC,UAAU4rB,GAAyD,IAAxC93C,EAAAyU,UAAAnsB,OAAA,QAAAqE,IAAA8nB,UAAA,GAAAA,UAAA,GAAgB,EAAGsjC,EAAAtjC,UAAAnsB,OAAA,QAAAqE,IAAA8nB,UAAA,IAAAA,UAAA,GACpD,GAAIzU,EAAQjb,KAAKC,IAAI,WAAY,GAChC,OAGD,IAAe,IAAX8yD,IAA+B,IAAXA,EACvB,OAAOA,EAGR,GAAIhtD,UAAcgtD,GAAS,CAC1B,MAAMzsB,EAAa,GAInB,OAHAv8B,OAAYgpD,GAASE,IACpB3sB,EAAI9lC,KAAKR,KAAKmnC,UAAU8rB,EAAQh4C,EAAO+3C,GAAM,IAEvC1sB,C,CAEH,GAAIysB,aAAkBG,IAAU,CACpC,MAAM5sB,EAAa,GAInB,OAHAv8B,OAAYgpD,EAAOpnD,QAASsnD,IAC3B3sB,EAAI9lC,KAAKR,KAAKmnC,UAAU8rB,EAAQh4C,EAAO+3C,GAAM,IAEvC1sB,C,CAER,MAAMA,EAAW,CAAC,EAEZ6sB,EAAYJ,aAAkB14B,KAAU04B,aAAkB52C,KAAY42C,aAAkBpmD,KAASomD,aAAkBK,IAGnHC,EAAoBrzD,KAAKC,IAAI,eAAgB,IACnD,GAAI8yD,aAAkB14B,IAAQ,CAC7BiM,EAAIzhC,KAAOkuD,EAAOxuD,UAElB,IAAI6e,EAA0B5D,OAAauzC,EAAO9uC,WAClD,MAAM0iB,EAAiC3mC,KAAKC,IAAI,kBAAmB,IAC7DwoC,EAAiCzoC,KAAKC,IAAI,kBAAmB,IAC/D0mC,EAAgBpjC,OACnB6f,EAAWujB,EAEH8B,EAAgBllC,SACxB6f,EAAWA,EAAS8+B,QAAQ93C,IACgB,IAApCq+B,EAAgBxxB,QAAQ7M,MAKjCgZ,EAAWA,EAAS8+B,QAAQ93C,GACpB2oD,EAAOO,cAAclpD,KAGzBgZ,EAAS7f,SACZ+iC,EAAIljB,SAAW,CAAC,EAChBrZ,OAAYqZ,GAAWmwC,IACtB,MAAMC,EAAqBT,EAAQ9yD,IAAIszD,QAClB3rD,IAAjB4rD,IACHltB,EAAIljB,SAASmwC,GAAWvzD,KAAKmnC,UAAUqsB,EAAcv4C,EAAQ,EAAG+3C,IAA2C,IAAnCK,EAAap8C,QAAQs8C,I,UAK5F,GAAIR,aAAkB52C,IAAU,CACpCmqB,EAAIzhC,KAAO,WACX,IAAIue,EAA0B5D,OAAauzC,EAAO9uC,WAOlD,OANIb,EAAS7f,SACZ+iC,EAAIljB,SAAW,CAAC,EAChBrZ,OAAYqZ,GAAWmwC,IACtBjtB,EAAIljB,SAASmwC,GAAWvzD,KAAKmnC,UAAgB4rB,EAAQ9yD,IAAIszD,GAAUt4C,EAAQ,GAAsC,IAAnCo4C,EAAap8C,QAAQs8C,GAAgB,KAG9GjtB,C,CAaR,GATIysB,aAAkBU,KACjBV,EAAO3vD,KAAKG,SACf+iC,EAAIotB,WAAa,CAChBtwD,KAAMpD,KAAKmnC,UAAU4rB,EAAO3vD,KAAKuI,OAAQ,GAAG,KAM3ConD,aAAkBpmD,IACrB,MAAO,CACN9H,KAAM,QACNuF,MAAO2oD,EAAOlmD,YAGX,GAAIkmD,aAAkBK,IAC1B,MAAO,CACNvuD,KAAM,UACNuF,MAAO2oD,EAAOt8C,SAGX,GAAI1Q,WAAegtD,IAAWhtD,WAAegtD,GACjD,OAAOA,EAEH,GAAIhtD,WAAegtD,IAEnBC,IAASG,EAAW,CACvB,MAAMQ,EAAmC3zD,KAAKC,IAAI,oBAAqB,IACvEuf,OAAauzC,GAAQ,CAACtuD,EAAK2F,MACc,IAApCupD,EAAkB18C,QAAQxS,SAAyBmD,IAAVwC,IAC5Ck8B,EAAI7hC,GAAOzE,KAAKmnC,UAAU/8B,EAAO6Q,EAAQ,EAAG+3C,G,IAUhD,OAJa,GAAT/3C,GAAcuE,OAAaxf,KAAK4zD,OAAOrwD,SAC1C+iC,EAAIutB,KAAO7zD,KAAK4zD,OAGVttB,CACR,EAlIA3mC,OAAAC,eAAA8mC,EAAA,a,gDAAkC,eAClC/mC,OAAAC,eAAA8mC,EAAA,c,gDAA0CrM,IAAOh2B,WAAWC,OAAO,CAACoiC,EAAWniC,a,mCCvEnD,oBAAlB5E,OAAOy2C,SACdz2C,OAAOy2C,OAAS,SAAUr/B,GAEtB,IADA,IAAI63B,EAAO,GACFklB,EAAK,EAAGA,EAAKpkC,UAAUnsB,OAAQuwD,IACpCllB,EAAKklB,EAAK,GAAKpkC,UAAUokC,GAE7B,IAAK/8C,EACD,MAAMg9C,UAAU,8CAOpB,IALA,IAAIC,EAAU,SAAUjB,GAChBA,GACApzD,OAAOs0D,KAAKlB,GAAQx0B,SAAQ,SAAU95B,GAAO,OAAQsS,EAAOtS,GAAOsuD,EAAOtuD,EAAO,GAEzF,EACSvC,EAAK,EAAGgyD,EAAStlB,EAAM1sC,EAAKgyD,EAAO3wD,OAAQrB,IAAM,CAEtD8xD,EADaE,EAAOhyD,GAExB,CACA,OAAO6U,CACX,E","file":"static/js/13.a2b3c4a7.chunk.js","sourcesContent":["import type { XYSeries } from \"../../xy/series/XYSeries\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\n\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents } from \"./Indicator\";\r\nimport { StockPanel } from \"../StockPanel\";\r\nimport { XYCursor } from \"../../xy/XYCursor\";\r\nimport { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport { GaplessDateAxis } from \"../../xy/axes/GaplessDateAxis\";\r\nimport { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport { AxisRendererX } from \"../../xy/axes/AxisRendererX\";\r\nimport { AxisRendererY } from \"../../xy/axes/AxisRendererY\";\r\nimport { Tooltip } from \"../../../core/render/Tooltip\";\r\nimport { StockLegend } from \"../StockLegend\";\r\n\r\n\r\nexport interface IChartIndicatorSettings extends IIndicatorSettings {\r\n}\r\n\r\nexport interface IChartIndicatorPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IChartIndicatorEvents extends IIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * A base class for chart-based [[StockChart]] indicators.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport abstract class ChartIndicator extends Indicator {\r\n\tpublic static className: string = \"ChartIndicator\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([ChartIndicator.className]);\r\n\r\n\tdeclare public _settings: IChartIndicatorSettings;\r\n\tdeclare public _privateSettings: IChartIndicatorPrivate;\r\n\tdeclare public _events: IChartIndicatorEvents;\r\n\r\n\tpublic panel!: StockPanel;\r\n\tpublic xAxis!: DateAxis<AxisRenderer>;\r\n\tpublic yAxis!: ValueAxis<AxisRenderer>;\r\n\tpublic cursor!: XYCursor;\r\n\tpublic legend!: StockLegend;\r\n\r\n\tprotected _themeTag?: string;\r\n\tprotected _themeTags:Array<string> = [\"indicator\"];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst seriesChart = stockSeries.chart;\r\n\t\tconst root = this._root;\r\n\t\tif (stockChart && seriesChart) {\r\n\t\t\t// make chart\r\n\t\t\tconst chart = stockChart.panels.push(StockPanel.new(root, { themeTags: this._themeTags }));\r\n\t\t\tchart.addTag(\"indicator\");\r\n\t\t\tthis.panel = chart;\r\n\r\n\t\t\tthis.addDisposer(stockChart.panels.events.on(\"removeIndex\", (e) => {\r\n\t\t\t\tif (e.oldValue == chart) {\r\n\t\t\t\t\tstockChart.indicators.removeValue(this);\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\r\n\t\t\tconst seriesXAxis = stockSeries.get(\"xAxis\") as any;\r\n\r\n\t\t\t// xAxis\r\n\t\t\tconst xRenderer = AxisRendererX.new(root, {});\r\n\t\t\tlet xAxis: DateAxis<AxisRenderer> | GaplessDateAxis<AxisRenderer> | undefined;\r\n\t\t\tlet baseInterval = seriesXAxis.get(\"baseInterval\");\r\n\t\t\tlet start = seriesXAxis.get(\"start\");\r\n\t\t\tlet end = seriesXAxis.get(\"end\");\r\n\r\n\t\t\tif (seriesXAxis instanceof GaplessDateAxis) {\r\n\t\t\t\txAxis = chart.xAxes.push(GaplessDateAxis.new(root, { renderer: xRenderer, baseInterval: baseInterval }));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\txAxis = chart.xAxes.push(DateAxis.new(root, { renderer: xRenderer, baseInterval: baseInterval }));\r\n\t\t\t}\r\n\r\n\t\t\txRenderer.set(\"minorGridEnabled\", seriesXAxis.get(\"renderer\")?.get(\"minorGridEnabled\"));\r\n\t\t\txAxis.set(\"groupData\", seriesXAxis.get(\"groupData\"));\r\n\t\t\txAxis.set(\"groupCount\", seriesXAxis.get(\"groupCount\"));\r\n\r\n\t\t\txAxis.set(\"tooltip\", Tooltip.new(root, { forceHidden: true }));\r\n\r\n\t\t\txAxis.setAll({ start: start, end: end })\r\n\t\t\tthis.xAxis = xAxis;\r\n\r\n\t\t\t// yAxis\r\n\t\t\tconst yRenderer = AxisRendererY.new(root, {\r\n\t\t\t\tminGridDistance:20\r\n\t\t\t});\r\n\t\t\tconst yAxis = chart.yAxes.push(ValueAxis.new(root, {\r\n\t\t\t\trenderer: yRenderer,\r\n\t\t\t\ttooltip: Tooltip.new(root, { forceHidden: true })\r\n\t\t\t}))\r\n\t\t\tthis.yAxis = yAxis;\r\n\r\n\t\t\tconst series = this._createSeries();\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\t// legend\r\n\t\t\tconst legend = chart.topPlotContainer.children.insertIndex(0,\r\n\t\t\t\tStockLegend.new(root, { stockChart: this.get(\"stockChart\") })\r\n\t\t\t);\r\n\r\n\t\t\tlegend.data.push(series);\r\n\r\n\t\t\tconst legendDataItem = legend.dataItems[legend.dataItems.length - 1];\r\n\t\t\tlegendDataItem.set(\"panel\", chart);\r\n\t\t\tlegendDataItem.get(\"marker\").set(\"forceHidden\", true);\r\n\r\n\t\t\tconst settingsButton = legendDataItem.get(\"settingsButton\");\r\n\t\t\tsettingsButton.setPrivate(\"customData\", this);\r\n\r\n\t\t\tconst editableSettings = this._editableSettings;\r\n\t\t\tif (!editableSettings || editableSettings.length == 0) {\r\n\t\t\t\tsettingsButton.set(\"forceHidden\", true);\r\n\t\t\t}\r\n\r\n\t\t\tchart.set(\"cursor\", XYCursor.new(root, { yAxis: yAxis, xAxis: xAxis }));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tsuper._dispose();\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.panels.removeValue(this.panel);\r\n\t}\r\n\r\n\tpublic async hide(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.hide(duration),\r\n\t\t\tthis.panel.hide(duration)\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic async show(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.show(duration),\r\n\t\t\tthis.panel.show(duration)\r\n\t\t]);\r\n\t}\r\n\r\n\tprotected abstract _createSeries(): XYSeries;\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { IValueAxisDataItem } from \"../../xy/axes/ValueAxis\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries, ILineSeriesAxisRange } from \"../../xy/series/LineSeries\";\r\nimport { Button } from \"../../../core/render/Button\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { AxisBullet } from \"../../xy/axes/AxisBullet\";\r\nimport type { AxisRendererY } from \"../../xy/axes/AxisRendererY\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\n\r\nexport interface IOverboughtOversoldSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * A value for \"overbought\" threshold.\r\n\t */\r\n\toverBought?: number;\r\n\r\n\t/**\r\n\t * A value for \"oversold\" threshold.\r\n\t */\r\n\toverSold?: number;\r\n\r\n\t/**\r\n\t * A color for \"overbought\" section.\r\n\t */\r\n\toverBoughtColor?: Color;\r\n\r\n\t/**\r\n\t * A color for \"oversold\" section.\r\n\t */\r\n\toverSoldColor?: Color;\r\n}\r\n\r\nexport interface IOverboughtOversoldPrivate extends IChartIndicatorPrivate { }\r\n\r\nexport interface IOverboughtOversoldEvents extends IChartIndicatorEvents { }\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class OverboughtOversold extends ChartIndicator {\r\n\tpublic static className: string = \"OverboughtOversold\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([OverboughtOversold.className]);\r\n\r\n\tdeclare public _settings: IOverboughtOversoldSettings;\r\n\tdeclare public _privateSettings: IOverboughtOversoldPrivate;\r\n\tdeclare public _events: IOverboughtOversoldEvents;\r\n\r\n\tpublic overBought!: DataItem<IValueAxisDataItem>;\r\n\tpublic middle!: DataItem<IValueAxisDataItem>;\r\n\tpublic overSold!: DataItem<IValueAxisDataItem>;\r\n\r\n\tpublic overSoldRange!: ILineSeriesAxisRange;\r\n\tpublic overBoughtRange!: ILineSeriesAxisRange;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"overBought\",\r\n\t\tname: this.root.language.translateAny(\"Overbought\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"overBoughtColor\",\r\n\t\tname: this.root.language.translateAny(\"Overbought\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"overSold\",\r\n\t\tname: this.root.language.translateAny(\"Oversold\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"overSoldColor\",\r\n\t\tname: this.root.language.translateAny(\"Oversold\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"overboughtoversold\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst chart = this.panel;\r\n\t\tconst yAxis = this.yAxis;\r\n\t\tyAxis.setAll({ strictMinMax: true, autoZoom: false });\r\n\r\n\t\t// middle grid\r\n\t\tthis.middle = this.yAxis.createAxisRange(this.yAxis.makeDataItem({}));\r\n\t\tconst middleGrid = this.middle.get(\"grid\")!;\r\n\t\tmiddleGrid.setAll({ themeTags: [\"middlegrid\"] });\r\n\t\tmiddleGrid._applyThemes();\r\n\r\n\t\tconst middleLabel = this.middle.get(\"label\")!;\r\n\t\tmiddleLabel.setAll({ visible: true, forceHidden: false });\r\n\r\n\t\tconst opposite = (yAxis.get(\"renderer\") as AxisRendererY).get(\"opposite\");\r\n\t\tlet side = \"left\";\r\n\t\tif (opposite) {\r\n\t\t\tside = \"right\"\r\n\t\t}\r\n\r\n\t\t// overbought range\r\n\t\tconst overBought = yAxis.makeDataItem({});\r\n\t\tthis.overBought = overBought;\r\n\t\toverBought.set(\"endValue\", 500);\r\n\r\n\t\tconst overBoughtRB = Button.new(this._root, {\r\n\t\t\tthemeTags: [\"rangegrip\", \"vertical\", side],\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"rangegrip\", \"icon\"]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// restrict from being dragged vertically\r\n\t\toverBoughtRB.adapters.add(\"x\", function() {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t// restrict from being dragged outside of plot\r\n\t\toverBoughtRB.adapters.add(\"y\", function(y) {\r\n\t\t\tif ($type.isNumber(y)) {\r\n\t\t\t\treturn $math.fitToRange(y, 0, chart.plotContainer.height());\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t});\r\n\r\n\t\t// change range when y changes\r\n\t\toverBoughtRB.events.on(\"dragged\", () => {\r\n\t\t\tthis._updateRange(overBoughtRB, \"overBought\");\r\n\t\t});\r\n\r\n\t\toverBought.set(\"bullet\", AxisBullet.new(this._root, {\r\n\t\t\tlocation: 0,\r\n\t\t\tsprite: overBoughtRB\r\n\t\t}))\r\n\r\n\t\tconst overBoughtRange = this.series.createAxisRange(overBought);\r\n\t\tthis.overBoughtRange = overBoughtRange;\r\n\t\tconst overBoughtFills = overBoughtRange.fills;\r\n\t\tif (overBoughtFills) {\r\n\t\t\toverBoughtFills.template.set(\"themeTags\", [\"overbought\", \"fill\"]);\r\n\t\t}\r\n\r\n\t\tconst overBoughtGrid = overBought.get(\"grid\")!;\r\n\t\toverBoughtGrid.setAll({ themeTags: [\"overbought\"], visible: true });\r\n\t\toverBoughtGrid._applyThemes();\r\n\r\n\t\tconst overBoughtLabel = overBought.get(\"label\")!;\r\n\t\toverBoughtLabel.setAll({ visible: true, forceHidden: false, location: 0 });\r\n\r\n\t\t// oversold range\r\n\t\tconst overSold = yAxis.makeDataItem({});\r\n\t\tthis.overSold = overSold;\r\n\t\toverSold.set(\"endValue\", -500);\r\n\r\n\t\tconst overSoldRB = Button.new(this._root, {\r\n\t\t\tthemeTags: [\"rangegrip\", \"vertical\", side],\r\n\t\t\ticon: Graphics.new(this._root, {\r\n\t\t\t\tthemeTags: [\"rangegrip\", \"icon\"]\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\t// restrict from being dragged vertically\r\n\t\toverSoldRB.adapters.add(\"x\", function() {\r\n\t\t\treturn 0;\r\n\t\t});\r\n\r\n\t\t// restrict from being dragged outside of plot\r\n\t\toverSoldRB.adapters.add(\"y\", function(y) {\r\n\t\t\tif ($type.isNumber(y)) {\r\n\t\t\t\treturn $math.fitToRange(y, 0, chart.plotContainer.height());\r\n\t\t\t}\r\n\t\t\treturn y;\r\n\t\t});\r\n\r\n\t\t// change range when y changes\r\n\t\toverSoldRB.events.on(\"dragged\", () => {\r\n\t\t\tthis._updateRange(overSoldRB, \"overSold\");\r\n\t\t});\r\n\r\n\t\toverSold.set(\"bullet\", AxisBullet.new(this._root, {\r\n\t\t\tlocation: 0,\r\n\t\t\tsprite: overSoldRB\r\n\t\t}))\r\n\r\n\r\n\t\tconst overSoldRange = this.series.createAxisRange(overSold);\r\n\t\tthis.overSoldRange = overSoldRange;\r\n\t\tconst overSoldFills = overSoldRange.fills;\r\n\t\tif (overSoldFills) {\r\n\t\t\toverSoldFills.template.set(\"themeTags\", [\"oversold\", \"fill\"]);\r\n\t\t}\r\n\r\n\t\tconst overSoldGrid = overSold.get(\"grid\")!;\r\n\t\toverSoldGrid.setAll({ themeTags: [\"oversold\"], visible: true });\r\n\t\toverSoldGrid._applyThemes();\r\n\r\n\t\tconst overSoldLabel = overSold.get(\"label\")!;\r\n\t\toverSoldLabel.setAll({ visible: true, forceHidden: false, location: 0 });\r\n\t}\r\n\r\n\tprotected _updateRange(button: Button, key: \"overBought\" | \"overSold\") {\r\n\t\tconst chart = this.yAxis.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst position = this.yAxis.toAxisPosition(button.y() / chart.plotContainer.height());\r\n\t\t\tthis.set(key, Math.round(this.yAxis.positionToValue(position)));\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"valueS\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tconst overBoughtLabel = this.overBought.get(\"label\")!;\r\n\t\tconst overSoldLabel = this.overSold.get(\"label\")!;\r\n\t\tconst middleLabel = this.middle.get(\"label\")!;\r\n\r\n\t\tif (this.isDirty(\"overBought\") || this.isDirty(\"overSold\")) {\r\n\t\t\tconst numberFormatter = this.getNumberFormatter();\r\n\r\n\t\t\tconst overSoldValue = this.get(\"overSold\", 0);\r\n\t\t\tconst overBoughtValue = this.get(\"overBought\", 0);\r\n\t\t\tconst middleValue = overSoldValue + (overBoughtValue - overSoldValue) / 2;\r\n\r\n\t\t\toverBoughtLabel.set(\"text\", numberFormatter.format(overBoughtValue));\r\n\t\t\toverSoldLabel.set(\"text\", numberFormatter.format(overSoldValue));\r\n\t\t\tmiddleLabel.set(\"text\", numberFormatter.format(middleValue));\r\n\r\n\t\t\tthis.overBought.set(\"value\", overBoughtValue);\r\n\t\t\tthis.overSold.set(\"value\", overSoldValue);\r\n\r\n\t\t\tthis.middle.set(\"value\", middleValue);\r\n\t\t\tthis.yAxis.set(\"baseValue\", middleValue);\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"overSoldColor\")) {\r\n\t\t\tconst color = this.get(\"overSoldColor\");\r\n\t\t\toverSoldLabel.set(\"fill\", color);\r\n\r\n\t\t\tthis.overSold.get(\"grid\")!.set(\"stroke\", color);\r\n\t\t\tthis.overSoldRange.fills!.template.set(\"fill\", color);\r\n\t\t\tthis.overSoldRange.strokes!.template.set(\"stroke\", color);\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"overBoughtColor\")) {\r\n\t\t\tconst color = this.get(\"overBoughtColor\");\r\n\t\t\toverBoughtLabel.set(\"fill\", color);\r\n\r\n\t\t\tthis.overBought.get(\"grid\")!.set(\"stroke\", color);\r\n\t\t\tthis.overBoughtRange.fills!.template.set(\"fill\", color);\r\n\t\t\tthis.overBoughtRange.strokes!.template.set(\"stroke\", color);\r\n\t\t}\r\n\t}\r\n}","import type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\n\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMovingAverageSettings extends IIndicatorSettings {\r\n\r\n\t/**\r\n\t * Type of the moving average.\r\n\t *\r\n\t * @default \"simple\"\r\n\t */\r\n\ttype?: \"simple\" | \"weighted\" | \"exponential\" | \"dema\" | \"tema\";\r\n\r\n\t/**\r\n\t * Offset.\r\n\t * \r\n\t * @default 0\r\n\t */\r\n\toffset?: number;\r\n\r\n}\r\n\r\nexport interface IMovingAveragePrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IMovingAverageEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MovingAverage extends Indicator {\r\n\tpublic static className: string = \"MovingAverage\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([MovingAverage.className]);\r\n\r\n\tdeclare public _settings: IMovingAverageSettings;\r\n\tdeclare public _privateSettings: IMovingAveragePrivate;\r\n\tdeclare public _events: IMovingAverageEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"offset\",\r\n\t\tname: this.root.language.translateAny(\"Offset\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"type\",\r\n\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}];\r\n\r\n\tpublic _prepareChildren() {\r\n\r\n\t\tif (this.isDirty(\"type\") || this.isDirty(\"offset\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"type\", this.get(\"type\"));\r\n\t\t\tthis.setCustomData(\"offset\", this.get(\"offset\", 0));\r\n\t\t}\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst series = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"ma\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"movingaverage\"],\r\n\t\t\t\tname: \"MA\"\r\n\t\t\t}))\r\n\r\n\t\t\tseries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\tthis._handleLegend(series);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tlet period = this.get(\"period\", 50);\r\n\t\t\tconst type = this.get(\"type\");\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"simple\":\r\n\t\t\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"weighted\":\r\n\t\t\t\t\tthis._wma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"exponential\":\r\n\t\t\t\t\tthis._ema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dema\":\r\n\t\t\t\t\tthis._dema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tema\":\r\n\t\t\t\t\tthis._tema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tconst offset = this.get(\"offset\", 0);\r\n\r\n\r\n\t\t\tif (offset != 0) {\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tconst baseDuration = (this.series.get(\"xAxis\") as DateAxis<AxisRenderer>).baseDuration();\r\n\t\t\t\tconst len = dataItems.length;\r\n\t\t\t\tconst firstTime = dataItems[0].get(\"valueX\", 0);\r\n\t\t\t\tconst lastTime = dataItems[len - 1].get(\"valueX\", 0);\r\n\r\n\t\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\t\tlet newX: number = 0;\r\n\r\n\t\t\t\t\tif (i + offset >= len) {\r\n\t\t\t\t\t\tnewX = lastTime + (offset - len + i + 1) * baseDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (i + offset < 0) {\r\n\t\t\t\t\t\tnewX = firstTime + (i + offset) * baseDuration;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnewX = dataItems[i + offset].get(\"valueX\", 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.valueX = newX;\r\n\r\n\t\t\t\t\ti++;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMomentumSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IMomentumPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IMomentumEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n * @since 5.4.8\r\n */\r\nexport class Momentum extends ChartIndicator {\r\n\tpublic static className: string = \"Momentum\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Momentum.className]);\r\n\r\n\tdeclare public _settings: IMomentumSettings;\r\n\tdeclare public _privateSettings: IMomentumPrivate;\r\n\tdeclare public _events: IMomentumEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [\r\n\t\t{\r\n\t\t\tkey: \"period\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"field\",\r\n\t\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\t\ttype: \"dropdown\",\r\n\t\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"momentum\");\r\n\t\tsuper._afterNew();\r\n\t}\t\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"valueY\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst period = this.get(\"period\", 14);\r\n\t\t\tconst data: Array<any> = [];\r\n\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tif (i > period) {\r\n\t\t\t\t\tlet value = this._getValue(dataItem);\r\n\t\t\t\t\tlet prevValue = this._getValue(dataItems[i - period]);\r\n\r\n\t\t\t\t\tif (value != undefined && prevValue != undefined) {\r\n\t\t\t\t\t\tdata.push({ valueX: dataItem.get(\"valueX\"), valueY: value - prevValue });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdata.push({ valueX: dataItem.get(\"valueX\") });\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IVWAPSettings extends IIndicatorSettings {\r\n\r\n}\r\n\r\nexport interface IVWAPPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IVWAPEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class VWAP extends Indicator {\r\n\tpublic static className: string = \"VWAP\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([VWAP.className]);\r\n\r\n\tdeclare public _settings: IVWAPSettings;\r\n\tdeclare public _privateSettings: IVWAPPrivate;\r\n\tdeclare public _events: IVWAPEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst series = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"vwap\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"vwap\"],\r\n\t\t\t\tname: \"VWAP\"\r\n\t\t\t}))\r\n\r\n\t\t\tseries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\tthis._handleLegend(series);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tlet period = this.get(\"period\", Infinity);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tif (volumeSeries) {\r\n\t\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\t\tlet i = 0;\r\n\t\t\t\tlet totalVolume = 0;\r\n\t\t\t\tlet totalVW = 0;\r\n\r\n\t\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\tconst volume = volumeDI.get(\"valueY\", 0);\r\n\t\t\t\t\t\tif (volume > 0) {\r\n\t\t\t\t\t\t\tconst vw = dataItem.value_y * volume;\r\n\r\n\t\t\t\t\t\t\tdataItem.vw = vw;\r\n\t\t\t\t\t\t\tdataItem.volume = volume;\r\n\r\n\t\t\t\t\t\t\ttotalVW += vw;\r\n\t\t\t\t\t\t\ttotalVolume += volume;\r\n\r\n\t\t\t\t\t\t\tif (i >= period) {\r\n\t\t\t\t\t\t\t\tlet volumeToRemove = data[i - period].volume;\r\n\t\t\t\t\t\t\t\tlet vwToRemove = data[i - period].vw;\r\n\t\t\t\t\t\t\t\tif (volumeToRemove != null) {\r\n\t\t\t\t\t\t\t\t\ttotalVolume -= volumeToRemove;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (vwToRemove != null) {\r\n\t\t\t\t\t\t\t\t\ttotalVW -= vwToRemove;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tdataItem.totalVW = totalVW;\r\n\t\t\t\t\t\t\tdataItem.vwap = totalVW / totalVolume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti++;\r\n\t\t\t\t})\r\n\t\t\t\tthis.series.data.setAll(data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { MovingAverage, IMovingAverageSettings, IMovingAveragePrivate, IMovingAverageEvents } from \"./MovingAverage\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMovingAverageEnvelopeSettings extends IMovingAverageSettings {\r\n\r\n\t/**\r\n\t * Shift.\r\n\t *\r\n\t * @default 5\r\n\t */\r\n\tshift?: number;\r\n\r\n\t/**\r\n\t * Type of the shift.\r\n\t *\r\n\t * @default \"percent\"\r\n\t */\r\n\tshiftType?: \"percent\" | \"points\";\r\n\r\n\t/**\r\n\t * A color for upper section.\r\n\t */\r\n\tupperColor?: Color;\r\n\r\n\t/**\r\n\t *  A color for lower section.\r\n\t */\r\n\tlowerColor?: Color;\r\n\r\n}\r\n\r\nexport interface IMovingAverageEnvelopePrivate extends IMovingAveragePrivate {\r\n}\r\n\r\nexport interface IMovingAverageEnvelopeEvents extends IMovingAverageEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MovingAverageEnvelope extends MovingAverage {\r\n\tpublic static className: string = \"MovingAverageEnvelope\";\r\n\tpublic static classNames: Array<string> = MovingAverage.classNames.concat([MovingAverageEnvelope.className]);\r\n\r\n\tdeclare public _settings: IMovingAverageEnvelopeSettings;\r\n\tdeclare public _privateSettings: IMovingAverageEnvelopePrivate;\r\n\tdeclare public _events: IMovingAverageEnvelopeEvents;\r\n\r\n\t/**\r\n\t * Indicator series for the upper band.\r\n\t */\r\n\tpublic upperBandSeries!: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the lower band.\r\n\t */\r\n\tpublic lowerBandSeries!: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"type\",\r\n\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"shiftType\",\r\n\t\tname: this.root.language.translateAny(\"Shift type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"percent\", \"points\"]\r\n\t}, {\r\n\t\tkey: \"shift\",\r\n\t\tname: this.root.language.translateAny(\"Shift\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"offset\",\r\n\t\tname: this.root.language.translateAny(\"Offset\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upperColor\",\r\n\t\tname: this.root.language.translateAny(\"Top\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Median\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"lowerColor\",\r\n\t\tname: this.root.language.translateAny(\"Bottom\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst upperBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"upper\",\r\n\t\t\t\topenValueYField: \"lower\",\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"movingaverageenvelope\", \"upper\"]\r\n\t\t\t}))\r\n\r\n\t\t\tupperBandSeries.fills.template.set(\"visible\", true);\r\n\t\t\tupperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n\t\t\tthis.upperBandSeries = upperBandSeries;\r\n\r\n\t\t\tconst lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"lower\",\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"movingaverageenvelope\", \"lower\"]\r\n\t\t\t}))\r\n\r\n\t\t\tlowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.lowerBandSeries = lowerBandSeries;\r\n\t\t}\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.series.addTag(\"movingaverageenvelope\");\r\n\t\tthis.series._applyThemes();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tif (this.isDirty(\"upperColor\")) {\r\n\t\t\tconst color = this.get(\"upperColor\");\r\n\t\t\tconst upperBandSeries = this.upperBandSeries;\r\n\t\t\tupperBandSeries.set(\"stroke\", color);\r\n\t\t\tupperBandSeries.set(\"fill\", color);\r\n\t\t\tupperBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(upperBandSeries, color, \"upperColor\");\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"lowerColor\")) {\r\n\t\t\tconst color = this.get(\"lowerColor\");\r\n\t\t\tconst lowerBandSeries = this.lowerBandSeries;\r\n\t\t\tlowerBandSeries.set(\"stroke\", color);\r\n\t\t\tlowerBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(lowerBandSeries, color, \"lowerColor\");\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"shiftType\") || this.isDirty(\"shift\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"shift\", this.get(\"shift\"));\r\n\t\t\tthis.setCustomData(\"shiftType\", this.get(\"shiftType\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\t\t\tlet smaData = this.series.data.values as any;\r\n\t\t\tlet shift = Number(this.get(\"shift\", 5));\r\n\t\t\tlet shiftType = this.get(\"shiftType\");\r\n\r\n\t\t\t$array.each(smaData, (dataItem: any) => {\r\n\t\t\t\tlet value = dataItem.ma;\r\n\t\t\t\tif (value != null) {\r\n\t\t\t\t\tlet upper = value;\r\n\t\t\t\t\tlet lower = value;\r\n\t\t\t\t\tif (shiftType == \"points\") {\r\n\t\t\t\t\t\tupper += shift;\r\n\t\t\t\t\t\tlower -= shift;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tupper += upper * shift / 100;\r\n\t\t\t\t\t\tlower -= lower * shift / 100;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.upper = upper;\r\n\t\t\t\t\tdataItem.lower = lower;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.upperBandSeries.data.setAll(smaData);\r\n\t\t\tthis.lowerBandSeries.data.setAll(smaData);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tthis.upperBandSeries.dispose();\r\n\t\tthis.lowerBandSeries.dispose();\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\tpublic async hide(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.hide(duration),\r\n\t\t\tthis.upperBandSeries.hide(duration),\r\n\t\t\tthis.lowerBandSeries.hide(duration)\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic async show(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.show(duration),\r\n\t\t\tthis.upperBandSeries.show(duration),\r\n\t\t\tthis.lowerBandSeries.show(duration)\r\n\t\t]);\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { Color } from \"../../../core/util/Color\";\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMovingAverageDeviationSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Increasing color.\r\n\t */\r\n\tincreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Decreasing color.\r\n\t */\r\n\tdecreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Type of the moving average.\r\n\t *\r\n\t * @default \"simple\"\r\n\t */\r\n\ttype?: \"simple\" | \"weighted\" | \"exponential\" | \"dema\" | \"tema\";\r\n\r\n\t/**\r\n\t * How units are calculated.\r\n\t *\r\n\t * @default \"points\"\r\n\t */\r\n\tunit?: \"points\" | \"percent\"\r\n\r\n}\r\n\r\nexport interface IMovingAverageDeviationPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IMovingAverageDeviationEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MovingAverageDeviation extends ChartIndicator {\r\n\tpublic static className: string = \"MovingAverageDeviation\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([MovingAverageDeviation.className]);\r\n\r\n\tdeclare public _settings: IMovingAverageDeviationSettings;\r\n\tdeclare public _privateSettings: IMovingAverageDeviationPrivate;\r\n\tdeclare public _events: IMovingAverageDeviationEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [\r\n\t\t{\r\n\t\t\tkey: \"period\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"field\",\r\n\t\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\t\ttype: \"dropdown\",\r\n\t\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t\t}, {\r\n\t\t\tkey: \"type\",\r\n\t\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\t\ttype: \"dropdown\",\r\n\t\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t\t}, {\r\n\t\t\tkey: \"unit\",\r\n\t\t\tname: this.root.language.translateAny(\"Points/Percent\"),\r\n\t\t\ttype: \"dropdown\",\r\n\t\t\toptions: [\"points\", \"percent\"]\r\n\t\t},\r\n\t\t{\r\n\t\t\tkey: \"increasingColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Increasing\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}, {\r\n\t\t\tkey: \"decreasingColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Decreasing\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"movingaveragedeviation\");\r\n\t\tsuper._afterNew();\r\n\t}\t\t\r\n\r\n\tpublic _createSeries(): ColumnSeries {\r\n\t\treturn this.panel.series.push(ColumnSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"deviation\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"increasingColor\") || this.isDirty(\"decreasingColor\")) {\r\n\t\t\tconst template = this.series.columns.template;\r\n\t\t\tconst increasing = this.get(\"increasingColor\");\r\n\t\t\tconst decreasing = this.get(\"decreasingColor\");\r\n\t\t\ttemplate.states.create(\"riseFromPrevious\", { fill: increasing, stroke: increasing });\r\n\t\t\ttemplate.states.create(\"dropFromPrevious\", { fill: decreasing, stroke: decreasing });\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"type\") || this.isDirty(\"unit\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\r\n\t\t\tlet decreasingColor = this.get(\"decreasingColor\", Color.fromHex(0xff0000)).toCSSHex();\r\n\t\t\tlet increasingColor = this.get(\"increasingColor\", Color.fromHex(0x00ff00)).toCSSHex();\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 50);\r\n\t\t\tconst type = this.get(\"type\");\r\n\t\t\tconst unit = this.get(\"unit\");\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"simple\":\r\n\t\t\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"weighted\":\r\n\t\t\t\t\tthis._wma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"exponential\":\r\n\t\t\t\t\tthis._ema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dema\":\r\n\t\t\t\t\tthis._dema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tema\":\r\n\t\t\t\t\tthis._tema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet previous = -Infinity;\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (i >= period) {\r\n\t\t\t\t\tlet deviation = dataItem.value_y - dataItem.ma;\r\n\t\t\t\t\tif (unit == \"percent\") {\r\n\t\t\t\t\t\tdeviation = (dataItem.value_y / dataItem.ma - 1) * 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet color = increasingColor;\r\n\r\n\t\t\t\t\tif (deviation < previous) {\r\n\t\t\t\t\t\tcolor = decreasingColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.deviation = deviation;\r\n\t\t\t\t\tdataItem.deviationColor = color;\r\n\t\t\t\t\tprevious = deviation;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAccelerationBandsSettings extends IIndicatorSettings {\r\n    /**\r\n     * A color for upper section.\r\n     */\r\n    upperColor?: Color;\r\n\r\n    /**\r\n     * A color for lower section.\r\n     */\r\n    lowerColor?: Color;\r\n\r\n\r\n    factor?: number;\r\n}\r\n\r\nexport interface IAccelerationBandsPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IAccelerationBandsEvents extends IIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AccelerationBands extends Indicator {\r\n    public static className: string = \"AccelerationBands\";\r\n    public static classNames: Array<string> = Indicator.classNames.concat([AccelerationBands.className]);\r\n\r\n    declare public _settings: IAccelerationBandsSettings;\r\n    declare public _privateSettings: IAccelerationBandsPrivate;\r\n    declare public _events: IAccelerationBandsEvents;\r\n\r\n    /**\r\n     * Indicator series for the upper band.\r\n     */\r\n    public upperBandSeries!: LineSeries;\r\n\r\n    /**\r\n     * Indicator series for the lower band.\r\n     */\r\n    public lowerBandSeries!: LineSeries;\r\n\r\n    public _editableSettings: IIndicatorEditableSetting[] = [{\r\n        key: \"period\",\r\n        name: this.root.language.translateAny(\"Period\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"factor\",\r\n        name: this.root.language.translateAny(\"Factor\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"upperColor\",\r\n        name: this.root.language.translateAny(\"Upper\"),\r\n        type: \"color\"\r\n    }, {\r\n        key: \"seriesColor\",\r\n        name: this.root.language.translateAny(\"Average\"),\r\n        type: \"color\"\r\n    }, {\r\n        key: \"lowerColor\",\r\n        name: this.root.language.translateAny(\"Lower\"),\r\n        type: \"color\"\r\n    }];\r\n\r\n    protected _afterNew() {\r\n\r\n        const stockSeries = this.get(\"stockSeries\");\r\n        const chart = stockSeries.chart;\r\n\r\n        if (chart) {\r\n\r\n            const series = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"average\",\r\n                groupDataDisabled: true,\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"average\"]\r\n            }))\r\n\r\n            series.setPrivate(\"baseValueSeries\", stockSeries);\r\n            this.series = series;\r\n\r\n            const upperBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"upper\",\r\n                openValueYField: \"lower\",\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                groupDataDisabled: true,\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"upper\"]\r\n            }))\r\n\r\n            upperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n            this.upperBandSeries = upperBandSeries;\r\n\r\n            const lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"lower\",\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                groupDataDisabled: true,\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"lower\"]\r\n            }))\r\n\r\n            lowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n            this.lowerBandSeries = lowerBandSeries;\r\n        }\r\n\r\n        this._handleLegend(this.series);\r\n\r\n        super._afterNew();\r\n        this.series.addTag(\"accelerationbands\");\r\n        this.series._applyThemes();\r\n    }\r\n\r\n    public _prepareChildren() {\r\n\r\n        if (this.isDirty(\"factor\")) {\r\n            this.markDataDirty();\r\n            this.setCustomData(\"factor\", this.get(\"factor\"));\r\n        }\r\n\r\n        super._prepareChildren();\r\n    }\r\n\r\n    public _updateChildren() {\r\n        super._updateChildren();\r\n        const upperColor = \"upperColor\";\r\n        if (this.isDirty(upperColor)) {\r\n            const color = this.get(upperColor);\r\n            const upperBandSeries = this.upperBandSeries;\r\n            upperBandSeries.set(\"stroke\", color);\r\n            upperBandSeries.set(\"fill\", color);\r\n            upperBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n            this._updateSeriesColor(upperBandSeries, color, upperColor);\r\n        }\r\n\r\n        const lowerColor = \"lowerColor\";\r\n        if (this.isDirty(lowerColor)) {\r\n            const color = this.get(lowerColor);\r\n            const lowerBandSeries = this.lowerBandSeries;\r\n            lowerBandSeries.set(\"stroke\", color);\r\n            lowerBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n            this._updateSeriesColor(lowerBandSeries, color, lowerColor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public prepareData() {\r\n        super.prepareData();\r\n\r\n        if (this.series) {\r\n\r\n            let period = this.get(\"period\", 20);\r\n\r\n            const stockSeries = this.get(\"stockSeries\");\r\n            const dataItems = stockSeries.dataItems;\r\n\r\n            let data = this._getDataArray(dataItems);\r\n            let factor = this.get(\"factor\", 0.001);\r\n\r\n            let i = 0;\r\n\r\n            $array.each(data, (dataItem: any) => {\r\n                let stockDataItem = dataItems[i];\r\n\r\n                if (stockDataItem) {\r\n                    let low = stockDataItem.get(\"lowValueY\");\r\n                    let high = stockDataItem.get(\"highValueY\");\r\n\r\n                    if ($type.isNumber(low) && $type.isNumber(high) && high + low != 0) {\r\n                        dataItem._lower = (high * (1 + 2 * ((((high - low) / ((high + low) / 2)) * 1000) * factor)));\r\n                        dataItem._upper = (low * (1 - 2 * ((((high - low) / ((high + low) / 2)) * 1000) * factor)));\r\n                        dataItem._average = dataItem._lower + (dataItem._upper - dataItem._lower) / 2;\r\n                    }\r\n                }\r\n                i++;\r\n            })\r\n\r\n            this._sma(data, period, \"_lower\", \"lower\");\r\n            this._sma(data, period, \"_upper\", \"upper\");\r\n            this._sma(data, period, \"_average\", \"average\");\r\n\r\n            this.upperBandSeries.data.setAll(data);\r\n            this.lowerBandSeries.data.setAll(data);\r\n            this.series.data.setAll(data);\r\n        }\r\n    }\r\n\r\n    protected _dispose() {\r\n        this.upperBandSeries.dispose();\r\n        this.lowerBandSeries.dispose();\r\n        super._dispose();\r\n    }\r\n\r\n    public async hide(duration?: number): Promise<any> {\r\n        return Promise.all([\r\n            super.hide(duration),\r\n            this.upperBandSeries.hide(duration),\r\n            this.lowerBandSeries.hide(duration)\r\n        ]);\r\n    }\r\n\r\n    public async show(duration?: number): Promise<any> {\r\n        return Promise.all([\r\n            super.show(duration),\r\n            this.upperBandSeries.show(duration),\r\n            this.lowerBandSeries.show(duration)\r\n        ]);\r\n    }\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { MovingAverage, IMovingAverageSettings, IMovingAveragePrivate, IMovingAverageEvents } from \"./MovingAverage\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IBollingerBandsSettings extends IMovingAverageSettings {\r\n\r\n\t/**\r\n\t * A value of standard deviations.\r\n\t */\r\n\tstandardDeviations?: number;\r\n\r\n\t/**\r\n\t * A color for upper section.\r\n\t */\r\n\tupperColor?: Color;\r\n\r\n\t/**\r\n\t * A color for lower section.\r\n\t */\r\n\tlowerColor?: Color;\r\n\r\n}\r\n\r\nexport interface IBollingerBandsPrivate extends IMovingAveragePrivate {\r\n}\r\n\r\nexport interface IBollingerBandsEvents extends IMovingAverageEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class BollingerBands extends MovingAverage {\r\n\tpublic static className: string = \"BollingerBands\";\r\n\tpublic static classNames: Array<string> = MovingAverage.classNames.concat([BollingerBands.className]);\r\n\r\n\tdeclare public _settings: IBollingerBandsSettings;\r\n\tdeclare public _privateSettings: IBollingerBandsPrivate;\r\n\tdeclare public _events: IBollingerBandsEvents;\r\n\r\n\t/**\r\n\t * Indicator series for the upper band.\r\n\t */\r\n\tpublic upperBandSeries!: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the lower band.\r\n\t */\r\n\tpublic lowerBandSeries!: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"standardDeviations\",\r\n\t\tname: this.root.language.translateAny(\"Deviation\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upperColor\",\r\n\t\tname: this.root.language.translateAny(\"Upper\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Average\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"lowerColor\",\r\n\t\tname: this.root.language.translateAny(\"Lower\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"type\",\r\n\t\tname: this.root.language.translateAny(\"Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}];\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst upperBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"upper\",\r\n\t\t\t\topenValueYField: \"lower\",\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"bollingerbands\", \"upper\"]\r\n\t\t\t}))\r\n\r\n\t\t\tupperBandSeries.fills.template.set(\"visible\", true);\r\n\t\t\tupperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n\t\t\tthis.upperBandSeries = upperBandSeries;\r\n\r\n\t\t\tconst lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"lower\",\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"bollingerbands\", \"lower\"]\r\n\t\t\t}))\r\n\r\n\t\t\tlowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.lowerBandSeries = lowerBandSeries;\r\n\t\t}\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.series.addTag(\"bollingerbands\");\r\n\t\tthis.series._applyThemes();\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\r\n\t\tif (this.isDirty(\"standardDeviations\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tconst upperColor = \"upperColor\";\r\n\t\tif (this.isDirty(upperColor)) {\r\n\t\t\tconst color = this.get(upperColor);\r\n\t\t\tconst upperBandSeries = this.upperBandSeries;\r\n\t\t\tupperBandSeries.set(\"stroke\", color);\r\n\t\t\tupperBandSeries.set(\"fill\", color);\r\n\t\t\tupperBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(upperBandSeries, color, upperColor);\r\n\t\t}\r\n\r\n\t\tconst lowerColor = \"lowerColor\";\r\n\t\tif (this.isDirty(lowerColor)) {\r\n\t\t\tconst color = this.get(lowerColor);\r\n\t\t\tconst lowerBandSeries = this.lowerBandSeries;\r\n\t\t\tlowerBandSeries.set(\"stroke\", color);\r\n\t\t\tlowerBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n\t\t\tthis._updateSeriesColor(lowerBandSeries, color, lowerColor);\r\n\t\t}\r\n\r\n\t\tthis.setCustomData(\"standardDeviations\", this.get(\"standardDeviations\"));\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet standardDeviations = this.get(\"standardDeviations\", 2);\r\n\r\n\t\t\tlet smaData = this.series.data.values as any;\r\n\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\t$array.each(smaData, (dataItem: any) => {\r\n\t\t\t\tif (i >= period - 1) {\r\n\t\t\t\t\tlet mean = dataItem.ma;\r\n\r\n\t\t\t\t\tlet stdSum = 0;\r\n\t\t\t\t\tfor (let j = i - period + 1; j <= i; j++) {\r\n\t\t\t\t\t\tlet di = dataItems[j];\r\n\t\t\t\t\t\tlet diValue = this._getValue(di);\r\n\t\t\t\t\t\tif (diValue != null) {\r\n\t\t\t\t\t\t\tstdSum += Math.pow(diValue - mean, 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet std = Math.sqrt(stdSum / period);\r\n\r\n\t\t\t\t\tconst lower = mean - standardDeviations * std;\r\n\t\t\t\t\tconst upper = mean + standardDeviations * std;\r\n\r\n\t\t\t\t\tdataItem.upper = upper;\r\n\t\t\t\t\tdataItem.lower = lower;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.upperBandSeries.data.setAll(smaData);\r\n\t\t\tthis.lowerBandSeries.data.setAll(smaData);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tthis.upperBandSeries.dispose();\r\n\t\tthis.lowerBandSeries.dispose();\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\tpublic async hide(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.hide(duration),\r\n\t\t\tthis.upperBandSeries.hide(duration),\r\n\t\t\tthis.lowerBandSeries.hide(duration)\r\n\t\t]);\r\n\t}\r\n\r\n\tpublic async show(duration?: number): Promise<any> {\r\n\t\treturn Promise.all([\r\n\t\t\tsuper.show(duration),\r\n\t\t\tthis.upperBandSeries.show(duration),\r\n\t\t\tthis.lowerBandSeries.show(duration)\r\n\t\t]);\r\n\t}\r\n}","import { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IRelativeStrengthIndexSettings extends IOverboughtOversoldSettings {\r\n\t/**\r\n\t * EMA period.\r\n\t */\r\n\tsmaPeriod?: number;\r\n\r\n\t/**\r\n\t * A color for \"ema\" line.\r\n\t */\r\n\tsmaColor?: Color;\r\n}\r\n\r\nexport interface IRelativeStrengthIndexPrivate extends IOverboughtOversoldPrivate { }\r\n\r\nexport interface IRelativeStrengthIndexEvents extends IOverboughtOversoldEvents { }\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class RelativeStrengthIndex extends OverboughtOversold {\r\n\tpublic static className: string = \"RelativeStrengthIndex\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([RelativeStrengthIndex.className]);\r\n\r\n\tdeclare public _settings: IRelativeStrengthIndexSettings;\r\n\tdeclare public _privateSettings: IRelativeStrengthIndexPrivate;\r\n\tdeclare public _events: IRelativeStrengthIndexEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tpublic smaSeries!: LineSeries;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tthis._themeTags.push(\"rsi\");\r\n\t\tsuper._afterNew();\r\n\t\tthis._editableSettings.unshift({\r\n\t\t\tkey: \"period\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}, {\r\n\t\t\tkey: \"field\",\r\n\t\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\t\ttype: \"dropdown\",\r\n\t\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t\t}, {\r\n\t\t\tkey: \"smaPeriod\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"smaColor\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t})\r\n\r\n\t\tconst smaSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"sma\",\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tgroupDataDisabled: true,\r\n\t\t\tthemeTags: [\"indicator\", \"sma\"]\r\n\t\t}))\r\n\r\n\t\tthis.smaSeries = smaSeries;\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tif (this.isDirty(\"smaColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.smaSeries, this.get(\"smaColor\"), \"smaColor\")\r\n\t\t}\r\n\t\tif (this.isDirty(\"smaPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"smaPeriod\", this.get(\"smaPeriod\"));\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\t\t\tconst data: Array<any> = [];\r\n\t\t\tlet i = 0;\r\n\t\t\tlet averageGain = 0;\r\n\t\t\tlet averageLoss = 0;\r\n\t\t\tlet prevAverageGain = 0;\r\n\t\t\tlet prevAverageLoss = 0;\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tlet rsi = null;\r\n\t\t\t\ti++;\r\n\t\r\n\t\t\t\tif (i == period + 1) {\r\n\t\t\t\t\tfor (let j = 1; j <= period; j++) {\r\n\t\t\t\t\t\tlet value = this._getValue(dataItems[j]);\r\n\t\t\t\t\t\tlet prevValue = this._getValue(dataItems[j - 1]);\r\n\t\t\t\t\t\tif (value != undefined && prevValue != undefined) {\r\n\t\t\t\t\t\t\tlet change = value - prevValue;\r\n\r\n\t\t\t\t\t\t\tif (change >= 0) {\r\n\t\t\t\t\t\t\t\taverageGain += change / period;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\taverageLoss += Math.abs(change) / period;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\trsi = 100 - (100 / (1 + averageGain / averageLoss));\r\n\r\n\t\t\t\t\tif($type.isNaN(rsi)){\r\n\t\t\t\t\t\trsi = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (i > period) {\r\n\t\t\t\t\tlet value = this._getValue(dataItem);\r\n\t\t\t\t\tlet prevValue = this._getValue(dataItems[i - 2]);\r\n\t\t\t\t\tif (value != null && prevValue != null) {\r\n\t\t\t\t\t\tlet change = value - prevValue;\r\n\r\n\t\t\t\t\t\tlet gain = 0;\r\n\t\t\t\t\t\tlet loss = 0;\r\n\r\n\t\t\t\t\t\tif (change > 0) {\r\n\t\t\t\t\t\t\tgain = change;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tloss = -change;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\taverageGain = (prevAverageGain * (period - 1) + gain) / period;\r\n\t\t\t\t\t\taverageLoss = (prevAverageLoss * (period - 1) + loss) / period;\r\n\r\n\t\t\t\t\t\trsi = 100 - (100 / (1 + averageGain / averageLoss));\r\n\r\n\r\n\t\t\t\t\t\tif(isNaN(rsi)){\r\n\t\t\t\t\t\t\trsi = 0;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.push({ valueX: dataItem.get(\"valueX\"), valueS: rsi });\r\n\r\n\t\t\t\tprevAverageGain = averageGain;\r\n\t\t\t\tprevAverageLoss = averageLoss;\r\n\t\t\t})\r\n\t\t\tthis.series.data.setAll(data);\r\n\r\n\t\t\tperiod = this.get(\"smaPeriod\", 3);\r\n\t\t\tthis._sma(data, period, \"valueS\", \"sma\");\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.smaSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAccumulationDistributionSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Main volume series of the [[StockChart]].\r\n\t */\r\n\tvolumeSeries?: XYSeries;\r\n\r\n\t/**\r\n\t * Use volume series (if set)?\r\n\t */\r\n\tuseVolume?: boolean;\r\n\r\n}\r\n\r\nexport interface IAccumulationDistributionPrivate extends IChartIndicatorPrivate {\r\n\r\n}\r\n\r\nexport interface IAccumulationDistributionEvents extends IChartIndicatorEvents {\r\n\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AccumulationDistribution extends ChartIndicator {\r\n\tpublic static className: string = \"AccumulationDistribution\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([AccumulationDistribution.className]);\r\n\r\n\tdeclare public _settings: IAccumulationDistributionSettings;\r\n\tdeclare public _privateSettings: IAccumulationDistributionPrivate;\r\n\tdeclare public _events: IAccumulationDistributionEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"useVolume\",\r\n\t\tname: this.root.language.translateAny(\"Use Volume\"),\r\n\t\ttype: \"checkbox\"\r\n\t}];\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis._themeTags.push(\"accumulationdistribution\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"ad\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tconst useVolume = \"useVolume\";\r\n\t\tif (this.isDirty(useVolume)) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(useVolume, this.get(useVolume) ? \"Y\" : \"N\");\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet prevAD = 0;\r\n\t\t\tlet useVolume = this.get(\"useVolume\");\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tlet close = dataItem.get(\"valueY\") as number;\r\n\t\t\t\tif (close != null) {\r\n\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", close) as number;\r\n\t\t\t\t\tlet high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n\t\t\t\t\tlet volume = 1;\r\n\t\t\t\t\tif (volumeSeries && useVolume) {\r\n\t\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mf = ((close - low) - (high - close)) / (high - low)\r\n\t\t\t\t\tif (high == low) {\r\n\t\t\t\t\t\tmf = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet ad = prevAD + mf * volume;\r\n\t\t\t\t\tdata[i].ad = ad;\r\n\r\n\t\t\t\t\tprevAD = ad\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { ILineSeriesAxisRange } from \"../../xy/series/LineSeries\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { IValueAxisDataItem } from \"../../xy/axes/ValueAxis\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport { Color } from \"../../../core/util/Color\";\r\n\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IAccumulativeSwingIndexSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * A \"limit move\" value.\r\n\t */\r\n\tlimitMoveValue?: number;\r\n\r\n\t/**\r\n\t * Positive color.\r\n\t */\r\n\tpositiveColor?: Color;\r\n\r\n\t/**\r\n\t * Negative color.\r\n\t */\r\n\tnegativeColor?: Color;\r\n\r\n}\r\n\r\nexport interface IAccumulativeSwingIndexPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IAccumulativeSwingIndexEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AccumulativeSwingIndex extends ChartIndicator {\r\n\tpublic static className: string = \"AccumulativeSwingIndex\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([AccumulativeSwingIndex.className]);\r\n\r\n\tdeclare public _settings: IAccumulativeSwingIndexSettings;\r\n\tdeclare public _privateSettings: IAccumulativeSwingIndexPrivate;\r\n\tdeclare public _events: IAccumulativeSwingIndexEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"positiveColor\",\r\n\t\tname: this.root.language.translateAny(\"Positive color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"negativeColor\",\r\n\t\tname: this.root.language.translateAny(\"Negative color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"limitMoveValue\",\r\n\t\tname: this.root.language.translateAny(\"Limit move value\"),\r\n\t\ttype: \"number\"\r\n\t}];\r\n\r\n\tprotected _axisRange?: ILineSeriesAxisRange;\r\n\tprotected _axisRangeDI?: DataItem<IValueAxisDataItem>;\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis._themeTags.push(\"accumulativeswingindex\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\tconst series = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"asi\"\r\n\t\t}))\r\n\r\n\t\tconst dataItem = this.yAxis.makeDataItem({})\r\n\t\tthis._axisRangeDI = dataItem;\r\n\t\tdataItem.set(\"value\", 0);\r\n\t\tdataItem.set(\"endValue\", -100);\r\n\t\tthis._axisRange = series.createAxisRange(dataItem);\r\n\r\n\t\tthis.yAxis.onPrivate(\"min\", (min) => {\r\n\t\t\tdataItem.set(\"endValue\", min);\r\n\t\t})\r\n\r\n\t\treturn series;\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tconst limitMoveValue = \"limitMoveValue\";\r\n\t\tif (this.isDirty(limitMoveValue)) {\r\n\t\t\tthis.setCustomData(limitMoveValue, this.get(limitMoveValue));\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\r\n\t\tconst series = this.series;\r\n\t\tif (this.isDirty(\"positiveColor\")) {\r\n\t\t\tlet color = this.get(\"positiveColor\");\r\n\t\t\tseries.setAll({ fill: color, stroke: color });\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"negativeColor\")) {\r\n\t\t\tlet color = this.get(\"negativeColor\");\r\n\t\t\tlet axisRange = this._axisRange;\r\n\t\t\tif (axisRange) {\r\n\t\t\t\tconst fills = axisRange.fills;\r\n\t\t\t\tif (fills) {\r\n\t\t\t\t\tfills.template.set(\"fill\", color);\r\n\t\t\t\t}\r\n\t\t\t\tconst strokes = axisRange.strokes;\r\n\t\t\t\tif (strokes) {\r\n\t\t\t\t\tstrokes.template.set(\"stroke\", color);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\r\n\t\t\tlet t = this.get(\"limitMoveValue\", 0.5);\r\n\r\n\t\t\tlet asi = 0;\r\n\r\n\t\t\tlet negativeColor = this.get(\"negativeColor\", Color.fromHex(0xff0000)).toCSSHex();\r\n\t\t\tlet positiveColor = this.get(\"positiveColor\", Color.fromHex(0x00ff00)).toCSSHex();\r\n\r\n\t\t\tif (dataItems.length > 2) {\r\n\r\n\t\t\t\tdata[0].asi = 0;\r\n\t\t\t\tdata[0].swingColor = positiveColor;\r\n\r\n\t\t\t\tfor (let i = 1, len = dataItems.length; i < len; i++) {\r\n\t\t\t\t\tconst dataItem = dataItems[i];\r\n\t\t\t\t\tconst yDataItem = dataItems[i - 1];\r\n\r\n\t\t\t\t\tlet c = dataItem.get(\"valueY\");\r\n\t\t\t\t\tif ($type.isNumber(c)) {\r\n\t\t\t\t\t\tlet cy = yDataItem.get(\"valueY\", c);\r\n\r\n\t\t\t\t\t\tlet h = dataItem.get(\"highValueY\", c);\r\n\t\t\t\t\t\tlet l = dataItem.get(\"lowValueY\", c);\r\n\t\t\t\t\t\tlet o = dataItem.get(\"openValueY\", c);\r\n\t\t\t\t\t\tlet oy = yDataItem.get(\"openValueY\", c);\r\n\r\n\t\t\t\t\t\tlet hl = h - l;\r\n\t\t\t\t\t\tlet hc = Math.abs(h - cy);\r\n\t\t\t\t\t\tlet lc = Math.abs(l - cy);\r\n\t\t\t\t\t\tlet tr = Math.max(hc, lc, hl);\r\n\r\n\t\t\t\t\t\tlet er = 0;\r\n\t\t\t\t\t\tif (cy > h) {\r\n\t\t\t\t\t\t\ter = hc;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (cy < l) {\r\n\t\t\t\t\t\t\ter = lc;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet k = Math.max(hc, lc);\r\n\r\n\t\t\t\t\t\tlet sh = Math.abs(cy - oy);\r\n\r\n\t\t\t\t\t\tlet r = tr - er / 2 + sh / 4;\r\n\r\n\t\t\t\t\t\tlet dasi = 50 * (c - cy + (c - o) / 2 + (cy - oy) / 4) / r * k / t;\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(dasi)) {\r\n\t\t\t\t\t\t\tasi += dasi;\r\n\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\tlet color = positiveColor;\r\n\t\t\t\t\t\tif (asi < 0) {\r\n\t\t\t\t\t\t\tcolor = negativeColor;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdata[i].asi = asi;\r\n\t\t\t\t\t\tdata[i].swingColor = color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { Color } from \"../../../core/util/Color\";\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAroonSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Color for ups.\r\n\t */\r\n\tupColor?: Color;\r\n\r\n\t/**\r\n\t * Color for downs.\r\n\t */\r\n\tdownColor?: Color;\r\n\r\n}\r\n\r\nexport interface IAroonPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IAroonEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class Aroon extends ChartIndicator {\r\n\tpublic static className: string = \"Aroon\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Aroon.className]);\r\n\r\n\tdeclare public _settings: IAroonSettings;\r\n\tdeclare public _privateSettings: IAroonPrivate;\r\n\tdeclare public _events: IAroonEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for downs.\r\n\t */\r\n\tdeclare public downSeries: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upColor\",\r\n\t\tname: this.root.language.translateAny(\"Aroon up\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"downColor\",\r\n\t\tname: this.root.language.translateAny(\"Aroon down\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"up\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"aroon\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.downSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"down\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\r\n\t\tthis.yAxis.setAll({ min: -1, max: 101, strictMinMax: true, numberFormat: \"#'%'\" });\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tconst upColor  = \"upColor\";\r\n\t\tif (this.isDirty(upColor)) {\r\n\t\t\tlet color = this.get(upColor, Color.fromHex(0x00ff00));\r\n\t\t\tthis._updateSeriesColor(this.series, color);\r\n\t\t\tthis.setCustomData(upColor, color);\r\n\t\t}\r\n\r\n\t\tconst downColor = \"downColor\";\r\n\t\tif (this.isDirty(downColor)) {\r\n\t\t\tlet color = this.get(downColor, Color.fromHex(0xff0000));\r\n\t\t\tthis._updateSeriesColor(this.downSeries, color);\r\n\t\t\tthis.setCustomData(downColor, color);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tthis.set(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet b = Math.max(0, i - period);\r\n\t\t\t\tlet h = -Infinity;\r\n\t\t\t\tlet l = Infinity;\r\n\r\n\t\t\t\tlet li = 0;\r\n\t\t\t\tlet hi = 0;\r\n\r\n\t\t\t\tfor (let j = b; j <= i; j++) {\r\n\t\t\t\t\tlet vh = dataItems[j].get(\"highValueY\", 0);\r\n\t\t\t\t\tif (vh >= h) {\r\n\t\t\t\t\t\th = vh;\r\n\t\t\t\t\t\thi = j;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet vl = dataItems[j].get(\"lowValueY\", 0);\r\n\t\t\t\t\tif (vl <= l) {\r\n\t\t\t\t\t\tl = vl;\r\n\t\t\t\t\t\tli = j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataItem.up = (period - (i - hi)) / period * 100;\r\n\t\t\t\tdataItem.down = (period - (i - li)) / period * 100;\r\n\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.downSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { color, Color } from \"../../../core/util/Color\";\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMACDSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Increasing color.\r\n\t */\r\n\tincreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Decreasing color.\r\n\t */\r\n\tdecreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Signal color.\r\n\t */\r\n\tsignalColor?: Color;\r\n\r\n\t/**\r\n\t * A value for \"fast\" period.\r\n\t */\r\n\tfastPeriod?: number;\r\n\r\n\t/**\r\n\t * A value for \"slow\" period.\r\n\t */\r\n\tslowPeriod?: number;\r\n\r\n\t/**\r\n\t * A value for \"signal\" period.\r\n\t */\r\n\tsignalPeriod?: number;\r\n\r\n}\r\n\r\nexport interface IMACDPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IMACDEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MACD extends ChartIndicator {\r\n\tpublic static className: string = \"MACD\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([MACD.className]);\r\n\r\n\tdeclare public _settings: IMACDSettings;\r\n\tdeclare public _privateSettings: IMACDPrivate;\r\n\tdeclare public _events: IMACDEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the signal.\r\n\t */\r\n\tpublic signalSeries!: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the difference.\r\n\t */\r\n\tpublic differenceSeries!: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"fastPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Fast MA period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"slowPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Slow MA period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"signalPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Signal period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"MACD\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"signalColor\",\r\n\t\tname: this.root.language.translateAny(\"Signal\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"increasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Increasing\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"decreasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Decreasing\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"macd\",\r\n\t\t\tgroupDataDisabled: true,\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"macd\");\r\n\r\n\t\tsuper._afterNew();\t\t\r\n\r\n\t\tconst chart = this.panel;\r\n\r\n\t\tif (chart) {\r\n\r\n\t\t\tconst signalSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"signal\",\r\n\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\tyAxis: this.yAxis,\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"signal\"]\r\n\t\t\t}))\r\n\r\n\t\t\tthis.signalSeries = signalSeries;\r\n\r\n\t\t\tconst differenceSeries = chart.series.push(ColumnSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"difference\",\r\n\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\tyAxis: this.yAxis,\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"difference\"]\r\n\t\t\t}))\r\n\r\n\t\t\tthis.differenceSeries = differenceSeries;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"fastPeriod\") || this.isDirty(\"slowPeriod\") || this.isDirty(\"signalPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"fastPeriod\", this.get(\"fastPeriod\"));\r\n\t\t\tthis.setCustomData(\"slowPeriod\", this.get(\"slowPeriod\"));\r\n\t\t\tthis.setCustomData(\"signalPeriod\", this.get(\"signalPeriod\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"increasingColor\") || this.isDirty(\"decreasingColor\")) {\r\n\t\t\tconst template = this.differenceSeries.columns.template;\r\n\t\t\tconst increasing = this.get(\"increasingColor\");\r\n\t\t\tconst decreasing = this.get(\"decreasingColor\");\r\n\t\t\ttemplate.states.create(\"riseFromPrevious\", { fill: increasing, stroke: increasing });\r\n\t\t\ttemplate.states.create(\"dropFromPrevious\", { fill: decreasing, stroke: decreasing });\r\n\t\t\tthis._dataDirty = true;\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"signalColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.signalSeries, this.get(\"signalColor\"), \"signalColor\");\r\n\t\t}\r\n\r\n\t\tconst dataItem = this.series.dataItem;\r\n\t\tif (dataItem) {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tdataContext.fastPeriod = this.get(\"fastPeriod\");\r\n\t\t\t\tdataContext.slowPeriod = this.get(\"slowPeriod\");\r\n\t\t\t\tdataContext.signalPeriod = this.get(\"signalPeriod\");\r\n\r\n\t\t\t\tconst seriesColor = this.get(\"seriesColor\");\r\n\t\t\t\tif (seriesColor) {\r\n\t\t\t\t\tdataContext.seriesColor = seriesColor.toCSSHex();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst signalColor = this.get(\"signalColor\");\r\n\t\t\t\tif (signalColor) {\r\n\t\t\t\t\tdataContext.signalColor = signalColor.toCSSHex();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = this.get(\"fastPeriod\", 12);\r\n\r\n\t\t\tthis._ema(data, period, \"value_y\", \"emaFast\");\r\n\r\n\t\t\tperiod = this.get(\"slowPeriod\", 26);\r\n\t\t\tthis._ema(data, period, \"value_y\", \"emaSlow\");\r\n\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet emaFast = dataItem.emaFast;\r\n\t\t\t\tlet emaSlow = dataItem.emaSlow;\r\n\r\n\t\t\t\tif (emaFast != null && emaSlow != null) {\r\n\t\t\t\t\tdataItem.macd = emaFast - emaSlow;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tperiod = this.get(\"signalPeriod\", 9);\r\n\t\t\tthis._ema(data, period, \"macd\", \"signal\");\r\n\r\n\t\t\tconst increasingColor = this.get(\"increasingColor\", color(0x00ff00)).toCSSHex();\r\n\t\t\tconst decreasingColor = this.get(\"decreasingColor\", color(0xff0000)).toCSSHex();\r\n\r\n\t\t\tlet p = -Infinity;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet macd = dataItem.macd\r\n\t\t\t\tlet signal = dataItem.signal;\r\n\t\t\t\tif (macd != null && signal != null) {\r\n\t\t\t\t\tlet difference = macd - signal;\r\n\t\t\t\t\tdataItem.difference = difference;\r\n\r\n\t\t\t\t\tlet color = increasingColor;\r\n\r\n\t\t\t\t\tif (difference < p) {\r\n\t\t\t\t\t\tcolor = decreasingColor;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdataItem.differenceColor = color;\r\n\t\t\t\t\tp = difference;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.differenceSeries.data.setAll(data);\r\n\t\t\tthis.signalSeries.data.setAll(data);\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\n\r\nexport interface IMACrossSettings extends IIndicatorSettings {\r\n\t/**\r\n\t * A value for \"fast\" period.\r\n\t */\r\n\tfastPeriod?: number;\r\n\r\n\tfastColor?: Color;\r\n}\r\n\r\nexport interface IMACrossPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IMACrossEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MACross extends Indicator {\r\n\tpublic static className: string = \"MACross\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([MACross.className]);\r\n\r\n\tdeclare public _settings: IMACrossSettings;\r\n\tdeclare public _privateSettings: IMACrossPrivate;\r\n\tdeclare public _events: IMACrossEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public fastSeries: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Slow period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Slow period\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"fastPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Fast period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"fastColor\",\r\n\t\tname: this.root.language.translateAny(\"Fast period\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _prepareChildren() {\r\n\r\n\t\tif (this.isDirty(\"period\") || this.isDirty(\"fastPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"fastColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.fastSeries, this.get(\"fastColor\"), \"fastColor\");\r\n\t\t}\r\n\r\n\t\tthis.setCustomData(\"fastPeriod\", this.get(\"fastPeriod\"));\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tthis.fastSeries.dispose();\r\n\t\tsuper._dispose();\r\n\t}\t\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst series = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"ma\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"macross\"],\r\n\t\t\t\tname: \"MA\"\r\n\t\t\t}))\r\n\r\n\t\t\tseries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\tconst fastSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"maf\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tstroke: this.get(\"fastColor\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"macross\", \"fast\"]\r\n\t\t\t}))\r\n\r\n\t\t\tfastSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.fastSeries = fastSeries;\r\n\r\n\t\t\tthis._handleLegend(series);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tlet period = this.get(\"period\", 9);\r\n\t\t\tlet fastPeriod = this.get(\"fastPeriod\", 21);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\t\t\tthis._sma(data, fastPeriod, \"value_y\", \"maf\");\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.fastSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IChaikinMoneyFlowSettings extends IChartIndicatorSettings {\r\n\t/**\r\n\t * A volume series indicator will be based on, if it reaquires one.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n}\r\n\r\nexport interface IChaikinMoneyFlowPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IChaikinMoneyFlowEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class ChaikinMoneyFlow extends ChartIndicator {\r\n\tpublic static className: string = \"ChaikinMoneyFlow\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([ChaikinMoneyFlow.className]);\r\n\r\n\tdeclare public _settings: IChaikinMoneyFlowSettings;\r\n\tdeclare public _privateSettings: IChaikinMoneyFlowPrivate;\r\n\tdeclare public _events: IChaikinMoneyFlowEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis._themeTags.push(\"chaikinmoneyflow\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"cmf\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tlet close = dataItem.get(\"valueY\") as number;\r\n\t\t\t\tif (close != null) {\r\n\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", close) as number;\r\n\t\t\t\t\tlet high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n\t\t\t\t\tlet volume = 1;\r\n\r\n\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mf = ((close - low) - (high - close)) / (high - low)\r\n\t\t\t\t\tif (high == low) {\r\n\t\t\t\t\t\tmf = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mfv = mf * volume;\r\n\t\t\t\t\tdata[i].mfv = mfv;\r\n\t\t\t\t\tdata[i].volume = volume;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tconst period = this.get(\"period\", 20);\r\n\t\t\ti = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tif (i >= period - 1) {\r\n\t\t\t\t\tlet mfv = 0;\r\n\t\t\t\t\tlet volume = 0;\r\n\r\n\t\t\t\t\tfor (let j = i; j > i - period; j--) {\r\n\t\t\t\t\t\tmfv += data[j].mfv;\r\n\t\t\t\t\t\tvolume += data[j].volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (volume != 0) {\r\n\t\t\t\t\t\tdataItem.cmf = mfv / volume;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IChaikinOscillatorSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Main volume series of the [[StockChart]].\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n\r\n\t/**\r\n\t * Slow period setting.\r\n\t */\r\n\tslowPeriod?: number;\r\n\r\n}\r\n\r\nexport interface IChaikinOscillatorPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IChaikinOscillatorEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class ChaikinOscillator extends ChartIndicator {\r\n\tpublic static className: string = \"ChaikinOscillator\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([ChaikinOscillator.className]);\r\n\r\n\tdeclare public _settings: IChaikinOscillatorSettings;\r\n\tdeclare public _privateSettings: IChaikinOscillatorPrivate;\r\n\tdeclare public _events: IChaikinOscillatorEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Fast period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"slowPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Slow period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"chaikinoscillator\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"cmf\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"slowPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"slowPeriod\", this.get(\"slowPeriod\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet prevAD = 0;\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tlet close = dataItem.get(\"valueY\") as number;\r\n\t\t\t\tif (close != null) {\r\n\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", close) as number;\r\n\t\t\t\t\tlet high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n\t\t\t\t\tlet volume = 1;\r\n\r\n\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet mf = ((close - low) - (high - close)) / (high - low)\r\n\t\t\t\t\tif (high == low) {\r\n\t\t\t\t\t\tmf = 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet ad = prevAD + mf * volume;\r\n\t\t\t\t\tdata[i].ad = ad;\r\n\r\n\t\t\t\t\tprevAD = ad\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\r\n\t\t\tthis._ema(data, this.get(\"slowPeriod\", 10), \"ad\", \"emaSlow\");\r\n\t\t\tthis._ema(data, this.get(\"period\", 3), \"ad\", \"emaFast\");\r\n\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tconst emaSlow = dataItem.emaSlow;\r\n\t\t\t\tconst emaFast = dataItem.emaFast;\r\n\t\t\t\tif (emaSlow != null && emaFast != null) {\r\n\t\t\t\t\tdataItem.cmf = emaFast - emaSlow;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IBullBearPowerSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IBullBearPowerPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IBullBearPowerEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class BullBearPower extends ChartIndicator {\r\n    public static className: string = \"BullBearPower\";\r\n    public static classNames: Array<string> = ChartIndicator.classNames.concat([BullBearPower.className]);\r\n\r\n    declare public _settings: IBullBearPowerSettings;\r\n    declare public _privateSettings: IBullBearPowerPrivate;\r\n    declare public _events: IBullBearPowerEvents;\r\n\r\n    /**\r\n     * Indicator series.\r\n     */\r\n    declare public series: LineSeries;\r\n\r\n    public _editableSettings: IIndicatorEditableSetting[] = [{\r\n        key: \"period\",\r\n        name: this.root.language.translateAny(\"Period\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"seriesColor\",\r\n        name: this.root.language.translateAny(\"Color\"),\r\n        type: \"color\"\r\n    }];\r\n\r\n    public _afterNew() {\r\n        this._themeTags.push(\"bullbearpower\");\r\n        super._afterNew();\r\n    }\r\n\r\n    public _createSeries(): LineSeries {\r\n        return this.panel.series.push(LineSeries.new(this._root, {\r\n            themeTags: [\"indicator\"],\r\n            xAxis: this.xAxis,\r\n            yAxis: this.yAxis,\r\n            valueXField: \"valueX\",\r\n            valueYField: \"bbp\",\r\n            stroke: this.get(\"seriesColor\"),\r\n            fill: undefined\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public prepareData() {\r\n        if (this.series) {\r\n\r\n            const dataItems = this.get(\"stockSeries\").dataItems;\r\n            this.setRaw(\"field\", \"close\");\r\n\r\n            let i = 0;\r\n            let data: Array<any> = this._getDataArray(dataItems);\r\n            let period = this.get(\"period\", 3);\r\n\r\n            this._ema(data, period, \"value_y\", \"ema\");\r\n\r\n            $array.each(dataItems, (dataItem) => {\r\n                if (i >= period - 1) {\r\n                    let close = dataItem.get(\"valueY\") as number;\r\n                    if (close != null) {\r\n                        let low = dataItem.get(\"lowValueY\", close) as number;\r\n                        let high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n                        let ema = data[i].ema;\r\n                        data[i].bbp = high - ema + low - ema;\r\n                    }\r\n                }\r\n\r\n                i++;\r\n            })\r\n\r\n            this.series.data.setAll(data);\r\n        }\r\n    }\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nexport interface IOnBalanceVolumeSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Chart's main volume series.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n\r\n}\r\n\r\nexport interface IOnBalanceVolumePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IOnBalanceVolumeEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class OnBalanceVolume extends ChartIndicator {\r\n\tpublic static className: string = \"OnBalanceVolume\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([OnBalanceVolume.className]);\r\n\r\n\tdeclare public _settings: IOnBalanceVolumeSettings;\r\n\tdeclare public _privateSettings: IOnBalanceVolumePrivate;\r\n\tdeclare public _events: IOnBalanceVolumeEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"onbalancevolume\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\t\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"obv\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet previous = 0;\r\n\t\t\tlet len = data.length;\r\n\r\n\t\t\tif (volumeSeries && len > 1) {\r\n\t\t\t\tlet cy = data[0].value_y as number;\r\n\r\n\t\t\t\tfor (let i = 1; i < len; i++) {\r\n\t\t\t\t\tconst dataItem = data[i];\r\n\r\n\t\t\t\t\tlet c = dataItem.value_y;\r\n\r\n\t\t\t\t\tif (c != null) {\r\n\t\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\t\tlet volume = 0;\r\n\t\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet obv = previous;\r\n\t\t\t\t\t\tif (c > cy) {\r\n\t\t\t\t\t\t\tobv += volume;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (c < cy) {\r\n\t\t\t\t\t\t\tobv -= volume;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdataItem.obv = obv;\r\n\r\n\t\t\t\t\t\tprevious = obv;\r\n\t\t\t\t\t\tcy = c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IPVTSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Chart's main volume series.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n\r\n}\r\n\r\nexport interface IPVTPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IPVTEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class PVT extends ChartIndicator {\r\n\tpublic static className: string = \"PVT\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([PVT.className]);\r\n\r\n\tdeclare public _settings: IPVTSettings;\r\n\tdeclare public _privateSettings: IPVTPrivate;\r\n\tdeclare public _events: IPVTEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis._themeTags.push(\"pvt\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"pvt\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\t\t\tlet previous = 0;\r\n\t\t\tlet len = data.length;\r\n\r\n\t\t\t//PVT = [((CurrentClose - PreviousClose) / PreviousClose) x Volume] + PreviousPVT\r\n\r\n\t\t\tif (volumeSeries && len > 1) {\r\n\t\t\t\tlet cy = data[0].value_y as number;\r\n\r\n\t\t\t\tfor (let i = 1; i < len; i++) {\r\n\t\t\t\t\tconst dataItem = data[i];\r\n\r\n\t\t\t\t\tlet c = dataItem.value_y;\r\n\r\n\t\t\t\t\tif (c != null && $type.isNumber(c) && c != 0) {\r\n\t\t\t\t\t\tconst volumeDI = volumeSeries.dataItems[i];\r\n\t\t\t\t\t\tlet volume = 0;\r\n\t\t\t\t\t\tif (volumeDI) {\r\n\t\t\t\t\t\t\tvolume = volumeDI.get(\"valueY\", 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet pvt = (((c - cy) / cy) * volume) + previous;\r\n\r\n\t\t\t\t\t\tdataItem.pvt = pvt;\r\n\r\n\t\t\t\t\t\tprevious = pvt;\r\n\t\t\t\t\t\tcy = c;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IStochasticOscillatorSettings extends IOverboughtOversoldSettings {\r\n\t/**\r\n\t * A color for \"slow\" section.\r\n\t */\r\n\tslowColor?: Color;\r\n\r\n\t/**\r\n\t * Smoothing \"k\" parameter.\r\n\t */\r\n\tkSmoothing?: number;\r\n\r\n\t/**\r\n\t * Smoothing \"d\" parameter.\r\n\t */\r\n\tdSmoothing?: number;\r\n}\r\n\r\nexport interface IStochasticOscillatorPrivate extends IOverboughtOversoldPrivate {\r\n}\r\n\r\nexport interface IStochasticOscillatorEvents extends IOverboughtOversoldEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class StochasticOscillator extends OverboughtOversold {\r\n\tpublic static className: string = \"StochasticOscillator\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([StochasticOscillator.className]);\r\n\r\n\tdeclare public _settings: IStochasticOscillatorSettings;\r\n\tdeclare public _privateSettings: IStochasticOscillatorPrivate;\r\n\tdeclare public _events: IStochasticOscillatorEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tpublic slowSeries!: LineSeries;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"stochastic\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis._editableSettings.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: \"period\",\r\n\t\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}, {\r\n\t\t\tkey: \"kSmoothing\",\r\n\t\t\tname: this.root.language.translateAny(\"K period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t},{\r\n\t\t\tkey: \"dSmoothing\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t},  {\r\n\t\t\tkey: \"slowColor\",\r\n\t\t\tname: this.root.language.translateAny(\"SMA period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t\t)\r\n\r\n\t\tthis.yAxis.setAll({ min: 0, max: 100, strictMinMax: true });\r\n\r\n\t\tconst slowSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"slow\",\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tgroupDataDisabled: true,\r\n\t\t\tthemeTags: [\"indicator\", \"slow\"]\r\n\t\t}))\r\n\r\n\t\tthis.slowSeries = slowSeries;\r\n\t}\r\n\r\n\r\n\tpublic _updateChildren() {\r\n\t\tif (this.isDirty(\"kSmoothing\") || this.isDirty(\"dSmoothing\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"dSmoothing\", this.get(\"dSmoothing\"));\r\n\t\t\tthis.setCustomData(\"kSmoothing\", this.get(\"kSmoothing\"));\r\n\t\t}\r\n\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"slowColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.slowSeries, this.get(\"slowColor\"), \"slowColor\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\t\t\tlet data: Array<any> = [];\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tconst valueX = dataItem.get(\"valueX\");\r\n\t\t\t\tlet k;\r\n\t\t\t\tif (index >= period - 1) {\r\n\t\t\t\t\tlet value = this._getValue(dataItem);\r\n\r\n\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\tlet lp = Infinity;\r\n\t\t\t\t\t\tlet hp = -lp;\r\n\t\t\t\t\t\tfor (let j = index; j > index - period; j--) {\r\n\t\t\t\t\t\t\tlet h = dataItems[j].get(\"highValueY\");\r\n\t\t\t\t\t\t\tlet l = dataItems[j].get(\"lowValueY\");\r\n\r\n\t\t\t\t\t\t\tif (h != null && l != null) {\r\n\t\t\t\t\t\t\t\tif (l < lp) {\r\n\t\t\t\t\t\t\t\t\tlp = l;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (h > hp) {\r\n\t\t\t\t\t\t\t\t\thp = h;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tk = (value - lp) / (hp - lp) * 100;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (k == null || $type.isNaN(k)) {\r\n\t\t\t\t\tdata.push({ valueX: valueX });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdata.push({ valueX: valueX, value_y: k });\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\r\n\t\t\tperiod = this.get(\"kSmoothing\", 1);\r\n\t\t\tthis._sma(data, period, \"value_y\", \"valueS\");\r\n\r\n\t\t\tperiod = this.get(\"dSmoothing\", 3);\r\n\t\t\tthis._sma(data, period, \"valueS\", \"slow\");\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.slowSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IStochasticMomentumIndexSettings extends IOverboughtOversoldSettings {\r\n\t/**\r\n\t * A color for \"ema\" line.\r\n\t */\r\n\temaColor?: Color;\r\n\r\n\t/**\r\n\t * K period.\r\n\t */\r\n\tkPeriod?: number;\r\n\r\n\t/**\r\n\t * D period.\r\n\t */\r\n\tdPeriod?: number;\r\n\r\n\t/**\r\n\t * EMA period.\r\n\t */\r\n\temaPeriod?: number;\r\n}\r\n\r\nexport interface IStochasticMomentumIndexPrivate extends IOverboughtOversoldPrivate {\r\n}\r\n\r\nexport interface IStochasticMomentumIndexEvents extends IOverboughtOversoldEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @since 5.5.3\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class StochasticMomentumIndex extends OverboughtOversold {\r\n\tpublic static className: string = \"StochasticMomentumIndex\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([StochasticMomentumIndex.className]);\r\n\r\n\tdeclare public _settings: IStochasticMomentumIndexSettings;\r\n\tdeclare public _privateSettings: IStochasticMomentumIndexPrivate;\r\n\tdeclare public _events: IStochasticMomentumIndexEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tpublic emaSeries!: LineSeries;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"stochasticmomentum\");\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis._editableSettings.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: \"period\",\r\n\t\t\t\tname: this.root.language.translateAny(\"K period\"),\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"K period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}, {\r\n\t\t\tkey: \"dPeriod\",\r\n\t\t\tname: this.root.language.translateAny(\"D period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"emaPeriod\",\r\n\t\t\tname: this.root.language.translateAny(\"EMA period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"emaColor\",\r\n\t\t\tname: this.root.language.translateAny(\"EMA period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t\t);\r\n\r\n\t\tconst emaSeries = this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"ema\",\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tgroupDataDisabled: true,\r\n\t\t\tthemeTags: [\"indicator\", \"ema\"]\r\n\t\t}))\r\n\r\n\t\tthis.emaSeries = emaSeries;\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tif (this.isDirty(\"dPeriod\") || this.isDirty(\"emaPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"dPeriod\", this.get(\"dPeriod\"));\r\n\t\t\tthis.setCustomData(\"emaPeriod\", this.get(\"emaPeriod\"));\r\n\t\t}\r\n\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"emaColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.emaSeries, this.get(\"emaColor\"), \"emaColor\")\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * https://www.barchart.com/education/technical-indicators/stochastic_momentum_index\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet kPeriod = this.get(\"period\", 10);\r\n\t\t\tlet data: Array<any> = [];\r\n\t\t\tlet index = 0;\r\n\r\n\t\t\t$array.each(dataItems, (dataItem) => {\r\n\t\t\t\tconst valueX = dataItem.get(\"valueX\");\r\n\t\t\t\tlet lp = Infinity;\r\n\t\t\t\tlet hp = -lp;\r\n\t\t\t\tlet hhh;\r\n\t\t\t\tlet dhl;\r\n\r\n\t\t\t\tif (index >= kPeriod - 1) {\r\n\t\t\t\t\tlet value = this._getValue(dataItem);\r\n\r\n\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\tfor (let j = index; j > index - kPeriod; j--) {\r\n\t\t\t\t\t\t\tlet h = dataItems[j].get(\"highValueY\");\r\n\t\t\t\t\t\t\tlet l = dataItems[j].get(\"lowValueY\");\r\n\r\n\t\t\t\t\t\t\tif (h != null && l != null) {\r\n\t\t\t\t\t\t\t\tif (l < lp) {\r\n\t\t\t\t\t\t\t\t\tlp = l;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (h > hp) {\r\n\t\t\t\t\t\t\t\t\thp = h;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tlet c = (hp + lp) / 2;\r\n\t\t\t\t\t\thhh = value - c;\r\n\t\t\t\t\t\tdhl = hp - lp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (hhh == null || $type.isNaN(hhh) || hhh === 0) {\r\n\t\t\t\t\tdata.push({ valueX: valueX });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdata.push({ valueX: valueX, hhh: hhh, dhl: dhl });\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\r\n\t\t\tlet dPeriod = this.get(\"dPeriod\", 3);\r\n\t\t\tthis._ema(data, dPeriod, \"hhh\", \"hhh_ema\");\r\n\t\t\tthis._ema(data, dPeriod, \"hhh_ema\", \"hhh_ema2\");\r\n\r\n\t\t\tthis._ema(data, dPeriod, \"dhl\", \"dhl_ema\");\r\n\t\t\tthis._ema(data, dPeriod, \"dhl_ema\", \"dhl_ema2\");\r\n\r\n\t\t\t$array.each(data, (d) => {\r\n\t\t\t\tlet hhh = d.hhh_ema2;\r\n\t\t\t\tlet dhl = d.dhl_ema2;\r\n\r\n\t\t\t\tif (hhh != null && dhl != null) {\r\n\t\t\t\t\td.valueS = d.hhh_ema2 / d.dhl_ema2 * 200;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tlet emaPeriod = this.get(\"emaPeriod\", 3);\r\n\t\t\tthis._sma(data, emaPeriod, \"valueS\", \"ema\");\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t\tthis.emaSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { Color } from \"../../../core/util/Color\";\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAwesomeOscillatorSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Increasing color.\r\n\t */\r\n\tincreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Decreasing color.\r\n\t */\r\n\tdecreasingColor?: Color;\r\n\r\n}\r\n\r\nexport interface IAwesomeOscillatorPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IAwesomeOscillatorEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AwesomeOscillator extends ChartIndicator {\r\n\tpublic static className: string = \"AwesomeOscillator\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([AwesomeOscillator.className]);\r\n\r\n\tdeclare public _settings: IAwesomeOscillatorSettings;\r\n\tdeclare public _privateSettings: IAwesomeOscillatorPrivate;\r\n\tdeclare public _events: IAwesomeOscillatorEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"increasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Increasing\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"decreasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Decreasing\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"awesomeoscillator\");\r\n\t\tsuper._afterNew();\r\n\t}\t\r\n\r\n\tpublic _createSeries(): ColumnSeries {\r\n\t\treturn this.panel.series.push(ColumnSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"ao\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tconst increasingColor= \"increasingColor\";\r\n\t\tconst decreasingColor= \"decreasingColor\";\r\n\r\n\t\tif (this.isDirty(increasingColor) || this.isDirty(decreasingColor)) {\r\n\t\t\tconst template = this.series.columns.template;\r\n\t\t\tconst increasing = this.get(increasingColor);\r\n\t\t\tconst decreasing = this.get(decreasingColor);\r\n\t\t\ttemplate.states.create(\"riseFromPrevious\", { fill: increasing, stroke: increasing });\r\n\t\t\ttemplate.states.create(\"dropFromPrevious\", { fill: decreasing, stroke: decreasing });\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tthis.set(\"field\", \"hl/2\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\r\n\t\t\tlet decreasingColor = this.get(\"decreasingColor\", Color.fromHex(0xff0000)).toCSSHex();\r\n\t\t\tlet increasingColor = this.get(\"increasingColor\", Color.fromHex(0x00ff00)).toCSSHex();\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = 5;\r\n\t\t\tthis._sma(data, 5, \"value_y\", \"sma5\");\r\n\r\n\t\t\tperiod = 34;\r\n\t\t\tthis._sma(data, 34, \"value_y\", \"sma34\");\r\n\r\n\t\t\tlet po = -Infinity;\r\n\t\t\tlet i = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\ti++;\r\n\t\t\t\tif (i >= period) {\r\n\t\t\t\t\tlet o = dataItem.sma5 - dataItem.sma34\r\n\t\t\t\t\tlet color = increasingColor;\r\n\r\n\t\t\t\t\tif (o < po) {\r\n\t\t\t\t\t\tcolor = decreasingColor;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItem.ao = o;\r\n\t\t\t\t\tdataItem.oscillatorColor = color;\r\n\t\t\t\t\tpo = o;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\n\r\nexport interface IWilliamsRSettings extends IOverboughtOversoldSettings { }\r\n\r\nexport interface IWilliamsRPrivate extends IOverboughtOversoldPrivate { }\r\n\r\nexport interface IWilliamsREvents extends IOverboughtOversoldEvents { }\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class WilliamsR extends OverboughtOversold {\r\n\tpublic static className: string = \"WilliamsR\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([WilliamsR.className]);\r\n\r\n\tdeclare public _settings: IWilliamsRSettings;\r\n\tdeclare public _privateSettings: IWilliamsRPrivate;\r\n\tdeclare public _events: IWilliamsREvents;\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"williamsr\");\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis._editableSettings.unshift({\r\n\t\t\tkey: \"period\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"number\"\r\n\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t});\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tthis.set(\"field\", \"close\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\r\n\t\t\tfor (let i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\tconst dataItem = data[i];\r\n\r\n\t\t\t\tlet h = -Infinity;\r\n\t\t\t\tlet l = Infinity;\r\n\t\t\t\tlet b = Math.max(0, i - period);\r\n\t\t\t\tfor (let j = b; j <= i; j++) {\r\n\r\n\t\t\t\t\tlet vh = dataItems[j].get(\"highValueY\", 0);\r\n\t\t\t\t\tif (vh >= h) {\r\n\t\t\t\t\t\th = vh;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet vl = dataItems[j].get(\"lowValueY\", 0);\r\n\t\t\t\t\tif (vl <= l) {\r\n\t\t\t\t\t\tl = vl;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (h - l != 0) {\r\n\t\t\t\t\tdataItem.valueS = -100 * (h - dataItem.value_y) / (h - l);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\nimport { Color } from \"../../../core/util/Color\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IVolumeSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * An icreasing color.\r\n\t */\r\n\tincreasingColor?: Color;\r\n\r\n\t/**\r\n\t * A decreasing color.\r\n\t */\r\n\tdecreasingColor?: Color;\r\n\r\n}\r\n\r\nexport interface IVolumePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IVolumeEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class Volume extends ChartIndicator {\r\n\tpublic static className: string = \"Volume\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Volume.className]);\r\n\r\n\tdeclare public _settings: IVolumeSettings;\r\n\tdeclare public _privateSettings: IVolumePrivate;\r\n\tdeclare public _events: IVolumeEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"increasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Up volume\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"decreasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Down volume\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"volume\");\r\n\t\tsuper._afterNew();\r\n\t\tthis.yAxis.set(\"numberFormat\", \"#.###a\");\r\n\t}\r\n\r\n\tpublic _createSeries(): ColumnSeries {\r\n\t\treturn this.panel.series.push(ColumnSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"volume\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"increasingColor\") || this.isDirty(\"decreasingColor\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tif (volumeSeries && stockChart) {\r\n\t\t\t\tconst dataItems = volumeSeries.dataItems;\r\n\r\n\t\t\t\tthis.setRaw(\"field\", \"close\");\r\n\r\n\t\t\t\tlet decreasingColor = this.get(\"decreasingColor\", Color.fromHex(0xff0000));\r\n\t\t\t\tlet increasingColor = this.get(\"increasingColor\", Color.fromHex(0x00ff00));\r\n\r\n\t\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\t\tdataItem.volume = dataItem.value_y;\r\n\t\t\t\t})\r\n\t\t\t\tthis.series.data.setAll(data);\r\n\r\n\t\t\t\t$array.each(this.series.dataItems, (dataItem) => {\r\n\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\tdataContext.volumeColor = stockChart.getVolumeColor(dataItem, decreasingColor, increasingColor);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { AxisRendererX } from \"../../xy/axes/AxisRendererX\";\r\nimport { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\nimport { percent } from \"../../../core/util/Percent\";\r\n\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IVolumeProfileSettings extends IIndicatorSettings {\r\n\t/**\r\n\t * Volume up color.\r\n\t */\r\n\tupColor?: Color;\r\n\r\n\t/**\r\n\t * Volume down color.\r\n\t */\r\n\tdownColor?: Color;\r\n\r\n\t/**\r\n\t * Type of count.\r\n\t */\r\n\tcountType?: \"rows\" | \"ticks\";\r\n\r\n\t/**\r\n\t * Number of rows or number of ticks, depending on the countType.\r\n\t *\r\n\t * @default 24\r\n\t */\r\n\tcount?: number;\r\n\r\n\t/**\r\n\t * Max width of columns in percent (%).\r\n\t * \r\n\t * @default 40\r\n\t */\r\n\taxisWidth?: number;\r\n\r\n\t/**\r\n\t * Specifies what percentage of all volume for the trading session should\r\n\t * be highlighted by Value Area.\r\n\t * \r\n\t * @default 70\r\n\t */\r\n\tvalueArea?: number;\r\n\r\n\t/**\r\n\t * Opacity of columns which fall withing value area.\r\n\t * \r\n\t * @default .7\r\n\t */\r\n\tvalueAreaOpacity?: number;\r\n\r\n\t/**\r\n\t * Chart's main volume series.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n}\r\n\r\nexport interface IVolumeProfilePrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IVolumeProfileEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a Volume Profile indicator for a [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n * @since 5.7.0\r\n */\r\nexport class VolumeProfile extends Indicator {\r\n\tpublic static className: string = \"VolumeProfile\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([VolumeProfile.className]);\r\n\r\n\tdeclare public _settings: IVolumeProfileSettings;\r\n\tdeclare public _privateSettings: IVolumeProfilePrivate;\r\n\tdeclare public _events: IVolumeProfileEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"countType\",\r\n\t\tname: this.root.language.translateAny(\"Count\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\r\n\t\t\t{ value: \"rows\", text: this.root.language.translateAny(\"number of rows\"), extTarget: \"count\", extTargetValue: 24 , extTargetMinValue: 1 },\r\n\t\t\t{ value: \"ticks\", text: this.root.language.translateAny(\"ticks per row\"), extTarget: \"count\", extTargetValue: 1000, extTargetMinValue: 200 }\r\n\t\t]\r\n\t}, {\r\n\t\tkey: \"count\",\r\n\t\tname: this.root.language.translateAny(\"Count\"),\r\n\t\ttype: \"number\",\r\n\t\tminValue: 1\r\n\t}, {\r\n\t\tkey: \"valueArea\",\r\n\t\tname: this.root.language.translateAny(\"Value Area\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upColor\",\r\n\t\tname: this.root.language.translateAny(\"Up volume\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"downColor\",\r\n\t\tname: this.root.language.translateAny(\"Down volume\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"axisWidth\",\r\n\t\tname: this.root.language.translateAny(\"Width %\"),\r\n\t\ttype: \"number\"\r\n\t}];\r\n\r\n\tpublic xAxis!: ValueAxis<AxisRendererX>;\r\n\r\n\tpublic upSeries!: ColumnSeries;\r\n\r\n\tprotected _previousColumn?: Graphics;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tif (volumeSeries) {\r\n\t\t\tconst chart = stockSeries.chart;\r\n\t\t\tconst root = this._root;\r\n\r\n\t\t\tif (chart) {\r\n\t\t\t\tconst yAxis = stockSeries.get(\"yAxis\") as any;\r\n\r\n\t\t\t\tconst step = yAxis.getPrivate(\"step\");\r\n\t\t\t\tif (step !== undefined) {\r\n\t\t\t\t\tconst val = yAxis.getPrivate(\"step\") * 50;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetValue = val;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetMinValue = val * 0.2;\r\n\t\t\t\t}\r\n\t\t\t\tyAxis.onPrivate(\"step\", (step: number) => {\r\n\t\t\t\t\tconst val = step * 50;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetValue = val;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetMinValue = val * 0.2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst panelXAxis = stockSeries.get(\"xAxis\") as DateAxis<AxisRendererX>;\r\n\r\n\t\t\t\tpanelXAxis.on(\"start\", () => {\r\n\t\t\t\t\tthis.markDataDirty();\r\n\t\t\t\t})\r\n\t\t\t\tpanelXAxis.on(\"end\", () => {\r\n\t\t\t\t\tthis.markDataDirty();\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst xRenderer = AxisRendererX.new(root, {});\r\n\t\t\t\txRenderer.grid.template.set(\"forceHidden\", true);\r\n\t\t\t\txRenderer.labels.template.set(\"forceHidden\", true);\r\n\r\n\t\t\t\tthis.xAxis = chart.xAxes.push(ValueAxis.new(root, {\r\n\t\t\t\t\tzoomable: false,\r\n\t\t\t\t\tstrictMinMax: true,\r\n\t\t\t\t\tpanX: false,\r\n\t\t\t\t\tpanY: false,\r\n\t\t\t\t\trenderer: xRenderer\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tif (yAxis.get(\"renderer\").get(\"opposite\")) {\r\n\t\t\t\t\txRenderer.set(\"inversed\", true);\r\n\t\t\t\t\tthis.xAxis.setAll({\r\n\t\t\t\t\t\tx: percent(100),\r\n\t\t\t\t\t\tcenterX: percent(100)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.series = chart.series.unshift(ColumnSeries.new(root, {\r\n\t\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\tsnapTooltip:false,\r\n\t\t\t\t\tvalueXField: \"down\",\r\n\t\t\t\t\topenValueXField: \"xOpen\",\r\n\t\t\t\t\topenValueYField: \"yOpen\",\r\n\t\t\t\t\tvalueYField: \"y\",\r\n\t\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\t\tthemeTags: [\"indicator\", \"volumeprofile\", \"down\"]\r\n\t\t\t\t}))\r\n\r\n\r\n\t\t\t\tthis.upSeries = chart.series.unshift(ColumnSeries.new(root, {\r\n\t\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\tsnapTooltip:false,\r\n\t\t\t\t\tvalueXField: \"total\",\r\n\t\t\t\t\topenValueXField: \"down\",\r\n\t\t\t\t\topenValueYField: \"yOpen\",\r\n\t\t\t\t\tvalueYField: \"y\",\r\n\t\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\t\tthemeTags: [\"indicator\", \"volumeprofile\", \"up\"]\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tthis.upSeries.setPrivate(\"doNotUpdateLegend\", true);\r\n\t\t\t\tthis.series.setPrivate(\"doNotUpdateLegend\", true);\r\n\r\n\t\t\t\tthis.upSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\t\tthis.series.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n\t\t\t\tthis._handleLegend(this.series);\r\n\r\n\t\t\t\tthis._addInteractivity(this.series);\r\n\t\t\t\tthis._addInteractivity(this.upSeries);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addInteractivity(series: ColumnSeries) {\r\n\t\tseries.columns.template.events.on(\"pointerover\", (e) => {\r\n\t\t\tlet dataItem = e.target.dataItem;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (dataItem.component == this.upSeries) {\r\n\t\t\t\t\tdataItem = this.series.dataItems[this.upSeries.dataItems.indexOf(dataItem)];\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst column = dataItem.get(\"graphics\" as any);\r\n\t\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\t\tcolumn.hover();\r\n\t\t\t\t\t\t\tthis._previousColumn = column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem = this.upSeries.dataItems[this.series.dataItems.indexOf(dataItem)];\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst column = dataItem.get(\"graphics\" as any);\r\n\t\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\t\tcolumn.hover();\r\n\t\t\t\t\t\t\tthis._previousColumn = column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.series.updateLegendValue(dataItem);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tseries.columns.template.events.on(\"pointerout\", () => {\r\n\t\t\tthis.series.updateLegendValue(undefined);\r\n\t\t\tif (this._previousColumn) {\r\n\t\t\t\tthis._previousColumn.unhover();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tseries.columns.template.adapters.add(\"fillOpacity\", (fillOpacity, target) => {\r\n\t\t\tconst dataItem = target.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\tif (dataContext) {\r\n\t\t\t\t\tif (dataContext.area) {\r\n\t\t\t\t\t\treturn this.get(\"valueAreaOpacity\", .7);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn fillOpacity;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _updateChildren(): void {\r\n\t\tif (this.series) {\r\n\t\t\tsuper._updateChildren();\r\n\r\n\t\t\tif (this.isDirty(\"count\") || this.isDirty(\"countType\") || this.isDirty(\"valueArea\")) {\r\n\t\t\t\tthis.markDataDirty();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"countType\")) {\r\n\t\t\t\tconst countType = this.get(\"countType\");\r\n\t\t\t\tif (countType == \"ticks\") {\r\n\t\t\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\t\t\tconst yAxis = stockSeries.get(\"yAxis\") as any;\r\n\t\t\t\t\tthis._editableSettings[1].minValue = yAxis.getPrivate(\"step\") * 50 * 0.2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._editableSettings[1].minValue = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"upColor\")) {\r\n\t\t\t\tconst upColor = this.get(\"upColor\");\r\n\t\t\t\tthis.upSeries.set(\"fill\", upColor);\r\n\t\t\t\tthis.upSeries.set(\"stroke\", upColor);\r\n\r\n\t\t\t\tthis.upSeries.columns.template.setAll({\r\n\t\t\t\t\tfill: upColor,\r\n\t\t\t\t\tstroke: upColor\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setCustomData(\"upColor\", upColor);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"downColor\")) {\r\n\t\t\t\tconst downColor = this.get(\"downColor\");\r\n\t\t\t\tthis.series.set(\"fill\", downColor);\r\n\t\t\t\tthis.series.set(\"stroke\", downColor);\r\n\r\n\t\t\t\tthis.series.columns.template.setAll({\r\n\t\t\t\t\tfill: downColor,\r\n\t\t\t\t\tstroke: downColor\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setCustomData(\"downColor\", downColor);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"axisWidth\")) {\r\n\t\t\t\tthis.xAxis.set(\"width\", percent(this.get(\"axisWidth\", 40)));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\r\n\t\tif (volumeSeries && this.series) {\r\n\t\t\tlet startIndex = volumeSeries.getPrivate(\"adjustedStartIndex\", volumeSeries.startIndex());\r\n\t\t\tlet endIndex = volumeSeries.endIndex();\r\n\r\n\t\t\tconst count = this.get(\"count\", 20);\r\n\t\t\tconst type = this.get(\"countType\");\r\n\t\t\tlet step = 1;\r\n\r\n\t\t\tlet min = Infinity;\r\n\t\t\tlet max = -Infinity;\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tconst dataItem = stockSeries.dataItems[i];\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tconst close = dataItem.get(\"valueY\");\r\n\t\t\t\t\tif ($type.isNumber(close)) {\r\n\t\t\t\t\t\tif (close < min) {\r\n\t\t\t\t\t\t\tmin = close;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (close > max) {\r\n\t\t\t\t\t\t\tmax = close;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min != Infinity) {\r\n\r\n\t\t\t\tlet rows: number;\r\n\t\t\t\tif (type == \"ticks\") {\r\n\t\t\t\t\tstep = count / 100;\r\n\t\t\t\t\tmin = Math.floor(min / step) * step;\r\n\t\t\t\t\tmax = Math.ceil(max / step) * step;\r\n\t\t\t\t\trows = (max - min) / step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstep = (max - min) / count;\r\n\t\t\t\t\trows = count;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst rowDataDown: Array<number> = [];\r\n\t\t\t\tconst rowDataUp: Array<number> = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\trowDataDown[i] = 0;\r\n\t\t\t\t\trowDataUp[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousDataItem;\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tconst dataItem = stockSeries.dataItems[i];\r\n\t\t\t\t\tconst volumeDataItem = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (dataItem && volumeDataItem) {\r\n\t\t\t\t\t\tconst close = dataItem.get(\"valueY\");\r\n\t\t\t\t\t\tconst volume = volumeDataItem.get(\"valueY\");\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(close) && $type.isNumber(volume)) {\r\n\t\t\t\t\t\t\tlet index = Math.floor((close - min) / step);\r\n\t\t\t\t\t\t\tif (index == count) {\r\n\t\t\t\t\t\t\t\tindex = count - 1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($type.isNumber(index)) {\r\n\t\t\t\t\t\t\t\tif (previousDataItem && previousDataItem.get(\"valueY\", close) < close) {\r\n\t\t\t\t\t\t\t\t\trowDataDown[index] += volume;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\trowDataUp[index] += volume;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dataDown = [];\r\n\t\t\t\tlet sum = 0;\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\tlet total = rowDataUp[i] + rowDataDown[i];\r\n\t\t\t\t\tsum += total;\r\n\r\n\t\t\t\t\tdataDown.push({\r\n\t\t\t\t\t\tyOpen: min + i * step,\r\n\t\t\t\t\t\ty: min + (i + 1) * step,\r\n\t\t\t\t\t\tup: rowDataUp[i],\r\n\t\t\t\t\t\tdown: rowDataDown[i],\r\n\t\t\t\t\t\ttotal: total,\r\n\t\t\t\t\t\txOpen: 0,\r\n\t\t\t\t\t\tarea: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet len = this.series.data.length;\r\n\t\t\t\tif (len && len == dataDown.length) {\r\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\tthis.series.data.setIndex(i, dataDown[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.series.data.setAll(dataDown);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dataUp = [];\r\n\r\n\t\t\t\tlet highest = 0;\r\n\t\t\t\tlet hi = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\tlet total = rowDataUp[i] + rowDataDown[i];\r\n\t\t\t\t\tdataUp.push({\r\n\t\t\t\t\t\tyOpen: min + i * step,\r\n\t\t\t\t\t\ty: min + (i + 1) * step,\r\n\t\t\t\t\t\tup: rowDataUp[i],\r\n\t\t\t\t\t\tdown: rowDataDown[i],\r\n\t\t\t\t\t\ttotal: total,\r\n\t\t\t\t\t\tarea: false\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (total > highest) {\r\n\t\t\t\t\t\thighest = total;\r\n\t\t\t\t\t\thi = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet valueArea = sum * this.get(\"valueArea\", 70) / 100;\r\n\t\t\t\tlet area = highest;\r\n\r\n\t\t\t\tlet cd = 1;\r\n\t\t\t\tlet cu = 1;\r\n\t\t\t\tlet dlen = dataUp.length;\r\n\r\n\t\t\t\tdataUp[hi].area = true;\r\n\t\t\t\tdataDown[hi].area = true;\r\n\r\n\t\t\t\t// single row\r\n\t\t\t\twhile (area < valueArea) {\r\n\t\t\t\t\tlet rowAbove1 = hi + cu;\r\n\t\t\t\t\tlet sumAbove = 0\r\n\t\t\t\t\tif (rowAbove1 < dlen) {\r\n\t\t\t\t\t\tsumAbove += dataUp[rowAbove1].total;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet rowBelow1 = hi - cd;\r\n\r\n\t\t\t\t\tlet sumBelow = 0\r\n\t\t\t\t\tif (rowBelow1 >= 0) {\r\n\t\t\t\t\t\tsumBelow += dataUp[rowBelow1].total;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sumBelow <= sumAbove) {\r\n\t\t\t\t\t\tarea += sumAbove;\r\n\t\t\t\t\t\tif (rowAbove1 < dlen) {\r\n\t\t\t\t\t\t\tdataDown[rowAbove1].area = true;\r\n\t\t\t\t\t\t\tdataUp[rowAbove1].area = true;\r\n\t\t\t\t\t\t\tcu++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tarea += sumBelow;\r\n\t\t\t\t\t\tif (rowBelow1 >= 0) {\r\n\t\t\t\t\t\t\tdataDown[rowBelow1].area = true;\r\n\t\t\t\t\t\t\tdataUp[rowBelow1].area = true;\r\n\t\t\t\t\t\t\tcd++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sumBelow == 0) {\r\n\t\t\t\t\t\tcd++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sumAbove == 0) {\r\n\t\t\t\t\t\tcu++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ((cd > dlen && cu > dlen)) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarea = Math.ceil(area);\r\n\r\n\t\t\t\tlen = this.upSeries.data.length;\r\n\t\t\t\tif (len > 0 && len == dataUp.length) {\r\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\tthis.upSeries.data.setIndex(i, dataUp[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.upSeries.data.setAll(dataUp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.upSeries.data.clear();\r\n\t\t\t\tthis.series.data.clear();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.series.columns.each((column) => {\r\n\t\t\tcolumn._markDirtyKey(\"fillOpacity\")\r\n\t\t})\r\n\r\n\t\tthis.upSeries.columns.each((column) => {\r\n\t\t\tcolumn._markDirtyKey(\"fillOpacity\")\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tsuper._dispose();\r\n\t\tif (this.upSeries) {\r\n\t\t\tthis.upSeries.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.dispose();\r\n\t\t}\r\n\t}\r\n}","import { OverboughtOversold, IOverboughtOversoldSettings, IOverboughtOversoldPrivate, IOverboughtOversoldEvents } from \"./OverboughtOversold\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface ICommodityChannelIndexSettings extends IOverboughtOversoldSettings { }\r\n\r\nexport interface ICommodityChannelIndexPrivate extends IOverboughtOversoldPrivate { }\r\n\r\nexport interface ICommodityChannelIndexEvents extends IOverboughtOversoldEvents { }\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class CommodityChannelIndex extends OverboughtOversold {\r\n\tpublic static className: string = \"CommodityChannelIndex\";\r\n\tpublic static classNames: Array<string> = OverboughtOversold.classNames.concat([CommodityChannelIndex.className]);\r\n\r\n\tdeclare public _settings: ICommodityChannelIndexSettings;\r\n\tdeclare public _privateSettings: ICommodityChannelIndexPrivate;\r\n\tdeclare public _events: ICommodityChannelIndexEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\tthis._themeTags.push(\"commoditychannelindex\")\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis._editableSettings.unshift(\r\n\t\t\t{\r\n\t\t\t\tkey: \"period\",\r\n\t\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\t\ttype: \"number\"\r\n\t\t\t}, {\r\n\t\t\tkey: \"seriesColor\",\r\n\t\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\t\ttype: \"color\"\r\n\t\t}\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tlet data = this._getTypicalPrice(dataItems);\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\r\n\t\t\tthis._sma(data, period, \"value_y\", \"sma\");\r\n\r\n\t\t\tfor (let i = 0, len = data.length; i < len; i++) {\r\n\t\t\t\tconst dataItem = data[i];\r\n\t\t\t\tconst value = dataItem.value_y;\r\n\t\t\t\tlet ma = dataItem.sma;\r\n\r\n\t\t\t\tlet meanDeviation = 0;\r\n\t\t\t\tif (i >= period - 1) {\r\n\t\t\t\t\tfor (let j = i; j > i - period; j--) {\r\n\t\t\t\t\t\tlet di = data[j];\r\n\t\t\t\t\t\tmeanDeviation += Math.abs(di.value_y - ma)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmeanDeviation = meanDeviation / period;\r\n\r\n\t\t\t\t\tlet valueS = (value - ma) / (0.015 * meanDeviation);\r\n\t\t\t\t\tif ($type.isNumber(valueS)) {\r\n\t\t\t\t\t\tdataItem.valueS = valueS;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IDisparityIndexSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Type of the moving average.\r\n\t *\r\n\t * @default \"simple\"\r\n\t */\r\n\tmovingAverageType?: \"simple\" | \"weighted\" | \"exponential\" | \"dema\" | \"tema\";\r\n\r\n}\r\n\r\nexport interface IDisparityIndexPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IDisparityIndexEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class DisparityIndex extends ChartIndicator {\r\n\tpublic static className: string = \"DisparityIndex\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([DisparityIndex.className]);\r\n\r\n\tdeclare public _settings: IDisparityIndexSettings;\r\n\tdeclare public _privateSettings: IDisparityIndexPrivate;\r\n\tdeclare public _events: IDisparityIndexEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}, {\r\n\t\tkey: \"movingAverageType\",\r\n\t\tname: this.root.language.translateAny(\"Moving Average Type\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"simple\", \"weighted\", \"exponential\", \"dema\", \"tema\"]\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"disparityindex\");\r\n\t\tsuper._afterNew();\r\n\t}\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"disparity\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tconst movingAverageType = \"movingAverageType\";\r\n\t\tif (this.isDirty(movingAverageType)) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(movingAverageType, this.get(movingAverageType));\r\n\t\t}\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\t\t\tconst period = this.get(\"period\", 14);\r\n\t\t\tconst type = this.get(\"movingAverageType\");\r\n\r\n\t\t\tlet data: Array<any> = this._getDataArray(dataItems);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase \"simple\":\r\n\t\t\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"weighted\":\r\n\t\t\t\t\tthis._wma(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"exponential\":\r\n\t\t\t\t\tthis._ema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"dema\":\r\n\t\t\t\t\tthis._dema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"tema\":\r\n\t\t\t\t\tthis._tema(data, period, \"value_y\", \"ma\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tconst ma = dataItem.ma;\r\n\t\t\t\tif (ma != null) {\r\n\t\t\t\t\tdataItem.disparity = 100 * (dataItem.value_y - ma) / ma\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IStandardDeviationSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IStandardDeviationPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IStandardDeviationEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class StandardDeviation extends ChartIndicator {\r\n\tpublic static className: string = \"StandardDeviation\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([StandardDeviation.className]);\r\n\r\n\tdeclare public _settings: IStandardDeviationSettings;\r\n\tdeclare public _privateSettings: IStandardDeviationPrivate;\r\n\tdeclare public _events: IStandardDeviationEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"field\",\r\n\t\tname: this.root.language.translateAny(\"Field\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\"open\", \"close\", \"low\", \"high\", \"hl/2\", \"hlc/3\", \"hlcc/4\", \"ohlc/4\"]\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"standarddeviation\");\r\n\t\tsuper._afterNew();\r\n\t}\t\t\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"deviation\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tthis._sma(data, period, \"value_y\", \"ma\");\r\n\r\n\t\t\tlet i = 0;\r\n\r\n\t\t\t$array.each(data, (dataItem: any) => {\r\n\t\t\t\tif (i >= period - 1) {\r\n\t\t\t\t\tlet mean = dataItem.ma;\r\n\r\n\t\t\t\t\tlet stdSum = 0;\r\n\t\t\t\t\tfor (let j = i - period + 1; j <= i; j++) {\r\n\t\t\t\t\t\tlet di = dataItems[j];\r\n\t\t\t\t\t\tlet diValue = this._getValue(di);\r\n\t\t\t\t\t\tif (diValue != null) {\r\n\t\t\t\t\t\t\tstdSum += Math.pow(diValue - mean, 2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet std = Math.sqrt(stdSum / period);\r\n\r\n\t\t\t\t\tdataItem.deviation = std;\r\n\t\t\t\t}\r\n\t\t\t\ti++;\r\n\t\t\t})\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface ITypicalPriceSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface ITypicalPricePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface ITypicalPriceEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class TypicalPrice extends ChartIndicator {\r\n\tpublic static className: string = \"TypicalPrice\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([TypicalPrice.className]);\r\n\r\n\tdeclare public _settings: ITypicalPriceSettings;\r\n\tdeclare public _privateSettings: ITypicalPricePrivate;\r\n\tdeclare public _events: ITypicalPriceEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"typicalprice\");\r\n\t\tsuper._afterNew();\r\n\t}\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"typical\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tlet index = 0;\r\n\t\t\tlet typical = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.value_y;\r\n\t\t\t\tif (value != null) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\ttypical += value / period;\r\n\r\n\t\t\t\t\tif (i >= period) {\r\n\t\t\t\t\t\tif (i > period) {\r\n\t\t\t\t\t\t\tlet valueToRemove = data[index - period].value_y;\r\n\t\t\t\t\t\t\tif (valueToRemove != null) {\r\n\t\t\t\t\t\t\t\ttypical -= valueToRemove / period;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataItem.typical = typical;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nexport interface ITrixSettings extends IChartIndicatorSettings {\r\n\t/**\r\n\t * Signal color.\r\n\t */\r\n\tsignalColor?: Color;\r\n\r\n\t/**\r\n\t * A value for \"signal\" period.\r\n\t */\r\n\tsignalPeriod?: number;\r\n}\r\n\r\nexport interface ITrixPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface ITrixEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class Trix extends ChartIndicator {\r\n\tpublic static className: string = \"Trix\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([Trix.className]);\r\n\r\n\tdeclare public _settings: ITrixSettings;\r\n\tdeclare public _privateSettings: ITrixPrivate;\r\n\tdeclare public _events: ITrixEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\t/**\r\n\t * Indicator series for the signal.\r\n\t */\r\n\tpublic signalSeries!: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"signalPeriod\",\r\n\t\tname: this.root.language.translateAny(\"Signal period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"signalColor\",\r\n\t\tname: this.root.language.translateAny(\"Signal color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tprotected _themeTag: string = \"trix\";\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"trix\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._themeTags.push(\"trix\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst chart = this.panel;\r\n\r\n\t\tif (chart) {\r\n\r\n\t\t\tconst signalSeries = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"valueX\",\r\n\t\t\t\tvalueYField: \"signal\",\r\n\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\tyAxis: this.yAxis,\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tthemeTags: [\"indicator\", \"signal\"]\r\n\t\t\t}))\r\n\r\n\t\t\tthis.signalSeries = signalSeries;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tif (this.isDirty(\"signalPeriod\")) {\r\n\t\t\tthis.markDataDirty();\r\n\t\t\tthis.setCustomData(\"signalPeriod\", this.get(\"signalPeriod\"));\r\n\t\t}\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tif (this.isDirty(\"signalColor\")) {\r\n\t\t\tthis._updateSeriesColor(this.signalSeries, this.get(\"signalColor\"), \"signalColor\");\r\n\t\t}\r\n\r\n\t\tconst dataItem = this.series.dataItem;\r\n\t\tif (dataItem) {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tdataContext.signalPeriod = this.get(\"signalPeriod\");\r\n\t\t\t\tconst signalColor = this.get(\"signalColor\");\r\n\t\t\t\tif (signalColor) {\r\n\t\t\t\t\tdataContext.signalColor = signalColor.toCSSHex();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 14);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tthis._ema(data, period, \"value_y\", \"ema\");\r\n\t\t\tthis._ema(data, period, \"ema\", \"ema2\");\r\n\t\t\tthis._ema(data, period, \"ema2\", \"ema3\");\r\n\r\n\t\t\tlet previousDataItem: any;\r\n\t\t\tlet previousValue: number;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.ema3;\r\n\t\t\t\tif (previousDataItem) {\r\n\t\t\t\t\tpreviousValue = previousDataItem.ema3;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ($type.isNumber(value) && $type.isNumber(previousValue)) {\r\n\t\t\t\t\tdataItem.trix = 100 * (value - previousValue) / previousValue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t})\r\n\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\r\n\r\n\t\t\tperiod = this.get(\"signalPeriod\", 9);\r\n\t\t\tthis._sma(data, period, \"trix\", \"signal\");\r\n\r\n\t\t\tthis.signalSeries.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IMedianPriceSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IMedianPricePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IMedianPriceEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class MedianPrice extends ChartIndicator {\r\n\tpublic static className: string = \"MedianPrice\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([MedianPrice.className]);\r\n\r\n\tdeclare public _settings: IMedianPriceSettings;\r\n\tdeclare public _privateSettings: IMedianPricePrivate;\r\n\tdeclare public _events: IMedianPriceEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"period\",\r\n\t\tname: this.root.language.translateAny(\"Period\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _afterNew(){\r\n\t\tthis._themeTags.push(\"medianprice\");\r\n\t\tsuper._afterNew();\r\n\t}\t\r\n\r\n\tpublic _createSeries(): LineSeries {\r\n\t\treturn this.panel.series.push(LineSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\tvalueYField: \"median\",\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tsuper.prepareData();\r\n\r\n\t\tif (this.series) {\r\n\r\n\t\t\tlet period = this.get(\"period\", 20);\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst dataItems = stockSeries.dataItems;\r\n\r\n\t\t\tlet data = this._getDataArray(dataItems);\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tlet index = 0;\r\n\t\t\tlet median = 0;\r\n\t\t\t$array.each(data, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.value_y;\r\n\t\t\t\tif (value != null) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tmedian += value / period;\r\n\r\n\t\t\t\t\tif (i >= period) {\r\n\t\t\t\t\t\tif (i > period) {\r\n\t\t\t\t\t\t\tlet valueToRemove = data[index - period].value_y;\r\n\t\t\t\t\t\t\tif (valueToRemove != null) {\r\n\t\t\t\t\t\t\t\tmedian -= valueToRemove / period;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdataItem.median = median;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\r\n\t\t\tthis.series.data.setAll(data);\r\n\t\t}\r\n\t}\r\n}","import { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\n\r\nexport interface IZigZagSettings extends IIndicatorSettings {\r\n\t/**\r\n\t * Percentage of price movement you want to set as your threshold\r\n\t */\r\n\tdeviation?: number;\r\n\r\n\t/**\r\n\t * The minimum number of price bars required where there is no secondary high or low.\r\n\t */\r\n\tdepth?: number;\r\n}\r\n\r\nexport interface IZigZagPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IZigZagEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class ZigZag extends Indicator {\r\n\tpublic static className: string = \"ZigZag\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([ZigZag.className]);\r\n\r\n\tdeclare public _settings: IZigZagSettings;\r\n\tdeclare public _privateSettings: IZigZagPrivate;\r\n\tdeclare public _events: IZigZagEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: LineSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"deviation\",\r\n\t\tname: this.root.language.translateAny(\"Deviation\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"depth\",\r\n\t\tname: this.root.language.translateAny(\"Depth\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"seriesColor\",\r\n\t\tname: this.root.language.translateAny(\"Color\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\tpublic _prepareChildren() {\r\n\r\n\t\tif (this.isDirty(\"deviation\") || this.isDirty(\"depth\")) {\r\n\t\t\tthis._dataDirty = true;\r\n\t\t\tthis.setCustomData(\"deviation\", this.get(\"deviation\"));\r\n\t\t\tthis.setCustomData(\"depth\", this.get(\"depth\"));\r\n\t\t}\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tconst chart = stockSeries.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst series = chart.series.push(LineSeries.new(this._root, {\r\n\t\t\t\tvalueXField: \"time\",\r\n\t\t\t\tvalueYField: \"zigzag\",\r\n\t\t\t\tgroupDataDisabled: true,\r\n\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\txAxis: stockSeries.get(\"xAxis\"),\r\n\t\t\t\tyAxis: stockSeries.get(\"yAxis\"),\r\n\t\t\t\tthemeTags: [\"indicator\", \"zigzag\"],\r\n\t\t\t\tname: \"ZigZag\",\r\n\t\t\t\tsnapTooltip: true\r\n\t\t\t}))\r\n\t\t\tseries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\tthis.series = series;\r\n\r\n\t\t\tthis._handleLegend(series);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tconst deviation = this.get(\"deviation\", 5) / 100;\r\n\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\tconst data: Array<any> = [];\r\n\t\t\tif (stockSeries) {\r\n\t\t\t\tconst dataItems = stockSeries.dataItems;\r\n\t\t\t\tif (dataItems.length > 1) {\r\n\t\t\t\t\tlet firstDataItem = dataItems[0];\r\n\r\n\t\t\t\t\tlet goesUp = false;\r\n\t\t\t\t\tlet firstTime = firstDataItem.get(\"valueX\", 0);\r\n\t\t\t\t\tlet firstValue = firstDataItem.get(\"valueY\");\r\n\t\t\t\t\tlet firstHigh = firstDataItem.get(\"highValueY\", firstValue);\r\n\t\t\t\t\tlet firstLow = firstDataItem.get(\"lowValueY\", firstValue);\r\n\r\n\t\t\t\t\tlet zigZagTime: number | undefined;\r\n\t\t\t\t\tlet zigZagValue: number | undefined;\r\n\r\n\t\t\t\t\tlet j = 1;\r\n\t\t\t\t\tfor (let i = 1, len = dataItems.length; i < len; i++) {\r\n\t\t\t\t\t\tlet dataItem = dataItems[i];\r\n\t\t\t\t\t\tlet value = dataItem.get(\"value\", 0);\r\n\t\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", value);\r\n\t\t\t\t\t\tlet high = dataItem.get(\"highValueY\", value);\r\n\t\t\t\t\t\tlet time = dataItem.get(\"valueX\", 0);\r\n\r\n\t\t\t\t\t\tif (low <= Number(firstHigh) * (1 - deviation)) {\r\n\t\t\t\t\t\t\tdata.push({ time: firstTime, zigzag: firstHigh });\r\n\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\tzigZagValue = low;\r\n\t\t\t\t\t\t\tgoesUp = true;\r\n\t\t\t\t\t\t\tj = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (high >= Number(firstLow) * (1 + deviation)) {\r\n\t\t\t\t\t\t\tdata.push({ time: firstTime, zigzag: firstLow });\r\n\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\tzigZagValue = high;\r\n\t\t\t\t\t\t\tgoesUp = false;\r\n\t\t\t\t\t\t\tj = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (zigZagValue != null) {\r\n\t\t\t\t\t\tlet depth = this.get(\"depth\", 3);\r\n\t\t\t\t\t\tfor (let i = j - 1, len = dataItems.length; i < len; i++) {\r\n\t\t\t\t\t\t\tlet dataItem = dataItems[i];\r\n\t\t\t\t\t\t\tlet value = dataItem.get(\"value\", 0);\r\n\t\t\t\t\t\t\tlet low = dataItem.get(\"lowValueY\", value);\r\n\t\t\t\t\t\t\tlet high = dataItem.get(\"highValueY\", value);\r\n\t\t\t\t\t\t\tlet time = dataItem.get(\"valueX\", 0);\r\n\r\n\t\t\t\t\t\t\tif (goesUp) {\r\n\t\t\t\t\t\t\t\tif (low <= zigZagValue) {\r\n\t\t\t\t\t\t\t\t\tzigZagValue = low;\r\n\t\t\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (high >= zigZagValue * (1 + deviation)) {\r\n\t\t\t\t\t\t\t\t\tlet b = Math.max(0, i - depth);\r\n\t\t\t\t\t\t\t\t\tlet skip = false;\r\n\t\t\t\t\t\t\t\t\tfor (let k = i; k > b; k--) {\r\n\t\t\t\t\t\t\t\t\t\tif (high < dataItems[k].get(\"highValueY\")) {\r\n\t\t\t\t\t\t\t\t\t\t\tskip = true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!skip) {\r\n\t\t\t\t\t\t\t\t\t\tdata.push({ time: zigZagTime, zigzag: zigZagValue });\r\n\t\t\t\t\t\t\t\t\t\tzigZagValue = high;\r\n\t\t\t\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\t\t\t\tgoesUp = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tif (high >= zigZagValue) {\r\n\t\t\t\t\t\t\t\t\tzigZagValue = high;\r\n\t\t\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse if (low <= zigZagValue * (1 - deviation)) {\r\n\t\t\t\t\t\t\t\t\tlet b = Math.max(0, i - depth);\r\n\t\t\t\t\t\t\t\t\tlet skip = false;\r\n\t\t\t\t\t\t\t\t\tfor (let k = i; k > b; k--) {\r\n\t\t\t\t\t\t\t\t\t\tif (low > dataItems[k].get(\"lowValueY\")) {\r\n\t\t\t\t\t\t\t\t\t\t\tskip = true;\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!skip) {\r\n\t\t\t\t\t\t\t\t\t\tdata.push({ time: zigZagTime, zigzag: zigZagValue });\r\n\t\t\t\t\t\t\t\t\t\tzigZagValue = low;\r\n\t\t\t\t\t\t\t\t\t\tzigZagTime = time;\r\n\t\t\t\t\t\t\t\t\t\tgoesUp = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tconst lastDataItem = dataItems[dataItems.length - 1];\r\n\t\t\t\t\t\tlet lastTime = lastDataItem.get(\"valueX\", 0);\r\n\t\t\t\t\t\tlet lastValue = lastDataItem.get(\"valueY\");\r\n\t\t\t\t\t\tlet lastHigh = lastDataItem.get(\"highValueY\", lastValue);\r\n\t\t\t\t\t\tlet lastLow = lastDataItem.get(\"lowValueY\", lastValue);\r\n\r\n\t\t\t\t\t\tif (zigZagValue < lastHigh) {\r\n\t\t\t\t\t\t\tdata.push({ time: lastTime, zigzag: lastLow });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tdata.push({ time: lastTime, zigzag: lastHigh });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.series.data.setAll(data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport type { DataItem } from \"../../../..\";\r\n\r\nexport interface IAverageTrueRangeSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IAverageTrueRangePrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IAverageTrueRangeEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AverageTrueRange extends ChartIndicator {\r\n    public static className: string = \"AverageTrueRange\";\r\n    public static classNames: Array<string> = ChartIndicator.classNames.concat([AverageTrueRange.className]);\r\n\r\n    declare public _settings: IAverageTrueRangeSettings;\r\n    declare public _privateSettings: IAverageTrueRangePrivate;\r\n    declare public _events: IAverageTrueRangeEvents;\r\n\r\n    /**\r\n     * Indicator series.\r\n     */\r\n    declare public series: LineSeries;\r\n\r\n    public _editableSettings: IIndicatorEditableSetting[] = [{\r\n        key: \"period\",\r\n        name: this.root.language.translateAny(\"Period\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"seriesColor\",\r\n        name: this.root.language.translateAny(\"Color\"),\r\n        type: \"color\"\r\n    }];\r\n\r\n    public _afterNew() {\r\n        this._themeTags.push(\"averagetruerange\");\r\n        super._afterNew();\r\n    }\r\n\r\n    public _createSeries(): LineSeries {\r\n        return this.panel.series.push(LineSeries.new(this._root, {\r\n            themeTags: [\"indicator\"],\r\n            xAxis: this.xAxis,\r\n            yAxis: this.yAxis,\r\n            valueXField: \"valueX\",\r\n            valueYField: \"atr\",\r\n            fill: undefined\r\n        }))\r\n    }\r\n\r\n    protected _getDataArray(dataItems: Array<DataItem<any>>): Array<any> {\r\n        const data: Array<any> = [];\r\n        $array.each(dataItems, (dataItem) => {\r\n            data.push({ valueX: dataItem.get(\"valueX\"), value_close: dataItem.get(\"valueY\"), value_high: dataItem.get(\"highValueY\"), value_low: dataItem.get(\"lowValueY\") });\r\n        })\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public prepareData() {\r\n        super.prepareData();\r\n\r\n        if (this.series) {\r\n\r\n            let period = this.get(\"period\", 20);\r\n            const stockSeries = this.get(\"stockSeries\");\r\n            const dataItems = stockSeries.dataItems;\r\n\r\n            let data = this._getDataArray(dataItems);\r\n\r\n            let i = 0;\r\n            let index = 0;\r\n            let tr = 0;\r\n            let prevClose: number | undefined;\r\n            let prevATR: number | undefined;\r\n\r\n            $array.each(data, (dataItem) => {\r\n\r\n                let valueClose = dataItem.value_close;\r\n\r\n                if (valueClose != null && prevClose != null) {\r\n                    i++;\r\n                    tr = Math.max(dataItem.value_high - dataItem.value_low, Math.abs(dataItem.value_high - prevClose), Math.abs(dataItem.value_low - prevClose));\r\n                    dataItem.tr = tr;\r\n\r\n                    if (i >= period) {\r\n                        if (i == period) {\r\n                            let sum = 0;\r\n                            let k = 0;\r\n                            for (let j = index; j >= 0; j--) {\r\n                                sum += data[j].tr;\r\n                                k++;\r\n                                if (k == period) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            dataItem.atr = sum / period;\r\n                        }\r\n                        else {\r\n                            if (prevATR != null) {\r\n                                dataItem.atr = (prevATR * (period - 1) + tr) / period;\r\n                            }\r\n                        }\r\n\r\n                        prevATR = dataItem.atr;\r\n                    }\r\n                }\r\n                prevClose = valueClose;\r\n                index++;\r\n            })\r\n\r\n            this.series.data.setAll(data);\r\n        }\r\n    }\r\n}","import type { IDisposer } from \"../../../core/util/Disposer\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport type { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\nimport type { Sprite } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\nimport type { StockChart } from \"../StockChart\";\r\nimport type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\n\r\nimport { LineSeries, ILineSeriesSettings, ILineSeriesPrivate, ILineSeriesDataItem } from \"../../xy/series/LineSeries\";\r\nimport { Bullet } from \"../../../core/render/Bullet\";\r\nimport { Circle } from \"../../../core/render/Circle\";\r\nimport { Rectangle } from \"../../../core/render/Rectangle\";\r\nimport { Container } from \"../../../core/render/Container\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\n\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\n\r\n\r\nexport interface IDrawingSeriesDataItem extends ILineSeriesDataItem {\r\n\r\n}\r\n\r\nexport interface IDrawingSeriesSettings extends ILineSeriesSettings {\r\n\r\n\t/**\r\n\t * X-Axis.\r\n\t */\r\n\txAxis: DateAxis<AxisRenderer>;\r\n\r\n\t/**\r\n\t * Y-axis.\r\n\t */\r\n\tyAxis: ValueAxis<AxisRenderer>;\r\n\r\n\t/**\r\n\t * Color of the lines/borders.\r\n\t */\r\n\tstrokeColor?: Color;\r\n\r\n\t/**\r\n\t * Color of the fills.\r\n\t */\r\n\tfillColor?: Color;\r\n\r\n\t/**\r\n\t * Opacity of the lines/borders (0-1).\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n\t/**\r\n\t * Opacity of the fills (0-1).\r\n\t */\r\n\tfillOpacity?: number;\r\n\r\n\t/**\r\n\t * Width of the lines/borders in pixels.\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Dash information for lines/borders.\r\n\t */\r\n\tstrokeDasharray?: Array<number>;\r\n\r\n\t/**\r\n\t * [[XYSeries]] used for drawing.\r\n\t */\r\n\tseries?: XYSeries;\r\n\r\n\t/**\r\n\t * Indicates if drawings should snap to x and y values.\r\n\t * @ignore\r\n\t */\r\n\tsnapToData?: boolean;\r\n\r\n\t/**\r\n\t * Value field to use when snapping data or calculating averages/regresions/etc.\r\n\t *\r\n\t * @default \"value\"\r\n\t */\r\n\tfield?: \"open\" | \"value\" | \"low\" | \"high\";\r\n\r\n\t/**\r\n\t * Padding of a selector rectangle (how many pixels will be added to each side around the drawing when it's selected)\r\n\t * @default 5\r\n\t */\r\n\tselectorPadding?: number;\r\n}\r\n\r\nexport interface IDrawingSeriesPrivate extends ILineSeriesPrivate {\r\n\tallowChangeSnap?: boolean;\r\n}\r\n\r\n\r\nexport class DrawingSeries extends LineSeries {\r\n\tpublic static className: string = \"DrawingSeries\";\r\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([DrawingSeries.className]);\r\n\r\n\tdeclare public _settings: IDrawingSeriesSettings;\r\n\tdeclare public _privateSettings: IDrawingSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IDrawingSeriesDataItem;\r\n\r\n\tprotected _clickDp?: IDisposer;\r\n\tprotected _moveDp?: IDisposer;\r\n\tprotected _downDp?: IDisposer;\r\n\tprotected _upDp?: IDisposer;\r\n\r\n\tprotected _drawingEnabled: boolean = false;\r\n\r\n\tprotected _clickPointerPoint?: IPoint;\r\n\tprotected _movePointerPoint?: IPoint;\r\n\r\n\tprotected _isDrawing: boolean = false;\r\n\tprotected _isPointerDown: boolean = false;\r\n\r\n\tpublic _index: number = 0;\r\n\tpublic _drawingId?: string;\r\n\r\n\tprotected _di: Array<{ [index: string]: DataItem<IDrawingSeriesDataItem> }> = [];\r\n\r\n\tprotected _dragStartPX: number = 0;\r\n\tprotected _dragStartY: number = 0;\r\n\r\n\tprotected _dvpX: Array<{ [index: string]: number | undefined }> = [];\r\n\tprotected _dvY: Array<{ [index: string]: number | undefined }> = [];\r\n\r\n\tprotected _isHover: boolean = false;\r\n\r\n\tprotected _erasingEnabled: boolean = false;\r\n\r\n\tprotected _tag?: string;\r\n\r\n\tprotected _movePoint: IPoint = { x: 0, y: 0 };\r\n\r\n\tprotected selectorContainer: Container = this.children.push(Container.new(this.root, {}));\r\n\r\n\tprotected _selected: Array<number> = [];\r\n\r\n\tprotected _isSelecting: boolean = false;\r\n\r\n\t// point index in segment\r\n\tprotected _pIndex: number = 0;\r\n\r\n\tpublic readonly grips: ListTemplate<Container> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Container._new(this._root, {\r\n\t\t\tthemeTags: [\"grip\"],\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tdraggable: true\r\n\t\t}, [this.grips.template]),\r\n\t));\r\n\r\n\tpublic readonly circles: ListTemplate<Circle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Circle._new(this._root, {\r\n\t\t}, [this.circles.template]),\r\n\t));\r\n\r\n\tpublic readonly outerCircles: ListTemplate<Circle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Circle._new(this._root, {\r\n\t\t\tthemeTags: [\"outline\"]\r\n\t\t}, [this.outerCircles.template]),\r\n\t));\r\n\r\n\tpublic readonly selectors: ListTemplate<Rectangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Rectangle._new(this._root, {\r\n\t\t\tthemeTags: [\"selector\"]\r\n\t\t}, [this.selectors.template]),\r\n\t));\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis.addTag(\"drawing\");\r\n\t\tthis.setPrivate(\"allowChangeSnap\", true);\r\n\r\n\t\tif (this._tag) {\r\n\t\t\tthis.addTag(this._tag);\r\n\t\t}\r\n\r\n\t\tthis.set(\"valueYField\", \"valueY\");\r\n\t\tthis.set(\"valueXField\", \"valueX\");\r\n\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.set(\"connect\", false);\r\n\t\tthis.set(\"autoGapCount\", Infinity);\r\n\t\tthis.set(\"ignoreMinMax\", true);\r\n\t\tthis.set(\"groupDataDisabled\", true);\r\n\r\n\t\tconst strokesTemplate = this.strokes.template;\r\n\t\tstrokesTemplate.set(\"templateField\", \"stroke\");\r\n\r\n\t\tconst fillsTemplate = this.fills.template;\r\n\t\tfillsTemplate.setAll({ templateField: \"fill\" });\r\n\r\n\t\tfillsTemplate.events.on(\"pointerdown\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\tthis._disposeIndex(index);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\t\tif (!originalEvent.button && this._drawingEnabled) {\r\n\t\t\t\t\tthis._handlePointerDown(e);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst stroke = this.strokes.getIndex(this._getStrokeIndex(index));\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.dragStart(e);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfillsTemplate.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis.startDragItem(e, this._getIndex(e.target));\r\n\t\t})\r\n\r\n\t\tfillsTemplate.events.on(\"click\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\tif (!this._isDrawing) {\r\n\t\t\t\tthis._selectDrawing(index, originalEvent.ctrlKey);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfillsTemplate.events.on(\"dragstop\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\t\t\tthis.stopDragItem(e, index);\r\n\t\t})\r\n\r\n\t\tfillsTemplate.events.on(\"pointerover\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\t\t\tconst stroke = this.strokes.getIndex(this._getStrokeIndex(index));\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.hover();\r\n\t\t\t}\r\n\t\t\tthis._isHover = true;\r\n\t\t\tthis._showSegmentBullets(index);\r\n\t\t})\r\n\r\n\t\tfillsTemplate.events.on(\"pointerout\", () => {\r\n\t\t\tthis._isHover = false;\r\n\t\t\t//this._hideAllBullets();\r\n\t\t})\r\n\r\n\r\n\t\tstrokesTemplate.events.on(\"pointerdown\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\r\n\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\tthis._disposeIndex(index);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tstrokesTemplate.events.on(\"click\", (e) => {\r\n\t\t\tconst index = this._getIndex(e.target);\r\n\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\tthis._selectDrawing(index, originalEvent.ctrlKey);\r\n\t\t})\r\n\r\n\t\tstrokesTemplate.events.on(\"pointerover\", (e) => {\r\n\t\t\tthis._isHover = true;\r\n\t\t\tthis._showSegmentBullets(this._getIndex(e.target));\r\n\t\t})\r\n\r\n\t\tstrokesTemplate.events.on(\"pointerout\", () => {\r\n\t\t\tthis._isHover = false;\r\n\t\t\t//this._hideAllBullets();\r\n\t\t})\r\n\r\n\t\tstrokesTemplate.events.on(\"dragstop\", (e) => {\r\n\t\t\tthis.stopDragItem(e, this._getIndex(e.target));\r\n\t\t})\r\n\r\n\t\tstrokesTemplate.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis.startDragItem(e, this._getIndex(e.target));\r\n\t\t})\r\n\r\n\t\tthis.bulletsContainer.states.create(\"hidden\", { visible: true, opacity: 0 });\r\n\r\n\t\tthis.bullets.push((_root, _series, dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst di = this._di[index][\"e\"] as DataItem<IDrawingSeriesDataItem>;\r\n\t\t\tlet color = this.get(\"strokeColor\", this.get(\"stroke\"));\r\n\r\n\t\t\tif (di) {\r\n\t\t\t\tconst dc = di.dataContext as any;\r\n\t\t\t\tif (dc) {\r\n\t\t\t\t\tconst strokeTemplate = dc.stroke;\r\n\t\t\t\t\tif (strokeTemplate) {\r\n\t\t\t\t\t\tcolor = strokeTemplate.get(\"stroke\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst container = this.grips.make();\r\n\t\t\tcontainer.setRaw(\"userData\", \"grip\");\r\n\t\t\tthis.grips.push(container);\r\n\r\n\t\t\tconst circle = container.children.push(this.circles.make())\r\n\t\t\tthis.circles.push(circle);\r\n\t\t\tcircle.set(\"stroke\", color);\r\n\r\n\t\t\tconst outerCircle = container.children.push(this.outerCircles.make())\r\n\t\t\tthis.outerCircles.push(outerCircle);\r\n\t\t\touterCircle.set(\"stroke\", color);\r\n\r\n\t\t\tcontainer.events.on(\"pointerover\", (event) => {\r\n\t\t\t\tconst dataItem = event.target.dataItem;\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\tthis._showSegmentBullets(dataContext.index);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\t//container.events.on(\"pointerout\", () => {\r\n\t\t\t//\tthis._hideAllBullets();\r\n\t\t\t//})\r\n\r\n\t\t\tthis._addBulletInteraction(container);\r\n\t\t\tthis._tweakBullet(container, dataItem);\r\n\r\n\t\t\treturn Bullet.new(this._root, {\r\n\t\t\t\tlocationX: undefined,\r\n\t\t\t\tsprite: container\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.events.on(\"pointerover\", () => {\r\n\t\t\tthis._handlePointerOver();\r\n\t\t})\r\n\r\n\t\tthis.events.on(\"pointerout\", () => {\r\n\t\t\tthis._handlePointerOut();\r\n\t\t})\r\n\r\n\t\tthis._getStockChart().markDirtyKey(\"drawingSelectionEnabled\");\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Disposes a drawing with the specified index.\r\n\t *\r\n\t * @param  index  Index\r\n\t * @since 5.7.7\r\n\t */\r\n\tpublic disposeIndex(index: number) {\r\n\t\tthis._disposeIndex(index);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns index of a drawing with the specific ID, or `null` if not found.\r\n\t *\r\n\t * @param   id  ID\r\n\t * @return      Index\r\n\t * @since 5.8.4\r\n\t */\r\n\tpublic getIndex(id: string): number | null {\r\n\t\tlet index = null;\r\n\t\t$array.eachContinue(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.drawingId == id) {\r\n\t\t\t\tindex = dataContext.index;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\treturn index;\r\n\t}\r\n\r\n\tprotected _disposeIndex(index: number) {\r\n\t\tconst dataItems = this._di[index];\r\n\r\n\t\tif (dataItems) {\r\n\t\t\tlet drawingId!: string;\r\n\t\t\tlet index!: number;\r\n\r\n\t\t\t$object.each(dataItems, (_key, dataItem) => {\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\tthis.data.removeValue(dataContext);\r\n\r\n\t\t\t\tif (dataContext) {\r\n\t\t\t\t\tif (dataContext.drawingId) {\r\n\t\t\t\t\t\tdrawingId = dataContext.drawingId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (dataContext.index) {\r\n\t\t\t\t\t\tindex = dataContext.index;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tfor (let i = this.dataItems.length - 1; i >= 0; i--) {\r\n\t\t\t\tconst dataItem = this.dataItems[i];\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\tif (dataContext.index == index) {\r\n\t\t\t\t\tthis.data.removeValue(dataContext);\r\n\t\t\t\t\tthis.disposeDataItem(dataItem);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._pIndex = 0;\r\n\t\t\tdelete this._di[index];\r\n\r\n\t\t\tthis._dispatchStockEvent(\"drawingremoved\", drawingId, index);\r\n\t\t}\r\n\t\tconst selector = this._getSprite(this.selectors, index) as Rectangle;\r\n\t\tif (selector) {\r\n\t\t\tthis.selectors.removeValue(selector);\r\n\t\t}\r\n\r\n\t\t$array.remove(this._selected, index);\r\n\t}\r\n\r\n\tprotected _afterDataChange() {\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst corner = dataContext.corner;\r\n\r\n\t\t\tif (index != undefined) {\r\n\t\t\t\tif (this._di[index] == undefined) {\r\n\t\t\t\t\tthis._di[index] = {};\r\n\t\t\t\t}\r\n\t\t\t\tthis._createElements(index, dataItem);\r\n\t\t\t\tthis._di[index][corner] = dataItem;\r\n\t\t\t\tthis._index = index;\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _createElements(_index: number, _dataItem?: DataItem<IDrawingSeriesDataItem>) {\r\n\r\n\t}\r\n\r\n\tpublic _clearDirty(): void {\r\n\t\tsuper._clearDirty();\r\n\t\tthis._isSelecting = false;\r\n\t}\r\n\r\n\tpublic clearDrawings(): void {\r\n\t\t$array.each(this._di, (_dataItems, index) => {\r\n\t\t\tthis._disposeIndex(index);\r\n\t\t});\r\n\r\n\t\tthis.data.setAll([]);\r\n\t\tthis._index = 0;\r\n\t\tthis._selected = [];\r\n\t}\r\n\r\n\tprotected _getIndex(sprite: Sprite): number {\r\n\t\tconst userData = sprite.get(\"userData\");\r\n\r\n\t\tif (userData && userData.length > 0) {\r\n\t\t\tconst dataItem = this.dataItems[userData[0]];\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\t\t\tif (dataContext) {\r\n\t\t\t\t\treturn dataContext.index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tprotected _getStrokeIndex(index: number) {\r\n\t\tlet i = 0;\r\n\t\tlet c = index;\r\n\t\tthis.strokes.each((stroke) => {\r\n\t\t\tconst strokeIndex = this._getIndex(stroke);\r\n\t\t\tif (strokeIndex == index) {\r\n\t\t\t\tc = i;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t})\r\n\t\treturn c;\r\n\t}\r\n\r\n\tpublic setInteractive(value: boolean) {\r\n\t\tthis.strokes.template.set(\"forceInactive\", !value);\r\n\t\tthis.fills.template.set(\"forceInactive\", !value);\r\n\r\n\t\t//if(value){\r\n\t\t//\tthis.showAllBullets();\r\n\t\t//}\r\n\t}\r\n\r\n\tpublic enableDrawingSelection(value: boolean) {\r\n\t\tthis._erasingEnabled = false;\r\n\t\tthis.strokes.template.set(\"forceInactive\", !value);\r\n\t\tthis.fills.template.set(\"forceInactive\", !value);\r\n\t}\r\n\r\n\tprotected _showSegmentBullets(index: number) {\r\n\t\tconst dataItems = this._di[index];\r\n\t\tif (dataItems) {\r\n\t\t\t$object.each(dataItems, (_key, dataItem) => {\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\tsprite.show(0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _hideResizer(sprite?: Sprite) {\r\n\t\tconst spriteResizer = this._getStockChart().spriteResizer;\r\n\t\tif (spriteResizer) {\r\n\t\t\tconst resizerSprite = spriteResizer.get(\"sprite\");\r\n\t\t\tif (resizerSprite) {\r\n\t\t\t\tif (!sprite || sprite.dataItem != resizerSprite.dataItem) {\r\n\t\t\t\t\tspriteResizer.set(\"sprite\", undefined);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic startDragItem(event: ISpritePointerEvent, index: number) {\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStartDrawing(event);\r\n\t\t}\r\n\r\n\t\tif (this._selected.indexOf(index) == -1) {\r\n\t\t\tthis.unselectAllDrawings();\r\n\t\t}\r\n\r\n\t\tthis._handleFillDragStart(event, index);\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic stopDragItem(event: ISpritePointerEvent, index: number) {\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStopDrawing(event);\r\n\t\t}\r\n\t\tthis._handleFillDragStop(event, index);\r\n\t}\r\n\r\n\tprotected _handleFillDragStart(event: ISpritePointerEvent, index: number) {\r\n\t\tthis._hideResizer(event.target);\r\n\t\tthis._isPointerDown = false;\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tthis._dragStartPX = xAxis.coordinateToPosition(point.x);\r\n\t\t\tconst valueXns = xAxis.positionToValue(this._dragStartPX);\r\n\t\t\tthis._dragStartY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueXns);\r\n\r\n\t\t\tconst dataItems = this._di[index];\r\n\t\t\tthis._dvpX[index] = {};\r\n\t\t\tthis._dvY[index] = {};\r\n\r\n\t\t\tif (dataItems) {\r\n\t\t\t\t$object.each(dataItems, (key, dataItem) => {\r\n\t\t\t\t\tthis._dvpX[index][key] = xAxis.valueToPosition(dataItem.get(\"valueX\", 0));\r\n\t\t\t\t\tthis._dvY[index][key] = dataItem.get(\"valueY\");\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _dragStart(event: ISpritePointerEvent) {\r\n\t\t$array.each(this._selected, (index) => {\r\n\t\t\tthis._handleFillDragStart(event, index);\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _dragStop(event: ISpritePointerEvent) {\r\n\t\t$array.each(this._selected, (index) => {\r\n\t\t\tthis._handleFillDragStop(event, index);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _handleFillDragStop(event: ISpritePointerEvent, index: number) {\r\n\t\tthis._isPointerDown = false;\r\n\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst posX = xAxis.coordinateToPosition(point.x);\r\n\t\t\tconst valueXns = xAxis.positionToValue(xAxis.coordinateToPosition(point.x));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueXns);\r\n\r\n\t\t\tconst dpx = posX - this._dragStartPX;\r\n\t\t\tconst dy = valueY - this._dragStartY;\r\n\r\n\t\t\tevent.target.setAll({\r\n\t\t\t\tx: 0, y: 0\r\n\t\t\t})\r\n\r\n\t\t\tconst dataItems = this._di[index];\r\n\r\n\t\t\tif (dataItems) {\r\n\t\t\t\t$object.each(dataItems, (key, dataItem) => {\r\n\t\t\t\t\tconst dvpx = this._dvpX[index][key];\r\n\t\t\t\t\tconst dvy = this._dvY[index][key];\r\n\r\n\t\t\t\t\tif ($type.isNumber(dvpx) && $type.isNumber(dvy)) {\r\n\t\t\t\t\t\tconst vpx = dvpx + dpx;\r\n\t\t\t\t\t\tconst vxns = xAxis.positionToValue(vpx);\r\n\t\t\t\t\t\tconst vx = this._getXValue(vxns);\r\n\r\n\t\t\t\t\t\tlet vy = dvy + dy;\r\n\t\t\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\t\t\tconst roundTo = yAxis.getPrivate(\"stepDecimalPlaces\", 0) + 1;\r\n\t\t\t\t\t\tvy = $math.round(vy, roundTo);\r\n\t\t\t\t\t\tvy = this._getYValue(vy, vxns, true);\r\n\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueX\", vx)\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueY\", vy, true);\r\n\r\n\t\t\t\t\t\tthis._setXLocation(dataItem, vx);\r\n\t\t\t\t\t\tthis._positionBullets(dataItem);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst stroke = this.strokes.getIndex(this._getStrokeIndex(index));\r\n\t\tif (stroke) {\r\n\t\t\tstroke.dragStop(event);\r\n\t\t}\r\n\r\n\t\tthis.markDirty();\r\n\t\tthis._updateSegment(index);\r\n\t}\r\n\r\n\tprotected _updateSegment(_index: number) {\r\n\t\tthis._updateElements();\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tthis._updateElements();\r\n\r\n\t\tif (this.isDirty(\"strokeColor\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeDasharray\") || this.isDirty(\"strokeWidth\")) {\r\n\t\t\t$array.each(this._selected, (i) => {\r\n\r\n\t\t\t\tlet settings = {\r\n\t\t\t\t\tstroke: this.get(\"strokeColor\"),\r\n\t\t\t\t\tstrokeOpacity: this.get(\"strokeOpacity\"),\r\n\t\t\t\t\tstrokeDasharray: this.get(\"strokeDasharray\"),\r\n\t\t\t\t\tstrokeWidth: this.get(\"strokeWidth\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst stroke = this.strokes.getIndex(this._getStrokeIndex(i));\r\n\t\t\t\tif (stroke) {\r\n\t\t\t\t\tlet strokeTemplate: Template<any>;\r\n\t\t\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\t\tif (dataContext.index == i) {\r\n\t\t\t\t\t\t\tif (dataContext.stroke) {\r\n\t\t\t\t\t\t\t\tstrokeTemplate = dataContext.stroke;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconst defaultState = stroke.states.lookup(\"default\")!;\r\n\t\t\t\t\t$object.each(settings, (key, value) => {\r\n\t\t\t\t\t\tstroke.set(key, value);\r\n\t\t\t\t\t\tdefaultState.set(key, value);\r\n\t\t\t\t\t\tif (strokeTemplate) {\r\n\t\t\t\t\t\t\tstrokeTemplate.set(key, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.circles.each((circle) => {\r\n\t\t\t\t\tconst dataItem = circle.dataItem;\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\t\tif (dataContext) {\r\n\t\t\t\t\t\t\tif (dataContext.index == i) {\r\n\t\t\t\t\t\t\t\tcircle.set(\"stroke\", settings.stroke)\r\n\t\t\t\t\t\t\t\tcircle.states.lookup(\"default\")!.set(\"stroke\", settings.stroke);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.outerCircles.each((circle) => {\r\n\t\t\t\t\tconst dataItem = circle.dataItem;\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\t\tif (dataContext) {\r\n\t\t\t\t\t\t\tif (dataContext.index == i) {\r\n\t\t\t\t\t\t\t\tcircle.set(\"stroke\", settings.stroke)\r\n\t\t\t\t\t\t\t\tcircle.states.lookup(\"default\")!.set(\"stroke\", settings.stroke);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\r\n\t\t\t\tthis._applySettings(i, settings);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"fillColor\") || this.isDirty(\"fillOpacity\")) {\r\n\t\t\t$array.each(this._selected, (i) => {\r\n\t\t\t\tconst fill = this.fills.getIndex(this._getStrokeIndex(i));\r\n\r\n\t\t\t\tlet settings = {\r\n\t\t\t\t\tfill: this.get(\"fillColor\"),\r\n\t\t\t\t\tfillOpacity: this.get(\"fillOpacity\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fill) {\r\n\t\t\t\t\tlet fillTemplate: Template<any>;\r\n\t\t\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\t\t\tif (dataContext.index == i) {\r\n\t\t\t\t\t\t\tif (dataContext.fill) {\r\n\t\t\t\t\t\t\t\tfillTemplate = dataContext.fill;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconst defaultState = fill.states.lookup(\"default\")!;\r\n\t\t\t\t\t$object.each(settings, (key, value) => {\r\n\t\t\t\t\t\tfill.set(key, value);\r\n\t\t\t\t\t\tdefaultState.set(key, value);\r\n\t\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\t\tfillTemplate.set(key, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._applySettings(i, settings);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this._valuesDirty) {\r\n\t\t\tthis.markDirtyDrawings();\r\n\t\t}\r\n\r\n\t\tsuper._updateChildren();\r\n\t\tthis._updateSelectors();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic isDrawing(value: boolean) {\r\n\t\tthis._isDrawing = value;\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tif (value) {\r\n\t\t\t\tstockChart._selectionWasOn = stockChart.get(\"drawingSelectionEnabled\", false);\r\n\t\t\t\tstockChart.set(\"drawingSelectionEnabled\", false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _applySettings(_index: number, _settings?: { [index: string]: any }) {\r\n\t\tthis.markDirtyDrawings();\r\n\t}\r\n\r\n\tprotected _updateElements() {\r\n\r\n\t}\r\n\r\n\tpublic markDirtyDrawings() {\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart.markDirtyDrawings();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getFillTemplate(): Template<any> {\r\n\t\tconst fillTemplate: any = {};\r\n\r\n\t\tconst fillColor = this.get(\"fillColor\");\r\n\t\tif (fillColor != null) {\r\n\t\t\tfillTemplate.fill = fillColor;\r\n\t\t}\r\n\r\n\t\tconst fillOpacity = this.get(\"fillOpacity\");\r\n\t\tif (fillOpacity != null) {\r\n\t\t\tfillTemplate.fillOpacity = fillOpacity;\r\n\t\t}\r\n\r\n\t\treturn Template.new(fillTemplate);\r\n\t}\r\n\r\n\tprotected _getStrokeTemplate(): Template<any> {\r\n\t\tconst strokeTemplate: any = {};\r\n\r\n\t\tconst strokeColor = this.get(\"strokeColor\");\r\n\t\tif (strokeColor != null) {\r\n\t\t\tstrokeTemplate.stroke = strokeColor;\r\n\t\t}\r\n\r\n\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\r\n\t\tif (strokeOpacity != null) {\r\n\t\t\tstrokeTemplate.strokeOpacity = strokeOpacity;\r\n\t\t}\r\n\r\n\t\tconst strokeDasharray = this.get(\"strokeDasharray\");\r\n\t\tif (strokeDasharray != null) {\r\n\t\t\tstrokeTemplate.strokeDasharray = strokeDasharray;\r\n\t\t}\r\n\r\n\t\tconst strokeWidth = this.get(\"strokeWidth\");\r\n\t\tif (strokeWidth != null) {\r\n\t\t\tstrokeTemplate.strokeWidth = strokeWidth;\r\n\t\t}\r\n\r\n\t\treturn Template.new(strokeTemplate);\r\n\t}\r\n\r\n\tprotected _tweakBullet(_container: Container, _dataItem: DataItem<IDrawingSeriesDataItem>) {\r\n\r\n\t}\r\n\r\n\tprotected _dispatchStockEvent(type: any, drawingId?: string, index?: number) {\r\n\t\tconst stockChart = this._getStockChart();\r\n\r\n\t\tif (type == \"drawingadded\") {\r\n\t\t\tif (stockChart._selectionWasOn) {\r\n\t\t\t\tstockChart.set(\"drawingSelectionEnabled\", true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (stockChart && stockChart.events.isEnabled(type)) {\r\n\t\t\tstockChart.events.dispatch(type, { drawingId: drawingId, series: this, target: stockChart, index: index });\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addBulletInteraction(sprite: Sprite) {\r\n\t\tsprite.events.on(\"dragged\", (e) => {\r\n\t\t\tthis._handleBulletDragged(e);\r\n\t\t\tthis._isDragging = true;\r\n\t\t})\r\n\r\n\t\tsprite.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis._handleBulletDragStart(e);\r\n\t\t})\r\n\r\n\t\tsprite.events.on(\"dragstop\", (e) => {\r\n\t\t\tthis._handleBulletDragStop(e);\r\n\t\t\tthis.setTimeout(() => {\r\n\t\t\t\tthis._isDragging = false;\r\n\t\t\t}, 100)\r\n\t\t})\r\n\r\n\t\tsprite.events.on(\"click\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\t\tif (dataContext) {\r\n\t\t\t\t\t\tthis._disposeIndex(dataContext.index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (!this._isDrawing) {\r\n\t\t\t\t\t\tthis._selectDrawing(dataContext.index, (e.originalEvent as any).ctrlKey);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._handlePointerClick(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _increaseIndex() {\r\n\t\tthis._index++;\r\n\t\tthis._drawingId = this._generateId();\r\n\t}\r\n\r\n\tpublic _generateId(): string {\r\n\t\treturn \"\" + new Date().getTime() + Math.round(Math.random() * 10000 + 10000);\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tconst chart = this.chart;\r\n\t\t\tif (chart) {\r\n\t\t\t\tthis._clickPointerPoint = chart.plotContainer.toLocal(event.point)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// need this in order bullets not to be placed to the charts bullets container\r\n\tpublic _placeBulletsContainer() {\r\n\t\tthis.children.moveValue(this.bulletsContainer);\r\n\t\tthis.enableDrawing();\r\n\t\tthis.disableDrawing();\r\n\t}\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tconst dataItem = event.target.dataItem as DataItem<this[\"_dataItemSettings\"]>;\r\n\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst target = event.target;\r\n\t\t\tconst point = { x: target.x(), y: target.y() };\r\n\t\t\tthis._handleBulletDraggedReal(dataItem, point);\r\n\t\t}\r\n\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tthis._updateSegment(index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletDraggedReal(dataItem: DataItem<this[\"_dataItemSettings\"]>, point: IPoint) {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\tconst valueXns = xAxis.positionToValue(xAxis.coordinateToPosition(point.x));\r\n\t\tconst valueX = this._getXValue(valueXns);\r\n\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueXns);\r\n\r\n\t\tthis._setContext(dataItem, \"valueX\", valueX);\r\n\t\tthis._setContext(dataItem, \"valueY\", valueY, true);\r\n\t\tthis._setXLocation(dataItem, valueX);\r\n\r\n\t\tthis._positionBullets(dataItem);\r\n\t}\r\n\r\n\tprotected _handleBulletDragStart(_event: ISpritePointerEvent) {\r\n\t\tthis._hideResizer();\r\n\t\tthis.unselectAllDrawings();\r\n\t}\r\n\r\n\tprotected _handleBulletDragStop(_event: ISpritePointerEvent) {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerOver() {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerOut() {\r\n\r\n\t}\r\n\r\n\tpublic enableDrawing() {\r\n\t\tconst chart = this.chart;\r\n\t\tthis._erasingEnabled = false;\r\n\t\tthis._drawingEnabled = true;\r\n\t\tif (chart) {\r\n\t\t\tif (!this._clickDp) {\r\n\t\t\t\tthis._clickDp = chart.plotContainer.events.on(\"click\", (e) => {\r\n\t\t\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\t\t\tif (!originalEvent.button && !this._erasingEnabled) {\r\n\t\t\t\t\t\tthis._handlePointerClick(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._downDp) {\r\n\t\t\t\tthis._downDp = chart.plotContainer.events.on(\"pointerdown\", (e) => {\r\n\t\t\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\t\t\tif (!originalEvent.button && !this._erasingEnabled) {\r\n\t\t\t\t\t\tthis._handlePointerDown(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._upDp) {\r\n\t\t\t\tthis._upDp = chart.plotContainer.events.on(\"globalpointerup\", (e) => {\r\n\t\t\t\t\tconst originalEvent = e.originalEvent as any;\r\n\t\t\t\t\tif (!originalEvent.button && !this._erasingEnabled) {\r\n\t\t\t\t\t\tthis._handlePointerUp(e);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tif (!this._moveDp) {\r\n\t\t\t\tthis._moveDp = chart.plotContainer.events.on(\"globalpointermove\", (e) => {\r\n\t\t\t\t\tif (!this._erasingEnabled) {\r\n\t\t\t\t\t\tif (e.point.x != this._movePoint.x || e.point.y != this._movePoint.y) {\r\n\t\t\t\t\t\t\tthis._handlePointerMove(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic enableErasing() {\r\n\t\tthis._erasingEnabled = true;\r\n\t\tthis.setInteractive(true);\r\n\t}\r\n\r\n\tpublic disableErasing() {\r\n\t\tthis._erasingEnabled = false;\r\n\t\tif (!this._getStockChart().get(\"drawingSelectionEnabled\")) {\r\n\t\t\tthis.setInteractive(false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic disableDrawing() {\r\n\t\tthis._erasingEnabled = false;\r\n\t\tthis._drawingEnabled = false;\r\n\t\tthis.isDrawing(false);\r\n\r\n\t\tif (this._clickDp) {\r\n\t\t\tthis._clickDp.dispose();\r\n\t\t\tthis._clickDp = undefined;\r\n\t\t}\r\n\r\n\t\tif (this._downDp) {\r\n\t\t\tthis._downDp.dispose();\r\n\t\t\tthis._downDp = undefined;\r\n\t\t}\r\n\r\n\t\tif (this._upDp) {\r\n\t\t\tthis._upDp.dispose();\r\n\t\t\tthis._upDp = undefined;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDrawing(enabled?: boolean) {\r\n\t\tif(this._getStockChart().get(\"hideDrawingGrips\")){\r\n\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\tthis.circles.each((circle) => {\r\n\t\t\t\t\tcircle.set(\"forceHidden\", !enabled);\r\n\t\t\t\t})\r\n\t\t\t\tthis.grips.each((grip) => {\r\n\t\t\t\t\tgrip.set(\"forceInactive\", !enabled);\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tthis._movePointerPoint = chart.plotContainer.toLocal(event.point)\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerDown(_event: ISpritePointerEvent) {\r\n\t\tthis._isPointerDown = true;\r\n\t}\r\n\r\n\tprotected _handlePointerUp(_event: ISpritePointerEvent) {\r\n\t\tthis._isPointerDown = false;\r\n\t}\r\n\r\n\tpublic startIndex(): number {\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tpublic endIndex(): number {\r\n\t\treturn this.dataItems.length;\r\n\t}\r\n\r\n\tprotected _setXLocation(dataItem: DataItem<this[\"_dataItemSettings\"]>, value: number) {\r\n\t\tif (!this.get(\"snapToData\")) {\r\n\t\t\tthis._setXLocationReal(dataItem, value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.set(\"locationX\", undefined);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setXLocationReal(dataItem: DataItem<this[\"_dataItemSettings\"]>, value: number) {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst baseInterval = xAxis.getPrivate(\"baseInterval\");\r\n\t\tconst root = this._root;\r\n\t\tconst firstDayOfWeek = root.locale.firstDayOfWeek;\r\n\t\tconst open = $time.round(new Date(value), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, root.utc, undefined, root.timezone).getTime();\r\n\t\tlet close = open + $time.getDuration(baseInterval.timeUnit, baseInterval.count * 1.05);\r\n\t\tclose = $time.round(new Date(close), baseInterval.timeUnit, baseInterval.count, firstDayOfWeek, root.utc, undefined, root.timezone).getTime();\r\n\t\tconst locationX = (value - open) / (close - open);\r\n\t\tdataItem.set(\"locationX\", locationX);\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\r\n\t\t\tthis.markDirtyValues();\r\n\r\n\t\t\tconst dataItems = this._di[index];\r\n\r\n\t\t\tif (dataItems) {\r\n\t\t\t\t$object.each(dataItems, (_key, dataItem) => {\r\n\t\t\t\t\tsuper.disposeDataItem(dataItem);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tdelete this._di[index];\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _getYValue(value: number, valueX: number, doNotConvert?: boolean): number {\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\r\n\t\tif (this.get(\"snapToData\") && series) {\r\n\t\t\tconst field = this.get(\"field\", \"value\") + \"Y\";\r\n\t\t\treturn this._snap(valueX, value, field, series);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (!doNotConvert && this.get(\"valueYShow\") == \"valueYChangeSelectionPercent\") {\r\n\t\t\t\tconst baseValueSeries = this.getPrivate(\"baseValueSeries\");\r\n\t\t\t\tif (baseValueSeries) {\r\n\t\t\t\t\tconst baseValue = baseValueSeries._getBase(\"valueY\");\r\n\t\t\t\t\tvalue = value / 100 * baseValue + baseValue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\tconst roundTo = yAxis.getPrivate(\"stepDecimalPlaces\", 0) + 1;\r\n\t\t\treturn $math.round(value, roundTo);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getXValue(value: number): number {\r\n\t\tconst series = this.get(\"series\");\r\n\t\tif (this.get(\"snapToData\") && series) {\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\tconst min = xAxis.getPrivate(\"min\", 0) + 1;\r\n\t\t\tconst max = xAxis.getPrivate(\"max\", 1) - 1;\r\n\r\n\t\t\tvalue = $math.fitToRange(value, min, max);\r\n\t\t\tvalue = this._snap(value, value, \"valueX\", series) + 1; // important!\r\n\t\t\treturn value\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn Math.round(value);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _setContext(dataItem: DataItem<IDrawingSeriesDataItem>, key: any, value: any, working?: boolean) {\r\n\t\tdataItem.set(key, value);\r\n\t\tif (working) {\r\n\t\t\tdataItem.set(key + \"Working\" as any, value);\r\n\t\t}\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\tconst field = this.get(key + \"Field\" as any);\r\n\t\tif (field) {\r\n\t\t\tdataContext[field] = value;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _snap(value: number, realValue: number, key: string, series: XYSeries): number {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst dataItem = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(value)), 0.5, true);\r\n\t\tif (dataItem) {\r\n\t\t\treturn dataItem.get(key as any)!;\r\n\t\t}\r\n\t\treturn realValue;\r\n\t}\r\n\r\n\tprotected _getStockChart(): StockChart {\r\n\t\treturn (this.get(\"series\") as any).chart.getPrivate(\"stockChart\");\r\n\t}\r\n\r\n\r\n\tprotected _getSprite(sprites: ListTemplate<any>, index: number): Graphics | undefined {\r\n\t\tfor (let i = 0, len = sprites.length; i < len; i++) {\r\n\t\t\tlet sprite = sprites.getIndex(i);\r\n\t\t\tif (sprite && sprite.get(\"userData\") == index) {\r\n\t\t\t\treturn sprite;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic _selectDrawing(index: number, keepSelection?: boolean, force?: boolean) {\r\n\t\tif (this._getStockChart().get(\"drawingSelectionEnabled\") || force) {\r\n\r\n\t\t\tthis._isSelecting = true;\r\n\r\n\t\t\tif (this._selected.indexOf(index) != -1) {\r\n\t\t\t\tif (!keepSelection) {\r\n\t\t\t\t\tthis.unselectAllDrawings();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._unselectDrawing(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!keepSelection) {\r\n\t\t\t\t\tthis._hideResizer();\r\n\t\t\t\t\tthis.unselectAllDrawings();\r\n\t\t\t\t}\r\n\t\t\t\tlet selector = this._getSprite(this.selectors, index);\r\n\t\t\t\tif (!selector) {\r\n\t\t\t\t\tselector = this.selectorContainer.children.push(this.selectors.make() as Rectangle);\r\n\t\t\t\t\tthis.selectors.push(selector as Rectangle);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselector.show(0);\r\n\r\n\t\t\t\tselector.set(\"userData\", index);\r\n\t\t\t\t$array.move(this._selected, index);\r\n\r\n\t\t\t\tthis._dispatchStockEvent(\"drawingselected\", this.indexToDrawingId(index), index);\r\n\t\t\t\tthis.markDirty();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _unselectDrawing(index: number) {\r\n\t\tconst selector = this._getSprite(this.selectors, index);\r\n\t\tif (selector) {\r\n\t\t\tselector.hide(0);\r\n\t\t\t$array.remove(this._selected, index);\r\n\t\t\tthis._dispatchStockEvent(\"drawingunselected\", this.indexToDrawingId(index), index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateSelectors() {\r\n\t\tthis.selectors.each((selector) => {\r\n\t\t\tconst index = selector.get(\"userData\")\r\n\t\t\tthis._updateSelector(selector, index);\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _updateSelector(selector: Graphics, index: number) {\r\n\t\tlet l!: number;\r\n\t\tlet r!: number;\r\n\t\tlet t!: number;\r\n\t\tlet b!: number;\r\n\r\n\t\tconst selectorPadding = this.get(\"selectorPadding\", 5);\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tif (dataContext.index == index) {\r\n\t\t\t\t\tlet point = dataItem.get(\"point\");\r\n\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\tif (l == null) {\r\n\t\t\t\t\t\t\tl = point.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tl = Math.min(l, point.x);\r\n\r\n\t\t\t\t\t\tif (r == null) {\r\n\t\t\t\t\t\t\tr = point.x;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tr = Math.max(r, point.x);\r\n\r\n\t\t\t\t\t\tif (t == null) {\r\n\t\t\t\t\t\t\tt = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tt = Math.min(t, point.y);\r\n\r\n\t\t\t\t\t\tif (b == null) {\r\n\t\t\t\t\t\t\tb = point.y;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tb = Math.max(b, point.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tif (r != null && l != null && t != null && b != null) {\r\n\t\t\tselector.setAll({\r\n\t\t\t\twidth: r - l + selectorPadding * 2,\r\n\t\t\t\theight: b - t + selectorPadding * 2,\r\n\t\t\t\tx: l - selectorPadding,\r\n\t\t\t\ty: t - selectorPadding\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param index returns drawingId\r\n\t * @returns\r\n\t */\r\n\tpublic indexToDrawingId(index: number): string | undefined {\r\n\t\tlet id: string | undefined;\r\n\t\t$array.eachContinue(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.index == index) {\r\n\t\t\t\tid = dataContext.drawingId;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t})\r\n\t\treturn id;\r\n\t}\r\n\r\n\tprotected _getContext(index: number): any {\r\n\t\tlet context: any;\r\n\t\t$array.eachContinue(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.index == index && dataContext.sprite) {\r\n\t\t\t\tcontext = dataContext;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t})\r\n\t\treturn context;\r\n\t}\r\n\r\n\tpublic getContext(id: string) {\r\n\t\tconst index = this.getIndex(id);\r\n\t\tif (index != null) {\r\n\t\t\treturn this._getContext(index);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects all currently selected drawings on this series.\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic unselectAllDrawings(): number {\r\n\t\tconst chart = this._getStockChart();\r\n\t\tif (chart) {\r\n\t\t\treturn chart.unselectDrawings();\r\n\t\t}\r\n\t\treturn 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects all currently selected drawings of this series.\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic unselectDrawings(): number {\r\n\t\tlet count = 0;\r\n\t\tfor (let i = this._selected.length - 1; i >= 0; i--) {\r\n\t\t\tthis._unselectDrawing(this._selected[i]);\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\r\n\r\n\t/**\r\n\t * Selects series' drawing by its ID.\r\n\t *\r\n\t * @param  id             Drawing ID\r\n\t * @param  keepSelection  Keep existing selections\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic selectDrawing(id: string, keepSelection?: boolean) {\r\n\t\tconst index = this.getIndex(id);\r\n\t\tif (index != null) {\r\n\t\t\tthis._selectDrawing(index, keepSelection);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Unselects series' drawing by its ID.\r\n\t *\r\n\t * @param  id  Drawing ID\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic unselectDrawing(id: string) {\r\n\t\tconst index = this.getIndex(id);\r\n\t\tif (index != null) {\r\n\t\t\tthis._unselectDrawing(index);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes all currently selected drawings on this series.\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic deleteSelected() {\r\n\t\tfor (let i = this._selected.length - 1; i >= 0; i--) {\r\n\t\t\tthis.disposeIndex(this._selected[i]);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Deletes a series' drawing by ids ID.\r\n\t *\r\n\t * @param  id  Drawing ID\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic deleteDrawing(id: string) {\r\n\t\tconst index = this.getIndex(id);\r\n\t\tif (index != null) {\r\n\t\t\tthis.disposeIndex(index);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels current drawing\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic cancelDrawing() {\r\n\t\tif (this._isDrawing) {\r\n\t\t\tthis._disposeIndex(this._index);\r\n\t\t}\r\n\r\n\t\tthis.isDrawing(false);\r\n\t}\r\n}\r\n","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { Line } from \"../../../core/render/Line\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IPolylineSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IPolylineSeriesSettings extends IDrawingSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a closed color-filled shape instead of polyline.\r\n\t * \r\n\t * @default false\r\n\t * @since 5.9.0\r\n\t */\r\n\tfillShape?: boolean;\r\n\r\n\t/**\r\n\t * Number of pre-defined points in a shape.\r\n\t *\r\n\t * The shape will finish drawing once number is reached.\r\n\t * @since 5.9.0\r\n\t */\r\n\tpointCount?: number;\r\n}\r\n\r\nexport interface IPolylineSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\n/**\r\n * Draws a multi-point line (polyline).\r\n */\r\nexport class PolylineSeries extends DrawingSeries {\r\n\tpublic static className: string = \"PolylineSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([PolylineSeries.className]);\r\n\r\n\tdeclare public _settings: IPolylineSeriesSettings;\r\n\tdeclare public _privateSettings: IPolylineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IPolylineSeriesDataItem;\r\n\r\n\tprotected _tag = \"polyline\";\r\n\r\n\tprotected _drawingLine: Line = this.mainContainer.children.push(Line.new(this._root, { forceInactive: true }));\r\n\r\n\tpublic _prepareChildren(): void {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tthis.strokes.template.setAll({\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\r\n\t\tif (this.isDirty(\"fillShape\")) {\r\n\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\tthis.fills.template.setAll({\r\n\t\t\t\t\tvisible: true,\r\n\t\t\t\t\tforceHidden: false,\r\n\t\t\t\t\tfillOpacity: this.get(\"fillOpacity\"),\r\n\t\t\t\t\tfill: this.get(\"fillColor\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fills.template.setAll({\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tsuper._handlePointerClick(event);\r\n\r\n\t\t\tif (event.target.get(\"userData\") == \"grip\") {\r\n\t\t\t\tthis._endPolyline(event.target.dataItem as DataItem<this[\"_dataItemSettings\"]>);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!this._isDragging) {\r\n\t\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\t\tthis._hideResizer(event.target);\r\n\t\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\t\t// for consistency with other series\r\n\t\t\t\t\t\tif (this._index == 0) {\r\n\t\t\t\t\t\t\tthis._index = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._pIndex == 0) {\r\n\t\t\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\t\t\tconst context = { stroke: this._getStrokeTemplate(), fill: this._getFillTemplate(), index: this._index, corner: \"e\", drawingId: this._drawingId };\r\n\t\t\t\t\t\t\tthis._setContextSprite(context);\r\n\t\t\t\t\t\t\tthis.data.push(context);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._drawingLine.show();\r\n\t\t\t\t\t\tthis._addPoint(event);\r\n\r\n\t\t\t\t\t\t// add one more if fill\r\n\t\t\t\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\t\t\t\tif (this._pIndex == 1) {\r\n\t\t\t\t\t\t\t\tthis._addPoint(event, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this._pIndex > 1) {\r\n\t\t\t\t\t\t\t\tthis.data.moveValue(this.data.getIndex(this.data.length - 1), this.data.length - 2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._pIndex - 1 == this.get(\"pointCount\", 1000)) {\r\n\t\t\t\t\t\t\tthis._endPolyline();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._drawingLine.set(\"stroke\", this.get(\"strokeColor\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setContextSprite(context: any) {\r\n\t\tcontext.sprite = this.mainContainer;\r\n\t}\r\n\r\n\tpublic disableDrawing() {\r\n\t\tsuper.disableDrawing();\r\n\t\tthis._endPolyline();\r\n\t}\r\n\r\n\tpublic clearDrawings(): void {\r\n\t\tsuper.clearDrawings();\r\n\t\tthis._drawingLine.hide();\r\n\t}\r\n\r\n\tprotected _addPoint(event: ISpritePointerEvent, closing?: boolean) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueX);\r\n\r\n\t\t\tconst dataItems = this.dataItems;\r\n\t\t\tconst len = dataItems.length;\r\n\r\n\t\t\tthis.data.push({ valueY: valueY, valueX: valueX, index: this._index, corner: this._pIndex, drawingId: this._drawingId, closing: closing });\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\r\n\t\t\tconst dataItem = dataItems[len];\r\n\t\t\tthis._positionBullets(dataItem);\r\n\t\t\tthis._setXLocation(dataItem, valueX);\r\n\r\n\t\t\tthis._pIndex++;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _endPolyline(dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tif (!dataItem) {\r\n\t\t\tdataItem = this.dataItems[this.dataItems.length - 1];\r\n\t\t}\r\n\r\n\t\tif (dataItem) {\r\n\t\t\tthis._pIndex = 0;\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\t\tconst index = dataContext.index;\r\n\r\n\t\t\tif (dataContext.corner == 0) {\r\n\t\t\t\tthis.data.push({ valueX: dataItem.get(\"valueX\"), valueY: dataItem.get(\"valueY\"), index: index, corner: \"c\", closing: true, drawingId: this._drawingId })\r\n\r\n\t\t\t\tconst dataItems = this.dataItems;\r\n\t\t\t\tconst len = dataItems.length - 1;\r\n\r\n\t\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\r\n\t\t\t\tdataItem = dataItems[len];\r\n\t\t\t\tthis._positionBullets(dataItem);\r\n\t\t\t\tthis._setXLocation(dataItem, dataItem.get(\"valueX\", 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis._drawingLine.hide();\r\n\r\n\t\t\tthis.isDrawing(false);\r\n\t\t\tthis._dispatchAdded();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispatchAdded(): void {\r\n\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\t\tif (this._isDrawing) {\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (movePoint) {\r\n\t\t\t\tconst dataItems = this.dataItems;\r\n\t\t\t\tconst len = dataItems.length;\r\n\t\t\t\tif (len > 0) {\r\n\t\t\t\t\tconst lastItem = dataItems[len - 1];\r\n\t\t\t\t\tconst points: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tconst point = lastItem.get(\"point\");\r\n\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\tpoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpoints.push(movePoint);\r\n\r\n\t\t\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\t\t\tconst bLastItem = dataItems[len - 2];\r\n\t\t\t\t\t\tif (bLastItem) {\r\n\t\t\t\t\t\t\tconst bPoint = bLastItem.get(\"point\");\r\n\t\t\t\t\t\t\tif (bPoint) {\r\n\t\t\t\t\t\t\t\tpoints.push(bPoint);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\t\tthis._drawingLine.set(\"points\", points);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateElements() {\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tconst closing = dataContext.closing;\r\n\t\t\t\tif (closing) {\r\n\t\t\t\t\tif (this._di[dataContext.index]) {\r\n\t\t\t\t\t\tconst closingDataItem = this._di[dataContext.index][0];\r\n\t\t\t\t\t\tconst valueX = closingDataItem.get(\"valueX\", 0);\r\n\t\t\t\t\t\tconst valueY = closingDataItem.get(\"valueY\");\r\n\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueY\", valueY, true);\r\n\r\n\t\t\t\t\t\tthis._setXLocation(dataItem, valueX);\r\n\t\t\t\t\t\tthis._positionBullets(dataItem);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels current drawing\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic cancelDrawing() {\r\n\t\tsuper.cancelDrawing();\r\n\t\tthis._drawingLine.hide(0);\r\n\t}\r\n}","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\nimport { Line } from \"../../../core/render/Line\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $math from \"../../../core/util/Math\";\r\n\r\n\r\nexport interface ISimpleLineSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface ISimpleLineSeriesSettings extends IDrawingSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a dotted line extending from both ends of the drawn line.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tshowExtension?: boolean;\r\n}\r\n\r\nexport interface ISimpleLineSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\nexport class SimpleLineSeries extends DrawingSeries {\r\n\tpublic static className: string = \"SimpleLineSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([SimpleLineSeries.className]);\r\n\r\n\tdeclare public _settings: ISimpleLineSeriesSettings;\r\n\tdeclare public _privateSettings: ISimpleLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ISimpleLineSeriesDataItem;\r\n\r\n\tprotected _tag = \"line\";\r\n\tprotected _updateExtension = false;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLine(): Line {\r\n\t\tconst line = this.lines.make();\r\n\t\tthis.mainContainer.children.push(line);\r\n\t\tthis.lines.push(line);\r\n\t\treturn line;\r\n\t}\r\n\r\n\tpublic readonly lines: ListTemplate<Line> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Line._new(this._root, {}, [this.lines.template])\r\n\t));\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeHitLine(): Line {\r\n\t\tconst line = this.hitLines.make();\r\n\t\tline.addTag(\"hit\");\r\n\t\tthis.mainContainer.children.push(line);\r\n\t\tthis.hitLines.push(line);\r\n\t\treturn line;\r\n\t}\r\n\r\n\tpublic readonly hitLines: ListTemplate<Line> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Line._new(this._root, {}, [this.hitLines.template])\r\n\t));\r\n\r\n\tprotected _di: Array<{ [index: string]: DataItem<ISimpleLineSeriesDataItem> }> = [];\r\n\tprotected _lines: Array<Line> = [];\r\n\tprotected _hitLines: Array<Line> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tconst lineTemplate = this.lines.template;\r\n\t\tlineTemplate.events.on(\"pointerover\", (e) => {\r\n\t\t\tthis._showSegmentBullets(e.target.get(\"userData\"));\r\n\t\t})\r\n\r\n\t\tthis.strokes.template.set(\"forceInactive\", true);\r\n\r\n\t\tlineTemplate.events.on(\"pointerout\", (e) => {\r\n\t\t\t//this._hideAllBullets();\r\n\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\r\n\t\t\tconst line = this._lines[index];\r\n\t\t\tif (line) {\r\n\t\t\t\tline.unhover();\r\n\t\t\t}\r\n\r\n\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.unhover();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst hitTemplate = this.hitLines.template;\r\n\t\thitTemplate.events.on(\"pointerover\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\t\t\tthis._showSegmentBullets(index);\r\n\r\n\t\t\tconst line = this._lines[index];\r\n\r\n\t\t\tif (line) {\r\n\t\t\t\tline.hover();\r\n\t\t\t}\r\n\r\n\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.hover();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\thitTemplate.events.on(\"click\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\tthis._disposeIndex(index);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._selectDrawing(index, (e.originalEvent as any).ctrlKey);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\thitTemplate.events.on(\"dragstart\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\t\t\tconst line = this._lines[index];\r\n\r\n\t\t\tif (line) {\r\n\t\t\t\tline.dragStart(e);\r\n\t\t\t}\r\n\r\n\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.dragStart(e);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\thitTemplate.events.on(\"dragstop\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\r\n\t\t\tthis.markDirtyValues();\r\n\t\t\te.target.setAll({ x: 0, y: 0 });\r\n\t\t\tconst line = this._lines[index];\r\n\r\n\t\t\tif (line) {\r\n\t\t\t\tline.dragStop(e);\r\n\t\t\t\tline.setAll({ x: 0, y: 0 });\r\n\t\t\t}\r\n\r\n\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.dragStop(e);\r\n\t\t\t\tstroke.setAll({ x: 0, y: 0 });\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\thitTemplate.events.on(\"pointerout\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\t\t\t//this._hideAllBullets();\r\n\r\n\t\t\tconst line = this._lines[index];\r\n\r\n\t\t\tif (line) {\r\n\t\t\t\tline.unhover();\r\n\t\t\t}\r\n\r\n\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\tif (stroke) {\r\n\t\t\t\tstroke.unhover();\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _updateElements() {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst s = Math.max(chart.plotContainer.width(), chart.plotContainer.height()) * 2;\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\r\n\t\t\t\t\tif (diP1 && diP2) {\r\n\r\n\t\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\t\tconst len = Math.max(Math.abs(s - p1.x), Math.abs(s - p2.x), Math.abs(s - p1.y), Math.abs(s - p2.y), Math.abs(p1.x), Math.abs(p2.x), Math.abs(p1.y), Math.abs(p2.y))\r\n\t\t\t\t\t\t\tlet angle = $math.getAngle(p2, p1);\r\n\r\n\t\t\t\t\t\t\tconst p11 = { x: p1.x + len * $math.cos(angle), y: p1.y + len * $math.sin(angle) };\r\n\t\t\t\t\t\t\tconst p22 = { x: p2.x - len * $math.cos(angle), y: p2.y - len * $math.sin(angle) };\r\n\r\n\t\t\t\t\t\t\tthis._updateLine(i, p11, p22, p1, p2);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateLine(index: number, p11: IPoint, p22: IPoint, p1: IPoint, p2: IPoint) {\r\n\t\tconst line = this._lines[index];\r\n\t\tconst hitLine = this._hitLines[index];\r\n\r\n\t\tlet segments = [[[p11, p1]], [[p2, p22]]];\r\n\t\tlet hitSegments = [[[p11, p22]]];\r\n\r\n\t\tline.set(\"segments\", segments);\r\n\t\thitLine.set(\"segments\", hitSegments);\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (!this._isDragging && !this._isSelecting) {\r\n\r\n\t\t\tif (!this._isDrawing) {\r\n\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t}\r\n\t\t\t\tthis._hideResizer(event.target);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tsuper._handlePointerClick(event);\r\n\t\t\tthis._handlePointerClickReal(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\t\tthis._handlePointerMoveReal(event);\r\n\t}\r\n\r\n\r\n\tprotected _handlePointerMoveReal(_event: ISpritePointerEvent) {\r\n\t\tif (this._isDrawing) {\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\t\t\tconst index = this._index;\r\n\t\t\tconst dataItems = this._di[index];\r\n\r\n\t\t\tif (movePoint && dataItems) {\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\t\tconst valueXns = xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)); // not snapped\r\n\r\n\t\t\t\tconst valueX = this._getXValue(valueXns);\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueXns);\r\n\r\n\t\t\t\tconst diP1 = dataItems[\"p1\"];\r\n\t\t\t\tconst diP2 = dataItems[\"p2\"];\r\n\r\n\t\t\t\tif (diP1 && diP2) {\r\n\t\t\t\t\tthis._setContext(diP2, \"valueX\", valueX, true);\r\n\t\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\t\t\t\t\tthis._setXLocation(diP1, diP1.get(\"valueX\", 0));\r\n\t\t\t\t\tthis._setXLocation(diP2, valueX);\r\n\t\t\t\t\tthis._updateSegment(index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createElements(index: number) {\r\n\t\tif (!this._lines[index]) {\r\n\t\t\tconst line = this.makeLine();\r\n\t\t\tthis._lines[index] = line;\r\n\r\n\t\t\tconst hitLine = this.makeHitLine();\r\n\t\t\tthis._hitLines[index] = hitLine;\r\n\r\n\t\t\tconst dataContext = this.dataItems[this.dataItems.length - 1].dataContext as any;\r\n\t\t\tdataContext.sprite = line;\r\n\r\n\t\t\tlet showExtension = this.get(\"showExtension\", true);\r\n\r\n\t\t\tlet color = this.get(\"strokeColor\", this.get(\"stroke\"));\r\n\r\n\t\t\tconst strokeTemplate = dataContext.stroke;\r\n\t\t\tif (strokeTemplate) {\r\n\t\t\t\tcolor = strokeTemplate.get(\"stroke\");\r\n\t\t\t}\r\n\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tshowExtension = dataContext.showExtension;\r\n\t\t\t}\r\n\r\n\t\t\tline.setPrivate(\"visible\", showExtension);\r\n\r\n\t\t\tconst settings = { stroke: color, userData: index };\r\n\t\t\tline.setAll(settings);\r\n\t\t\thitLine.setAll(settings);\r\n\r\n\t\t\tthis._updateSegment(index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addTemplates(index: number) {\r\n\t\tthis.data.push({ stroke: this._getStrokeTemplate(), fill: this._getFillTemplate(), index: index, showExtension: this.get(\"showExtension\", true), corner: \"e\", drawingId: this._drawingId });\r\n\t}\r\n\r\n\tpublic addPoints(point: IPoint, index: number) {\r\n\t\tconst chart = this.chart!;\r\n\t\tthis._addTemplates(index);\r\n\t\tpoint = chart.plotContainer.toLocal(point);\r\n\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\tconst valueYns = xAxis.positionToValue(xAxis.coordinateToPosition(point.x));\r\n\t\tconst valueX = this._getXValue(valueYns);\r\n\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueYns);\r\n\r\n\t\tthis._addPointsReal(valueX, valueY, index);\r\n\t}\r\n\r\n\tprotected _addPoints(event: ISpritePointerEvent, index: number) {\r\n\t\tthis.addPoints(event.point, index);\r\n\t}\r\n\r\n\tprotected _addPointsReal(valueX: number, valueY: number, index: number) {\r\n\t\tthis._addPoint(valueX, valueY, \"p1\", index);\r\n\t\tthis._addPoint(valueX, valueY, \"p2\", index);\r\n\t}\r\n\r\n\tprotected _addPoint(valueX: number, valueY: number, corner: string, index: number) {\r\n\t\tthis.data.push({ valueY: valueY, valueX: valueX, corner: corner, index: index, drawingId: this._drawingId });\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst line = this._lines[index];\r\n\t\t\tif (line) {\r\n\t\t\t\tthis.lines.removeValue(line);\r\n\t\t\t\tdelete (this._lines[index]);\r\n\t\t\t\tline.dispose();\r\n\t\t\t}\r\n\t\t\tconst hitLine = this._hitLines[index];\r\n\t\t\tif (hitLine) {\r\n\t\t\t\tthis.hitLines.removeValue(hitLine);\r\n\t\t\t\tdelete (this._hitLines[index]);\r\n\t\t\t\thitLine.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic setInteractive(value: boolean) {\r\n\t\tsuper.setInteractive(value);\r\n\t\tthis.hitLines.template.set(\"forceInactive\", !value);\r\n\t\tthis.lines.template.set(\"forceInactive\", !value);\r\n\t}\r\n\r\n\tpublic enableDrawingSelection(value: boolean) {\r\n\t\tsuper.enableDrawingSelection(value);\r\n\t\tthis.hitLines.template.set(\"forceInactive\", !value);\r\n\t\tthis.lines.template.set(\"forceInactive\", !value);\r\n\t\tthis.strokes.template.set(\"forceInactive\", true);\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings?: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet context = this._getContext(index);\r\n\r\n\t\tif (context) {\r\n\t\t\tlet line = context.sprite;\r\n\r\n\t\t\tif (line && settings && settings.stroke) {\r\n\t\t\t\tline.set(\"stroke\", settings.stroke)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a line drawing.\r\n\t *\r\n\t * Supported tools: `\"Horizontal Line\"`, `\"Horizontal Ray\"`, `\"Vertical Line\"`.\r\n\t *\r\n\t * @param  point Point\r\n\t * @since 5.10.2\r\n\t */\r\n\tpublic addLine(point: IPoint): void {\r\n\t\tthis._increaseIndex();\r\n\t\tthis.addPoints(point, this._index);\r\n\t\tthis._updateSegment(this._index);\r\n\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IRectangleSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IRectangleSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IRectangleSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class RectangleSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"RectangleSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([RectangleSeries.className]);\r\n\r\n\tdeclare public _settings: IRectangleSeriesSettings;\r\n\tdeclare public _privateSettings: IRectangleSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IRectangleSeriesDataItem;\r\n\r\n\tprotected _di: Array<{ [index: string]: DataItem<IRectangleSeriesDataItem> }> = []\r\n\r\n\tprotected _tag = \"rectangle\";\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\r\n\t\tif (series && diP1 && diP2) {\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tlet y1 = diP1.get(field as any);\r\n\t\t\tlet y2 = diP2.get(field as any);\r\n\r\n\t\t\tthis._setContext(diP1, \"valueY\", y1, true);\r\n\t\t\tthis._setContext(diP2, \"valueY\", y2, true);\r\n\r\n\t\t\tthis._positionBullets(diP1);\r\n\t\t\tthis._positionBullets(diP2);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setXLocation(dataItem: DataItem<this[\"_dataItemSettings\"]>, value: number) {\r\n\t\tif (!this.get(\"snapToData\")) {\r\n\t\t\tthis._setXLocationReal(dataItem, value);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdataItem.set(\"locationX\", 0);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tconst chart = this.chart;\r\n\t\tthis.fills.clear();\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\t\t\t\t\tconst di = this._di[i][\"e\"];\r\n\r\n\t\t\t\t\tconst dataContext = di.dataContext as any;\r\n\t\t\t\t\tconst fillGraphics = this.makeFill(this.fills);\r\n\r\n\t\t\t\t\tconst index = this.dataItems.indexOf(diP1);\r\n\t\t\t\t\tfor (let j = index; j >= 0; j--) {\r\n\t\t\t\t\t\tconst dataContext = this.dataItems[j].dataContext as any;\r\n\t\t\t\t\t\tconst template = dataContext.fill;\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\tfillGraphics.template = template;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userData = [this.dataItems.indexOf(diP1), this.dataItems.indexOf(diP2)];\r\n\r\n\t\t\t\t\tlet fillColor = this.get(\"fillColor\", this.get(\"fill\"));\r\n\r\n\t\t\t\t\tconst fillTemplate = dataContext.fill;\r\n\r\n\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\tfillColor = fillTemplate.get(\"fill\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst settings = { userData: userData, fill: fillColor };\r\n\t\t\t\t\tfillGraphics.setAll(settings);\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\tfillGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tconst strokeGraphics = this.strokes.getIndex(this._getStrokeIndex(i));\r\n\r\n\t\t\t\t\t\tif (strokeGraphics) {\r\n\t\t\t\t\t\t\tstrokeGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._updateOthers(i, fillGraphics, p1, p2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateOthers(_index: number, _fillGraphics: Graphics, _p1: IPoint, _p2: IPoint) {\r\n\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n}","import type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IParallelChannelSeriesDataItem extends ISimpleLineSeriesDataItem { }\r\n\r\nexport interface IParallelChannelSeriesSettings extends ISimpleLineSeriesSettings { }\r\n\r\nexport interface IParallelChannelSeriesPrivate extends ISimpleLineSeriesPrivate { }\r\n\r\nexport class ParallelChannelSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"ParallelChannelSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([ParallelChannelSeries.className]);\r\n\r\n\tdeclare public _settings: IParallelChannelSeriesSettings;\r\n\tdeclare public _privateSettings: IParallelChannelSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IParallelChannelSeriesDataItem;\r\n\r\n\tprotected _di: Array<{ [index: string]: DataItem<IParallelChannelSeriesDataItem> }> = []\r\n\tprotected _tag = \"parallelchannel\";\r\n\r\n\tprotected _firstClick: boolean = false;\r\n\r\n\tprotected _addPointsReal(valueX: number, valueY: number, index: number) {\r\n\t\tthis._addPoint(valueX, valueY, \"p1\", index);\r\n\t\tthis._addPoint(valueX, valueY, \"p2\", index);\r\n\t\tthis._addPoint(valueX, valueY, \"p3\", index);\r\n\t\tthis._addPoint(valueX, valueY, \"p4\", index);\r\n\r\n\t\tthis._addPoint(valueX, valueY, \"m1\", index);\r\n\t\tthis._addPoint(valueX, valueY, \"m2\", index);\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (!this._isDragging) {\r\n\t\t\tif (!this._isDrawing) {\r\n\t\t\t\tif (!this._firstClick) {\r\n\t\t\t\t\tif(this.unselectDrawings() == 0){\r\n\t\t\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\t\t\tthis._hideResizer(event.target);\r\n\t\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\t\tthis._firstClick = true;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!this._firstClick) {\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId);\r\n\t\t\t\t}\r\n\t\t\t\tthis._firstClick = false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handlePointerMoveReal(_event: ISpritePointerEvent) {\r\n\t\tif (this._isDrawing) {\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (movePoint) {\r\n\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\tconst index = this._index;\r\n\r\n\t\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\t\tconst diP3 = this._di[index][\"p3\"];\r\n\t\t\t\tconst diP4 = this._di[index][\"p4\"];\r\n\r\n\t\t\t\tconst diM1 = this._di[index][\"m1\"];\r\n\t\t\t\tconst diM2 = this._di[index][\"m2\"];\r\n\r\n\t\t\t\tif (diP1 && diP2) {\r\n\t\t\t\t\tif (this._firstClick) {\r\n\t\t\t\t\t\tthis._setContext(diP2, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\t\t\t\t\t\tthis._setXLocation(diP1, diP1.get(\"valueX\", 0));\r\n\t\t\t\t\t\tthis._setXLocation(diP3, diP3.get(\"valueX\", 0));\r\n\t\t\t\t\t\tthis._setXLocation(diP2, valueX);\r\n\r\n\t\t\t\t\t\tthis._setContext(diP4, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(diP4, \"valueY\", valueY, true);\r\n\t\t\t\t\t\tthis._setXLocation(diP4, valueX);\r\n\r\n\t\t\t\t\t\tthis._setContext(diM1, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(diM1, \"valueY\", valueY, true);\r\n\t\t\t\t\t\tthis._setXLocation(diM1, valueX);\r\n\r\n\t\t\t\t\t\tthis._setContext(diM2, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(diM2, \"valueY\", valueY, true);\r\n\t\t\t\t\t\tthis._setXLocation(diM2, valueX);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._setContext(diP4, \"valueY\", valueY, true);\r\n\t\t\t\t\t\tthis._setContext(diP3, \"valueY\", diP1.get(\"valueY\", 0) + valueY - diP2.get(\"valueY\", 0), true);\r\n\r\n\t\t\t\t\t\tthis._updateMiddlePoints(index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._updateSegment(index);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateMiddlePoints(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst diP3 = this._di[index][\"p3\"];\r\n\t\tconst diP4 = this._di[index][\"p4\"];\r\n\r\n\t\tconst diM1 = this._di[index][\"m1\"];\r\n\t\tconst diM2 = this._di[index][\"m2\"];\r\n\r\n\t\tconst valueX1 = diP1.get(\"valueX\", 0);\r\n\t\tconst valueX2 = diP2.get(\"valueX\", 0);\r\n\t\tconst valueX3 = diP3.get(\"valueX\", 0);\r\n\t\tconst valueX4 = diP4.get(\"valueX\", 0);\r\n\r\n\t\tconst valueY1 = diP1.get(\"valueY\", 0);\r\n\t\tconst valueY2 = diP2.get(\"valueY\", 0);\r\n\t\tconst valueY3 = diP3.get(\"valueY\", 0);\r\n\t\tconst valueY4 = diP4.get(\"valueY\", 0);\r\n\r\n\t\tconst xM1 = Math.round(valueX1 + (valueX2 - valueX1) / 2);\r\n\r\n\t\tthis._setContext(diM1, \"valueY\", valueY1 + (valueY2 - valueY1) / 2, true);\r\n\t\tthis._setContext(diM1, \"valueX\", xM1, true);\r\n\t\tthis._setXLocation(diM1, xM1);\r\n\r\n\t\tconst xM2 = valueX3 + (valueX4 - valueX3) / 2;\r\n\t\tthis._setContext(diM2, \"valueY\", valueY3 + (valueY4 - valueY3) / 2, true);\r\n\t\tthis._setContext(diM2, \"valueX\", xM2, true);\r\n\t\tthis._setXLocation(diM2, xM2);\r\n\r\n\t\tif (diM1.bullets) {\r\n\t\t\tconst mBullet = diM1.bullets[0].get(\"sprite\");\r\n\t\t\tif (mBullet) {\r\n\t\t\t\tconst point1 = diP1.get(\"point\");\r\n\t\t\t\tconst point2 = diP2.get(\"point\");\r\n\t\t\t\tif (point1 && point2) {\r\n\t\t\t\t\tmBullet.set(\"x\", point1.x + (point2.x - point1.x) / 2);\r\n\t\t\t\t\tmBullet.set(\"y\", point1.y + (point2.y - point1.y) / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (diM2.bullets) {\r\n\t\t\tconst mBullet = diM2.bullets[0].get(\"sprite\");\r\n\t\t\tif (mBullet) {\r\n\t\t\t\tconst point1 = diP3.get(\"point\");\r\n\t\t\t\tconst point2 = diP4.get(\"point\");\r\n\t\t\t\tif (point1 && point2) {\r\n\t\t\t\t\tmBullet.set(\"x\", point1.x + (point2.x - point1.x) / 2);\r\n\t\t\t\t\tmBullet.set(\"y\", point1.y + (point2.y - point1.y) / 2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tconst chart = this.chart;\r\n\t\tthis.fills.clear();\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\t\t\t\t\tconst diP3 = this._di[i][\"p3\"];\r\n\t\t\t\t\tconst diP4 = this._di[i][\"p4\"];\r\n\t\t\t\t\tconst di = this._di[i][\"e\"];\r\n\r\n\t\t\t\t\tconst dataContext = di.dataContext as any;\r\n\t\t\t\t\tconst fillGraphics = this.makeFill(this.fills);\r\n\r\n\t\t\t\t\tconst index = this.dataItems.indexOf(diP1);\r\n\t\t\t\t\tfor (let j = index; j >= 0; j--) {\r\n\t\t\t\t\t\tconst dataContext = this.dataItems[j].dataContext as any;\r\n\t\t\t\t\t\tconst template = dataContext.fill;\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\tfillGraphics.template = template;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userData = [this.dataItems.indexOf(diP1), this.dataItems.indexOf(diP2)];\r\n\r\n\t\t\t\t\tlet fillColor = this.get(\"fillColor\", this.get(\"fill\"));\r\n\r\n\t\t\t\t\tconst fillTemplate = dataContext.fill;\r\n\r\n\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\tfillColor = fillTemplate.get(\"fill\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst settings = { userData: userData, fill: fillColor };\r\n\t\t\t\t\tfillGraphics.setAll(settings);\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\t\t\t\t\tconst p3 = diP3.get(\"point\");\r\n\t\t\t\t\tconst p4 = diP4.get(\"point\");\r\n\r\n\t\t\t\t\tif (p1 && p2 && p3 && p4) {\r\n\t\t\t\t\t\tfillGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p4.x, p4.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p3.x, p3.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tconst strokeGraphics = this.strokes.getIndex(this._getStrokeIndex(i));\r\n\r\n\t\t\t\t\t\tif (strokeGraphics) {\r\n\t\t\t\t\t\t\tstrokeGraphics.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\r\n\t\t\t\t\t\t\t\tdisplay.moveTo(p3.x, p3.y);\r\n\t\t\t\t\t\t\t\tdisplay.lineTo(p4.x, p4.y);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tline.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y + (p3.y - p1.y) / 2);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y + (p4.y - p2.y) / 2);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tthis._updateOthers(i, fillGraphics, p1, p2);\r\n\t\t\t\t\t\tthis._updateMiddlePoints(i);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletDraggedReal(dataItem: DataItem<this[\"_dataItemSettings\"]>, point: IPoint) {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tconst index = dataContext.index;\r\n\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\t\tconst diP3 = this._di[index][\"p3\"];\r\n\t\tconst diP4 = this._di[index][\"p4\"];\r\n\t\tconst diM1 = this._di[index][\"m1\"];\r\n\t\tconst diM2 = this._di[index][\"m2\"];\r\n\r\n\t\tif (diP1 && diP2 && diP3 && diP4) {\r\n\r\n\t\t\tconst dy = diP3.get(\"valueY\", 0) - diP1.get(\"valueY\", 0);\r\n\t\t\tconst dy1 = diP2.get(\"valueY\", 0) - diP1.get(\"valueY\", 0);\r\n\t\t\tconst dy2 = diP4.get(\"valueY\", 0) - diP3.get(\"valueY\", 0);\r\n\r\n\t\t\tconst vx = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst vy = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), vx);\r\n\r\n\t\t\tthis._setContext(dataItem, \"valueX\", vx);\r\n\t\t\tthis._setContext(dataItem, \"valueY\", vy, true);\r\n\t\t\tthis._setXLocation(dataItem, vx);\r\n\r\n\t\t\tconst corner = dataContext.corner;\r\n\r\n\t\t\tif (corner == \"p1\") {\r\n\t\t\t\tthis._setContext(diP3, \"valueX\", vx);\r\n\t\t\t\tthis._setContext(diP3, \"valueY\", vy + dy, true);\r\n\t\t\t\tthis._setXLocation(diP3, vx);\r\n\t\t\t}\r\n\t\t\telse if (corner == \"p3\") {\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", vx);\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", vy - dy, true);\r\n\t\t\t\tthis._setXLocation(diP1, vx);\r\n\t\t\t}\r\n\t\t\telse if (corner == \"p2\") {\r\n\t\t\t\tthis._setContext(diP4, \"valueX\", vx);\r\n\t\t\t\tthis._setContext(diP4, \"valueY\", vy + dy, true);\r\n\t\t\t\tthis._setXLocation(diP4, vx);\r\n\t\t\t}\r\n\t\t\telse if (corner == \"p4\") {\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", vx);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", vy - dy, true);\r\n\t\t\t\tthis._setXLocation(diP2, vx);\r\n\t\t\t}\r\n\t\t\telse if (corner == \"m1\") {\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", vy - dy1 / 2, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", vy + dy1 / 2, true);\r\n\t\t\t}\r\n\t\t\telse if (corner == \"m2\") {\r\n\t\t\t\tthis._setContext(diP3, \"valueY\", vy - dy2 / 2, true);\r\n\t\t\t\tthis._setContext(diP4, \"valueY\", vy + dy2 / 2, true);\r\n\t\t\t}\r\n\t\t\tthis._updateMiddlePoints(index);\r\n\t\t}\r\n\t\tthis._positionBullets(diP1);\r\n\t\tthis._positionBullets(diP2);\r\n\t\tthis._positionBullets(diP3);\r\n\t\tthis._positionBullets(diP4);\r\n\t\tthis._positionBullets(diM1);\r\n\t\tthis._positionBullets(diM2);\r\n\t}\r\n\r\n\tprotected _updateOthers(_index: number, _fillGraphics: Graphics, _p1: IPoint, _p2: IPoint) {\r\n\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n}","import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Triangle } from \"../../../core/render/Triangle\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { Bullet } from \"../../../core/render/Bullet\";\r\n\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { Container } from \"../../../core/render/Container\";\r\nimport type { DataItem } from \"../../../..\";\r\n\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\n\r\nexport interface ILineArrowSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface ILineArrowSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a dotted line extending from both ends of the drawn line.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tshowExtension?: boolean;\r\n}\r\n\r\nexport interface ILineArrowSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\n/**\r\n * Used for Line Arrow drawing tool in [[StockChart]].\r\n *\r\n * @since 5.10.5\r\n */\r\n\r\nexport class LineArrowSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"LineArrowSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([LineArrowSeries.className]);\r\n\r\n\tdeclare public _settings: ILineArrowSeriesSettings;\r\n\tdeclare public _privateSettings: ILineArrowSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ILineArrowSeriesDataItem;\r\n\r\n\tprotected _arrows: Array<Triangle> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\r\n\t\tthis.bullets.push((_root, _series, dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.corner == \"p2\") {\r\n\r\n\t\t\t\tconst index = dataContext.index;\r\n\t\t\t\tconst di = this._di[index][\"e\"] as DataItem<ILineArrowSeriesDataItem>;\r\n\t\t\t\tlet color = this.get(\"strokeColor\", this.get(\"stroke\"));\r\n\r\n\t\t\t\tif (di) {\r\n\t\t\t\t\tconst dc = di.dataContext as any;\r\n\t\t\t\t\tif (dc) {\r\n\t\t\t\t\t\tconst strokeTemplate = dc.stroke;\r\n\t\t\t\t\t\tif (strokeTemplate) {\r\n\t\t\t\t\t\t\tcolor = strokeTemplate.get(\"stroke\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\tconst bullet = bullets[0];\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tconst container = bullet.get(\"sprite\") as Container;\r\n\t\t\t\t\t\tif (container) {\r\n\t\t\t\t\t\t\tconst child = container.children.getIndex(0);\r\n\t\t\t\t\t\t\tif (child) {\r\n\t\t\t\t\t\t\t\tchild.set(\"scale\", .1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst arrow = this.makeArrow();\r\n\r\n\t\t\t\tarrow.setAll({\r\n\t\t\t\t\tforceInactive: true,\r\n\t\t\t\t\tfill: color,\r\n\t\t\t\t\tuserData: dataContext.index\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Bullet.new(this._root, {\r\n\t\t\t\t\tsprite: arrow,\r\n\t\t\t\t\tlocationX: undefined\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic clearDrawings(): void {\r\n\t\tsuper.clearDrawings();\r\n\t\tthis.arrows.clear();\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\t\tthis.arrows.each((arrow) => {\r\n\t\t\tconst index = arrow.get(\"userData\");\r\n\t\t\tconst di = this._di[index];\r\n\t\t\tif (di) {\r\n\t\t\t\tconst di1 = this._di[index][\"p1\"];\r\n\t\t\t\tconst di2 = this._di[index][\"p2\"];\r\n\r\n\t\t\t\tconst p1 = di1.get(\"point\");\r\n\t\t\t\tconst p2 = di2.get(\"point\");\r\n\r\n\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t// rotate arrow\r\n\t\t\t\t\tconst angle = $math.getAngle(p1, p2) + 90;\r\n\t\t\t\t\tarrow.set(\"rotation\", angle);\r\n\r\n\t\t\t\t\tconst w = arrow.width();\r\n\r\n\t\t\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\t\t\tif (stroke) {\r\n\t\t\t\t\t\tarrow.set(\"scale\", (w + stroke.get(\"strokeWidth\", 2) * 2) / w);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet template!: Template<any>;\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.index == index) {\r\n\t\t\t\tif (dataContext.settings) {\r\n\t\t\t\t\ttemplate = dataContext.settings;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst settings2 = $object.copy(settings);\r\n\r\n\t\tif (settings.stroke != undefined) {\r\n\t\t\tsettings2.fill = settings.stroke;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete settings2.fill;\r\n\t\t}\r\n\t\tif (settings.strokeOpacity != undefined) {\r\n\t\t\tsettings2.fillOpacity = settings.strokeOpacity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete settings2.fillOpacity;\r\n\t\t}\r\n\r\n\t\tsettings2.strokeOpacity = 0;\r\n\r\n\t\tconst arrow = this._getSprite(this.arrows, index);\r\n\t\tif (arrow) {\r\n\t\t\tconst defaultState = arrow.states.lookup(\"default\")!;\r\n\t\t\t$object.each(settings2, (key, value) => {\r\n\t\t\t\tarrow.set(key as any, value);\r\n\t\t\t\tdefaultState.set(key as any, value);\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate.set(key, value);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeArrow(): Triangle {\r\n\t\tconst arrow = this.arrows.make();\r\n\t\tthis.arrows.push(arrow);\r\n\t\treturn arrow;\r\n\t}\r\n\r\n\tpublic readonly arrows: ListTemplate<Triangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Triangle._new(this._root, { themeTags: [\"arrow\"] }, [this.arrows.template])\r\n\t));\r\n\r\n\r\n\tprotected _updateLine(index: number, p11: IPoint, p22: IPoint, p1: IPoint, p2: IPoint) {\r\n\t\tsuper._updateLine(index, p11, p22, p1, p2);\r\n\t}\r\n}\r\n","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IHorizontalLineSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IHorizontalLineSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IHorizontalLineSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class HorizontalLineSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"HorizontalLineSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([HorizontalLineSeries.className]);\r\n\r\n\tdeclare public _settings: IHorizontalLineSeriesSettings;\r\n\tdeclare public _privateSettings: IHorizontalLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IHorizontalLineSeriesDataItem;\r\n\r\n\tprotected _tag = \"horizontal\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\t}\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tsuper._handleBulletDragged(event);\r\n\r\n\t\tconst dataItem = event.target.dataItem as DataItem<IHorizontalLineSeriesDataItem>;\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\t\t\tconst diP3 = this._di[index][\"p3\"];\r\n\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (diP1 && diP2 && diP3 && movePoint) {\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", valueY, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\t\t\t\tthis._setContext(diP3, \"valueY\", valueY, true);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", min - (max - min) * 200);\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", valueX);\r\n\t\t\t\tthis._setContext(diP3, \"valueX\", max + (max - min) * 200);\r\n\r\n\t\t\t\tthis._setXLocation(diP2, diP2.get(\"valueX\", 0));\r\n\r\n\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMoveReal() {\r\n\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tif (this._di[index]) {\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP3 = this._di[index][\"p3\"];\r\n\r\n\t\t\tif (diP1 && diP3) {\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", min - (max - min) * 200, true);\r\n\t\t\t\tthis._setContext(diP3, \"valueX\", max + (max - min) * 200, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tif (!this._isDragging) {\r\n\t\t\t\tif(this.unselectAllDrawings() == 0){\r\n\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis._updateSegment(this._index);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addPointsReal(valueX: number, valueY: number, index: number) {\r\n\t\tsuper._addPointsReal(valueX, valueY, index);\r\n\t\tthis._addPoint(valueX, valueY, \"p3\", index);\r\n\t}\r\n\r\n}","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IVerticalLineSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IVerticalLineSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IVerticalLineSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class VerticalLineSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"VerticalLineSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([VerticalLineSeries.className]);\r\n\r\n\tdeclare public _settings: IVerticalLineSeriesSettings;\r\n\tdeclare public _privateSettings: IVerticalLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IVerticalLineSeriesDataItem;\r\n\r\n\tprotected _tag = \"vertical\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\t}\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tsuper._handleBulletDragged(event);\r\n\r\n\t\tconst dataItem = event.target.dataItem as DataItem<IVerticalLineSeriesDataItem>;\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\t\t\tconst diP3 = this._di[index][\"p3\"];\r\n\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (diP1 && diP2 && diP3 && movePoint) {\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\tconst min = yAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = yAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", min - (max - min) * 10, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\t\t\t\tthis._setContext(diP3, \"valueY\", max + (max - min) * 10, true);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", valueX);\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", valueX);\r\n\t\t\t\tthis._setContext(diP3, \"valueX\", valueX);\r\n\r\n\t\t\t\tthis._setXLocation(diP1, valueX);\r\n\t\t\t\tthis._setXLocation(diP2, valueX);\r\n\t\t\t\tthis._setXLocation(diP3, valueX);\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t\tthis._positionBullets(diP3);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tif (this._di[index]) {\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP3 = this._di[index][\"p3\"];\r\n\t\t\tif (diP1 && diP3) {\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\tconst min = yAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = yAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", min - (max - min) * 10, true);\r\n\t\t\t\tthis._setContext(diP3, \"valueY\", max + (max - min) * 10, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMoveReal() {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tif (!this._isDragging) {\r\n\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\tthis._hideResizer();\r\n\r\n\t\t\t\t\tthis._updateSegment(this._index);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addPointsReal(valueX: number, valueY: number, index: number) {\r\n\t\tsuper._addPointsReal(valueX, valueY, index);\r\n\t\tthis._addPoint(valueX, valueY, \"p3\", index);\r\n\t}\r\n}","import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IAverageSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IAverageSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IAverageSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class AverageSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"AverageSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([AverageSeries.className]);\r\n\r\n\tdeclare public _settings: IAverageSeriesSettings;\r\n\tdeclare public _privateSettings: IAverageSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IAverageSeriesDataItem;\r\n\r\n\tprotected _tag = \"average\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.set(\"snapToData\", true);\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst dataPoints = this._di[index];\r\n\t\tif (dataPoints) {\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tconst series = this.get(\"series\");\r\n\t\t\tif (series && diP1 && diP2) {\r\n\r\n\t\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst di1 = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(x1)));\r\n\t\t\t\tconst di2 = xAxis.getSeriesItem(series, Math.min(1, xAxis.valueToPosition(x2)));\r\n\r\n\t\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\t\tif (di1 && di2) {\r\n\t\t\t\t\tlet i1 = series.dataItems.indexOf(di1);\r\n\t\t\t\t\tlet i2 = series.dataItems.indexOf(di2);\r\n\r\n\t\t\t\t\tif (i1 > i2) {\r\n\t\t\t\t\t\t[i1, i2] = [i2, i1];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet sum = 0;\r\n\t\t\t\t\tlet count = 0;\r\n\r\n\t\t\t\t\tfor (let i = i1; i <= i2; i++) {\r\n\t\t\t\t\t\tconst di = series.dataItems[i];\r\n\t\t\t\t\t\tconst value = di.get(field as any);\r\n\t\t\t\t\t\tif (value != null) {\r\n\t\t\t\t\t\t\tsum += value;\r\n\t\t\t\t\t\t\tcount++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst average = sum / count;\r\n\r\n\t\t\t\t\tdiP1.set(\"valueX\", x1);\r\n\t\t\t\t\tdiP2.set(\"valueX\", x2);\r\n\r\n\t\t\t\t\tthis._setContext(diP1, \"valueX\", x1);\r\n\t\t\t\t\tthis._setContext(diP2, \"valueX\", x2);\r\n\t\t\t\t\tthis._setContext(diP1, \"valueY\", average, true);\r\n\t\t\t\t\tthis._setContext(diP2, \"valueY\", average, true);\r\n\r\n\t\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._updateElements();\r\n\t\t}\r\n\t}\r\n}","import type { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nfunction round(number: number, precision: number): number {\r\n\tconst factor = 10 ** precision;\r\n\treturn Math.round(number * factor) / factor;\r\n}\r\n\r\n// Modified from the regression npm package (under the MIT license)\r\nfunction linear(data: Array<[number, number]>, precision: number = 2): Array<[number, number]> {\r\n\tconst sum = [0, 0, 0, 0, 0];\r\n\tlet len = 0;\r\n\r\n\tfor (let n = 0; n < data.length; n++) {\r\n\t\tif (data[n][1] !== null) {\r\n\t\t\tlen++;\r\n\t\t\tsum[0] += data[n][0];\r\n\t\t\tsum[1] += data[n][1];\r\n\t\t\tsum[2] += data[n][0] * data[n][0];\r\n\t\t\tsum[3] += data[n][0] * data[n][1];\r\n\t\t\tsum[4] += data[n][1] * data[n][1];\r\n\t\t}\r\n\t}\r\n\r\n\tconst run = ((len * sum[2]) - (sum[0] * sum[0]));\r\n\tconst rise = ((len * sum[3]) - (sum[0] * sum[1]));\r\n\tconst gradient = run === 0 ? 0 : round(rise / run, precision);\r\n\tconst intercept = round((sum[1] / len) - ((gradient * sum[0]) / len), precision);\r\n\r\n\tfunction predict(x: number): [number, number] {\r\n\t\treturn [\r\n\t\t\tround(x, precision),\r\n\t\t\tround((gradient * x) + intercept, precision)\r\n\t\t];\r\n\t}\r\n\r\n\treturn data.map(point => predict(point[0]));\r\n}\r\n\r\nexport interface IRegressionSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IRegressionSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n}\r\n\r\nexport interface IRegressionSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class RegressionSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"RegressionSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([RegressionSeries.className]);\r\n\r\n\tdeclare public _settings: IRegressionSeriesSettings;\r\n\tdeclare public _privateSettings: IRegressionSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IRegressionSeriesDataItem;\r\n\r\n\tprotected _tag = \"regression\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.set(\"snapToData\", true);\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\t\tif (series && diP1 && diP2) {\r\n\t\t\tconst xAxis = series.get(\"xAxis\") as ValueAxis<AxisRenderer>;\r\n\r\n\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\tconst di1 = xAxis.getSeriesItem(series, xAxis.valueToPosition(x1));\r\n\t\t\tconst di2 = xAxis.getSeriesItem(series, xAxis.valueToPosition(x2));\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tif (di1 && di2) {\r\n\t\t\t\tconst dataItems = series.dataItems;\r\n\r\n\t\t\t\tlet startIndex = dataItems.indexOf(di1);\r\n\t\t\t\tlet endIndex = dataItems.indexOf(di2);\r\n\r\n\t\t\t\tlet inversed = false;\r\n\t\t\t\tif (startIndex > endIndex) {\r\n\t\t\t\t\tinversed = true;\r\n\t\t\t\t\t[startIndex, endIndex] = [endIndex, startIndex];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst points: Array<[number, number]> = []\r\n\t\t\t\tlet ii = 0;\r\n\t\t\t\tfor (let i = startIndex; i <= endIndex; i++) {\r\n\t\t\t\t\tconst dataItem = dataItems[i];\r\n\t\t\t\t\tpoints.push([ii, dataItem.get(field as any) as any]);\r\n\t\t\t\t\tii++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst resultPoints = linear(points);\r\n\t\t\t\tconst len = resultPoints.length;\r\n\r\n\t\t\t\tif (len > 1) {\r\n\t\t\t\t\tconst p1 = resultPoints[0];\r\n\t\t\t\t\tconst p2 = resultPoints[resultPoints.length - 1];\r\n\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\tlet y1 = p1[1];\r\n\t\t\t\t\t\tlet y2 = p2[1];\r\n\r\n\t\t\t\t\t\tif (inversed) {\r\n\t\t\t\t\t\t\t[y1, y2] = [y2, y1];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._setContext(diP1, \"valueY\", y1, true);\r\n\t\t\t\t\t\tthis._setContext(diP2, \"valueY\", y2, true);\r\n\r\n\t\t\t\t\t\tthis._setContext(diP1, \"valueX\", x1);\r\n\t\t\t\t\t\tthis._setContext(diP2, \"valueX\", x2);\r\n\r\n\t\t\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\nimport { color } from \"../../../core/util/Color\";\r\n\r\nexport interface IDoodleSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IDoodleSeriesSettings extends IDrawingSeriesSettings {\r\n}\r\n\r\nexport interface IDoodleSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\nexport class DoodleSeries extends DrawingSeries {\r\n\tpublic static className: string = \"DoodleSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([DoodleSeries.className]);\r\n\r\n\tdeclare public _settings: IDoodleSeriesSettings;\r\n\tdeclare public _privateSettings: IDoodleSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IDoodleSeriesDataItem;\r\n\r\n\tprotected _panX?: boolean;\r\n\tprotected _panY?: boolean;\r\n\r\n\t// point index in segment\r\n\tprotected _pIndex: number = 0;\r\n\r\n\tprotected _tag = \"doodle\";\r\n\r\n\tprotected _down: boolean = false;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.bullets.clear();\r\n\r\n\t\tthis.strokes.template.setAll({\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\r\n\t\tif (this._drawingEnabled && this._isPointerDown) {\r\n\t\t\tthis._handleBulletPosition(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletPosition(event: ISpritePointerEvent) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueX);\r\n\r\n\t\t\tconst index = this._index;\r\n\t\t\tthis.data.push({ valueY: valueY, valueX: valueX, index: index, corner: this._pIndex, drawingId: this._drawingId });\r\n\t\t\tconst len = this.dataItems.length;\r\n\r\n\t\t\tconst dataItem = this.dataItems[len - 1];\r\n\t\t\tthis._setXLocation(dataItem, valueX);\r\n\r\n\t\t\tthis._pIndex++;\r\n\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerDown(event: ISpritePointerEvent) {\r\n\t\t\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\t\t\t\r\n\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\tsuper._handlePointerDown(event);\r\n\t\t\t\tthis._increaseIndex();\r\n\t\t\t\tthis._pIndex = 0;\r\n\r\n\t\t\t\tthis._panX = chart.get(\"panX\");\r\n\t\t\t\tthis._panY = chart.get(\"panY\");\r\n\r\n\t\t\t\tchart.set(\"panX\", false);\r\n\t\t\t\tchart.set(\"panY\", false);\r\n\r\n\t\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tcursor.setPrivate(\"visible\", false);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._down = true;\r\n\r\n\t\t\t\tthis.data.push({ stroke: this._getStrokeTemplate(), sprite: this.mainContainer, index: this._index, corner: this._pIndex, drawingId: this._drawingId });\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerUp(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerUp(event);\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart && this._down) {\r\n\t\t\tthis._down = false;\r\n\t\t\tthis.setTimeout(() => {\r\n\t\t\t\tchart.set(\"panX\", this._panX);\r\n\t\t\t\tchart.set(\"panY\", this._panY);\r\n\t\t\t\tconst cursor = chart.get(\"cursor\");\r\n\t\t\t\tif (cursor) {\r\n\t\t\t\t\tcursor.setPrivate(\"visible\", true);\r\n\t\t\t\t}\r\n\t\t\t}, 100)\r\n\r\n\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t}\r\n\t}\r\n}","import type { Percent } from \"../../../core/util/Percent\";\r\nimport type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { SpriteResizer } from \"../../../core/render/SpriteResizer\";\r\n\r\nimport { PolylineSeries, IPolylineSeriesSettings, IPolylineSeriesPrivate, IPolylineSeriesDataItem } from \"./PolylineSeries\";\r\nimport { Bullet } from \"../../../core/render/Bullet\";\r\nimport { Graphics } from \"../../../core/render/Graphics\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\nexport interface IIconSeriesDataItem extends IPolylineSeriesDataItem {\r\n\r\n\t/**\r\n\t * An SVG path of the icon.\r\n\t */\r\n\tsvgPath: string;\r\n}\r\n\r\nexport interface IIconSeriesSettings extends IPolylineSeriesSettings {\r\n\r\n\t/**\r\n\t * An SVG path of the icon.\r\n\t */\r\n\ticonSvgPath: string;\r\n\r\n\t/**\r\n\t * Scale (0-X).\r\n\t */\r\n\ticonScale?: number;\r\n\r\n\t/**\r\n\t * Relative horizontal center.\r\n\t */\r\n\ticonCenterX?: Percent;\r\n\r\n\t/**\r\n\t * Relative vertical center.\r\n\t */\r\n\ticonCenterY?: Percent;\r\n\r\n\t/**\r\n\t * Should icon snap to closest data item?\r\n\t */\r\n\tsnapToData?: boolean;\r\n}\r\n\r\nexport interface IIconSeriesPrivate extends IPolylineSeriesPrivate {\r\n}\r\n\r\nexport class IconSeries extends PolylineSeries {\r\n\tpublic static className: string = \"IconSeries\";\r\n\tpublic static classNames: Array<string> = PolylineSeries.classNames.concat([IconSeries.className]);\r\n\r\n\tdeclare public _settings: IIconSeriesSettings;\r\n\tdeclare public _privateSettings: IIconSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IIconSeriesDataItem;\r\n\r\n\tpublic spriteResizer!: SpriteResizer;\r\n\r\n\tprotected _tag = \"icon\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.spriteResizer = this._getStockChart().spriteResizer;\r\n\r\n\t\tthis.bullets.clear();\r\n\r\n\t\tthis.strokes.template.set(\"visible\", false);\r\n\t\tthis.fills.template.set(\"visible\", false);\r\n\r\n\t\tthis.bullets.push((root, _series, dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tconst template = dataContext.settings;\r\n\t\t\tif (template) {\r\n\t\t\t\tconst sprite = Graphics.new(root, {\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t\tthemeTags: [\"icon\"]\r\n\t\t\t\t}, template);\r\n\r\n\t\t\t\tdataContext.sprite = sprite;\r\n\r\n\t\t\t\tthis._addBulletInteraction(sprite);\r\n\r\n\t\t\t\tsprite.events.on(\"click\", (_e) => {\r\n\t\t\t\t\tconst spriteResizer = this.spriteResizer;\r\n\t\t\t\t\tif (spriteResizer.get(\"sprite\") == sprite) {\r\n\t\t\t\t\t\tspriteResizer.set(\"sprite\", undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tspriteResizer.set(\"sprite\", sprite);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsprite.events.on(\"pointerover\", () => {\r\n\t\t\t\t\tthis._isHover = true;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsprite.events.on(\"pointerout\", () => {\r\n\t\t\t\t\tthis._isHover = false;\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.spriteResizer.set(\"sprite\", undefined);\r\n\r\n\t\t\t\tsprite.on(\"scale\", (scale) => {\r\n\t\t\t\t\ttemplate.set(\"scale\", scale)\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsprite.on(\"rotation\", (rotation) => {\r\n\t\t\t\t\ttemplate.set(\"rotation\", rotation)\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn Bullet.new(this._root, {\r\n\t\t\t\t\tlocationX: undefined,\r\n\t\t\t\t\tsprite: sprite\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setContextSprite(_context: any) { }\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._selected.length > 0) {\r\n\t\t\tthis._hideResizer();\r\n\t\t\tthis.unselectAllDrawings();\r\n\t\t}\r\n\t\telse if (this._drawingEnabled) {\r\n\t\t\tif (!this._isHover) {\r\n\t\t\t\tsuper._handlePointerClick(event);\r\n\r\n\t\t\t\tconst dataObject = this.data.getIndex(this.data.length - 1) as any;\r\n\t\t\t\tdataObject.settings = this._getIconTemplate();\r\n\r\n\t\t\t\tthis._increaseIndex();\r\n\t\t\t\tthis._di[this._index] = {};\r\n\r\n\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.isDrawing(false);\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tthis.spriteResizer.set(\"sprite\", undefined);\r\n\t\tthis._isHover = false;\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings?: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet template: Template<any>;\r\n\t\tlet sprite!: Graphics;\r\n\r\n\t\tlet context = this._getContext(index);\r\n\t\tif (context) {\r\n\t\t\tsprite = context.sprite;\r\n\t\t\ttemplate = context.settings;\r\n\r\n\t\t\tif (sprite) {\r\n\r\n\t\t\t\tconst svgPath = this.get(\"iconSvgPath\");\r\n\t\t\t\tconst centerX = this.get(\"iconCenterX\");\r\n\t\t\t\tconst centerY = this.get(\"iconCenterY\");\r\n\r\n\t\t\t\tsprite.set(\"svgPath\", svgPath);\r\n\t\t\t\tsprite.set(\"centerX\", centerX);\r\n\t\t\t\tsprite.set(\"centerY\", centerY);\r\n\r\n\t\t\t\tconst defaultState = sprite.states.lookup(\"default\")!;\r\n\t\t\t\tdefaultState.set(\"svgPath\", svgPath);\r\n\t\t\t\tdefaultState.set(\"centerX\", centerX);\r\n\t\t\t\tdefaultState.set(\"centerY\", centerY);\r\n\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate.set(\"svgPath\", svgPath);\r\n\t\t\t\t\ttemplate.set(\"centerX\", centerX);\r\n\t\t\t\t\ttemplate.set(\"centerY\", centerY);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (settings) {\r\n\t\t\t\t\t$object.each(settings, (key, value) => {\r\n\t\t\t\t\t\tsprite.set(key as any, value);\r\n\t\t\t\t\t\tdefaultState.set(key as any, value);\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\ttemplate.set(key, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispatchAdded(): void {\r\n\r\n\t}\r\n\r\n\tprotected _getIconTemplate(): Template<any> {\r\n\t\tconst template: any = {};\r\n\r\n\t\tconst iconSvgPath = this.get(\"iconSvgPath\");\r\n\t\tif (iconSvgPath != null) {\r\n\t\t\ttemplate.svgPath = iconSvgPath;\r\n\t\t}\r\n\r\n\t\tconst iconScale = this.get(\"iconScale\");\r\n\t\tif (iconScale != null) {\r\n\t\t\ttemplate.scale = iconScale;\r\n\t\t}\r\n\r\n\t\tconst iconCenterX = this.get(\"iconCenterX\");\r\n\t\tif (iconCenterX != null) {\r\n\t\t\ttemplate.centerX = iconCenterX;\r\n\t\t}\r\n\r\n\t\tconst iconCenterY = this.get(\"iconCenterY\");\r\n\t\tif (iconCenterY != null) {\r\n\t\t\ttemplate.centerY = iconCenterY;\r\n\t\t}\r\n\r\n\t\tconst strokeColor = this.get(\"strokeColor\");\r\n\t\tif (strokeColor != null) {\r\n\t\t\ttemplate.stroke = strokeColor;\r\n\t\t}\r\n\r\n\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\r\n\t\tif (strokeOpacity != null) {\r\n\t\t\ttemplate.strokeOpacity = strokeOpacity;\r\n\t\t}\r\n\r\n\t\tconst fillColor = this.get(\"fillColor\");\r\n\t\tif (fillColor != null) {\r\n\t\t\ttemplate.fill = fillColor;\r\n\t\t}\r\n\r\n\t\tconst fillOpacity = this.get(\"fillOpacity\");\r\n\t\tif (fillOpacity != null) {\r\n\t\t\ttemplate.fillOpacity = fillOpacity;\r\n\t\t}\r\n\r\n\t\treturn Template.new(template);\r\n\t}\r\n\r\n\tpublic setInteractive(value: boolean) {\r\n\t\tsuper.setInteractive(value)\r\n\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\tif (bullets) {\r\n\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceInactive\", !value);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\t\tif (this.isDirty(\"iconSvgPath\")) {\r\n\r\n\t\t\t$array.each(this._selected, (i) => {\r\n\t\t\t\tthis._applySettings(i);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateSelector(selector: Graphics, index: number) {\r\n\t\tconst context = this._getContext(index);\r\n\t\tif (context) {\r\n\t\t\tconst sprite = context.sprite;\r\n\r\n\t\t\tif (sprite) {\r\n\t\t\t\tif (sprite.dataItem == this.spriteResizer.get(\"sprite\")?.dataItem) {\r\n\t\t\t\t\tselector.hide(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._selected.indexOf(index) != -1) {\r\n\t\t\t\t\t\tselector.show(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst selectorPadding = this.get(\"selectorPadding\", 5);\r\n\r\n\t\t\t\tlet bounds = sprite.bounds();\r\n\r\n\t\t\t\tlet w = (bounds.right - bounds.left) + selectorPadding * 2;\r\n\t\t\t\tlet h = (bounds.bottom - bounds.top) + selectorPadding * 2;\r\n\r\n\t\t\t\tselector.setAll({\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: h,\r\n\t\t\t\t\tx: bounds.left - selectorPadding,\r\n\t\t\t\t\ty: bounds.top - selectorPadding\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic toggleDrawing(enabled: boolean) {\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\tif (bullets) {\r\n\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\tsprite.set(\"forceInactive\", !enabled);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tprotected _handleBulletDragStart(event: ISpritePointerEvent) {\r\n\t\t// don't call super\r\n\t\tthis._hideResizer(event.target);\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStartDrawing(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletDragStop(event: ISpritePointerEvent) {\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStopDrawing(event);\r\n\t\t}\r\n\t\tthis._root.events.once(\"frameended\", () => {\r\n\t\t\tthis._positionBullets(event.target.dataItem as DataItem<IIconSeriesDataItem>);\r\n\t\t})\r\n\t}\r\n}","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { Container } from \"../../../core/render/Container\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { SpriteResizer } from \"../../../core/render/SpriteResizer\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\n\r\nimport { PolylineSeries, IPolylineSeriesSettings, IPolylineSeriesPrivate, IPolylineSeriesDataItem } from \"./PolylineSeries\";\r\nimport { EditableLabel } from \"../../../core/render/EditableLabel\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\nexport interface ILabelSeriesDataItem extends IPolylineSeriesDataItem {\r\n}\r\n\r\nexport interface ILabelSeriesSettings extends IPolylineSeriesSettings {\r\n\r\n\t/**\r\n\t * Label font size.\r\n\t */\r\n\tlabelFontSize?: number | string | undefined;\r\n\r\n\t/**\r\n\t * Label font damily.\r\n\t */\r\n\tlabelFontFamily?: string;\r\n\r\n\t/**\r\n\t * Font weight.\r\n\t */\r\n\tlabelFontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\r\n\r\n\t/**\r\n\t * Font style.\r\n\t */\r\n\tlabelFontStyle?: \"normal\" | \"italic\" | \"oblique\";\r\n\r\n\t/**\r\n\t * Label color.\r\n\t */\r\n\tlabelFill?: Color;\r\n\r\n}\r\n\r\nexport interface ILabelSeriesPrivate extends IPolylineSeriesPrivate {\r\n\tinputContainer: HTMLDivElement;\r\n\tinput: HTMLTextAreaElement;\r\n\tlabel: EditableLabel;\r\n}\r\n\r\nexport class LabelSeries extends PolylineSeries {\r\n\tpublic static className: string = \"LabelSeries\";\r\n\tpublic static classNames: Array<string> = PolylineSeries.classNames.concat([LabelSeries.className]);\r\n\r\n\tdeclare public _settings: ILabelSeriesSettings;\r\n\tdeclare public _privateSettings: ILabelSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ILabelSeriesDataItem;\r\n\r\n\tpublic spriteResizer!: SpriteResizer;\r\n\r\n\tprotected _tag = \"label\";\r\n\r\n\tprotected _isEditing: boolean = false;\r\n\r\n\tprotected _isSelected: boolean = false;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.spriteResizer = this._getStockChart().spriteResizer;\r\n\r\n\t\tthis.strokes.template.set(\"visible\", false);\r\n\t\tthis.fills.template.set(\"visible\", false);\r\n\r\n\t\tthis.addTag(this._tag);\r\n\t}\r\n\r\n\tprotected _dispatchAdded(): void {\r\n\r\n\t}\r\n\r\n\tprotected _setContextSprite(_context: any) { }\r\n\r\n\tprotected _tweakBullet(container: Container, dataItem: DataItem<ILabelSeriesDataItem>) {\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tconst text = dataContext.text;\r\n\t\tconst template = dataContext.settings;\r\n\r\n\t\tif (template) {\r\n\t\t\tconst label = container.children.push(EditableLabel.new(this._root, {\r\n\t\t\t\tthemeTags: [\"label\"],\r\n\t\t\t\ttext: text,\r\n\t\t\t\teditOn: \"none\"\r\n\t\t\t}, template));\r\n\r\n\t\t\tlabel.on(\"text\", (text) => {\r\n\t\t\t\tdataContext.text = text;\r\n\t\t\t});\r\n\r\n\t\t\tthis.setPrivate(\"label\", label);\r\n\r\n\t\t\tlabel.on(\"active\", () => {\r\n\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\tthis._isEditing = label.get(\"active\", false);\r\n\t\t\t\t}, 200)\r\n\r\n\t\t\t\tif (!label.get(\"active\")) {\r\n\t\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\t\tif (label) {\r\n\t\t\t\t\t\t\tif (label.get(\"text\") == \"\") {\r\n\t\t\t\t\t\t\t\tthis._disposeIndex(dataContext.index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 100);\r\n\r\n\t\t\t\t\t// Trigger a drawing updated event so that updated text is saved if\r\n\t\t\t\t\t// necessary\r\n\t\t\t\t\tconst stockChart = this._getStockChart();\r\n\t\t\t\t\tconst type = \"drawingsupdated\";\r\n\t\t\t\t\tif (stockChart.events.isEnabled(type)) {\r\n\t\t\t\t\t\tstockChart.events.dispatch(type, { type: type, target: stockChart });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tcontainer.events.on(\"click\", (e) => {\r\n\t\t\t\tconst spriteResizer = this.spriteResizer;\r\n\t\t\t\tif (spriteResizer.get(\"sprite\") == label) {\r\n\t\t\t\t\tthis._isEditing = true;\r\n\t\t\t\t\tlabel.set(\"active\", true);\r\n\t\t\t\t\tthis._selectDrawing(dataContext.index, (e.originalEvent as any).ctrlKey, true);\r\n\t\t\t\t\tspriteResizer.set(\"sprite\", undefined);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._isEditing = false;\r\n\t\t\t\t\tthis._isSelected = true;\r\n\t\t\t\t\tspriteResizer.set(\"sprite\", label);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tcontainer.events.on(\"pointerover\", () => {\r\n\t\t\t\tthis._isHover = true;\r\n\t\t\t})\r\n\r\n\t\t\tcontainer.events.on(\"pointerout\", () => {\r\n\t\t\t\tthis._isHover = false;\r\n\t\t\t})\r\n\r\n\t\t\tlabel.on(\"scale\", (scale) => {\r\n\t\t\t\ttemplate.set(\"scale\", scale);\r\n\t\t\t})\r\n\r\n\t\t\tlabel.on(\"rotation\", (rotation) => {\r\n\t\t\t\ttemplate.set(\"rotation\", rotation)\r\n\t\t\t})\r\n\r\n\t\t\tlabel.events.on(\"boundschanged\", () => {\r\n\t\t\t\tthis.markDirty();\r\n\t\t\t})\r\n\r\n\t\t\tdataContext.sprite = container;\r\n\t\t\tdataContext.label = label;\r\n\r\n\t\t\tthis._tweakBullet2(label, dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _tweakBullet2(_label: EditableLabel, _dataItem: DataItem<ILabelSeriesDataItem>) {\r\n\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._isEditing) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this._selected.length > 0 || this._isSelected) {\r\n\t\t\tthis._isSelected = false;\r\n\t\t\tthis._hideResizer();\r\n\t\t\tthis.unselectAllDrawings();\r\n\t\t}\r\n\t\telse if (this._drawingEnabled) {\r\n\t\t\tif (!this._isHover) {\r\n\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\tthis._increaseIndex();\r\n\t\t\t\tthis._di[this._index] = {};\r\n\r\n\t\t\t\tthis._addPoint(event);\r\n\r\n\t\t\t\tconst dataContext = this.data.getIndex(this.data.length - 1) as any;\r\n\t\t\t\tdataContext.text = \"\";\r\n\t\t\t\tdataContext.index = this._index;\r\n\t\t\t\tdataContext.corner = 0;\r\n\t\t\t\tdataContext.settings = this._getLabelTemplate();\r\n\t\t\t\tthis._afterTextSave(dataContext);\r\n\r\n\t\t\t\tthis._root.events.once(\"frameended\", () => {\r\n\t\t\t\t\tdataContext.label.set(\"active\", true);\r\n\t\t\t\t\tthis._isEditing = true;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.spriteResizer.set(\"sprite\", undefined);\r\n\r\n\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.isDrawing(false);\r\n\t}\r\n\r\n\tprotected _afterTextSave(_dataContext: any) {\r\n\r\n\t}\r\n\r\n\tprotected _getLabelTemplate(): Template<any> {\r\n\t\tconst template: any = {};\r\n\r\n\t\tconst labelFontSize = this.get(\"labelFontSize\");\r\n\t\tif (labelFontSize != null) {\r\n\t\t\ttemplate.fontSize = labelFontSize;\r\n\t\t}\r\n\r\n\t\tconst labelFontFamily = this.get(\"labelFontFamily\");\r\n\t\tif (labelFontFamily != null) {\r\n\t\t\ttemplate.fontFamily = labelFontFamily;\r\n\t\t}\r\n\r\n\t\tconst labelFontWeight = this.get(\"labelFontWeight\");\r\n\t\tif (labelFontWeight != null) {\r\n\t\t\ttemplate.fontWeight = labelFontWeight;\r\n\t\t}\r\n\r\n\t\tconst labelFontStyle = this.get(\"labelFontStyle\");\r\n\t\tif (labelFontStyle != null) {\r\n\t\t\ttemplate.fontStyle = labelFontStyle;\r\n\t\t}\r\n\r\n\t\tconst labelFill = this.get(\"labelFill\");\r\n\t\tif (labelFill != null) {\r\n\t\t\ttemplate.fill = labelFill;\r\n\t\t}\r\n\r\n\t\treturn Template.new(template);\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tthis.spriteResizer.set(\"sprite\", undefined);\r\n\t\tthis._isHover = false;\r\n\t}\r\n\r\n\tprotected _hideAllBullets() {\r\n\r\n\t}\r\n\r\n\tprotected _updateSelector(selector: Graphics, index: number) {\r\n\t\tconst context = this._getContext(index);\r\n\t\tif (context) {\r\n\t\t\tconst sprite = context.sprite;\r\n\r\n\t\t\tif (sprite) {\r\n\t\t\t\tif (sprite.dataItem == this.spriteResizer.get(\"sprite\")?.dataItem) {\r\n\t\t\t\t\tselector.hide(0);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this._selected.indexOf(index) != -1) {\r\n\t\t\t\t\t\tselector.show(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst selectorPadding = this.get(\"selectorPadding\", 5);\r\n\r\n\t\t\t\tlet bounds = sprite.bounds();\r\n\r\n\t\t\t\tlet w = (bounds.right - bounds.left) + selectorPadding * 2;\r\n\t\t\t\tlet h = (bounds.bottom - bounds.top) + selectorPadding * 2;\r\n\r\n\t\t\t\tselector.setAll({\r\n\t\t\t\t\twidth: w,\r\n\t\t\t\t\theight: h,\r\n\t\t\t\t\tx: bounds.left - selectorPadding,\r\n\t\t\t\t\ty: bounds.top - selectorPadding\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\t\tif (this.isDirty(\"labelFontSize\") || this.isDirty(\"labelFontFamily\") || this.isDirty(\"labelFontWeight\") || this.isDirty(\"labelFontStyle\") || this.isDirty(\"labelFill\")) {\r\n\t\t\t$array.each(this._selected, (i) => {\r\n\t\t\t\tthis._applySettings(i);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings?: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet context = this._getContext(index);\r\n\r\n\t\tif (context) {\r\n\t\t\tlet label = context.label;\r\n\r\n\t\t\tif (label) {\r\n\t\t\t\tlet template = context.settings;\r\n\r\n\t\t\t\tconst labelSettings = {\r\n\t\t\t\t\tfontSize: this.get(\"labelFontSize\"),\r\n\t\t\t\t\tfontFamily: this.get(\"labelFontFamily\"),\r\n\t\t\t\t\tfontWeight: this.get(\"labelFontWeight\"),\r\n\t\t\t\t\tfontStyle: this.get(\"labelFontStyle\"),\r\n\t\t\t\t\tfill: this.get(\"labelFill\"),\r\n\t\t\t\t\tfillColor: this.get(\"fillColor\")\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst defaultState = label.states.lookup(\"default\")!;\r\n\t\t\t\tif (labelSettings) {\r\n\t\t\t\t\t$object.each(labelSettings, (key, value) => {\r\n\t\t\t\t\t\tlabel.set(key as any, value);\r\n\t\t\t\t\t\tdefaultState.set(key as any, value);\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\ttemplate.set(key, value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletDragStart(event: ISpritePointerEvent) {\r\n\t\t// don't call super\t\t\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStartDrawing(event);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleBulletDragStop(event: ISpritePointerEvent) {\r\n\t\tconst stockChart = this._getStockChart();\r\n\t\tif (stockChart) {\r\n\t\t\tstockChart._dragStopDrawing(event);\r\n\t\t}\r\n\r\n\t\tthis._root.events.once(\"frameended\", () => {\r\n\t\t\tthis._positionBullets(event.target.dataItem as DataItem<IDrawingSeriesDataItem>);\r\n\t\t})\r\n\t}\r\n\r\n\tpublic toggleDrawing(enabled?: boolean) {\r\n\t\tthis.grips.each((grip) => {\r\n\t\t\tgrip.set(\"forceInactive\", !enabled);\r\n\t\t})\r\n\t}\r\n}","import type { Label } from \"../../../core/render/Label\";\r\nimport type { Container } from \"../../../core/render/Container\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { LabelSeries, ILabelSeriesSettings, ILabelSeriesPrivate, ILabelSeriesDataItem } from \"./LabelSeries\";\r\nimport { PointedRectangle } from \"../../../core/render/PointedRectangle\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $ease from \"../../../core/util/Ease\";\r\n\r\n\r\nexport interface ICalloutSeriesDataItem extends ILabelSeriesDataItem {\r\n}\r\n\r\nexport interface ICalloutSeriesSettings extends ILabelSeriesSettings {\r\n}\r\n\r\nexport interface ICalloutSeriesPrivate extends ILabelSeriesPrivate {\r\n}\r\n\r\nexport class CalloutSeries extends LabelSeries {\r\n\tpublic static className: string = \"CalloutSeries\";\r\n\tpublic static classNames: Array<string> = LabelSeries.classNames.concat([CalloutSeries.className]);\r\n\r\n\tdeclare public _settings: ICalloutSeriesSettings;\r\n\tdeclare public _privateSettings: ICalloutSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ICalloutSeriesDataItem;\r\n\r\n\tprotected _tag = \"callout\";\r\n\r\n\tprotected _tweakBullet2(label: Label, dataItem: DataItem<ICalloutSeriesDataItem>) {\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tconst background = label.set(\"background\", PointedRectangle.new(this._root, { themeTags: [\"callout\"] }, dataContext.bgSettings));\r\n\t\tdataContext.background = background;\r\n\t}\r\n\r\n\tprotected _tweakBullet(container: Container, dataItem: DataItem<ICalloutSeriesDataItem>) {\r\n\t\tsuper._tweakBullet(container, dataItem);\r\n\r\n\t\tcontainer.events.off(\"click\");\r\n\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tconst template = dataContext.settings;\r\n\r\n\t\tif (template) {\r\n\t\t\tconst label = this.getPrivate(\"label\");\r\n\t\t\tif (label) {\r\n\t\t\t\tlabel.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._root.events.once(\"frameended\", () => {\r\n\t\t\t\t\t\tthis._updatePointer(label);\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlabel.events.on(\"click\", (e) => {\r\n\t\t\t\t\tconst spriteResizer = this.spriteResizer;\r\n\t\t\t\t\tif (spriteResizer.get(\"sprite\") == label) {\r\n\t\t\t\t\t\tthis._isEditing = true;\r\n\t\t\t\t\t\tlabel.set(\"active\", true);\r\n\t\t\t\t\t\tthis._selectDrawing(dataContext.index, (e.originalEvent as any).ctrlKey, true);\r\n\t\t\t\t\t\tspriteResizer.set(\"sprite\", undefined);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._isEditing = false;\r\n\t\t\t\t\t\tthis._isSelected = true;\r\n\t\t\t\t\t\tthis._selectDrawing(dataContext.index, (e.originalEvent as any).ctrlKey, true);\r\n\t\t\t\t\t\tspriteResizer.set(\"sprite\", label);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\t\t\tthis._disposeIndex(dataContext.index);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlabel.on(\"scale\", () => {\r\n\t\t\t\t\tthis._updatePointer(label);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlabel.on(\"rotation\", () => {\r\n\t\t\t\t\tthis._updatePointer(label);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlabel.setAll({ draggable: true });\r\n\r\n\t\t\t\tlabel.on(\"x\", (x) => {\r\n\t\t\t\t\ttemplate.set(\"x\", x);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tlabel.on(\"y\", (y) => {\r\n\t\t\t\t\ttemplate.set(\"y\", y);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst defaultState = label.states.lookup(\"default\")!;\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tlabel.animate({ key: \"y\", to: -label.height() / 2 - 10, from: 0, duration: defaultState.get(\"stateAnimationDuration\", 500), easing: defaultState.get(\"stateAnimationEasing\", $ease.out($ease.cubic)) })\r\n\t\t\t\t}, 50)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updatePointer(label: Label) {\r\n\t\tconst background = label.get(\"background\");\r\n\t\tif (background instanceof PointedRectangle) {\r\n\t\t\tconst parent = label.parent;\r\n\t\t\tif (parent) {\r\n\t\t\t\tlet point = parent.toGlobal({ x: 0, y: 0 });\r\n\t\t\t\tpoint = background.toLocal(point);\r\n\t\t\t\tbackground.setAll({ pointerX: point.x, pointerY: point.y });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.markDirty();\r\n\t}\r\n\r\n\tprotected _afterTextSave(dataContext: any) {\r\n\t\tdataContext.bgSettings = this._getBgTemplate();\r\n\t}\r\n\r\n\tprotected _hideAllBullets() {\r\n\r\n\t}\r\n\r\n\tprotected _getBgTemplate(): Template<any> {\r\n\t\tconst template: any = {};\r\n\r\n\t\tconst fill = this.get(\"fillColor\");\r\n\t\tif (fill != null) {\r\n\t\t\ttemplate.fill = fill;\r\n\t\t}\r\n\r\n\t\tconst fillOpacity = this.get(\"fillOpacity\");\r\n\t\tif (fillOpacity != null) {\r\n\t\t\ttemplate.fillOpacity = fillOpacity;\r\n\t\t}\r\n\r\n\t\tconst strokeOpacity = this.get(\"strokeOpacity\");\r\n\t\tif (strokeOpacity != null) {\r\n\t\t\ttemplate.strokeOpacity = strokeOpacity;\r\n\t\t}\r\n\r\n\t\tconst stroke = this.get(\"strokeColor\");\r\n\t\tif (stroke != null) {\r\n\t\t\ttemplate.stroke = stroke;\r\n\t\t}\r\n\r\n\t\treturn Template.new(template);\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings?: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\r\n\t\tconst context = this._getContext(index);\r\n\t\tif (context && settings) {\r\n\t\t\tconst background = context.background;\r\n\r\n\t\t\tif (background) {\r\n\t\t\t\tlet template = context.bgSettings;\r\n\r\n\t\t\t\tif (settings.fill != undefined) {\r\n\t\t\t\t\tbackground.set(\"fill\", settings.fill);\r\n\t\t\t\t\ttemplate.set(\"fill\", settings.fill);\r\n\t\t\t\t}\r\n\t\t\t\tif (settings.fillOpacity != undefined) {\r\n\t\t\t\t\tbackground.set(\"fillOpacity\", settings.fillOpacity);\r\n\t\t\t\t\ttemplate.set(\"fillOpacity\", settings.fillOpacity);\r\n\t\t\t\t}\r\n\t\t\t\tif (settings.strokeOpacity != undefined) {\r\n\t\t\t\t\tbackground.set(\"strokeOpacity\", settings.strokeOpacity);\r\n\t\t\t\t\ttemplate.set(\"strokeOpacity\", settings.strokeOpacity);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (settings.stroke != undefined) {\r\n\t\t\t\t\tbackground.set(\"stroke\", settings.stroke);\r\n\t\t\t\t\ttemplate.set(\"stroke\", settings.stroke);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\nimport { Ellipse } from \"../../../core/render/Ellipse\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\nexport interface IEllipseSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IEllipseSeriesSettings extends IDrawingSeriesSettings {\r\n}\r\n\r\nexport interface IEllipseSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\nexport class EllipseSeries extends DrawingSeries {\r\n\tpublic static className: string = \"EllipseSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([EllipseSeries.className]);\r\n\r\n\tdeclare public _settings: IEllipseSeriesSettings;\r\n\tdeclare public _privateSettings: IEllipseSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IEllipseSeriesDataItem;\r\n\r\n\tprotected _ellipses: Array<Ellipse> = [];\r\n\r\n\tprotected _tag = \"ellipse\";\r\n\tprotected _clickPX: number = 0;\r\n\tprotected _clickVY: number = 0;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeEllipse(): Ellipse {\r\n\t\tconst ellipse = this.ellipses.make();\r\n\t\tthis.mainContainer.children.push(ellipse);\r\n\t\tthis.ellipses.push(ellipse);\r\n\t\treturn ellipse;\r\n\t}\r\n\r\n\tpublic readonly ellipses: ListTemplate<Ellipse> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({ radiusX: 0, radiusY: 0 }),\r\n\t\t() => Ellipse._new(this._root, { radiusX: 0, radiusY: 0, templateField: \"settings\" }, [this.ellipses.template])\r\n\t));\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\r\n\t\tthis.strokes.template.set(\"visible\", false);\r\n\t\tthis.fills.template.set(\"visible\", false);\r\n\r\n\t\tconst ellipseTemplate = this.ellipses.template;\r\n\t\tellipseTemplate.events.on(\"pointerover\", (e) => {\r\n\t\t\tthis._showSegmentBullets(e.target.get(\"userData\"));\r\n\t\t})\r\n\r\n\t\t/*\r\n\t\tellipseTemplate.events.on(\"pointerout\", () => {\r\n\t\t\tthis._hideAllBullets();\r\n\t\t})\r\n\t\t*/\r\n\r\n\t\tellipseTemplate.events.on(\"dragstart\", (e) => {\r\n\t\t\tthis.startDragItem(e, e.target.get(\"userData\"));\r\n\t\t})\r\n\r\n\t\tellipseTemplate.events.on(\"dragstop\", (e) => {\r\n\t\t\tthis.stopDragItem(e, e.target.get(\"userData\"));\r\n\t\t})\r\n\r\n\t\tellipseTemplate.events.on(\"click\", (e) => {\r\n\t\t\tconst index = e.target.get(\"userData\");\r\n\t\t\tif (this._erasingEnabled) {\r\n\t\t\t\tthis._disposeIndex(index);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._selectDrawing(index, (e.originalEvent as any).ctrlKey);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet template: Template<any>;\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.index == index) {\r\n\t\t\t\tif (dataContext.settings) {\r\n\t\t\t\t\ttemplate = dataContext.settings;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst ellipse = this._getSprite(this.ellipses, index);\r\n\t\tif (ellipse) {\r\n\t\t\tconst defaultState = ellipse.states.lookup(\"default\")!;\r\n\t\t\t$object.each(settings, (key, value) => {\r\n\t\t\t\tellipse.set(key as any, value);\r\n\t\t\t\tdefaultState.set(key as any, value);\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate.set(key, value);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handleFillDragStop(event: ISpritePointerEvent, index: number) {\r\n\t\tsuper._handleFillDragStop(event, index);\r\n\r\n\t\tconst items = this._di[index];\r\n\t\tconst bDI = items[\"b\"];\r\n\t\tconst tDI = items[\"t\"];\r\n\t\tconst rDI = items[\"r\"];\r\n\t\tconst lDI = items[\"l\"];\r\n\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\tif (bDI && tDI && rDI && lDI) {\r\n\t\t\tconst positionL = xAxis.valueToPosition(lDI.get(\"valueX\", 0));\r\n\t\t\tconst positionR = xAxis.valueToPosition(rDI.get(\"valueX\", 0));\r\n\r\n\t\t\tlet mx = this._getXValue(xAxis.positionToValue(positionL + (positionR - positionL) / 2));\r\n\t\t\tthis._setContext(tDI, \"valueX\", mx);\r\n\t\t\tthis._setContext(bDI, \"valueX\", mx);\r\n\r\n\t\t\tthis._setXLocation(tDI, mx);\r\n\t\t\tthis._setXLocation(bDI, mx);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tconst dataItem = event.target.dataItem as DataItem<IEllipseSeriesDataItem>;\r\n\r\n\t\tconst valueXReal = dataItem.get(\"valueX\");\r\n\t\tconst locationXReal = dataItem.get(\"locationX\");\r\n\t\tconst valueYReal = dataItem.get(\"valueY\");\r\n\r\n\t\tsuper._handleBulletDragged(event);\r\n\r\n\t\tconst movePoint = this._movePointerPoint;\r\n\t\tif (dataItem && movePoint) {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst corner = dataContext.corner;\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\tconst vx = \"valueX\"\r\n\t\t\tconst vy = \"valueY\"\r\n\t\t\tconst vwy = \"valueYWorking\";\r\n\r\n\t\t\tconst items = this._di[index];\r\n\t\t\tconst bDI = items[\"b\"];\r\n\t\t\tconst tDI = items[\"t\"];\r\n\t\t\tconst rDI = items[\"r\"];\r\n\t\t\tconst lDI = items[\"l\"];\r\n\r\n\r\n\t\t\tif (bDI && tDI && rDI && lDI) {\r\n\t\t\t\tif (corner == \"b\") {\r\n\t\t\t\t\tconst valueY0 = tDI.get(vwy, 0)\r\n\t\t\t\t\tthis._setContext(bDI, vy, valueY, true);\r\n\r\n\t\t\t\t\tlet my = valueY0 + (valueY - valueY0) / 2;\r\n\r\n\t\t\t\t\tthis._setContext(rDI, vy, my, true);\r\n\t\t\t\t\tthis._setContext(lDI, vy, my, true);\r\n\t\t\t\t\tthis._setContext(bDI, vx, valueXReal);\r\n\r\n\t\t\t\t\tbDI.set(\"locationX\", locationXReal);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (corner == \"t\") {\r\n\t\t\t\t\tconst valueY0 = bDI.get(vwy, 0)\r\n\r\n\t\t\t\t\tthis._setContext(tDI, vy, valueY, true);\r\n\r\n\t\t\t\t\tlet my = valueY0 + (valueY - valueY0) / 2;\r\n\r\n\t\t\t\t\tthis._setContext(rDI, vy, my, true);\r\n\t\t\t\t\tthis._setContext(lDI, vy, my, true);\r\n\t\t\t\t\tthis._setContext(tDI, vx, valueXReal);\r\n\r\n\t\t\t\t\ttDI.set(\"locationX\", locationXReal);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (corner == \"l\") {\r\n\t\t\t\t\tconst valueX0 = rDI.get(vx, 0)\r\n\t\t\t\t\tconst positionX0 = xAxis.valueToPosition(valueX0);\r\n\t\t\t\t\tconst positionX = xAxis.valueToPosition(valueX);\r\n\r\n\t\t\t\t\tthis._setContext(lDI, vx, valueX);\r\n\t\t\t\t\tthis._setXLocation(lDI, valueX);\r\n\r\n\t\t\t\t\tlet mpos = positionX0 + (positionX - positionX0) / 2;\r\n\t\t\t\t\tlet mx = this._getXValue(xAxis.positionToValue(mpos));\r\n\t\t\t\t\tthis._setContext(tDI, vx, mx);\r\n\t\t\t\t\tthis._setContext(bDI, vx, mx);\r\n\r\n\t\t\t\t\tthis._setXLocation(tDI, mx);\r\n\t\t\t\t\tthis._setXLocation(bDI, mx);\r\n\r\n\t\t\t\t\tthis._setContext(lDI, vy, valueYReal, true);\r\n\t\t\t\t}\r\n\t\t\t\tif (corner == \"r\") {\r\n\t\t\t\t\tconst valueX0 = lDI.get(vx, 0)\r\n\t\t\t\t\tconst positionX0 = xAxis.valueToPosition(valueX0);\r\n\t\t\t\t\tconst positionX = xAxis.valueToPosition(valueX);\r\n\r\n\t\t\t\t\tthis._setContext(rDI, vx, valueX);\r\n\t\t\t\t\tthis._setXLocation(rDI, valueX);\r\n\r\n\t\t\t\t\tlet mpos = positionX0 + (positionX - positionX0) / 2;\r\n\t\t\t\t\tlet mx = this._getXValue(xAxis.positionToValue(mpos));\r\n\r\n\t\t\t\t\tthis._setContext(tDI, vx, mx);\r\n\t\t\t\t\tthis._setContext(bDI, vx, mx);\r\n\r\n\t\t\t\t\tthis._setXLocation(tDI, mx);\r\n\t\t\t\t\tthis._setXLocation(bDI, mx);\r\n\r\n\t\t\t\t\tthis._setContext(rDI, vy, valueYReal, true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._positionBullets(dataItem);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tsuper._handlePointerClick(event);\r\n\r\n\t\t\tif (!this._isDragging) {\r\n\t\t\t\tif (!this._isDrawing) {\r\n\t\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\t\t\tthis._hideResizer(event.target);\r\n\t\t\t\t\t\tthis.bulletsContainer.show();\r\n\t\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createElements(index: number, dataItem?: DataItem<IDrawingSeriesDataItem>) {\r\n\t\tif (!this._ellipses[index]) {\r\n\t\t\tconst ellipse = this.makeEllipse();\r\n\t\t\tellipse._setDataItem(dataItem);\r\n\t\t\tthis._ellipses[index] = ellipse;\r\n\t\t\tellipse.setAll({ userData: index });\r\n\t\t\t(dataItem?.dataContext as any).sprite = ellipse;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\t\tif (this._isDrawing) {\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (movePoint) {\r\n\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\t\tconst index = this._index;\r\n\t\t\t\tconst dataItems = this._di[index];\r\n\r\n\t\t\t\tif (dataItems) {\r\n\t\t\t\t\tconst diT = this._di[index][\"t\"];\r\n\t\t\t\t\tconst diB = this._di[index][\"b\"];\r\n\t\t\t\t\tconst diL = this._di[index][\"l\"];\r\n\t\t\t\t\tconst diR = this._di[index][\"r\"];\r\n\r\n\t\t\t\t\tconst valueY0 = this._clickVY;\r\n\r\n\t\t\t\t\tconst positionX = xAxis.coordinateToPosition(movePoint.x);\r\n\t\t\t\t\tconst positionX0 = this._clickPX;\r\n\r\n\t\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\t\tif (diB && diL && diR && diT) {\r\n\t\t\t\t\t\tthis._setContext(diB, \"valueY\", valueY, true);\r\n\r\n\t\t\t\t\t\tconst my = valueY0 + (valueY - valueY0) / 2;\r\n\t\t\t\t\t\tconst mx = this._getXValue(xAxis.positionToValue(positionX0 + (positionX - positionX0) / 2))\r\n\r\n\t\t\t\t\t\tthis._setContext(diR, \"valueY\", my, true);\r\n\t\t\t\t\t\tthis._setContext(diL, \"valueY\", my, true);\r\n\r\n\t\t\t\t\t\tthis._setContext(diB, \"valueX\", mx);\r\n\t\t\t\t\t\tthis._setContext(diT, \"valueX\", mx);\r\n\r\n\t\t\t\t\t\tthis._setXLocation(diB, mx);\r\n\t\t\t\t\t\tthis._setXLocation(diT, mx);\r\n\r\n\t\t\t\t\t\tthis._setContext(diR, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setXLocation(diR, valueX);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addPoints(event: ISpritePointerEvent, index: number) {\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tthis.data.push({ settings: this._getEllipseTemplate(), stroke: this._getStrokeTemplate(), index: index, corner: \"e\", drawingId: this._drawingId });\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\t\t\tthis._clickPX = xAxis.coordinateToPosition(point.x);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(this._clickPX));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueX);\r\n\r\n\t\t\tthis._clickVY = valueY;\r\n\r\n\t\t\tthis._di[index] = {};\r\n\r\n\t\t\tthis._addPoint(valueX, valueY, \"l\", index);\r\n\t\t\tthis._addPoint(valueX, valueY, \"t\", index);\r\n\t\t\tthis._addPoint(valueX, valueY, \"b\", index);\r\n\t\t\tthis._addPoint(valueX, valueY, \"r\", index);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addPoint(valueX: number, valueY: number, corner: string, index: number) {\r\n\t\tthis.data.push({ valueY: valueY, valueX: valueX, index: index, corner: corner, drawingId: this._drawingId });\r\n\t\tconst len = this.dataItems.length;\r\n\t\tconst dataItem = this.dataItems[len - 1];\r\n\t\tif (dataItem) {\r\n\t\t\tthis._setXLocation(dataItem, valueX);\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tlet index = 0;\r\n\t\t$array.each(this._di, (dataItems) => {\r\n\t\t\tif (dataItems) {\r\n\t\t\t\tconst diT = dataItems[\"t\"];\r\n\t\t\t\tconst diB = dataItems[\"b\"];\r\n\t\t\t\tconst diL = dataItems[\"l\"];\r\n\t\t\t\tconst diR = dataItems[\"r\"];\r\n\t\t\t\tif (diT && diB && diL && diR) {\r\n\t\t\t\t\tconst pt = diT.get(\"point\");\r\n\t\t\t\t\tconst pb = diB.get(\"point\");\r\n\t\t\t\t\tconst pr = diR.get(\"point\");\r\n\t\t\t\t\tconst pl = diL.get(\"point\");\r\n\r\n\t\t\t\t\tif (pt && pb && pr && pl) {\r\n\t\t\t\t\t\tconst rx = (pr.x - pl.x) / 2;\r\n\t\t\t\t\t\tconst ry = (pb.y - pt.y) / 2;\r\n\t\t\t\t\t\tconst x = pl.x + rx;\r\n\t\t\t\t\t\tconst y = pt.y + ry;\r\n\t\t\t\t\t\tconst ellipse = this._ellipses[index];\r\n\t\t\t\t\t\tif (ellipse) {\r\n\t\t\t\t\t\t\tellipse.setAll({ x: x, y: y, radiusX: rx, radiusY: ry });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tindex++;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst ellipse = this._ellipses[index];\r\n\t\t\tif (ellipse) {\r\n\t\t\t\tdelete (this._ellipses[index]);\r\n\t\t\t\tthis.ellipses.removeValue(ellipse);\r\n\t\t\t\tellipse.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getEllipseTemplate(): Template<any> {\r\n\t\tconst template = this._getStrokeTemplate();\r\n\r\n\t\tconst fillColor = this.get(\"fillColor\");\r\n\t\tif (fillColor != null) {\r\n\t\t\ttemplate.set(\"fill\", fillColor);\r\n\t\t}\r\n\r\n\t\tconst fillOpacity = this.get(\"fillOpacity\");\r\n\t\tif (fillOpacity != null) {\r\n\t\t\ttemplate.set(\"fillOpacity\", fillOpacity);\r\n\t\t}\r\n\r\n\t\treturn template;\r\n\t}\r\n\r\n\tpublic setInteractive(value: boolean) {\r\n\t\tsuper.setInteractive(value);\r\n\t\tthis.ellipses.template.set(\"forceInactive\", !value);\r\n\t}\r\n\r\n\tpublic enableDrawingSelection(value: boolean) {\r\n\t\tsuper.enableDrawingSelection(value);\r\n\t\tthis.ellipses.template.set(\"forceInactive\", !value);\r\n\t}\r\n}\r\n","import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface ITrendLineSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface ITrendLineSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface ITrendLineSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class TrendLineSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"TrendLineSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([TrendLineSeries.className]);\r\n\r\n\tdeclare public _settings: ITrendLineSeriesSettings;\r\n\tdeclare public _privateSettings: ITrendLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ITrendLineSeriesDataItem;\r\n\r\n\tprotected _tag = \"trendline\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.setPrivate(\"allowChangeSnap\", false);\r\n\t\tthis.set(\"snapToData\", true);\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\t\tif (series && diP1 && diP2) {\r\n\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\tconst di1 = xAxis.getSeriesItem(series, Math.max(0, xAxis.valueToPosition(x1)));\r\n\t\t\tconst di2 = xAxis.getSeriesItem(series, Math.min(1, xAxis.valueToPosition(x2)));\r\n\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tif (di1 && di2) {\r\n\t\t\t\tlet y1 = di1.get(field as any);\r\n\t\t\t\tlet y2 = di2.get(field as any);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", y1, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", y2, true);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", x1);\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", x2);\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t\tthis._positionBullets(diP2);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IQuadrantLineSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IQuadrantLineSeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IQuadrantLineSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class QuadrantLineSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"QuadrantLineSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([QuadrantLineSeries.className]);\r\n\r\n\tdeclare public _settings: IQuadrantLineSeriesSettings;\r\n\tdeclare public _privateSettings: IQuadrantLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IQuadrantLineSeriesDataItem;\r\n\r\n\tprotected _tag = \"quadrant\";\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.strokes.template.set(\"visible\", false);\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\r\n\t\tif (series && diP1 && diP2) {\r\n\t\t\tlet x1 = this._getXValue(diP1.get(\"valueX\" as any));\r\n\t\t\tlet x2 = this._getXValue(diP2.get(\"valueX\" as any));\r\n\r\n\t\t\tconst field = this.get(\"field\") + \"Y\";\r\n\r\n\t\t\tlet y1 = this._getYValue(diP1.get(field as any), x1, true);\r\n\t\t\tlet y2 = this._getYValue(diP2.get(field as any), x2, true);\r\n\r\n\t\t\tthis._setContext(diP1, \"valueY\", y1, true);\r\n\t\t\tthis._setContext(diP2, \"valueY\", y2, true);\r\n\r\n\t\t\tthis._positionBullets(diP1);\r\n\t\t\tthis._positionBullets(diP2);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tconst chart = this.chart;\r\n\t\tthis.fills.clear();\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\t\t\t\t\tconst di = this._di[i][\"e\"];\r\n\t\t\t\t\tconst dataContext = di.dataContext as any;\r\n\r\n\t\t\t\t\tconst fill1 = this.makeFill(this.fills);\r\n\t\t\t\t\tconst fill2 = this.makeFill(this.fills);\r\n\r\n\t\t\t\t\tconst index = this.dataItems.indexOf(diP1);\r\n\t\t\t\t\tfor (let j = index; j >= 0; j--) {\r\n\t\t\t\t\t\tconst dataContext = this.dataItems[j].dataContext as any;\r\n\t\t\t\t\t\tconst template = dataContext.fill;\r\n\t\t\t\t\t\tif (template) {\r\n\t\t\t\t\t\t\tfill1.template = template;\r\n\t\t\t\t\t\t\tfill2.template = template;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst userData = [this.dataItems.indexOf(diP1), this.dataItems.indexOf(diP2)];\r\n\r\n\t\t\t\t\tlet fillColor = this.get(\"fillColor\", this.get(\"fill\"));\r\n\r\n\t\t\t\t\tconst fillTemplate = dataContext.fill;\r\n\r\n\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\tfillColor = fillTemplate.get(\"fill\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst settings = { userData: userData, fill: fillColor };\r\n\t\t\t\t\tfill1.setAll(settings);\r\n\t\t\t\t\tfill2.setAll(settings);\r\n\t\t\t\t\tfill2.set(\"forceInactive\", true);\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\tconst dy = (p2.y - p1.y) / 4;\r\n\t\t\t\t\t\tconst m1y = p1.y + dy;\r\n\t\t\t\t\t\tconst m2y = p1.y + dy * 2;\r\n\t\t\t\t\t\tconst m3y = p1.y + dy * 3;\r\n\r\n\t\t\t\t\t\tline.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, m1y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, m1y);\r\n\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, m2y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, m2y);\r\n\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, m3y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, m3y);\r\n\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tfill1.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, p1.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p1.y);\r\n\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p2.y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\tfill2.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\tdisplay.moveTo(p1.x, m1y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, m1y);\r\n\r\n\t\t\t\t\t\t\tdisplay.lineTo(p2.x, m3y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, m3y);\r\n\t\t\t\t\t\t\tdisplay.lineTo(p1.x, m1y);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n}","import type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport type { Sprite } from \"../../../core/render/Sprite\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\nimport { Label } from \"../../../core/render/Label\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IFibonacciSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IFibonacciSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Sequence.\r\n\t */\r\n\tsequence?: Array<number>;\r\n\r\n\t/**\r\n\t * Array of colors to use for bands.\r\n\t */\r\n\tcolors?: Array<Color>\r\n\r\n}\r\n\r\nexport interface IFibonacciSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class FibonacciSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"FibonacciSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([FibonacciSeries.className]);\r\n\r\n\tdeclare public _settings: IFibonacciSeriesSettings;\r\n\tdeclare public _privateSettings: IFibonacciSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IFibonacciSeriesDataItem;\r\n\r\n\tprotected _tag = \"fibonacci\";\r\n\tprotected _labels: Array<Array<Label>> = [];\r\n\tprotected _fills: Array<Array<Graphics>> = [];\r\n\tprotected _strokes: Array<Array<Graphics>> = [];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLabel(): Label {\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.bulletsContainer.children.push(label);\r\n\t\tthis.labels.push(label);\r\n\t\treturn label;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of labels.\r\n\t *\r\n\t * `labels.template` can be used to configure axis labels.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t));\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\t\tthis._updateChildrenReal();\r\n\t}\r\n\r\n\tprotected _getIndex(sprite: Sprite): number {\r\n\t\treturn sprite.get(\"userData\");\r\n\t}\r\n\r\n\tprotected _updateChildrenReal() {\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\r\n\t\t\t\t\tif (diP1 && diP2) {\r\n\r\n\t\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\t\t\t\t\t\t\tlet prevValue = 0;\r\n\r\n\t\t\t\t\t\t\tconst labels = this._labels[i];\r\n\t\t\t\t\t\t\tconst strokes = this._strokes[i];\r\n\t\t\t\t\t\t\tconst fills = this._fills[i];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\t\t\t\t\tconst value = sequence[i] - 1;\r\n\r\n\t\t\t\t\t\t\t\tconst label = labels[i];\r\n\r\n\t\t\t\t\t\t\t\tconst fill = fills[i];\r\n\t\t\t\t\t\t\t\tconst stroke = strokes[i];\r\n\r\n\t\t\t\t\t\t\t\tlet fillColor = this.get(\"colors\", [])[i];\r\n\t\t\t\t\t\t\t\tlet strokeColor = fillColor;\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"fill\", fillColor);\r\n\t\t\t\t\t\t\t\tfill.set(\"fillOpacity\", this.get(\"fillOpacity\", 0));\r\n\t\t\t\t\t\t\t\tstroke.set(\"stroke\", strokeColor);\r\n\t\t\t\t\t\t\t\tstroke.set(\"strokeOpacity\", this.get(\"strokeOpacity\", 0));\r\n\r\n\t\t\t\t\t\t\t\tconst y1 = p1.y + (p2.y - p1.y) * prevValue;\r\n\t\t\t\t\t\t\t\tconst y2 = p1.y + (p2.y - p1.y) * -value;\r\n\r\n\t\t\t\t\t\t\t\tconst realValue = yAxis.positionToValue(yAxis.coordinateToPosition(y2));\r\n\r\n\t\t\t\t\t\t\t\tfill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y1);\r\n\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(p1.x, y1);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tstroke.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(p1.x, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(p2.x, y2);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tconst dataItem = label.dataItem;\r\n\t\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t\tdataItem.set(\"value\" as any, realValue);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlabel.setAll({ x: p2.x, y: y2, fill: fillColor });\r\n\t\t\t\t\t\t\t\tlabel.text.markDirtyText();\r\n\r\n\t\t\t\t\t\t\t\tprevValue = -value;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _createElements(index: number) {\r\n\t\tsuper._createElements(index);\r\n\r\n\t\tif (!this._fills[index]) {\r\n\r\n\t\t\tconst labelArr = [];\r\n\t\t\tconst fillsArr = [];\r\n\t\t\tconst strokesArr = [];\r\n\r\n\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\r\n\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\tconst label = this.makeLabel();\r\n\t\t\t\tconst dataItem = this.makeDataItem({});\r\n\t\t\t\tdataItem.set(\"sequence\" as any, sequence[i]);\r\n\t\t\t\tlabel._setDataItem(dataItem);\r\n\t\t\t\tlabelArr.push(label);\r\n\r\n\t\t\t\tconst fill = this.makeFill(this.fills);\r\n\t\t\t\tfillsArr.push(fill);\r\n\t\t\t\tfill.set(\"userData\", index);\r\n\t\t\t\tfill.states.remove(\"hover\");\r\n\r\n\t\t\t\tconst stroke = this.makeStroke(this.strokes);\r\n\t\t\t\tstroke.set(\"userData\", index);\r\n\t\t\t\tstrokesArr.push(stroke);\r\n\t\t\t}\r\n\r\n\t\t\tthis._labels[index] = labelArr;\r\n\t\t\tthis._fills[index] = fillsArr;\r\n\t\t\tthis._strokes[index] = strokesArr;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _drawFill() {\r\n\r\n\t}\r\n\r\n\tprotected _drawStroke() {\r\n\r\n\t}\r\n\r\n\tprotected _updateLine() {\r\n\r\n\t}\r\n\r\n\tprotected _clearGraphics() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\tpublic enableDrawing() {\r\n\t\tsuper.enableDrawing();\r\n\t\tthis.showAllBullets();\r\n\t}\r\n\r\n\tpublic enableErasing() {\r\n\t\tsuper.enableErasing();\r\n\t\tthis.showAllBullets();\r\n\t}\r\n\r\n\tprotected _hideAllBullets() {\r\n\t\tif (this._drawingEnabled || this._erasingEnabled) {\r\n\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsuper._hideAllBullets();\r\n\t\t}\r\n\t}*/\r\n\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst labels = this._labels[index];\r\n\t\t\tconst fills = this._fills[index];\r\n\t\t\tconst strokes = this._strokes[index];\r\n\r\n\t\t\tif (labels) {\r\n\t\t\t\t$array.each(labels, (item) => {\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t\tthis.labels.removeValue(item);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tdelete (this._labels[index]);\r\n\t\t\t}\r\n\t\t\tif (fills) {\r\n\t\t\t\t$array.each(fills, (item) => {\r\n\t\t\t\t\tthis.fills.removeValue(item);\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t})\r\n\t\t\t\tdelete (this._fills[index]);\r\n\t\t\t}\r\n\t\t\tif (strokes) {\r\n\t\t\t\t$array.each(strokes, (item) => {\r\n\t\t\t\t\tthis.strokes.removeValue(item);\r\n\t\t\t\t\titem.dispose();\r\n\t\t\t\t})\r\n\t\t\t\tdelete (this._strokes[index]);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","import { FibonacciSeries, IFibonacciSeriesSettings, IFibonacciSeriesPrivate, IFibonacciSeriesDataItem } from \"./FibonacciSeries\";\r\nimport { color } from \"../../../core/util/Color\";\r\n\r\nexport interface IFibonacciTimezoneSeriesDataItem extends IFibonacciSeriesDataItem {\r\n}\r\n\r\nexport interface IFibonacciTimezoneSeriesSettings extends IFibonacciSeriesSettings {\r\n}\r\n\r\nexport interface IFibonacciTimezoneSeriesPrivate extends IFibonacciSeriesPrivate {\r\n}\r\n\r\nexport class FibonacciTimezoneSeries extends FibonacciSeries {\r\n\tpublic static className: string = \"FibonacciTimezoneSeries\";\r\n\tpublic static classNames: Array<string> = FibonacciSeries.classNames.concat([FibonacciTimezoneSeries.className]);\r\n\r\n\tdeclare public _settings: IFibonacciTimezoneSeriesSettings;\r\n\tdeclare public _privateSettings: IFibonacciTimezoneSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IFibonacciTimezoneSeriesDataItem;\r\n\r\n\tprotected _tag = \"fibonaccitimezone\";\r\n\r\n\tprotected _updateSegmentReal(index: number) {\r\n\t\tconst dataItems = this._di[index];\r\n\r\n\t\tif (dataItems) {\r\n\t\t\tconst diP1 = dataItems[\"p1\"];\r\n\t\t\tconst diP2 = dataItems[\"p2\"];\r\n\t\t\tif (diP1 && diP2) {\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", diP1.get(\"valueY\", 0), true);\r\n\t\t\t\tdiP1.setRaw(\"locationX\", 0);\r\n\t\t\t\tdiP2.setRaw(\"locationX\", 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tsuper._updateSegment(index);\r\n\t\tthis._updateSegmentReal(index);\r\n\t}\r\n\r\n\tpublic _updateChildrenReal() {\r\n\t\tconst chart = this.chart;\r\n\r\n\t\tif (chart) {\r\n\t\t\tfor (let i = 0; i < this._lines.length; i++) {\r\n\t\t\t\tconst line = this._lines[i];\r\n\t\t\t\tif (line) {\r\n\t\t\t\t\tconst diP1 = this._di[i][\"p1\"];\r\n\t\t\t\t\tconst diP2 = this._di[i][\"p2\"];\r\n\t\t\t\t\tconst di = this._di[i][\"e\"];\r\n\r\n\t\t\t\t\tconst p1 = diP1.get(\"point\");\r\n\t\t\t\t\tconst p2 = diP2.get(\"point\");\r\n\r\n\t\t\t\t\tconst open1 = diP1[\"open\"];\r\n\t\t\t\t\tconst open2 = diP2[\"open\"];\r\n\r\n\t\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\t\tif (open1 && open2 && di) {\r\n\t\t\t\t\t\tconst valueX1 = open1[\"valueX\"]\r\n\t\t\t\t\t\tconst valueX2 = open2[\"valueX\"]\r\n\t\t\t\t\t\tconst diff = valueX2 - valueX1;\r\n\r\n\t\t\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t\t\tconst dataContext = di.dataContext as any;\r\n\r\n\t\t\t\t\t\t\tconst sequence = this.get(\"sequence\", []);\r\n\t\t\t\t\t\t\tconst labels = this._labels[i];\r\n\t\t\t\t\t\t\tconst fills = this._fills[i];\r\n\t\t\t\t\t\t\tconst strokes = this._strokes[i];\r\n\r\n\t\t\t\t\t\t\tfor (let i = 0; i < sequence.length; i++) {\r\n\t\t\t\t\t\t\t\tconst value = sequence[i];\r\n\t\t\t\t\t\t\t\tconst label = labels[i];\r\n\t\t\t\t\t\t\t\tconst fill = fills[i];\r\n\t\t\t\t\t\t\t\tconst stroke = strokes[i];\r\n\r\n\t\t\t\t\t\t\t\tthis.mainContainer.children.moveValue(fill, 0);\r\n\r\n\t\t\t\t\t\t\t\tconst endValue = valueX1 + diff * value;\r\n\t\t\t\t\t\t\t\tconst x1 = p1.x;\r\n\t\t\t\t\t\t\t\tconst x2 = xAxis.get(\"renderer\").positionToCoordinate(xAxis.valueToPosition(endValue));\r\n\r\n\t\t\t\t\t\t\t\tconst y1 = 0;\r\n\t\t\t\t\t\t\t\tconst y2 = chart.plotContainer.height();\r\n\r\n\t\t\t\t\t\t\t\tfill.setPrivate(\"visible\", true);\r\n\t\t\t\t\t\t\t\tstroke.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\t\t\t\t\tconst fillTemplate = dataContext.fill;\r\n\t\t\t\t\t\t\t\tlet fillColor = this.get(\"colors\", [])[i];\r\n\t\t\t\t\t\t\t\tlet strokeColor = fillColor;\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"fillOpacity\", this.get(\"fillOpacity\", 0) * 0.2);\r\n\t\t\t\t\t\t\t\tstroke.set(\"strokeOpacity\", this.get(\"strokeOpacity\", 0));\r\n\r\n\t\t\t\t\t\t\t\tif (!fillColor) {\r\n\r\n\t\t\t\t\t\t\t\t\tif (fillTemplate) {\r\n\t\t\t\t\t\t\t\t\t\tfillColor = fillTemplate.get(\"fill\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (!fillColor) {\r\n\t\t\t\t\t\t\t\t\t\tfillColor = this.get(\"fillColor\", this.get(\"fill\", color(0x000000)));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tif (!strokeColor) {\r\n\t\t\t\t\t\t\t\t\tconst strokeTemplate = dataContext.stroke;\r\n\t\t\t\t\t\t\t\t\tif (strokeTemplate) {\r\n\t\t\t\t\t\t\t\t\t\tstrokeColor = strokeTemplate.get(\"stroke\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!strokeColor) {\r\n\t\t\t\t\t\t\t\t\t\tstrokeColor = this.get(\"strokeColor\", this.get(\"stroke\", color(0x000000)));\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"fill\", fillColor);\r\n\t\t\t\t\t\t\t\tstroke.set(\"stroke\", strokeColor);\r\n\r\n\r\n\t\t\t\t\t\t\t\tfill.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(x1, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x1, y2);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x1, y1);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tstroke.set(\"draw\", (display) => {\r\n\t\t\t\t\t\t\t\t\tdisplay.moveTo(x2, y1);\r\n\t\t\t\t\t\t\t\t\tdisplay.lineTo(x2, y2);\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\tconst dataItem = label.dataItem;\r\n\t\t\t\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\t\t\t\tdataItem.set(\"value\" as any, value);\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tlabel.setAll({ x: x2, y: y2, dy: -20 });\r\n\t\t\t\t\t\t\t\tlabel.text.markDirtyText();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IHorizontalRaySeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IHorizontalRaySeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IHorizontalRaySeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class HorizontalRaySeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"HorizontalRaySeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([HorizontalRaySeries.className]);\r\n\r\n\tdeclare public _settings: IHorizontalRaySeriesSettings;\r\n\tdeclare public _privateSettings: IHorizontalRaySeriesPrivate;\r\n\tdeclare public _dataItemSettings: IHorizontalRaySeriesDataItem;\r\n\r\n\tprotected _tag = \"ray\";\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\t}\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tsuper._handleBulletDragged(event);\r\n\r\n\t\tconst dataItem = event.target.dataItem as DataItem<IHorizontalRaySeriesDataItem>;\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (diP1 && diP2 && movePoint) {\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", valueY, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", valueX);\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", max + (max - min) * 100);\r\n\r\n\t\t\t\tthis._setXLocation(diP1, diP1.get(\"valueX\", 0));\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerMoveReal() {\r\n\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tif (this._di[index]) {\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tif (diP2) {\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", max + (max - min) * 100, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tif (!this._isDragging) {\r\n\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\tthis._hideResizer();\r\n\r\n\t\t\t\t\tthis._updateSegment(this._index);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","import type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { Line } from \"../../../core/render/Line\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\nimport type { StockPanel } from \"../StockPanel\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\n\r\nimport { RectangleSeries, IRectangleSeriesSettings, IRectangleSeriesPrivate, IRectangleSeriesDataItem } from \"./RectangleSeries\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Label } from \"../../../core/render/Label\";\r\nimport { DataItem } from \"../../../core/render/Component\";\r\nimport { RoundedRectangle } from \"../../../core/render/RoundedRectangle\";\r\n\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IMeasureDataItem extends IRectangleSeriesDataItem {\r\n}\r\n\r\nexport interface IMeasureSettings extends IRectangleSeriesSettings {\r\n\tlabelText?: string;\r\n\tlabelVolumeText?: string;\r\n}\r\n\r\nexport interface IMeasurePrivate extends IRectangleSeriesPrivate {\r\n}\r\n\r\nexport class Measure extends RectangleSeries {\r\n\tpublic static className: string = \"Measure\";\r\n\tpublic static classNames: Array<string> = RectangleSeries.classNames.concat([Measure.className]);\r\n\r\n\tdeclare public _settings: IMeasureSettings;\r\n\tdeclare public _privateSettings: IMeasurePrivate;\r\n\tdeclare public _dataItemSettings: IMeasureDataItem;\r\n\r\n\tprotected _lines: Array<Line> = [];\r\n\tprotected _labels: Array<Label> = [];\r\n\r\n\tprotected _tag = \"measure\";\r\n\r\n\tpublic _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.set(\"snapToData\", true);\r\n\t\tthis.strokes.template.set(\"templateField\", undefined);\r\n\t\tthis.fills.template.set(\"templateField\", undefined);\r\n\t}\r\n\r\n\t/**\r\n\t * A list of labels.\r\n\t *\r\n\t * `labels.template` can be used to configure axis labels.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t));\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLabel(): Label {\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.bulletsContainer.children.push(label);\r\n\t\tlabel.setAll({\r\n\t\t\tpopulateText: true,\r\n\t\t\tbackground: RoundedRectangle.new(this._root, { themeTags: [\"background\"] })\r\n\t\t});\r\n\t\tlabel._setDataItem(new DataItem(this, {}, {}));\r\n\t\tthis.labels.push(label);\r\n\t\treturn label;\r\n\t}\r\n\r\n\tprotected _createElements(index: number) {\r\n\t\tsuper._createElements(index);\r\n\t\tif (!this._labels[index]) {\r\n\t\t\tconst label = this.makeLabel();\r\n\t\t\tthis._labels[index] = label;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _disposeIndex(index: number) {\r\n\t\tsuper._disposeIndex(index);\r\n\t\tconst label = this._labels[index];\r\n\t\tif (label) {\r\n\t\t\tlabel.dispose();\r\n\t\t\tdelete (this._labels[index]);\r\n\t\t}\r\n\r\n\t\tconst line = this._lines[index];\r\n\t\tif (line) {\r\n\t\t\tline.dispose();\r\n\t\t\tdelete (this._lines[index]);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateOthers(index: number, fillGraphics: Graphics, p1: IPoint, p2: IPoint) {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tconst panel = xAxis.chart as StockPanel;\r\n\t\tconst line = this._lines[index];\r\n\r\n\t\tlet positiveColor = this._root.interfaceColors.get(\"positive\");\r\n\t\tlet negativeColor = this._root.interfaceColors.get(\"negative\");\r\n\r\n\t\tconst stockChart = panel.getPrivate(\"stockChart\");\r\n\r\n\t\tlet volumeSeries: XYSeries | undefined;\r\n\r\n\t\tif (stockChart) {\r\n\t\t\tpositiveColor = stockChart.get(\"stockPositiveColor\", positiveColor);\r\n\t\t\tnegativeColor = stockChart.get(\"stockNegativeColor\", negativeColor);\r\n\t\t\tvolumeSeries = stockChart.get(\"volumeSeries\");\r\n\t\t}\r\n\r\n\t\tlet ix = 1;\r\n\t\tif (p1.x > p2.x) {\r\n\t\t\tix = -1;\r\n\t\t}\r\n\r\n\t\tconst label = this._labels[index];\r\n\t\tconst labelBg = label.get(\"background\")!;\r\n\r\n\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\tconst diP2 = this._di[index][\"p2\"];\r\n\t\tlet color = positiveColor;\r\n\t\tlet iy = 1;\r\n\t\tif (p1.y > p2.y) {\r\n\t\t\tiy = -1;\r\n\t\t\tcolor = negativeColor;\r\n\t\t}\r\n\r\n\t\tfillGraphics.set(\"fill\", color);\r\n\t\tfillGraphics.set(\"fillOpacity\", 0.2);\r\n\t\tline.set(\"stroke\", color);\r\n\t\tlabelBg.set(\"fill\", color);\r\n\r\n\t\tthis.outerCircles.each((outerCircle) => {\r\n\t\t\touterCircle.set(\"stroke\", color);\r\n\t\t})\r\n\r\n\t\tconst mx = p1.x + (p2.x - p1.x) / 2;\r\n\t\tconst my = p1.y + (p2.y - p1.y) / 2;\r\n\r\n\t\tline.set(\"segments\", [[[{ x: mx, y: p1.y }, { x: mx, y: p2.y }]], [[{ x: mx - 5, y: p2.y - 5 * iy }, { x: mx, y: p2.y }, { x: mx + 5, y: p2.y - 5 * iy }]], [[{ x: p1.x, y: my }, { x: p2.x, y: my }]], [[{ x: p2.x - 5 * ix, y: my - 5 }, { x: p2.x, y: my }, { x: p2.x - 5 * ix, y: my + 5 }]]]);\r\n\r\n\t\tconst value1 = diP1.get(\"valueY\", 0);\r\n\t\tconst value2 = diP2.get(\"valueY\", 0);\r\n\r\n\t\tconst numberFormatter = this.getNumberFormatter();\r\n\t\tconst value = numberFormatter.format((value2 - value1));\r\n\t\tconst percent = numberFormatter.format((value2 - value1) / value1 * 100) + \"%\";\r\n\t\tconst baseInterval = xAxis.getPrivate(\"baseInterval\");\r\n\r\n\t\tconst time1 = diP1.get(\"valueX\", 0);\r\n\t\tconst time2 = diP2.get(\"valueX\", 0);\r\n\r\n\t\tconst series = this.get(\"series\");\r\n\r\n\t\tlet count = 0;\r\n\t\tif (series) {\r\n\t\t\tconst di1 = xAxis.getSeriesItem(series, xAxis.valueToPosition(time1));\r\n\t\t\tconst di2 = xAxis.getSeriesItem(series, xAxis.valueToPosition(time2));\r\n\t\t\tif (di1 && di2) {\r\n\t\t\t\tcount = series.dataItems.indexOf(di2) - series.dataItems.indexOf(di1) + 1;\r\n\r\n\t\t\t\tif (this.get(\"snapToData\")) {\r\n\t\t\t\t\tcount--;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tlet intervalCount = Math.ceil((time2 - time1) / xAxis.baseDuration() * baseInterval.count);\r\n\t\tif (intervalCount < count) {\r\n\t\t\tintervalCount = count;\r\n\t\t}\r\n\r\n\r\n\t\tlet volume = 0;\r\n\t\tif (volumeSeries) {\r\n\t\t\tconst div1 = xAxis.getSeriesItem(volumeSeries, xAxis.valueToPosition(time1));\r\n\t\t\tconst div2 = xAxis.getSeriesItem(volumeSeries, xAxis.valueToPosition(time2));\r\n\r\n\t\t\tif (div1 && div2) {\r\n\t\t\t\tconst dataItems = volumeSeries.dataItems;\r\n\t\t\t\tlet i1 = dataItems.indexOf(div1);\r\n\t\t\t\tlet i2 = dataItems.indexOf(div2);\r\n\r\n\t\t\t\tif (i1 > i2) {\r\n\t\t\t\t\t[i1, i2] = [i2, i1];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let i = i1; i < i2; i++) {\r\n\t\t\t\t\tconst dataItem = dataItems[i];\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst value = dataItem.get(\"valueY\");\r\n\t\t\t\t\t\tif ($type.isNumber(value)) {\r\n\t\t\t\t\t\t\tvolume += value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tlet text = this.get(\"labelText\", \"\");\r\n\t\tif (volume > 0) {\r\n\t\t\ttext += this.get(\"labelVolumeText\");\r\n\t\t}\r\n\r\n\t\tconst unitNames = {\r\n\t\t\tmillisecond: \"ms\",\r\n\t\t\tsecond: \"s\",\r\n\t\t\tminute: \"m\",\r\n\t\t\thour: \"h\",\r\n\t\t\tday: \"d\",\r\n\t\t\tweek: \"wk\",\r\n\t\t\tmonth: \"mo\",\r\n\t\t\tyear: \"y\"\r\n\t\t}\r\n\r\n\t\tlabel.dataItem!.dataContext = {\r\n\t\t\tvalue: value,\r\n\t\t\tpercent: percent,\r\n\t\t\tcount: count,\r\n\t\t\tintervalCount: intervalCount,\r\n\t\t\tintervalUnit: this._root.language.translateAny(unitNames[baseInterval.timeUnit]),\r\n\t\t\tvolume: volume\r\n\t\t};\r\n\r\n\t\tlabel.setAll({\r\n\t\t\ttext: text,\r\n\t\t\tx: mx,\r\n\t\t\ty: my\r\n\t\t});\r\n\r\n\t\tlabel.text.markDirtyText();\r\n\t}\r\n\r\n}\r\n","import type { IDisposer } from \"../../../core/util/Disposer\";\r\nimport type { StockChart } from \"../StockChart\";\r\nimport type { StockControl } from \"./StockControl\";\r\n\r\nimport { Entity, IEntitySettings, IEntityPrivate, IEntityEvents } from \"../../../core/util/Entity\"\r\nimport StockToolbarCSS from \"./StockToolbarCSS\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n//import * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IStockToolbarSettings extends IEntitySettings {\r\n\r\n\t/**\r\n\t * A [[StockChart]] the toolbar is for.\r\n\t */\r\n\tstockChart: StockChart;\r\n\r\n\t/**\r\n\t * A reference to an element in the document to place tools in.\r\n\t */\r\n\tcontainer: HTMLElement;\r\n\r\n\t/**\r\n\t * A list of tools to show in toolbar.\r\n\t */\r\n\tcontrols?: StockControl[];\r\n\r\n\t/**\r\n\t * If set to `false` the toolbar will not load default CSS.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tuseDefaultCSS?: boolean;\r\n\r\n\t/**\r\n\t * Menu will disable all interactions for the underlying chart when using\r\n\t * tools.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tdeactivateRoot?: boolean;\r\n\r\n\t/**\r\n\t * Setting this to `true` will essentially enable accessibility for the\r\n\t * toolbar items.\r\n\t *\r\n\t * E.g. buttons will be focusable using TAB key. Lists navigable using arrow\r\n\t * keys, etc.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tfocusable?: boolean;\r\n\r\n}\r\n\r\nexport interface IStockToolbarPrivate extends IEntityPrivate {\r\n}\r\n\r\nexport interface IStockToolbarEvents extends IEntityEvents {\r\n\tcreated: {}\r\n}\r\n\r\n/**\r\n * Builds a toolbar for [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/} for more info\r\n */\r\nexport class StockToolbar extends Entity {\r\n\tpublic static className: string = \"StockToolbar\";\r\n\tpublic static classNames: Array<string> = Entity.classNames.concat([StockToolbar.className]);\r\n\r\n\tdeclare public _settings: IStockToolbarSettings;\r\n\tdeclare public _privateSettings: IStockToolbarPrivate;\r\n\tdeclare public _events: IStockToolbarEvents;\r\n\r\n\tprivate _cssDisposer?: IDisposer;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Inherit default themes from chart\r\n\t\tthis._defaultThemes = this.get(\"stockChart\")._defaultThemes;\r\n\t\tsuper._afterNewApplyThemes();\r\n\r\n\t\tthis._initControls();\r\n\t\tthis.loadDefaultCSS();\r\n\r\n\t\tthis._root.addDisposer(this);\r\n\r\n\t\tthis.events.dispatch(\"created\", {\r\n\t\t\ttype: \"created\",\r\n\t\t\ttarget: this\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"container\")) {\r\n\t\t\t// TODO\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"useDefaultCSS\")) {\r\n\t\t\tif (this.get(\"useDefaultCSS\")) {\r\n\t\t\t\tthis.loadDefaultCSS();\r\n\t\t\t}\r\n\t\t\telse if (this._cssDisposer) {\r\n\t\t\t\tthis._cssDisposer.dispose();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"controls\")) {\r\n\t\t\tthis._initControls();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\r\n\t\tif (this._cssDisposer) {\r\n\t\t\tthis._cssDisposer.dispose();\r\n\t\t}\r\n\r\n\t\tconst controls = this.get(\"controls\", []);\r\n\t\t$array.each(controls, (control, _index) => {\r\n\t\t\tcontrol.dispose();\r\n\t\t});\r\n\t}\r\n\r\n\tprivate _initControls(): void {\r\n\t\tconst controls = this.get(\"controls\", []);\r\n\t\t$array.each(controls, (control, _index) => {\r\n\t\t\tif (!control.getPrivate(\"toolbar\")) {\r\n\t\t\t\t// @todo insert at specific index\r\n\t\t\t\tcontrol.setPrivate(\"toolbar\", this);\r\n\t\t\t\tthis.get(\"container\")!.appendChild(control.getPrivate(\"button\")!);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic loadDefaultCSS(): void {\r\n\t\tconst disposer = StockToolbarCSS($utils.getShadowRoot(this._root.dom), this._root);\r\n\t\tthis._disposers.push(disposer);\r\n\t\tthis._cssDisposer = disposer;\r\n\t}\r\n\r\n}","import { Dropdown, IDropdownSettings, IDropdownPrivate, IDropdownEvents } from \"./Dropdown\"\r\n//import type { IDisposer } from \"../../../core/util/Disposer\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IDropdownListItem {\r\n\tid: string;\r\n\tlabel: string;\r\n\tsubLabel?: string;\r\n\tclassName?: string;\r\n\ticon?: SVGElement;\r\n\tform?: \"radio\" | \"checkbox\";\r\n\tvalue?: string;\r\n\tchecked?: boolean;\r\n\toptions?: IDropdownListItem[];\r\n\tdisabled?: boolean;\r\n}\r\n\r\nexport interface IDropdownListSettings extends IDropdownSettings {\r\n\r\n\t/**\r\n\t * A list of items in the dropdown.\r\n\t */\r\n\titems?: IDropdownListItem[];\r\n\r\n\t/**\r\n\t * Maximum search items to show.\r\n\t */\r\n\tmaxSearchItems?: number;\r\n\r\n\t/**\r\n\t * Is the list searchable? If `true` shows search field and\r\n\t * calls `searchCallback` function for a list of items.\r\n\t */\r\n\tsearchable?: boolean;\r\n\r\n\t/**\r\n\t * A callback function which returns a list of items based on a search query.\r\n\t */\r\n\tsearchCallback?: (query: string) => Promise<IDropdownListItem[]>;\r\n\r\n\t/**\r\n\t * An array of item IDs to now show in the list.\r\n\t *\r\n\t * @since 5.7.0\r\n\t */\r\n\texclude?: string[];\r\n\r\n}\r\n\r\nexport interface IDropdownListPrivate extends IDropdownPrivate {\r\n\tlist?: HTMLUListElement;\r\n\tsearch?: HTMLDivElement;\r\n\tcurrentId?: string;\r\n}\r\n\r\nexport interface IDropdownListEvents extends IDropdownEvents {\r\n\tinvoked: {\r\n\t\titem: IDropdownListItem;\r\n\t};\r\n\r\n\tchanged: {\r\n\t\titem: IDropdownListItem;\r\n\t\tvalue: string | boolean;\r\n\t}\r\n}\r\n\r\n/**\r\n * A dropdown control for [[StockToolbar]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/dropdown-list-control/} for more info\r\n */\r\nexport class DropdownList extends Dropdown {\r\n\tpublic static className: string = \"DropdownList\";\r\n\tpublic static classNames: Array<string> = Dropdown.classNames.concat([DropdownList.className]);\r\n\r\n\tdeclare public _settings: IDropdownListSettings;\r\n\tdeclare public _privateSettings: IDropdownListPrivate;\r\n\tdeclare public _events: IDropdownListEvents;\r\n\r\n\tprivate _currentSelectedIndex?: number;\r\n\r\n\t// private _itemDisposers: Array<IDisposer> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis._setupKeyboardNav();\r\n\t\tthis._root.addDisposer(this);\r\n\t}\r\n\r\n\tprotected _initElements(): void {\r\n\t\tsuper._initElements();\r\n\r\n\t\t// Create container\r\n\t\tconst container = this.getPrivate(\"container\")!;\r\n\r\n\t\t// Init search\r\n\t\tif (this.get(\"searchable\")) {\r\n\t\t\tthis._initSearch();\r\n\t\t}\r\n\r\n\t\t// Create list\r\n\t\tconst list = document.createElement(\"ul\");\r\n\t\tlist.className = \"am5stock-control-list\";\r\n\r\n\t\tcontainer.appendChild(list);\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tthis._initItems();\r\n\t}\r\n\r\n\tprotected _sizeItems(): void {\r\n\t\tconst list = this.getPrivate(\"list\");\r\n\t\tif (list) {\r\n\t\t\tlist.style.maxHeight = (this.root.container.height() - 100) + \"px\";\r\n\t\t\tlist.style.overflow = \"auto\";\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Rebuilds the list.\r\n\t * \r\n\t * Useful when changing item data within item list.\r\n\t *\r\n\t * @since 5.7.0\r\n\t */\r\n\tpublic rebuildList(): void {\r\n\t\tthis._initItems();\r\n\t}\r\n\r\n\tprotected _initItems(items?: IDropdownListItem[]): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tlist.innerHTML = \"\";\r\n\r\n\t\tif (!items) {\r\n\t\t\titems = this.get(\"items\", []);\r\n\t\t}\r\n\r\n\t\tconst exclude: any = this.get(\"exclude\", []);\r\n\t\t$array.each(items, (item) => {\r\n\t\t\tif (exclude.indexOf(item.id) == -1) {\r\n\t\t\t\tthis.addItem(item);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (this.get(\"scrollable\")) {\r\n\t\t\tthis._sizeItems();\r\n\t\t}\r\n\r\n\t\tthis._maybeMakeAccessible();\r\n\t}\r\n\r\n\tprotected _initSearch(): void {\r\n\t\tlet searchBox = this.getPrivate(\"search\");\r\n\t\tif (this.get(\"searchable\")) {\r\n\t\t\tif (!searchBox) {\r\n\t\t\t\tconst container = this.getPrivate(\"container\")!;\r\n\t\t\t\tsearchBox = document.createElement(\"div\");\r\n\t\t\t\tsearchBox.className = \"am5stock-list-search\";\r\n\t\t\t\tcontainer.appendChild(searchBox);\r\n\t\t\t\tthis.setPrivate(\"search\", searchBox);\r\n\r\n\t\t\t\tconst input = document.createElement(\"input\");\r\n\t\t\t\tinput.type = \"text\";\r\n\t\t\t\tinput.placeholder = this._root.language.translateAny(\"Search\");\r\n\t\t\t\tsearchBox.appendChild(input);\r\n\r\n\t\t\t\tthis._disposers.push($utils.addEventListener(input, \"input\", (_ev) => {\r\n\t\t\t\t\tthis._filterItems(input.value);\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tthis._disposers.push($utils.addEventListener(input, \"focus\", (_ev) => {\r\n\t\t\t\t\tthis._currentSelectedIndex = undefined;\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (searchBox) {\r\n\t\t\tsearchBox.style.display = \"none\";\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"items\")) {\r\n\t\t\tthis._initItems();\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"searchable\")) {\r\n\t\t\tthis._initSearch();\r\n\t\t}\r\n\r\n\t\tif (this.isPrivateDirty(\"currentId\")) {\r\n\t\t\t// @todo\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"control\")) {\r\n\t\t\tthis._maybeMakeAccessible();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\r\n\t\t// $array.each(this._itemDisposers, (x) => {\r\n\t\t// \tx.dispose();\r\n\t\t// });\r\n\t}\r\n\r\n\tprotected async _filterItems(search?: string) {\r\n\t\tconst searchCallback = this.get(\"searchCallback\");\r\n\t\tif (search == \"\") {\r\n\t\t\tthis._initItems(this.get(\"items\"));\r\n\t\t}\r\n\t\telse if (searchCallback && search) {\r\n\t\t\tconst maxItems = this.get(\"maxSearchItems\", 1000);\r\n\t\t\tlet items = await searchCallback.call(this, search);\r\n\t\t\tif (maxItems && (items.length > maxItems)) {\r\n\t\t\t\titems = items.slice(0, maxItems - 1);\r\n\t\t\t\titems.push({\r\n\t\t\t\t\tid: \"\",\r\n\t\t\t\t\tclassName: \"am5stock-list-info\",\r\n\t\t\t\t\tlabel: this._root.language.translateAny(\"Search results are limited to %1.\", undefined, \"\" + maxItems)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis._initItems(items);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst list = this.getPrivate(\"list\");\r\n\t\t\tif (list) {\r\n\t\t\t\tconst items = list.getElementsByTagName(\"li\");\r\n\t\t\t\t$array.each(items, (item) => {\r\n\t\t\t\t\tconst regex = new RegExp(search || \"\", \"i\");\r\n\t\t\t\t\tif (!search || item.innerText.match(regex)) {\r\n\t\t\t\t\t\titem.style.display = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\titem.style.display = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic addItem(info: IDropdownListItem): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst item = document.createElement(\"li\");\r\n\t\titem.className = \"am5stock-list-item\";\r\n\t\titem.setAttribute(\"title\", info.subLabel || info.label);\r\n\r\n\t\tif (info.className) {\r\n\t\t\titem.className += \" \" + info.className;\r\n\t\t}\r\n\r\n\t\tif (info.icon) {\r\n\t\t\titem.appendChild(info.icon);\r\n\t\t}\r\n\r\n\t\tlet inputId: string | undefined;\r\n\t\tif (info.form) {\r\n\t\t\tconst input: HTMLInputElement = document.createElement(\"input\");\r\n\t\t\tinputId = \"am5stock-list-\" + info.id;\r\n\t\t\tinput.type = info.form;\r\n\t\t\tinput.setAttribute(\"tabindex\", \"-1\");\r\n\t\t\tif (info.value) {\r\n\t\t\t\tinput.value = info.value;\r\n\t\t\t}\r\n\t\t\tif (info.form == \"radio\") {\r\n\t\t\t\tinput.name = info.id;\r\n\t\t\t\tinputId += \"-\" + info.value;\r\n\t\t\t}\r\n\t\t\tif (info.checked) {\r\n\t\t\t\tinput.checked = true;\r\n\t\t\t}\r\n\r\n\t\t\tinput.id = inputId;\r\n\r\n\t\t\tthis._disposers.push($utils.addEventListener(item, \"click\", (ev) => {\r\n\t\t\t\t//ev.preventDefault();\r\n\t\t\t\tif (ev.target !== input) {\r\n\t\t\t\t\tinput.checked = !input.checked;\r\n\t\t\t\t}\r\n\t\t\t\tthis.events.dispatch(\"changed\", {\r\n\t\t\t\t\ttype: \"changed\",\r\n\t\t\t\t\titem: info,\r\n\t\t\t\t\tvalue: input.checked,\r\n\t\t\t\t\tchecked: input.checked,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}));\r\n\r\n\t\t\titem.appendChild(input);\r\n\t\t}\r\n\r\n\t\tconst label = document.createElement(\"label\");\r\n\t\tlabel.innerHTML = info.label;\r\n\t\tif (info.label == \"\") {\r\n\t\t\tlabel.style.display = \"none\";\r\n\t\t}\r\n\t\titem.appendChild(label);\r\n\r\n\t\tif (info.subLabel) {\r\n\t\t\tconst subLabel = document.createElement(\"label\");\r\n\t\t\tsubLabel.className = \"am5stock-list-sub\";\r\n\t\t\tsubLabel.innerHTML = info.subLabel;\r\n\t\t\titem.appendChild(subLabel);\r\n\t\t}\r\n\r\n\t\tif (info.id == \"separator\") {\r\n\t\t\titem.innerHTML = \"<hr>\";\r\n\t\t}\r\n\r\n\t\tlist.appendChild(item);\r\n\r\n\t\t// Add click event\r\n\t\tif (info.disabled) {\r\n\t\t\titem.className += \" am5stock-disabled\";\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._disposers.push($utils.addEventListener(item, \"click\", (_ev) => {\r\n\t\t\t\tthis.hide();\r\n\t\t\t\tthis.events.dispatch(\"invoked\", {\r\n\t\t\t\t\ttype: \"invoked\",\r\n\t\t\t\t\titem: info,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic hide(): void {\r\n\t\tsuper.hide();\r\n\t\tthis._filterItems();\r\n\t\tlet searchBox = this.getPrivate(\"search\");\r\n\t\tif (searchBox) {\r\n\t\t\tconst inputs = searchBox.getElementsByTagName(\"input\");\r\n\t\t\tlet isCustomSearch = false;\r\n\t\t\t$array.each(inputs, (input) => {\r\n\t\t\t\tif (input.value !== \"\") {\r\n\t\t\t\t\tisCustomSearch = true;\r\n\t\t\t\t\tinput.value = \"\";\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif (this.get(\"searchCallback\") && isCustomSearch) {\r\n\t\t\t\tthis._initItems();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis._currentSelectedIndex = undefined;\r\n\t}\r\n\r\n\tprotected _setupKeyboardNav(): void {\r\n\t\tif ($utils.supports(\"keyboardevents\")) {\r\n\t\t\tconst button = this.get(\"control\").getPrivate(\"button\")!;\r\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\r\n\t\t\t\tif (this.isAccessible()) {\r\n\t\t\t\t\tif (document.activeElement && (document.activeElement === button || $utils.contains(button, document.activeElement))) {\r\n\t\t\t\t\t\tif (ev.keyCode == 13) {\r\n\t\t\t\t\t\t\t// ENTER\r\n\t\t\t\t\t\t\tif (document.activeElement !== button) {\r\n\t\t\t\t\t\t\t\t(document.activeElement as HTMLElement).click();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (ev.keyCode == 38 || ev.keyCode == 40) {\r\n\t\t\t\t\t\t\tconst dir = ev.keyCode == 38 ? -1 : 1;\r\n\t\t\t\t\t\t\tlet index: number | undefined = this._currentSelectedIndex;\r\n\t\t\t\t\t\t\tif (index === undefined) {\r\n\t\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tindex += dir;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst items = this._getActiveItems();\r\n\t\t\t\t\t\t\tif (index < 0) {\r\n\t\t\t\t\t\t\t\tindex = items.length - 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (index >= items.length) {\r\n\t\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\t\t\t\t$utils.focus(items.item(index!) as HTMLElement);\r\n\t\t\t\t\t\t\t\tthis._currentSelectedIndex = index;\r\n\t\t\t\t\t\t\t}, 15);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _maybeMakeAccessible(): void {\r\n\t\tsuper._maybeMakeAccessible();\r\n\t\tif (this.isAccessible()) {\r\n\t\t\t//const tabindex = this._root.tabindex.toString();\r\n\t\t\t//const list = this.getPrivate(\"list\")!;\r\n\t\t\tconst items = this._getActiveItems();\r\n\t\t\titems.forEach((item) => {\r\n\t\t\t\t(item as HTMLElement).setAttribute(\"tabindex\", \"-1\");\r\n\t\t\t\t(item as HTMLElement).setAttribute(\"aria-label\", (item as HTMLElement).getAttribute(\"title\") || \"\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getActiveItems(): NodeList {\r\n\t\treturn this.getPrivate(\"list\")!.querySelectorAll(\".am5stock-list-item:not(.am5stock-list-info, .am5stock-list-heading, .am5stock-disabled)\");\r\n\t}\r\n\r\n}","import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport type DrawingTools = \"Arrows &amp; Icons\" | \"Average\" | \"Callout\" | \"Doodle\" | \"Ellipse\" | \"Fibonacci\" | \"Fibonacci Timezone\" | \"Horizontal Line\" | \"Horizontal Ray\" | \"Label\" | \"Line\" | \"Line Arrow\"  | \"Measure\" | \"Parallel Channel\" | \"Polyline\" | \"Polyfill\" | \"Quadrant Line\" | \"Rectangle\" | \"Regression\" | \"Trend Line\" | \"Triangle\" | \"Vertical Line\";\r\n\r\nexport interface IDrawingToolControlSettings extends IStockControlSettings {\r\n\ttools: DrawingTools[];\r\n\r\n\t/**\r\n\t * If set to `true`, the dropdown will fix the height to fit within chart's\r\n\t * area, with scroll if the contents do not fit.\r\n\t *\r\n\t * @since 5.9.5\r\n\t */\r\n\tscrollable?: boolean;\r\n}\r\n\r\nexport interface IDrawingToolControlPrivate extends IStockControlPrivate {\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IDrawingToolControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\ttool: DrawingTools\r\n\t}\r\n}\r\n\r\n/**\r\n * Control which allows selecting drawing tool.\r\n *\r\n * Should not be instantiated directly. Use [[DrawingControl]] instead.\r\n */\r\nexport class DrawingToolControl extends StockControl {\r\n\tpublic static className: string = \"DrawingToolControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DrawingToolControl.className]);\r\n\r\n\tdeclare public _settings: IDrawingToolControlSettings;\r\n\tdeclare public _privateSettings: IDrawingToolControlPrivate;\r\n\tdeclare public _events: IDrawingToolControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = DropdownList.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tscrollable: this.get(\"scrollable\", false)\r\n\t\t});\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tthis.setTool(<DrawingTools>ev.item.label);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\ttool: <DrawingTools>ev.item.id,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tthis._initTools();\r\n\t}\r\n\r\n\tpublic setTool(tool: DrawingTools): void {\r\n\t\tthis.getPrivate(\"icon\")!.innerHTML = \"\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(this._getToolIcon(tool));\r\n\t\t//this.getPrivate(\"label\")!.innerHTML = tool;\r\n\t\tthis._setLabel(this._root.language.translateAny(tool));\r\n\t}\r\n\r\n\tprotected _initTools(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst tools = this.get(\"tools\");\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(tools, (tool: DrawingTools) => {\r\n\t\t\titems.push({\r\n\t\t\t\tid: tool,\r\n\t\t\t\tlabel: this._root.language.translateAny(tool),\r\n\t\t\t\ticon: this._getToolIcon(tool)\r\n\t\t\t});\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\tprotected _getToolIcon(tool: DrawingTools): SVGElement {\r\n\t\treturn StockIcons.getIcon(tool);\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"tools\")) {\r\n\t\t\tthis._initTools();\r\n\t\t}\r\n\r\n\t\t// if (this.isDirty(\"name\")) {\r\n\t\t// \tthis.getPrivate(\"label\")!.innerHTML = this.get(\"name\", \"\");\r\n\t\t// }\r\n\r\n\t\t// todo icon\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\r\n\t\t// $array.each(this._itemDisposers, (x) => {\r\n\t\t// \tx.dispose();\r\n\t\t// });\r\n\t}\r\n\r\n\r\n}\r\n","import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IDropdownListControlSettings extends IStockControlSettings {\r\n\r\n\t/**\r\n\t * Currently selected item.\r\n\t */\r\n\tcurrentItem?: string | IDropdownListItem;\r\n\r\n\t/**\r\n\t * Label does not change when item is selected in the list.\r\n\t */\r\n\tfixedLabel?: boolean;\r\n\r\n\t/**\r\n\t * A list of items in the dropdown.\r\n\t */\r\n\titems?: Array<string | IDropdownListItem>;\r\n\r\n\t/**\r\n\t * If set to `true`, the dropdown will fix the height to fit within chart's\r\n\t * area, with scroll if the contents do not fit.\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n\t/**\r\n\t * Maximum search items to show.\r\n\t */\r\n\tmaxSearchItems?: number,\r\n\r\n\t/**\r\n\t * Is the list searchable? If `true` shows search field and\r\n\t * calls `searchCallback` function for a list of items.\r\n\t */\r\n\tsearchable?: boolean;\r\n\r\n\t/**\r\n\t * A callback function which returns a list of items based on a search query.\r\n\t */\r\n\tsearchCallback?: (query: string) => IDropdownListItem[];\r\n\r\n\t/**\r\n\t * An array of item IDs to now show in the list.\r\n\t *\r\n\t * @since 5.7.0\r\n\t */\r\n\texclude?: string[];\r\n\r\n}\r\n\r\nexport interface IDropdownListControlPrivate extends IStockControlPrivate {\r\n\tdropdown?: DropdownList;\r\n}\r\n\r\nexport interface IDropdownListControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\titem: string | IDropdownListItem;\r\n\t};\r\n}\r\n\r\n/**\r\n * A generic control which creates a searchable list of items in a dropdown.\r\n *\r\n * Can be used in a [[StockToolbar]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/dropdown-list-control/} for more info\r\n */\r\nexport class DropdownListControl extends StockControl {\r\n\tpublic static className: string = \"DropdownListControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DropdownListControl.className]);\r\n\r\n\tdeclare public _settings: IDropdownListControlSettings;\r\n\tdeclare public _privateSettings: IDropdownListControlPrivate;\r\n\tdeclare public _events: IDropdownListControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\t// @todo still needed?\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\t}\r\n\r\n\tprotected _initElements(): void {\r\n\t\tsuper._initElements();\r\n\r\n\t\t// Disable icon\r\n\t\t//this.getPrivate(\"icon\")!.style.display = \"none\";\r\n\r\n\t\t// Create list\r\n\t\tconst dropdownSettings: any = {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tsearchable: this.get(\"searchable\", false),\r\n\t\t\tscrollable: this.get(\"scrollable\", false),\r\n\t\t\titems: [],\r\n\t\t\texclude: this.get(\"exclude\")\r\n\t\t}\r\n\r\n\t\tconst maxSearchItems = this.get(\"maxSearchItems\");\r\n\t\tif (maxSearchItems) {\r\n\t\t\tdropdownSettings.maxSearchItems = maxSearchItems;\r\n\t\t}\r\n\r\n\t\tconst searchCallback = this.get(\"searchCallback\");\r\n\t\tif (searchCallback) {\r\n\t\t\tdropdownSettings.searchCallback = searchCallback;\r\n\t\t}\r\n\r\n\t\tconst items = this.get(\"items\");\r\n\t\tlet currentItem = this.get(\"currentItem\");\r\n\t\tif (items) {\r\n\t\t\t$array.each(items, (item) => {\r\n\t\t\t\tconst itemObject = $type.isString(item) ? {\r\n\t\t\t\t\tid: item,\r\n\t\t\t\t\tlabel: item\r\n\t\t\t\t} : item;\r\n\t\t\t\tdropdownSettings.items.push(itemObject);\r\n\r\n\t\t\t\tif ($type.isString(currentItem) && currentItem == itemObject.id) {\r\n\t\t\t\t\tcurrentItem = itemObject;\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tconst dropdown = DropdownList.new(this._root, dropdownSettings);\r\n\t\tthis.setPrivate(\"dropdown\", dropdown);\r\n\r\n\t\tif (currentItem) {\r\n\t\t\tthis.setItem(currentItem);\r\n\t\t}\r\n\r\n\t\tdropdown.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"invoked\", (ev) => {\r\n\t\t\tthis.setItem(ev.item);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\titem: ev.item,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\t//dropdown.setPrivate(\"currentId\", $type.numberToString(this.get(\"strokeWidth\")));\r\n\t\t\t\tthis.setTimeout(() => dropdown.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdropdown.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic setItem(item: string | IDropdownListItem): void {\r\n\t\tif (this.get(\"fixedLabel\") !== true) {\r\n\t\t\tconst label = this.getPrivate(\"label\")!;\r\n\t\t\tif ($type.isString(item)) {\r\n\t\t\t\tlabel.innerHTML = item;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (item.icon) {\r\n\t\t\t\t\tconst icon = this.getPrivate(\"icon\")!;\r\n\t\t\t\t\ticon.innerHTML = \"\";\r\n\t\t\t\t\ticon.appendChild(item.icon.cloneNode(true));\r\n\t\t\t\t\ticon.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//icon.style.display = \"none\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (item.label) {\r\n\t\t\t\t\tlabel.innerHTML = item.label;\r\n\t\t\t\t\tlabel.style.display = \"\";\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tlabel.innerHTML = \"\";\r\n\t\t\t\t\tlabel.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Selects an item by its id.\r\n\t *\r\n\t * @since 5.9.0\r\n\t * @param  id  Item ID\r\n\t */\r\n\tpublic setItemById(id: string) {\r\n\t\tconst item = this.getItemById(id);\r\n\t\tif (item !== undefined) {\r\n\t\t\tthis.setItem(item);\r\n\t\t\t//this.set(\"currentItem\", item);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\titem: item,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns list item by ID.\r\n\t * \r\n\t * @since 5.9.0\r\n\t * @param  id  Item ID\r\n\t * @return     Dropdown item\r\n\t */\r\n\tpublic getItemById(id: string): IDropdownListItem | string | undefined {\r\n\t\tlet found: IDropdownListItem | string | undefined;\r\n\t\tconst items = this.get(\"items\", []);\r\n\t\t$array.eachContinue(items, (item) => {\r\n\t\t\tlet itemId = $type.isObject(item) ? item.id : item;\r\n\t\t\tif (itemId == id) {\r\n\t\t\t\tfound = item;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\treturn found;\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tif (this.isDirty(\"items\")) {\r\n\t\t\tconst dropdown = this.getPrivate(\"dropdown\");\r\n\t\t\tif (dropdown) {\r\n\t\t\t\tconst items = this.get(\"items\");\r\n\t\t\t\tconst dropdownItems: IDropdownListItem[] = [];\r\n\t\t\t\tlet currentItem = this.get(\"currentItem\");\r\n\t\t\t\tif (items) {\r\n\t\t\t\t\t$array.each(items, (item) => {\r\n\t\t\t\t\t\tconst itemObject = $type.isString(item) ? {\r\n\t\t\t\t\t\t\tid: item,\r\n\t\t\t\t\t\t\tlabel: item\r\n\t\t\t\t\t\t} : item;\r\n\t\t\t\t\t\tdropdownItems.push(itemObject);\r\n\r\n\t\t\t\t\t\tif ($type.isString(currentItem) && currentItem == itemObject.id) {\r\n\t\t\t\t\t\t\tcurrentItem = itemObject;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdropdown.set(\"items\", dropdownItems);\r\n\t\t\t\t//console.log(this.className, this.isAccessible())\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\tprotected _maybeMakeAccessible(): void {\r\n\t\tsuper._maybeMakeAccessible();\r\n\t\tif (this.isAccessible()) {\r\n\t\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\t\tbutton.setAttribute(\"aria-label\", button.getAttribute(\"title\") + \"; \" + this._t(\"Press ENTER or use arrow keys to navigate\"));\r\n\r\n\t\t\tif ($utils.supports(\"keyboardevents\")) {\r\n\t\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\r\n\t\t\t\t\tif (document.activeElement == button) {\r\n\t\t\t\t\t\tif (ev.keyCode == 38 || ev.keyCode == 40) {\r\n\t\t\t\t\t\t\t// Open on arrows\r\n\t\t\t\t\t\t\tif (!this.get(\"active\")) {\r\n\t\t\t\t\t\t\t\tthis._handleClick();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n","import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { Dropdown } from \"./Dropdown\";\r\n\r\nexport interface IDropdownControlSettings extends IStockControlSettings {\r\n\tfixedLabel?: boolean;\r\n\tscrollable?: boolean;\r\n\thtml?: string;\r\n}\r\n\r\nexport interface IDropdownControlPrivate extends IStockControlPrivate {\r\n\tdropdown?: Dropdown;\r\n\tcontainer?: HTMLDivElement;\r\n}\r\n\r\nexport interface IDropdownControlEvents extends IStockControlEvents {\r\n}\r\n\r\n/**\r\n * A generic control which creates a searchable list of items in a dropdown.\r\n *\r\n * Can be used in a [[StockToolbar]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/dropdown-list-control/} for more info\r\n */\r\nexport class DropdownControl extends StockControl {\r\n\tpublic static className: string = \"DropdownControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DropdownControl.className]);\r\n\r\n\tdeclare public _settings: IDropdownControlSettings;\r\n\tdeclare public _privateSettings: IDropdownControlPrivate;\r\n\tdeclare public _events: IDropdownControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tif (this.isDirty(\"html\")) {\r\n\t\t\tconst container = this.getPrivate(\"container\");\r\n\t\t\tif (container) {\r\n\t\t\t\tthis.getPrivate(\"container\")!.innerHTML = this.get(\"html\", \"\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _initElements(): void {\r\n\t\tsuper._initElements();\r\n\r\n\t\t// Create list\r\n\t\tconst dropdownSettings: any = {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tscrollable: this.get(\"scrollable\", false)\r\n\t\t}\r\n\r\n\t\tconst dropdown = Dropdown.new(this._root, dropdownSettings);\r\n\t\tthis.setPrivate(\"dropdown\", dropdown);\r\n\r\n\t\tconst container = document.createElement(\"div\");\r\n\t\tcontainer.className = \"am5stock-control-list\";\r\n\r\n\t\tdropdown.getPrivate(\"container\")!.appendChild(container);\r\n\t\tthis.setPrivate(\"container\", container);\r\n\r\n\t\tconst html = this.get(\"html\", \"\");\r\n\t\tcontainer.innerHTML = html;\r\n\r\n\t\tdropdown.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => dropdown.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdropdown.hide();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\r\n}\r\n","import type { Percent } from \"../../../core/util/Percent\";\r\n\r\nimport { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IIcon {\r\n\tsvgPath: string;\r\n\tscale?: number;\r\n\tcenterX?: Percent;\r\n\tcenterY?: Percent;\r\n\tfillDisabled?: boolean;\r\n}\r\n\r\nexport interface IIconControlSettings extends IStockControlSettings {\r\n\ticons: IIcon[];\r\n}\r\n\r\nexport interface IIconControlPrivate extends IStockControlPrivate {\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IIconControlEvents extends IStockControlEvents {\r\n\tselected: {\r\n\t\ticon: IIcon\r\n\t}\r\n}\r\n\r\n/**\r\n * Shows selection of icons to choose from for annotating [[StockChart]].\r\n *\r\n * This class is instantiated automatically, and should not be used standalone.\r\n */\r\nexport class IconControl extends StockControl {\r\n\tpublic static className: string = \"IconControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([IconControl.className]);\r\n\r\n\tdeclare public _settings: IIconControlSettings;\r\n\tdeclare public _privateSettings: IIconControlPrivate;\r\n\tdeclare public _events: IIconControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = DropdownList.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\"),\r\n\t\t\tsearchable: false\r\n\t\t});\r\n\t\tthis.setPrivate(\"list\", list);\r\n\t\tlist.getPrivate(\"list\")!.className = \"am5stock-control-icons\";\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tconst item = <IIcon>JSON.parse(ev.item.id);\r\n\t\t\tlet icon: IIcon | undefined;\r\n\t\t\tconst icons = this.get(\"icons\");\r\n\t\t\t$array.each(icons, (listIcon) => {\r\n\t\t\t\tif (item.svgPath == listIcon.svgPath) {\r\n\t\t\t\t\ticon = listIcon;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (icon) {\r\n\t\t\t\tthis.setIcon(icon);\r\n\t\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\t\ttype: \"selected\",\r\n\t\t\t\t\ticon: icon,\r\n\t\t\t\t\ttarget: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis._initIcons();\r\n\t}\r\n\r\n\tpublic setIcon(icon: IIcon): void {\r\n\t\tthis.getPrivate(\"icon\")!.innerHTML = \"\";\r\n\t\tthis.getPrivate(\"icon\")!.appendChild(this._getDrawingIcon(icon));\r\n\t\t//this.getPrivate(\"label\")!.style.display = \"none\";\r\n\t}\r\n\r\n\t/**\r\n\t * Selects an icon by its SVG path.\r\n\t *\r\n\t * @since 5.9.0\r\n\t * @param  path  Item ID\r\n\t */\r\n\tpublic setIconByPath(path: string) {\r\n\t\tconst icon = this.getIconByPath(path);\r\n\t\tif (icon !== undefined) {\r\n\t\t\tthis.setIcon(icon);\r\n\t\t\t//this.set(\"currentItem\", item);\r\n\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\ttype: \"selected\",\r\n\t\t\t\ticon: icon,\r\n\t\t\t\ttarget: this\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns icon by its SVG path.\r\n\t * \r\n\t * @since 5.9.0\r\n\t * @param  id  Item ID\r\n\t * @return     Dropdown item\r\n\t */\r\n\tpublic getIconByPath(path: string): IIcon | undefined {\r\n\t\tlet found: IIcon | undefined;\r\n\t\tconst icons = this.get(\"icons\", []);\r\n\t\t$array.eachContinue(icons, (icon) => {\r\n\t\t\tif (icon.svgPath == path) {\r\n\t\t\t\tfound = icon;\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\t\treturn found;\r\n\t}\r\n\r\n\tprotected _initIcons(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst icons = this.get(\"icons\");\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(icons, (icon: IIcon) => {\r\n\t\t\titems.push({\r\n\t\t\t\tid: JSON.stringify(icon),\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\ticon: this._getDrawingIcon(icon)\r\n\t\t\t});\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\tpublic _getDrawingIcon(icon: IIcon): SVGElement {\r\n\t\treturn StockIcons._getSVG({ viewbox: \"0 0 50 50\", path: icon.svgPath });\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\r\n\t\tif (this.isDirty(\"icons\")) {\r\n\t\t\tthis._initIcons();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\t}\r\n\r\n\r\n}\r\n","import type { XYSeries } from \"../../xy/series/XYSeries\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport type { ColorSet } from \"../../../core/util/ColorSet\";\r\nimport type { IDropdownListItem } from \"./DropdownList\";\r\nimport type { StockPanel } from \"../StockPanel\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { Template } from \"../../../core/util/Template\";\r\n\r\nimport { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { DrawingToolControl, DrawingTools } from \"./DrawingToolControl\";\r\nimport { ColorControl } from \"./ColorControl\";\r\nimport { DropdownListControl } from \"./DropdownListControl\";\r\nimport { IconControl, IIcon } from \"./IconControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\nimport { DrawingSeries } from \"../drawing/DrawingSeries\";\r\n\r\nimport { AverageSeries } from \"../drawing/AverageSeries\";\r\nimport { CalloutSeries } from \"../drawing/CalloutSeries\";\r\nimport { EllipseSeries } from \"../drawing/EllipseSeries\";\r\nimport { DoodleSeries } from \"../drawing/DoodleSeries\";\r\nimport { FibonacciSeries } from \"../drawing/FibonacciSeries\";\r\nimport { FibonacciTimezoneSeries } from \"../drawing/FibonacciTimezoneSeries\";\r\nimport { HorizontalLineSeries } from \"../drawing/HorizontalLineSeries\";\r\nimport { HorizontalRaySeries } from \"../drawing/HorizontalRaySeries\";\r\nimport { IconSeries } from \"../drawing/IconSeries\";\r\nimport { LabelSeries } from \"../drawing/LabelSeries\";\r\nimport { SimpleLineSeries } from \"../drawing/SimpleLineSeries\";\r\nimport { LineArrowSeries } from \"../drawing/LineArrowSeries\";\r\nimport { PolylineSeries } from \"../drawing/PolylineSeries\";\r\nimport { QuadrantLineSeries } from \"../drawing/QuadrantLineSeries\";\r\nimport { RectangleSeries } from \"../drawing/RectangleSeries\";\r\nimport { ParallelChannelSeries } from \"../drawing/ParallelChannelSeries\";\r\nimport { RegressionSeries } from \"../drawing/RegressionSeries\";\r\nimport { TrendLineSeries } from \"../drawing/TrendLineSeries\";\r\nimport { VerticalLineSeries } from \"../drawing/VerticalLineSeries\";\r\nimport { Measure } from \"../drawing/Measure\";\r\nimport { JsonParser } from \"../../../plugins/json/Json\";\r\nimport { Serializer } from \"../../../plugins/json/Serializer\";\r\n\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\nimport * as $type from \"../../../core/util/Type\";\r\nimport * as $utils from \"../../../core/util/Utils\";\r\n\r\nexport interface IDrawingControlSettings extends IStockControlSettings {\r\n\r\n\t/**\r\n\t * List of tools available in drawing mode.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/drawing-control/#Tool_list} for more info\r\n\t */\r\n\ttools?: DrawingTools[];\r\n\r\n\t/**\r\n\t * Default tool.\r\n\t */\r\n\ttool?: DrawingTools,\r\n\r\n\t/**\r\n\t * If set to `true`, the dropdown will fix the height to fit within chart's\r\n\t * area, with scroll if the contents do not fit.\r\n\t *\r\n\t * @since 5.9.5\r\n\t */\r\n\tscrollable?: boolean;\r\n\r\n\t/**\r\n\t * Default settings for drawing tools.\r\n\t *\r\n\t * @since 5.5.2\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/drawing-control/#Tool_settings} for more info\r\n\t */\r\n\ttoolSettings?: { [index: string]: any };\r\n\r\n\t/**\r\n\t * Target series for drawing.\r\n\t */\r\n\tseries?: XYSeries[];\r\n\r\n\t/**\r\n\t * Colors to show in color pickers.\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/drawing-control/#Colors} for more info\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Default color for lines/borders.\r\n\t */\r\n\tstrokeColor?: Color;\r\n\r\n\t/**\r\n\t * Default line/border width in pixels.\r\n\t */\r\n\tstrokeWidth?: number;\r\n\r\n\t/**\r\n\t * Available line widths for user to choose from.\r\n\t */\r\n\tstrokeWidths?: number[];\r\n\r\n\t/**\r\n\t * Default dasharray setting.\r\n\t */\r\n\tstrokeDasharray?: number[];\r\n\r\n\t/**\r\n\t * Available line dash settings for user to choose from.\r\n\t */\r\n\tstrokeDasharrays?: number[][];\r\n\r\n\t/**\r\n\t * Default line/border opacity.\r\n\t */\r\n\tstrokeOpacity?: number;\r\n\r\n\t/**\r\n\t * Show dotted/thin line extending from both ends of the drawn line?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tshowExtension?: boolean;\r\n\r\n\t/**\r\n\t * Default fill color.\r\n\t */\r\n\tfillColor?: Color;\r\n\r\n\t/**\r\n\t * Default fill opacity.\r\n\t */\r\n\tfillOpacity?: number;\r\n\r\n\t/**\r\n\t * Default color for labels.\r\n\t */\r\n\tlabelFill?: Color;\r\n\r\n\t/**\r\n\t * Default label font size.\r\n\t */\r\n\tlabelFontSize?: number | string | undefined;\r\n\r\n\t/**\r\n\t * Available font sizes.\r\n\t */\r\n\tlabelFontSizes?: Array<number | string>;\r\n\r\n\t/**\r\n\t * Default label font.\r\n\t */\r\n\tlabelFontFamily?: string;\r\n\r\n\t/**\r\n\t * Available fonts for user to choose from.\r\n\t */\r\n\tlabelFontFamilies?: string[];\r\n\r\n\t/**\r\n\t * Default label font weight.\r\n\t */\r\n\tlabelFontWeight?: \"normal\" | \"bold\" | \"bolder\" | \"lighter\" | \"100\" | \"200\" | \"300\" | \"400\" | \"500\" | \"600\" | \"700\" | \"800\" | \"900\";\r\n\r\n\t/**\r\n\t * Default label style.\r\n\t */\r\n\tlabelFontStyle?: \"normal\" | \"italic\" | \"oblique\";\r\n\r\n\tdrawingIcon?: IIcon;\r\n\tdrawingIcons?: IIcon[];\r\n\r\n\t/**\r\n\t * Should drawings snap to the nearest data point?\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tsnapToData?: boolean;\r\n\r\n}\r\n\r\n\r\nexport interface IDrawingControlPrivate extends IStockControlPrivate {\r\n\ttoolsContainer?: HTMLDivElement;\r\n\t// icon?: HTMLElement;\r\n\t// label?: HTMLDivElement;\r\n\ttoolControl?: DrawingToolControl;\r\n\teraserControl?: StockControl;\r\n\r\n\t/**\r\n\t * Selector mode toggler.\r\n\t *\r\n\t * @since 5.9.1\r\n\t */\r\n\tselectControl?: StockControl;\r\n\tclearControl?: StockControl;\r\n\r\n\tstrokeControl?: ColorControl;\r\n\tstrokeWidthControl?: DropdownListControl;\r\n\tstrokeDasharrayControl?: DropdownListControl;\r\n\tfillControl?: ColorControl;\r\n\textensionControl?: StockControl;\r\n\r\n\tlabelFillControl?: ColorControl;\r\n\tlabelFontSizeControl?: DropdownListControl;\r\n\tlabelFontFamilyControl?: DropdownListControl;\r\n\tboldControl?: StockControl;\r\n\titalicControl?: StockControl;\r\n\r\n\ticonControl?: IconControl;\r\n\tsnapControl?: StockControl;\r\n\r\n\ttoolTemplates?: { [index: string]: Template<any> };\r\n}\r\n\r\nexport interface IDrawingControlEvents extends IStockControlEvents {\r\n}\r\n\r\n/**\r\n * A drawing tools control for [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/drawing-control/} for more info\r\n */\r\nexport class DrawingControl extends StockControl {\r\n\tpublic static className: string = \"DrawingControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DrawingControl.className]);\r\n\r\n\tdeclare public _settings: IDrawingControlSettings;\r\n\tdeclare public _privateSettings: IDrawingControlPrivate;\r\n\tdeclare public _events: IDrawingControlEvents;\r\n\r\n\tprivate _drawingSeries: { [index: string]: DrawingSeries[] } = {};\r\n\tprivate _currentEnabledSeries: DrawingSeries[] = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Init drawing toolbar\r\n\t\tif (this.getPrivate(\"toolbar\")) {\r\n\t\t\tthis._initToolbar();\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.panels.events.onAll(() => this._updatePanelBindings());\r\n\r\n\t\tstockChart.events.on(\"drawingselected\", (ev) => {\r\n\t\t\t// Set tool\r\n\t\t\tconst tool = this._getSeriesTool(ev.series);\r\n\t\t\tthis.set(\"tool\", tool);\r\n\r\n\t\t\tif (!this._isInited()) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Get context\r\n\t\t\tconst context = ev.series.getContext(ev.drawingId);\r\n\r\n\t\t\tif (tool == \"Label\" || tool == \"Callout\") {\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t * Labels and callouts\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t */\r\n\r\n\t\t\t\t// Set fill\r\n\t\t\t\tconst settings = context.settings;\r\n\t\t\t\tif (settings) {\r\n\t\t\t\t\tthis.getPrivate(\"labelFillControl\")!.setColor(settings.get(\"fill\"));\r\n\t\t\t\t\tthis.getPrivate(\"labelFontSizeControl\")!.setItemById(settings.get(\"fontSize\"));\r\n\t\t\t\t\tthis.getPrivate(\"boldControl\")!.set(\"active\", settings.get(\"fontWeight\") == \"bold\");\r\n\t\t\t\t\tthis.getPrivate(\"italicControl\")!.set(\"active\", settings.get(\"fontStyle\") == \"italic\");\r\n\t\t\t\t\tthis.getPrivate(\"labelFontFamilyControl\")!.setItemById(settings.get(\"fontFamily\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Callout background/outline\r\n\t\t\t\tconst bg = context.bgSettings;\r\n\t\t\t\tif (bg) {\r\n\t\t\t\t\tconst strokeControl = this.getPrivate(\"strokeControl\")!;\r\n\t\t\t\t\tstrokeControl.setColor(bg.get(\"stroke\"));\r\n\t\t\t\t\tstrokeControl.setOpacity(bg.get(\"strokeOpacity\"));\r\n\r\n\t\t\t\t\tconst fillControl = this.getPrivate(\"fillControl\")!;\r\n\t\t\t\t\tfillControl.setColor(bg.get(\"fill\"));\r\n\t\t\t\t\tfillControl.setOpacity(bg.get(\"fillOpacity\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t * The rest of the stuff\r\n\t\t\t\t * --------------------------------------------------------------------\r\n\t\t\t\t */\r\n\r\n\t\t\t\t// Set stroke\r\n\t\t\t\tconst stroke = context.stroke || context.settings;\r\n\t\t\t\tif (stroke) {\r\n\t\t\t\t\tconst strokeControl = this.getPrivate(\"strokeControl\")!;\r\n\t\t\t\t\tstrokeControl.setColor(stroke.get(\"stroke\"));\r\n\t\t\t\t\tstrokeControl.setOpacity(stroke.get(\"strokeOpacity\"));\r\n\t\t\t\t\tthis.getPrivate(\"strokeWidthControl\")!.setItemById(stroke.get(\"strokeWidth\") + \"px\");\r\n\t\t\t\t\tthis.getPrivate(\"strokeDasharrayControl\")!.setItemById(JSON.stringify(stroke.get(\"strokeDasharray\")));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Set fill\r\n\t\t\t\tconst fill = context.fill || context.settings;\r\n\t\t\t\tif (fill) {\r\n\t\t\t\t\tconst fillControl = this.getPrivate(\"fillControl\")!;\r\n\t\t\t\t\tfillControl.setColor(fill.get(\"fill\"));\r\n\t\t\t\t\tfillControl.setOpacity(fill.get(\"fillOpacity\"));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handle icons\r\n\t\t\t\tconst sprite = context.settings || context.sprite;\r\n\t\t\t\tif (sprite && sprite.get(\"svgPath\")) {\r\n\t\t\t\t\tthis.getPrivate(\"iconControl\")!.setIconByPath(sprite.get(\"svgPath\"));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tprotected _initElements(): void {\r\n\t\tsuper._initElements();\r\n\t}\r\n\r\n\tprotected _isInited(): boolean {\r\n\t\treturn this.getPrivate(\"toolsContainer\") ? true : false;\r\n\t}\r\n\r\n\tprotected _resetControls(): void {\r\n\t\tthis.getPrivate(\"eraserControl\")!.set(\"active\", false);\r\n\t}\r\n\r\n\tprotected _initToolbar(): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst l = this._root.language;\r\n\r\n\t\t// Add additional container for drawing toolbar\r\n\t\tconst toolbar = this.getPrivate(\"toolbar\")!;\r\n\t\tconst toolsContainer = document.createElement(\"div\");\r\n\t\ttoolsContainer.className = \"am5stock-control-drawing-tools\";\r\n\t\ttoolsContainer.style.display = \"none\";\r\n\t\tthis.setPrivate(\"toolsContainer\", toolsContainer);\r\n\t\ttoolbar.get(\"container\").appendChild(toolsContainer);\r\n\r\n\t\t/**\r\n\t\t * Drawing tool selection control\r\n\t\t */\r\n\t\tconst toolControl = DrawingToolControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Drawing tool\"),\r\n\t\t\ttools: this.get(\"tools\")!,\r\n\t\t\tscrollable: this.get(\"scrollable\", false)\r\n\t\t});\r\n\r\n\t\ttoolControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\ttoolsContainer.appendChild(toolControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"toolControl\", toolControl);\r\n\r\n\t\ttoolControl.events.on(\"selected\", (ev) => {\r\n\t\t\teraserControl.set(\"active\", false);\r\n\t\t\tthis.set(\"tool\", ev.tool);\r\n\t\t});\r\n\r\n\t\ttoolControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Icon selection control\r\n\t\t */\r\n\t\tconst drawingIcons = this.get(\"drawingIcons\")!;\r\n\t\tconst iconControl = IconControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Arrows &amp; Icons\"),\r\n\t\t\ticons: drawingIcons\r\n\t\t});\r\n\r\n\t\ticonControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\ticonControl.setIcon(this.get(\"drawingIcon\", drawingIcons[0]));\r\n\t\ttoolsContainer.appendChild(iconControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"iconControl\", iconControl);\r\n\r\n\t\ticonControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"drawingIcon\", ev.icon);\r\n\t\t});\r\n\r\n\t\ticonControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Snap toggle control\r\n\t\t */\r\n\t\tconst snapControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Snap icon to data\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Snap\")\r\n\t\t});\r\n\r\n\t\tsnapControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\tsnapControl.hide();\r\n\t\ttoolsContainer.appendChild(snapControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"snapControl\", snapControl);\r\n\t\tif (this.get(\"snapToData\")) {\r\n\t\t\tsnapControl.set(\"active\", true);\r\n\t\t}\r\n\t\tsnapControl.on(\"active\", (_ev) => {\r\n\t\t\tthis.set(\"snapToData\", snapControl.get(\"active\") == true);\r\n\t\t});\r\n\r\n\t\tsnapControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Stroke color control\r\n\t\t */\r\n\t\tconst strokeControl = ColorControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tcolors: this.get(\"colors\"),\r\n\t\t\tdescription: l.translateAny(\"Line color\")\r\n\t\t});\r\n\r\n\t\tstrokeControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\tstrokeControl.hide();\r\n\t\tstrokeControl.setPrivate(\"color\", this.get(\"strokeColor\", color(0x000000)));\r\n\t\tstrokeControl.setPrivate(\"opacity\", this.get(\"strokeOpacity\", 1));\r\n\t\ttoolsContainer.appendChild(strokeControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"strokeControl\", strokeControl);\r\n\t\tstrokeControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"strokeColor\", ev.color);\r\n\t\t});\r\n\t\tstrokeControl.events.on(\"selectedOpacity\", (ev) => {\r\n\t\t\tthis.set(\"strokeOpacity\", ev.opacity);\r\n\t\t});\r\n\r\n\t\tstrokeControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Stroke width control\r\n\t\t */\r\n\t\tconst strokeWidths: string[] = [];\r\n\t\t$array.each(this.get(\"strokeWidths\", []), (width) => {\r\n\t\t\tstrokeWidths.push(width + \"px\");\r\n\t\t});\r\n\t\tconst strokeWidthControl = DropdownListControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Line thickness\"),\r\n\t\t\tcurrentItem: this.get(\"strokeWidth\", \"12\") + \"px\",\r\n\t\t\titems: strokeWidths\r\n\t\t});\r\n\r\n\t\tstrokeWidthControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\tstrokeWidthControl.hide();\r\n\t\t//strokeWidthControl.setItem(this.get(\"strokeWidth\", \"12\") + \"px\");\r\n\t\tstrokeWidthControl.getPrivate(\"icon\")!.style.display = \"none\";\r\n\t\ttoolsContainer.appendChild(strokeWidthControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"strokeWidthControl\", strokeWidthControl);\r\n\t\tstrokeWidthControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"strokeWidth\", $type.toNumber($type.isString(ev.item) ? ev.item : ev.item.id));\r\n\t\t});\r\n\r\n\t\tstrokeWidthControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Stroke dash cofiguration control\r\n\t\t */\r\n\t\tconst strokeDasharrays: IDropdownListItem[] = [];\r\n\t\tlet currentStrokeDasharray: SVGElement | undefined;\r\n\t\tconst strokeDasharray = this.get(\"strokeDasharray\", []);\r\n\t\t$array.each(this.get(\"strokeDasharrays\", []), (dasharray) => {\r\n\t\t\tconst icon = StockIcons.getIcon(\"Dash\");\r\n\t\t\tconst id = JSON.stringify(dasharray);\r\n\t\t\ticon.setAttribute(\"stroke\", \"#000\");\r\n\t\t\ticon.setAttribute(\"stroke-dasharray\", dasharray.join(\",\"));\r\n\t\t\ticon.setAttribute(\"class\", \"am5stock-icon-wide\");\r\n\t\t\tstrokeDasharrays.push({\r\n\t\t\t\tid: id,\r\n\t\t\t\tlabel: \"\",\r\n\t\t\t\ticon: icon\r\n\t\t\t});\r\n\r\n\t\t\tif (id == JSON.stringify(strokeDasharray)) {\r\n\t\t\t\tcurrentStrokeDasharray = StockIcons.getIcon(\"Dash\");\r\n\t\t\t\tcurrentStrokeDasharray.setAttribute(\"stroke\", \"#000\");\r\n\t\t\t\tcurrentStrokeDasharray.setAttribute(\"stroke-dasharray\", dasharray.join(\",\"));\r\n\t\t\t\tcurrentStrokeDasharray.setAttribute(\"class\", \"am5stock-icon-wide\");\r\n\t\t\t}\r\n\t\t});\r\n\t\tconst strokeDasharrayControl = DropdownListControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Line style\"),\r\n\t\t\titems: strokeDasharrays\r\n\t\t});\r\n\r\n\t\tstrokeDasharrayControl.setPrivate(\"toolbar\", toolbar);\r\n\r\n\t\tstrokeDasharrayControl.hide();\r\n\t\tif (currentStrokeDasharray) {\r\n\t\t\tstrokeDasharrayControl.setItem({\r\n\t\t\t\tid: \"\",\r\n\t\t\t\ticon: currentStrokeDasharray,\r\n\t\t\t\tlabel: \"\"\r\n\t\t\t});\r\n\t\t}\r\n\t\tstrokeDasharrayControl.getPrivate(\"icon\")!.setAttribute(\"class\", \"am5stock-control-icon am5stock-icon-wide\")\r\n\t\ttoolsContainer.appendChild(strokeDasharrayControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"strokeDasharrayControl\", strokeDasharrayControl);\r\n\t\tstrokeDasharrayControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"strokeDasharray\", JSON.parse((<IDropdownListItem>ev.item).id));\r\n\t\t});\r\n\r\n\t\tstrokeDasharrayControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Fill color control\r\n\t\t */\r\n\t\tconst fillControl = ColorControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tcolors: this.get(\"colors\"),\r\n\t\t\tname: l.translateAny(\"Fill\"),\r\n\t\t\tdescription: l.translateAny(\"Fill color\"),\r\n\t\t});\r\n\t\tfillControl.hide();\r\n\t\tfillControl.setPrivate(\"toolbar\", toolbar);\r\n\t\tfillControl.setPrivate(\"color\", this.get(\"fillColor\", color(0x000000)));\r\n\t\tfillControl.setPrivate(\"opacity\", this.get(\"fillOpacity\", 1));\r\n\t\ttoolsContainer.appendChild(fillControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"fillControl\", fillControl);\r\n\t\tfillControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"fillColor\", ev.color);\r\n\t\t});\r\n\t\tfillControl.events.on(\"selectedOpacity\", (ev) => {\r\n\t\t\tthis.set(\"fillOpacity\", ev.opacity);\r\n\t\t});\r\n\r\n\t\tfillControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Label color control\r\n\t\t */\r\n\t\tconst labelFillControl = ColorControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tcolors: this.get(\"colors\"),\r\n\t\t\tname: l.translateAny(\"Text\"),\r\n\t\t\tdescription: l.translateAny(\"Text color\"),\r\n\t\t\tuseOpacity: false\r\n\t\t});\r\n\t\tlabelFillControl.hide();\r\n\t\tlabelFillControl.setPrivate(\"toolbar\", toolbar);\r\n\t\tlabelFillControl.setPrivate(\"color\", this.get(\"labelFill\", color(0x000000)));\r\n\t\ttoolsContainer.appendChild(labelFillControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"labelFillControl\", labelFillControl);\r\n\t\tlabelFillControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"labelFill\", ev.color);\r\n\t\t});\r\n\r\n\t\tlabelFillControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Font size control\r\n\t\t */\r\n\t\tconst fontSizes: string[] = [];\r\n\t\t$array.each(this.get(\"labelFontSizes\", []), (size) => {\r\n\t\t\tfontSizes.push(size + \"\");\r\n\t\t});\r\n\t\tconst fontSizeControl = DropdownListControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Label font size\"),\r\n\t\t\tcurrentItem: this.get(\"labelFontSize\", \"12px\") + \"\",\r\n\t\t\titems: fontSizes,\r\n\t\t\ticon: \"none\"\r\n\t\t});\r\n\t\tfontSizeControl.hide();\r\n\t\tfontSizeControl.setPrivate(\"toolbar\", toolbar);\r\n\t\t//fontSizeControl.setItem(this.get(\"labelFontSize\", \"12px\") + \"\");\r\n\t\ttoolsContainer.appendChild(fontSizeControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"labelFontSizeControl\", fontSizeControl);\r\n\t\tfontSizeControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"labelFontSize\", $type.isString(ev.item) ? ev.item : ev.item.id);\r\n\t\t});\r\n\r\n\t\tfontSizeControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Bold control\r\n\t\t */\r\n\t\tconst boldControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Bold\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Bold\")\r\n\t\t});\r\n\t\tboldControl.hide();\r\n\t\tboldControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(boldControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"boldControl\", boldControl);\r\n\t\tboldControl.on(\"active\", (_ev) => {\r\n\t\t\tthis.set(\"labelFontWeight\", boldControl.get(\"active\") ? \"bold\" : \"normal\");\r\n\t\t});\r\n\r\n\t\tboldControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Italic control\r\n\t\t */\r\n\t\tconst italicControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Italic\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Italic\")\r\n\t\t});\r\n\t\titalicControl.hide();\r\n\t\titalicControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(italicControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"italicControl\", italicControl);\r\n\t\titalicControl.on(\"active\", (_ev) => {\r\n\t\t\tthis.set(\"labelFontStyle\", italicControl.get(\"active\") ? \"italic\" : \"normal\");\r\n\t\t});\r\n\r\n\t\titalicControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Font family control\r\n\t\t */\r\n\t\tconst fontFamilies: string[] = [];\r\n\t\t$array.each(this.get(\"labelFontFamilies\", []), (size) => {\r\n\t\t\tfontFamilies.push(size + \"\");\r\n\t\t});\r\n\t\tconst fontFamilyControl = DropdownListControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Label font family\"),\r\n\t\t\tcurrentItem: this.get(\"labelFontFamily\", \"Arial\"),\r\n\t\t\titems: fontFamilies,\r\n\t\t\ticon: \"none\"\r\n\t\t});\r\n\t\tfontFamilyControl.hide();\r\n\t\tfontFamilyControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(fontFamilyControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"labelFontFamilyControl\", fontFamilyControl);\r\n\t\tfontFamilyControl.events.on(\"selected\", (ev) => {\r\n\t\t\tthis.set(\"labelFontFamily\", $type.isString(ev.item) ? ev.item : ev.item.id);\r\n\t\t});\r\n\r\n\t\tfontFamilyControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Line extension control\r\n\t\t */\r\n\t\tconst extensionControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Show line extension\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Show Extension\")\r\n\t\t});\r\n\t\textensionControl.hide();\r\n\t\textensionControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(extensionControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"extensionControl\", extensionControl);\r\n\t\tif (this.get(\"showExtension\")) {\r\n\t\t\textensionControl.set(\"active\", true);\r\n\t\t}\r\n\t\textensionControl.on(\"active\", (_ev) => {\r\n\t\t\tthis.set(\"showExtension\", extensionControl.get(\"active\") == true);\r\n\t\t});\r\n\r\n\t\textensionControl.events.on(\"click\", this._resetControls, this);\r\n\r\n\t\t/**\r\n\t\t * Select control\r\n\t\t */\r\n\t\tconst selectControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Select\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Select\"),\r\n\t\t\tactive: stockChart.get(\"drawingSelectionEnabled\", false)\r\n\t\t});\r\n\t\tthis._disposers.push(stockChart.on(\"drawingSelectionEnabled\", (active) => {\r\n\t\t\tselectControl.set(\"active\", active);\r\n\t\t}));\r\n\r\n\t\tselectControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(selectControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"selectControl\", selectControl);\r\n\t\tselectControl.on(\"active\", (_ev) => {\r\n\t\t\tconst active = selectControl.get(\"active\", false);\r\n\t\t\tstockChart.set(\"drawingSelectionEnabled\", active);\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Eraser control\r\n\t\t */\r\n\t\tconst eraserControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tdescription: l.translateAny(\"Eraser\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Eraser\")\r\n\t\t});\r\n\r\n\t\tthis._disposers.push(stockChart.on(\"erasingEnabled\", (active) => {\r\n\t\t\teraserControl.set(\"active\", active);\r\n\t\t}));\r\n\r\n\t\teraserControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(eraserControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"eraserControl\", eraserControl);\r\n\t\teraserControl.on(\"active\", (_ev) => {\r\n\t\t\tconst active = eraserControl.get(\"active\", false);\r\n\t\t\tthis.setEraser(active);\r\n\t\t});\r\n\r\n\t\t/**\r\n\t\t * Clear all drawings control\r\n\t\t */\r\n\t\tconst clearControl = StockControl.new(this._root, {\r\n\t\t\tstockChart: stockChart,\r\n\t\t\tname: l.translateAny(\"Clear\"),\r\n\t\t\tdescription: l.translateAny(\"Clear all drawings\"),\r\n\t\t\ticon: StockIcons.getIcon(\"Clear\"),\r\n\t\t\ttogglable: false\r\n\t\t});\r\n\t\tclearControl.setPrivate(\"toolbar\", toolbar);\r\n\t\ttoolsContainer.appendChild(clearControl.getPrivate(\"button\")!);\r\n\t\tthis.setPrivate(\"clearControl\", clearControl);\r\n\t\tthis._disposers.push($utils.addEventListener(clearControl.getPrivate(\"button\")!, \"click\", (_ev) => {\r\n\t\t\teraserControl.set(\"active\", false);\r\n\t\t\tthis.clearDrawings();\r\n\t\t}));\r\n\r\n\t\t// Preset active tool\r\n\t\tif (this.get(\"active\")) {\r\n\t\t\tthis._setTool(this.get(\"tool\"));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Enables or disables eraser mode.\r\n\t *\r\n\t * @since 5.3.9\r\n\t * @param  active  Eraser active\r\n\t */\r\n\tpublic setEraser(active: boolean) {\r\n\t\tthis.get(\"stockChart\").set(\"erasingEnabled\", active);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all drawings.\r\n\t *\r\n\t * @since 5.3.9\r\n\t */\r\n\tpublic clearDrawings() {\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\t//series.disableErasing();\r\n\t\t\t\tseries.clearDrawings();\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tconst isInited = this._isInited();\r\n\r\n\t\tif (this.isDirty(\"tools\")) {\r\n\t\t\tconst toolControl = this.getPrivate(\"toolControl\");\r\n\t\t\tif (toolControl) {\r\n\t\t\t\ttoolControl.set(\"tools\", this.get(\"tools\")!);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isPrivateDirty(\"toolbar\")) {\r\n\t\t\tif (this.getPrivate(\"toolbar\")) {\r\n\t\t\t\tthis._initToolbar();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"active\")) {\r\n\t\t\tthis.get(\"stockChart\").toggleDrawing(this.get(\"active\"))\r\n\t\t\t\r\n\t\t\tif (this.get(\"active\")) {\t\t\t\t\r\n\t\t\t\tif (isInited) {\r\n\t\t\t\t\tthis.getPrivate(\"toolsContainer\")!.style.display = \"block\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._setTool(this.get(\"tool\"));\r\n\t\t\t\tif (isInited) {\r\n\t\t\t\t\t$utils.focus(this.getPrivate(\"toolControl\")!.getPrivate(\"button\") as HTMLElement);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (isInited) {\r\n\t\t\t\t\tthis.getPrivate(\"toolsContainer\")!.style.display = \"none\";\r\n\t\t\t\t}\r\n\t\t\t\tthis._setTool();\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\tif (this.isDirty(\"tool\") && this.get(\"active\")) {\r\n\t\t\tthis._setTool(this.get(\"tool\"));\r\n\t\t}\r\n\r\n\t\tconst rootEvents = this._root.events;\r\n\t\tif (this.isDirty(\"strokeColor\") || this.isDirty(\"strokeWidth\") || this.isDirty(\"strokeOpacity\") || this.isDirty(\"strokeDasharray\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setStroke();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"fillColor\") || this.isDirty(\"fillOpacity\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setFill();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"labelFill\") || this.isDirty(\"labelFontSize\") || this.isDirty(\"labelFontFamily\") || this.isDirty(\"labelFontWeight\") || this.isDirty(\"labelFontStyle\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setLabel();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"showExtension\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setExtension();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"drawingIcon\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setDrawingIcon();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (this.isDirty(\"snapToData\")) {\r\n\t\t\trootEvents.once(\"frameended\", () => {\r\n\t\t\t\tthis._setSnap();\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _setTool(tool?: DrawingTools): void {\r\n\t\tconst isInited = this._isInited();\r\n\r\n\t\t// Disable current drawing series\r\n\t\t$array.each(this._currentEnabledSeries, (series) => {\r\n\t\t\tseries.disableDrawing();\r\n\t\t});\r\n\t\tthis._currentEnabledSeries = [];\r\n\r\n\t\t// Disable editing\r\n\t\tif (!tool) {\r\n\t\t\tif (isInited) {\r\n\t\t\t\tthis.getPrivate(\"eraserControl\")!.set(\"active\", false);\r\n\t\t\t}\r\n\t\t\tthis.get(\"stockChart\").set(\"drawingSelectionEnabled\", false)\t\t\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// Check if we need to create series\r\n\t\tthis._maybeInitToolSeries(tool);\r\n\t\tlet seriesList = this._drawingSeries[tool];\r\n\r\n\t\tlet prevPanel: StockPanel;\r\n\t\t$array.each(seriesList, (series) => {\r\n\t\t\tif (prevPanel !== series.chart) {\r\n\t\t\t\tseries.enableDrawing();\r\n\t\t\t\tthis._currentEnabledSeries.push(series);\r\n\t\t\t\tprevPanel = series.chart as StockPanel;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif (isInited) {\r\n\t\t\tthis.getPrivate(\"toolControl\")!.setTool(tool);\r\n\r\n\t\t\t// Show/hide needed drawing property controls\r\n\t\t\tconst controls: any = {\r\n\t\t\t\tstrokeControl: [\"Average\", \"Callout\", \"Doodle\", \"Ellipse\", \"Fibonacci\", \"Fibonacci Timezone\", \"Horizontal Line\", \"Horizontal Ray\", \"Arrows &amp; Icons\", \"Line\", \"Line Arrow\", \"Parallel Channel\", \"Polyline\", \"Polyfill\", \"Triangle\", \"Quadrant Line\", \"Rectangle\", \"Regression\", \"Trend Line\", \"Vertical Line\"],\r\n\t\t\t\tstrokeWidthControl: [\"Average\", \"Doodle\", \"Ellipse\", \"Horizontal Line\", \"Horizontal Ray\", \"Arrows &amp; Icons\", \"Line\", \"Line Arrow\", \"Polyline\", \"Polyfill\", \"Triangle\", \"Quadrant Line\", \"Rectangle\", \"Regression\", \"Trend Line\", \"Vertical Line\", \"Parallel Channel\"],\r\n\t\t\t\tstrokeDasharrayControl: [\"Average\", \"Doodle\", \"Ellipse\", \"Horizontal Line\", \"Horizontal Ray\", \"Arrows &amp; Icons\", \"Line\", \"Line Arrow\", \"Polyline\", \"Polyfill\", \"Triangle\", \"Quadrant Line\", \"Rectangle\", \"Regression\", \"Trend Line\", \"Vertical Line\"],\r\n\t\t\t\textensionControl: [\"Average\", \"Line\", \"Regression\", \"Trend Line\"],\r\n\t\t\t\tfillControl: [\"Callout\", \"Ellipse\", \"Quadrant Line\", \"Rectangle\", \"Parallel Channel\", \"Polyfill\", \"Triangle\", \"Polyfill\", \"Triangle\", \"Arrows &amp; Icons\", \"Fibonacci Timezone\"],\r\n\r\n\t\t\t\tlabelFillControl: [\"Callout\", \"Label\"],\r\n\t\t\t\tlabelFontSizeControl: [\"Callout\", \"Label\"],\r\n\t\t\t\tlabelFontFamilyControl: [\"Callout\", \"Label\"],\r\n\t\t\t\tboldControl: [\"Callout\", \"Label\"],\r\n\t\t\t\titalicControl: [\"Callout\", \"Label\"],\r\n\r\n\t\t\t\ticonControl: [\"Arrows &amp; Icons\"],\r\n\t\t\t\tsnapControl: [\"Callout\", \"Arrows &amp; Icons\", \"Line\", \"Line Arrow\", \"Polyline\", \"Polyfill\", \"Triangle\", \"Parallel Channel\", \"Label\", \"Callout\", \"Horizontal Line\", \"Horizontal Ray\", \"Vertical Line\", \"Quadrant Line\", \"Rectangle\", \"Measure\", \"Fibonacci\"],\r\n\t\t\t}\r\n\r\n\t\t\t$object.each(controls, (control, tools) => {\r\n\t\t\t\tconst controlElement = (<any>this).getPrivate(control);\r\n\t\t\t\tif (tools.indexOf(tool) == -1) {\r\n\t\t\t\t\tcontrolElement.hide();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tcontrolElement.show();\r\n\t\t\t\t}\r\n\t\t\t\t//controlElement!.getPrivate(\"button\").style.display = tools.indexOf(tool) == -1 ? \"none\" : \"\";\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _maybeInitToolSeries(tool: DrawingTools): void {\r\n\t\tlet seriesList = this._drawingSeries[tool];\r\n\t\tif (!seriesList) {\r\n\t\t\tseriesList = [];\r\n\t\t}\r\n\r\n\t\t// Get panels that are already initialized\r\n\t\tconst initializedPanels: StockPanel[] = [];\r\n\t\t$array.each(seriesList, (series: DrawingSeries) => {\r\n\t\t\tinitializedPanels.push(series.chart as StockPanel);\r\n\t\t});\r\n\r\n\t\t// Get target series\r\n\t\tconst chartSeries: XYSeries[] = this.get(\"series\", []);\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t// if (chartSeries.length == 0) {\r\n\t\t// \t// No target series set, take first series out of each chart\r\n\t\tstockChart.panels.each((panel) => {\r\n\t\t\tif (initializedPanels.indexOf(panel) == -1) {\r\n\t\t\t\tconst targetSeries = this._getPanelMainSeries(panel);\r\n\t\t\t\tif (targetSeries) {\r\n\t\t\t\t\tchartSeries.push(targetSeries);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\t// }\r\n\r\n\t\tif (chartSeries.length > 0) {\r\n\t\t\tconst toolSettings: any = this.get(\"toolSettings\", {});\r\n\r\n\t\t\t// Populate the list\r\n\t\t\t$array.each(chartSeries, (chartSeries) => {\r\n\t\t\t\tlet series: DrawingSeries | undefined;\r\n\t\t\t\tconst xAxis = <any>chartSeries.get(\"xAxis\");\r\n\t\t\t\tconst yAxis = <any>chartSeries.get(\"yAxis\");\r\n\t\t\t\tconst panel = chartSeries.chart! as StockPanel;\r\n\t\t\t\tlet template: any;\r\n\t\t\t\tif (toolSettings[tool]) {\r\n\t\t\t\t\ttemplate = Template.new(toolSettings[tool]);\r\n\t\t\t\t\tconst toolTemplates: any = this.getPrivate(\"toolTemplates\", {});\r\n\t\t\t\t\ttoolTemplates[tool] = template;\r\n\t\t\t\t\tthis.setPrivate(\"toolTemplates\", toolTemplates);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tswitch (tool) {\r\n\t\t\t\t\tcase \"Arrows &amp; Icons\":\r\n\t\t\t\t\t\tconst icon = this.get(\"drawingIcon\", this.get(\"drawingIcons\")![0]);\r\n\t\t\t\t\t\tseries = IconSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\t\t\ticonSvgPath: icon.svgPath,\r\n\t\t\t\t\t\t\ticonScale: icon.scale,\r\n\t\t\t\t\t\t\ticonCenterX: icon.centerX,\r\n\t\t\t\t\t\t\ticonCenterY: icon.centerY,\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Average\":\r\n\t\t\t\t\t\tseries = AverageSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Callout\":\r\n\t\t\t\t\t\tseries = CalloutSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Doodle\":\r\n\t\t\t\t\t\tseries = DoodleSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tseries.fills.template.setAll({\r\n\t\t\t\t\t\t\tforceHidden: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Ellipse\":\r\n\t\t\t\t\t\tseries = EllipseSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Fibonacci\":\r\n\t\t\t\t\t\tseries = FibonacciSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Fibonacci Timezone\":\r\n\t\t\t\t\t\tseries = FibonacciTimezoneSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase \"Horizontal Line\":\r\n\t\t\t\t\t\tseries = HorizontalLineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Horizontal Ray\":\r\n\t\t\t\t\t\tseries = HorizontalRaySeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Label\":\r\n\t\t\t\t\t\tseries = LabelSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Line\":\r\n\t\t\t\t\t\tseries = SimpleLineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Line Arrow\":\r\n\t\t\t\t\t\tseries = LineArrowSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Measure\":\r\n\t\t\t\t\t\tseries = Measure.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Parallel Channel\":\r\n\t\t\t\t\t\tseries = ParallelChannelSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Polyline\":\r\n\t\t\t\t\t\tseries = PolylineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tseries.fills.template.setAll({\r\n\t\t\t\t\t\t\tforceHidden: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Polyfill\":\r\n\t\t\t\t\t\tseries = PolylineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\t\t\tfillShape: true\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tseries.fills.template.setAll({\r\n\t\t\t\t\t\t\tforceHidden: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Triangle\":\r\n\t\t\t\t\t\tseries = PolylineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\t\t\tfillShape: true,\r\n\t\t\t\t\t\t\tpointCount: 3\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tseries.fills.template.setAll({\r\n\t\t\t\t\t\t\tforceHidden: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Quadrant Line\":\r\n\t\t\t\t\t\tseries = QuadrantLineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Rectangle\":\r\n\t\t\t\t\t\tseries = RectangleSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Regression\":\r\n\t\t\t\t\t\tseries = RegressionSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Trend Line\":\r\n\t\t\t\t\t\tseries = TrendLineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"Vertical Line\":\r\n\t\t\t\t\t\tseries = VerticalLineSeries.new(this._root, {\r\n\t\t\t\t\t\t\tseries: chartSeries,\r\n\t\t\t\t\t\t\txAxis: xAxis,\r\n\t\t\t\t\t\t\tyAxis: yAxis\r\n\t\t\t\t\t\t}, template);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif (series) {\r\n\t\t\t\t\tseriesList.push(series);\r\n\t\t\t\t\tpanel.drawings.push(series);\r\n\t\t\t\t\tseries.setPrivate(\"baseValueSeries\", chartSeries);\r\n\t\t\t\t\tseries.set(\"valueYShow\", stockChart.getSeriesDefault(chartSeries, \"valueYShow\"));\r\n\t\t\t\t\tseries.set(\"calculateAggregates\", true);\r\n\t\t\t\t\tif (stockChart.getPrivate(\"comparing\")) {\r\n\t\t\t\t\t\tstockChart.setPercentScale(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\t\tthis._drawingSeries[tool] = seriesList;\r\n\r\n\t\t\tthis._setStroke();\r\n\t\t\tthis._setFill();\r\n\t\t\tthis._setLabel();\r\n\t\t\tthis._setDrawingIcon();\r\n\t\t\tthis._setSnap();\r\n\t\t\tthis._setExtension();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateSeriesBindings(panel: StockPanel): void {\r\n\t\tconst targetSeries = this._getPanelMainSeries(panel);\r\n\t\tif (targetSeries) {\r\n\t\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t\t$array.eachReverse(seriesList, (series) => {\r\n\t\t\t\t\tif (series.chart == panel) {\r\n\t\t\t\t\t\tif (panel.isDisposed()) {\r\n\t\t\t\t\t\t\t$array.remove(seriesList, series);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tseries.set(\"series\", targetSeries);\r\n\t\t\t\t\t\t\tseries.setPrivate(\"baseValueSeries\", targetSeries);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getPanelMainSeries(panel: StockPanel): XYSeries | undefined {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\");\r\n\t\tlet targetSeries: XYSeries | undefined;\r\n\t\tif (stockSeries && stockSeries.chart == panel) {\r\n\t\t\ttargetSeries = stockSeries;\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttargetSeries = panel.series.getIndex(0);\r\n\t\t}\r\n\t\treturn targetSeries;\r\n\t}\r\n\r\n\tprotected _updatePanelBindings(): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.panels.each((panel) => {\r\n\t\t\tpanel.series.events.onAll(() => this._updateSeriesBindings(panel));\r\n\t\t});\r\n\t}\r\n\r\n\tprotected _setStroke(): void {\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\tseries.setAll({\r\n\t\t\t\t\tstrokeColor: this.get(\"strokeColor\"),\r\n\t\t\t\t\tstrokeWidth: this.get(\"strokeWidth\"),\r\n\t\t\t\t\tstrokeOpacity: this.get(\"strokeOpacity\"),\r\n\t\t\t\t\tstrokeDasharray: this.get(\"strokeDasharray\"),\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setFill(): void {\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\tseries.setAll({\r\n\t\t\t\t\tfillColor: this.get(\"fillColor\"),\r\n\t\t\t\t\tfillOpacity: this.get(\"fillOpacity\")\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setLabel(): void {\r\n\t\tconst labelTools = [\"Callout\", \"Label\"];\r\n\t\t$object.each(this._drawingSeries, (tool, seriesList) => {\r\n\t\t\tif (labelTools.indexOf(<string>tool) != -1) {\r\n\t\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\t\t(<LabelSeries>series).setAll({\r\n\t\t\t\t\t\tlabelFill: this.get(\"labelFill\"),\r\n\t\t\t\t\t\tlabelFontSize: this.get(\"labelFontSize\"),\r\n\t\t\t\t\t\tlabelFontFamily: this.get(\"labelFontFamily\"),\r\n\t\t\t\t\t\tlabelFontWeight: this.get(\"labelFontWeight\"),\r\n\t\t\t\t\t\tlabelFontStyle: this.get(\"labelFontStyle\")\r\n\t\t\t\t\t})\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setExtension(): void {\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\tif (series instanceof SimpleLineSeries) {\r\n\t\t\t\t\tseries.setAll({\r\n\t\t\t\t\t\tshowExtension: this.get(\"showExtension\")\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setDrawingIcon(): void {\r\n\t\tif (!this._isInited()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst icon = this.get(\"drawingIcon\", this.get(\"drawingIcons\")![0]);\r\n\t\tconst fillControl = this.getPrivate(\"fillControl\")!;\r\n\t\tif (icon.fillDisabled) {\r\n\t\t\tfillControl.hide();\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfillControl.show();\r\n\t\t}\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\tif (series instanceof IconSeries) {\r\n\t\t\t\t\tseries.setAll({\r\n\t\t\t\t\t\ticonSvgPath: icon.svgPath,\r\n\t\t\t\t\t\ticonScale: icon.scale,\r\n\t\t\t\t\t\ticonCenterX: icon.centerX,\r\n\t\t\t\t\t\ticonCenterY: icon.centerY,\r\n\t\t\t\t\t\tfillOpacity: icon.fillDisabled ? 0 : this.get(\"fillOpacity\")\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _setSnap(): void {\r\n\t\tconst snap = this.get(\"snapToData\", false);\r\n\t\t$object.each(this._drawingSeries, (_tool, seriesList) => {\r\n\t\t\t$array.each(seriesList, (series) => {\r\n\t\t\t\tif (series.getPrivate(\"allowChangeSnap\")) {\r\n\t\t\t\t\tseries.set(\"snapToData\", snap);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Draw\");\r\n\t}\r\n\r\n\tprotected _dispose(): void {\r\n\t\tsuper._dispose();\r\n\t\tconst toolsContainer = this.getPrivate(\"toolsContainer\");\r\n\t\tif (toolsContainer) {\r\n\t\t\t$utils.removeElement(toolsContainer);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getSeriesTool(series: DrawingSeries): DrawingTools | undefined {\r\n\t\tif (series instanceof DrawingSeries) {\r\n\t\t\tlet name = series.className;\r\n\t\t\tif (name == \"SimpleLineSeries\") {\r\n\t\t\t\treturn \"Line\";\r\n\t\t\t}\r\n\t\t\telse if (name == \"IconSeries\") {\r\n\t\t\t\treturn \"Arrows &amp; Icons\";\r\n\t\t\t}\r\n\t\t\telse if (name == \"PolylineSeries\" && (series as PolylineSeries).get(\"pointCount\") == 3) {\r\n\t\t\t\treturn \"Triangle\";\r\n\t\t\t}\r\n\t\t\telse if (name == \"PolylineSeries\" && (series as PolylineSeries).get(\"fillShape\")) {\r\n\t\t\t\treturn \"Polyfill\";\r\n\t\t\t}\r\n\t\t\tname = $utils.addSpacing(name.replace(\"Series\", \"\"));\r\n\t\t\treturn name as DrawingTools;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes all drawings into an array of simple objects or JSON.\r\n\t *\r\n\t * `output` parameter can either be `\"object\"` or `\"string\"` (default).\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param   output Output format\r\n\t * @param   indent Line indent in JSON\r\n\t * @return         Serialized indicators\r\n\t */\r\n\tpublic serializeDrawings(output: \"object\" | \"string\" = \"string\", indent?: string): Array<unknown> | string {\r\n\t\tconst res: Array<any> = [];\r\n\t\tthis.get(\"stockChart\").panels.each((panel, panelIndex) => {\r\n\t\t\tpanel.series.each((series) => {\r\n\t\t\t\tif (series.isType<DrawingSeries>(\"DrawingSeries\")) {\r\n\t\t\t\t\tconst serializer = Serializer.new(this.root, {\r\n\t\t\t\t\t\tincludeSettings: [\"strokeColor\", \"fillColor\", \"strokeOpacity\", \"fillOpacity\", \"strokeWidth\", \"strokeDasharray\", \"field\", \"snapToData\", \"svgPath\", \"labelFontSize\", \"labelFontFamily\", \"labelFontWeight\", \"labelFontStyle\", \"labelFill\", \"showExtension\"],\r\n\t\t\t\t\t\t//includeSettings: [\"data\"],\r\n\t\t\t\t\t\tmaxDepth: 4\r\n\t\t\t\t\t});\r\n\t\t\t\t\tseries.data.values.map((row: any) => {\r\n\t\t\t\t\t\trow.__parse = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconst json: any = {\r\n\t\t\t\t\t\t__tool: this._getSeriesTool(series),\r\n\t\t\t\t\t\t__panelIndex: panelIndex,\r\n\t\t\t\t\t\t__drawing: serializer.serialize(series.data.values, 0, true)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t//json.__panelIndex = panelIndex;\r\n\t\t\t\t\tres.push(json);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn output == \"object\" ? res : JSON.stringify(res, undefined, indent);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses data serialized with `serializeDrawings()` and adds drawings to the\r\n\t * chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param  data Serialized data\r\n\t */\r\n\tpublic unserializeDrawings(data: string | Array<any>): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tif ($type.isString(data)) {\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\tif (!$type.isArray(data)) {\r\n\t\t\tdata = [data];\r\n\t\t}\r\n\t\t$array.each(data, (drawing) => {\r\n\t\t\t// Panel\r\n\t\t\tlet panel = stockChart.panels.getIndex(drawing.__panelIndex || 0)!;\r\n\r\n\t\t\tif (panel) {\r\n\t\t\t\tconst tool = drawing.__tool;\r\n\r\n\t\t\t\tthis._maybeInitToolSeries(tool);\r\n\r\n\t\t\t\t// Get series\r\n\t\t\t\tlet drawingSeries: DrawingSeries;\r\n\t\t\t\t$array.each(this._drawingSeries[tool] || [], (series) => {\r\n\t\t\t\t\tif (series.chart === panel) {\r\n\t\t\t\t\t\tdrawingSeries = series;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (!drawing.settings) {\r\n\t\t\t\t\tdrawing.settings = {};\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Parse\r\n\t\t\t\tJsonParser.new(this._root).parse(drawing.__drawing).then((drawingData: any) => {\r\n\t\t\t\t\tthis._updateDrawingIndexes(drawingData, drawingSeries._index, drawingSeries);\r\n\t\t\t\t\tdrawingSeries.data.pushAll(drawingData);\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Wait until panel becomes available\r\n\t\t\t\tstockChart.panels.events.once(\"push\", (ev) => {\r\n\t\t\t\t\tev.newValue.series.events.once(\"push\", (_ev) => {\r\n\t\t\t\t\t\tthis.unserializeDrawings(drawing);\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _updateDrawingIndexes(drawingData: any, index: number, drawingSeries: DrawingSeries): void {\r\n\t\tif ($type.isArray(drawingData)) {\r\n\t\t\t$array.each(drawingData, (item: any) => {\r\n\t\t\t\tthis._updateDrawingIndexes(item, index, drawingSeries);\r\n\t\t\t})\r\n\t\t}\r\n\t\telse if ($type.isObject(drawingData as any) && drawingData.index !== undefined) {\r\n\t\t\tdrawingData.index += index;\r\n\t\t\tdrawingSeries._index = drawingData.index;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object that holds all drawing series, arrange by tool (key).\r\n\t *\r\n\t * @since 5.8.0\r\n\t * @readonly\r\n\t */\r\n\tpublic get drawingSeries(): { [index: string]: DrawingSeries[] } {\r\n\t\treturn this._drawingSeries;\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a line drawing.\r\n\t *\r\n\t * Supported tools: `\"Horizontal Line\"`, `\"Horizontal Ray\"`, `\"Vertical Line\"`.\r\n\t * \r\n\t * @param  tool   Drawing tool\r\n\t * @param  panel  Panel\r\n\t * @param  point  Point\r\n\t * @since 5.10.2\r\n\t */\r\n\tpublic addLine(tool: \"Horizontal Line\" | \"Horizontal Ray\" | \"Vertical Line\", panel: StockPanel, point: IPoint): void {\r\n\t\tthis._maybeInitToolSeries(tool);\r\n\t\tconst seriesList = this._drawingSeries[tool];\r\n\t\tlet targetSeries: SimpleLineSeries | undefined;\r\n\t\t$array.each(seriesList, (series) => {\r\n\t\t\tif (panel === series.chart) {\r\n\t\t\t\ttargetSeries = series as SimpleLineSeries;\r\n\t\t\t}\r\n\t\t});\r\n\t\tif (targetSeries) {\r\n\t\t\ttargetSeries.addLine(point);\r\n\t\t}\r\n\t}\r\n}","import type { StockLegend } from \"../StockLegend\";\r\nimport type { StockPanel } from \"../StockPanel\";\r\n\r\nimport { Indicator } from \"../indicators/Indicator\";\r\nimport { AccelerationBands } from \"../indicators/AccelerationBands\";\r\nimport { AccumulationDistribution } from \"../indicators/AccumulationDistribution\";\r\nimport { AccumulativeSwingIndex } from \"../indicators/AccumulativeSwingIndex\";\r\nimport { Aroon } from \"../indicators/Aroon\";\r\nimport { AwesomeOscillator } from \"../indicators/AwesomeOscillator\";\r\nimport { BollingerBands } from \"../indicators/BollingerBands\";\r\nimport { BullBearPower } from \"../indicators/BullBearPower\";\r\nimport { ChaikinMoneyFlow } from \"../indicators/ChaikinMoneyFlow\";\r\nimport { ChaikinOscillator } from \"../indicators/ChaikinOscillator\";\r\nimport { CommodityChannelIndex } from \"../indicators/CommodityChannelIndex\";\r\nimport { DisparityIndex } from \"../indicators/DisparityIndex\";\r\nimport { MACD } from \"../indicators/MACD\";\r\nimport { MACross } from \"../indicators/MACross\";\r\nimport { MovingAverage } from \"../indicators/MovingAverage\";\r\nimport { MovingAverageDeviation } from \"../indicators/MovingAverageDeviation\";\r\nimport { MovingAverageEnvelope } from \"../indicators/MovingAverageEnvelope\";\r\nimport { StandardDeviation } from \"../indicators/StandardDeviation\";\r\nimport { TypicalPrice } from \"../indicators/TypicalPrice\";\r\nimport { AverageTrueRange } from \"../indicators/AverageTrueRange\";\r\nimport { MedianPrice } from \"../indicators/MedianPrice\";\r\nimport { OnBalanceVolume } from \"../indicators/OnBalanceVolume\";\r\nimport { PVT } from \"../indicators/PVT\";\r\nimport { Momentum } from \"../indicators/Momentum\";\r\nimport { RelativeStrengthIndex } from \"../indicators/RelativeStrengthIndex\";\r\nimport { StochasticMomentumIndex } from \"../indicators/StochasticMomentumIndex\";\r\nimport { StochasticOscillator } from \"../indicators/StochasticOscillator\";\r\nimport { WilliamsR } from \"../indicators/WilliamsR\";\r\nimport { Trix } from \"../indicators/Trix\";\r\nimport { Volume } from \"../indicators/Volume\";\r\nimport { VolumeProfile } from \"../indicators/VolumeProfile\";\r\nimport { VWAP } from \"../indicators/VWAP\";\r\nimport { ZigZag } from \"../indicators/ZigZag\";\r\n\r\nimport { JsonParser } from \"../../../plugins/json/Json\";\r\nimport { Serializer } from \"../../../plugins/json/Serializer\";\r\n\r\n//import type { IDisposer } from \"../../../core/util/Disposer\";\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport type { DropdownList, IDropdownListItem } from \"./DropdownList\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport type Indicators = \"Acceleration Bands\" | \"Accumulation Distribution\" | \"Accumulative Swing Index\" | \"Aroon\" | \"Average True Range\" | \"Awesome Oscillator\" | \"Bollinger Bands\" | \"Bull Bear Power\" | \"Chaikin Money Flow\" | \"Chaikin Oscillator\" | \"Commodity Channel Index\" | \"Disparity Index\" | \"MACD\" | \"Momentum\" | \"Moving Average\" | \"Moving Average Cross\" | \"Moving Average Deviation\" | \"Moving Average Envelope\" | \"On Balance Volume\" | \"Price Volume Trend\" | \"Relative Strength Index\" | \"Standard Deviation\" | \"Stochastic Oscillator\" | \"Stochastic Momentum Index\" | \"Trix\" | \"Typical Price\" | \"Volume\" | \"Volume Profile\" | \"VWAP\" | \"Williams R\" | \"Median Price\" | \"ZigZag\";\r\n\r\nexport interface IIndicator {\r\n\tid: string;\r\n\tname: string;\r\n\tcallback: () => Indicator;\r\n}\r\n\r\nexport interface IIndicatorControlSettings extends IDropdownListControlSettings {\r\n\tindicators?: Array<Indicators | IIndicator>;\r\n\tlegend?: StockLegend;\r\n}\r\n\r\nexport interface IIndicatorControlPrivate extends IDropdownListControlPrivate {\r\n\t/**\r\n\t * Here for backwards compatiblity befor [[IndicatorControl]] was\r\n\t * migrated to extend [[DropdownListControl]].\r\n\t *\r\n\t * @ignore\r\n\t */\r\n\tlist?: DropdownList;\r\n}\r\n\r\nexport interface IIndicatorControlEvents extends IDropdownListControlEvents {\r\n\tselected: {\r\n\t\titem: string | IDropdownListItem;\r\n\t\tindicator: Indicator | IIndicator;\r\n\t}\r\n}\r\n\r\n/**\r\n * A [[StockToolbar]] control for adding indicators to a [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/indicator-control/} for more info\r\n */\r\nexport class IndicatorControl extends DropdownListControl {\r\n\tpublic static className: string = \"IndicatorControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([IndicatorControl.className]);\r\n\r\n\tdeclare public _settings: IIndicatorControlSettings;\r\n\tdeclare public _privateSettings: IIndicatorControlPrivate;\r\n\tdeclare public _events: IIndicatorControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst list = this.getPrivate(\"dropdown\")!;\r\n\t\tthis.setPrivate(\"list\", list);\r\n\r\n\t\tlist.events.on(\"invoked\", (ev) => {\r\n\t\t\tconst indicator = this.addIndicator(<Indicators>ev.item.id);\r\n\t\t\tif (this.events.isEnabled(\"selected\") && indicator) {\r\n\t\t\t\tthis.events.dispatch(\"selected\", {\r\n\t\t\t\t\ttype: \"selected\",\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tindicator: indicator,\r\n\t\t\t\t\titem: ev.item\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlist.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => list.show(), 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlist.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tthis._initList();\r\n\r\n\t\t// Re-nit list if volume series is added or removed so that we can show/hide\r\n\t\t// volume-dependent indicators\r\n\t\tthis.get(\"stockChart\").on(\"volumeSeries\", () => this._initList());\r\n\t}\r\n\r\n\tprotected _initList(): void {\r\n\t\tconst list = this.getPrivate(\"list\")!;\r\n\t\tconst indicators = this.get(\"indicators\")!;\r\n\t\tconst items: IDropdownListItem[] = [];\r\n\t\t$array.each(indicators, (indicator: Indicators | IIndicator) => {\r\n\t\t\tif ($type.isObject(indicator)) {\r\n\t\t\t\tif (this.supportsIndicator(indicator.id as Indicators)) {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tid: indicator.id,\r\n\t\t\t\t\t\tlabel: indicator.name\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (this.supportsIndicator(indicator as Indicators)) {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tid: indicator,\r\n\t\t\t\t\t\tlabel: this._root.language.translateAny(indicator)\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tlist.set(\"items\", items);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `true` if the indicator is supported in current chart setup.\r\n\t * \r\n\t * @param   indicatorId  Indicator ID\r\n\t * @return               Supported?\r\n\t */\r\n\tpublic supportsIndicator(indicatorId: Indicators): boolean {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst volumeIndicators = [\"Chaikin Money Flow\", \"Chaikin Oscillator\", \"On Balance Volume\", \"Price Volume Trend\", \"Volume\", \"Volume Profile\", \"VWAP\"];\r\n\t\treturn (stockChart.get(\"volumeSeries\") || volumeIndicators.indexOf(indicatorId) === -1) ? true : false;\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Indicator\");\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\t\tif (this.isDirty(\"indicators\")) {\r\n\t\t\tthis._initList();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Removes all indicators from the stock chart.\r\n\t *\r\n\t * @since 5.9.3\r\n\t */\r\n\tpublic clearIndicators(): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.indicators.eachReverse((indicator) => {\r\n\t\t\tindicator.dispose();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a specific indicator, adds it to chart, and returns the instance.\r\n\t * \r\n\t * @param   indicatorId  Indicator ID\r\n\t * @return               Indicator instance\r\n\t */\r\n\tpublic addIndicator(indicatorId: Indicators): Indicator | undefined {\r\n\r\n\t\tif (!this.supportsIndicator(indicatorId)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tlet indicator: Indicator | undefined;\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\")!;\r\n\t\tconst volumeSeries = stockChart.get(\"volumeSeries\")!;\r\n\t\tconst legend = this.get(\"legend\");\r\n\r\n\t\tswitch (indicatorId) {\r\n\t\t\tcase \"Acceleration Bands\":\r\n\t\t\t\tindicator = AccelerationBands.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"Accumulation Distribution\":\r\n\t\t\t\tindicator = AccumulationDistribution.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Accumulative Swing Index\":\r\n\t\t\t\tindicator = AccumulativeSwingIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Aroon\":\r\n\t\t\t\tindicator = Aroon.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Awesome Oscillator\":\r\n\t\t\t\tindicator = AwesomeOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bollinger Bands\":\r\n\t\t\t\tindicator = BollingerBands.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Bull Bear Power\":\r\n\t\t\t\tindicator = BullBearPower.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Chaikin Money Flow\":\r\n\t\t\t\tindicator = ChaikinMoneyFlow.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Chaikin Oscillator\":\r\n\t\t\t\tindicator = ChaikinOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Commodity Channel Index\":\r\n\t\t\t\tindicator = CommodityChannelIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Disparity Index\":\r\n\t\t\t\tindicator = DisparityIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"MACD\":\r\n\t\t\t\tindicator = MACD.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Median Price\":\r\n\t\t\t\tindicator = MedianPrice.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Momentum\":\r\n\t\t\t\tindicator = Momentum.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average Cross\":\r\n\t\t\t\tindicator = MACross.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average\":\r\n\t\t\t\tindicator = MovingAverage.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average Deviation\":\r\n\t\t\t\tindicator = MovingAverageDeviation.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Moving Average Envelope\":\r\n\t\t\t\tindicator = MovingAverageEnvelope.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Standard Deviation\":\r\n\t\t\t\tindicator = StandardDeviation.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Trix\":\r\n\t\t\t\tindicator = Trix.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Typical Price\":\r\n\t\t\t\tindicator = TypicalPrice.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Average True Range\":\r\n\t\t\t\t\tindicator = AverageTrueRange.new(this.root, {\r\n\t\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\t\tlegend: legend\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\tcase \"On Balance Volume\":\r\n\t\t\t\tindicator = OnBalanceVolume.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Price Volume Trend\":\r\n\t\t\t\tindicator = PVT.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Relative Strength Index\":\r\n\t\t\t\tindicator = RelativeStrengthIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stochastic Momentum Index\":\r\n\t\t\t\tindicator = StochasticMomentumIndex.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Stochastic Oscillator\":\r\n\t\t\t\tindicator = StochasticOscillator.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Williams R\":\r\n\t\t\t\tindicator = WilliamsR.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Volume\":\r\n\t\t\t\tindicator = Volume.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Volume Profile\":\r\n\t\t\t\tindicator = VolumeProfile.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"VWAP\":\r\n\t\t\t\tindicator = VWAP.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tvolumeSeries: volumeSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"ZigZag\":\r\n\t\t\t\tindicator = ZigZag.new(this.root, {\r\n\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\tstockSeries: stockSeries,\r\n\t\t\t\t\tlegend: legend\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif (!indicator) {\r\n\t\t\t// Try searching in the list\r\n\t\t\t$array.eachContinue(this.get(\"indicators\", []), (item) => {\r\n\t\t\t\tif ($type.isObject(item) && item.id == indicatorId) {\r\n\t\t\t\t\tindicator = item.callback.call(this);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (indicator) {\r\n\t\t\tstockChart.indicators.push(indicator);\r\n\t\t\tif (indicator._editableSettings.length && indicator.get(\"autoOpenSettings\", true)) {\r\n\t\t\t\tconst modal = stockChart.getPrivate(\"settingsModal\");\r\n\t\t\t\tmodal.events.once(\"done\", (ev) => {\r\n\t\t\t\t\tif (indicator) {\r\n\t\t\t\t\t\tif (!ev.settings) {\r\n\t\t\t\t\t\t\tindicator.dispose();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tmodal.openIndicator(indicator);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn indicator;\r\n\t}\r\n\r\n\t/**\r\n\t * Serializes all available indicators into an array of simple objects or\r\n\t * JSON.\r\n\t *\r\n\t * `output` parameter can either be `\"object\"` or `\"string\"` (default).\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param   output Output format\r\n\t * @param   indent Line indent in JSON\r\n\t * @return         Serialized indicators\r\n\t */\r\n\tpublic serializeIndicators(output: \"object\" | \"string\" = \"string\", indent?: string): Array<unknown> | string {\r\n\t\tconst res: Array<any> = [];\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.indicators.each((indicator) => {\r\n\t\t\tconst serializer = Serializer.new(this._root, {\r\n\t\t\t\texcludeSettings: [\"stockChart\", \"stockSeries\", \"volumeSeries\", \"legend\"]\r\n\t\t\t});\r\n\r\n\t\t\t// Panel\r\n\t\t\tconst json: any = {};\r\n\r\n\t\t\t// Series and legend\r\n\t\t\tif (indicator.get(\"stockSeries\")) {\r\n\t\t\t\tjson.__stockSeries = true;\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.get(\"volumeSeries\")) {\r\n\t\t\t\tjson.__volumeSeries = true;\r\n\t\t\t}\r\n\r\n\t\t\tconst legend = indicator.get(\"legend\");\r\n\t\t\tif (legend) {\r\n\t\t\t\tlegend._walkParents((parent) => {\r\n\t\t\t\t\tif (parent.isType(\"StockPanel\")) {\r\n\t\t\t\t\t\tjson.__legendIndex = stockChart.panels.indexOf(parent as StockPanel);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\t// Serialize\r\n\t\t\tjson.__indicator = serializer.serialize(indicator, 0);\r\n\r\n\t\t\tres.push(json);\r\n\t\t});\r\n\t\treturn output == \"object\" ? res : JSON.stringify(res, undefined, indent);\r\n\t}\r\n\r\n\t/**\r\n\t * Parses data serialized with `serializeIndicators()` and adds indicators to\r\n\t * the chart.\r\n\t *\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/serializing-indicators-annotations/} for more info\r\n\t * @since 5.3.0\r\n\t * @param  data Serialized data\r\n\t */\r\n\tpublic unserializeIndicators(data: string | Array<any>): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tif ($type.isString(data)) {\r\n\t\t\tdata = JSON.parse(data);\r\n\t\t}\r\n\t\t$array.each(data, (indicator) => {\r\n\r\n\t\t\t// Populate\r\n\t\t\tif (!indicator.__indicator.settings) {\r\n\t\t\t\tindicator.__indicator.settings = {};\r\n\t\t\t}\r\n\t\t\tindicator.__indicator.settings.stockChart = stockChart;\r\n\r\n\t\t\tif (indicator.__stockSeries && !indicator.__indicator.settings.stockSeries) {\r\n\t\t\t\tindicator.__indicator.settings.stockSeries = stockChart.get(\"stockSeries\");\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.__volumeSeries && !indicator.__indicator.settings.volumeSeries) {\r\n\t\t\t\tindicator.__indicator.settings.volumeSeries = stockChart.get(\"volumeSeries\");\r\n\t\t\t}\r\n\r\n\t\t\tif (indicator.__legendIndex !== undefined && !indicator.__indicator.settings.legend) {\r\n\t\t\t\t// Find a legend\r\n\t\t\t\tconst panel = stockChart.panels.getIndex(indicator.__legendIndex);\r\n\t\t\t\tif (panel) {\r\n\t\t\t\t\tpanel.walkChildren((child) => {\r\n\t\t\t\t\t\tif (child.isType(\"StockLegend\")) {\r\n\t\t\t\t\t\t\tindicator.__indicator.settings.legend = child;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Parse\r\n\t\t\tJsonParser.new(this._root).parse(indicator.__indicator).then((indicator: any) => {\r\n\t\t\t\tif (indicator instanceof Indicator) {\r\n\t\t\t\t\tstockChart.indicators.push(indicator);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t}\r\n\r\n}","export var HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nexport var defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: function (err) {\n        return typeof console !== \"undefined\" && console.warn(err);\n    },\n    getWeek: function (givenDate) {\n        var date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n","export var english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: function (nth) {\n        var s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\nexport default english;\n","export var pad = function (number, length) {\n    if (length === void 0) { length = 2; }\n    return (\"000\" + number).slice(length * -1);\n};\nexport var int = function (bool) { return (bool === true ? 1 : 0); };\nexport function debounce(fn, wait) {\n    var t;\n    return function () {\n        var _this = this;\n        var args = arguments;\n        clearTimeout(t);\n        t = setTimeout(function () { return fn.apply(_this, args); }, wait);\n    };\n}\nexport var arrayify = function (obj) {\n    return obj instanceof Array ? obj : [obj];\n};\n","export function toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nexport function createElement(tag, className, content) {\n    var e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nexport function clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nexport function findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nexport function createNumberInput(inputClassName, opts) {\n    var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (var key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nexport function getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            var path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n","import { int, pad } from \"../utils\";\nvar doNothing = function () { return undefined; };\nexport var monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\nexport var revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: function (dateObj, hour) {\n        dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n    },\n    H: function (dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: function (dateObj, amPM, locale) {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: function (dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\n    W: function (dateObj, weekNum, locale) {\n        var weekNumber = parseInt(weekNum);\n        var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: function (dateObj, year) {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: function (_, ISODate) { return new Date(ISODate); },\n    d: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: function (dateObj, hour) {\n        dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n    },\n    i: function (dateObj, minutes) {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: function (dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: function (dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: function (dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: function (_, unixMillSeconds) {\n        return new Date(parseFloat(unixMillSeconds));\n    },\n    w: doNothing,\n    y: function (dateObj, year) {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nexport var tokenRegex = {\n    D: \"\",\n    F: \"\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nexport var formats = {\n    Z: function (date) { return date.toISOString(); },\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return pad(formats.h(date, locale, options));\n    },\n    H: function (date) { return pad(date.getHours()); },\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: function (date, locale) { return locale.amPM[int(date.getHours() > 11)]; },\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: function (date) { return pad(date.getSeconds()); },\n    U: function (date) { return date.getTime() / 1000; },\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: function (date) { return pad(date.getFullYear(), 4); },\n    d: function (date) { return pad(date.getDate()); },\n    h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\n    i: function (date) { return pad(date.getMinutes()); },\n    j: function (date) { return date.getDate(); },\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: function (date) { return pad(date.getMonth() + 1); },\n    n: function (date) { return date.getMonth() + 1; },\n    s: function (date) { return date.getSeconds(); },\n    u: function (date) { return date.getTime(); },\n    w: function (date) { return date.getDay(); },\n    y: function (date) { return String(date.getFullYear()).substring(2); },\n};\n","import { tokenRegex, revFormat, formats, } from \"./formatting\";\nimport { defaults } from \"../types/options\";\nimport { english } from \"../l10n/default\";\nexport var createDateFormatter = function (_a) {\n    var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c, _d = _a.isMobile, isMobile = _d === void 0 ? false : _d;\n    return function (dateObj, frmt, overrideLocale) {\n        var locale = overrideLocale || l10n;\n        if (config.formatDate !== undefined && !isMobile) {\n            return config.formatDate(dateObj, frmt, locale);\n        }\n        return frmt\n            .split(\"\")\n            .map(function (c, i, arr) {\n            return formats[c] && arr[i - 1] !== \"\\\\\"\n                ? formats[c](dateObj, locale, config)\n                : c !== \"\\\\\"\n                    ? c\n                    : \"\";\n        })\n            .join(\"\");\n    };\n};\nexport var createDateParser = function (_a) {\n    var _b = _a.config, config = _b === void 0 ? defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? english : _c;\n    return function (date, givenFormat, timeless, customLocale) {\n        if (date !== 0 && !date)\n            return undefined;\n        var locale = customLocale || l10n;\n        var parsedDate;\n        var dateOrig = date;\n        if (date instanceof Date)\n            parsedDate = new Date(date.getTime());\n        else if (typeof date !== \"string\" &&\n            date.toFixed !== undefined)\n            parsedDate = new Date(date);\n        else if (typeof date === \"string\") {\n            var format = givenFormat || (config || defaults).dateFormat;\n            var datestr = String(date).trim();\n            if (datestr === \"today\") {\n                parsedDate = new Date();\n                timeless = true;\n            }\n            else if (config && config.parseDate) {\n                parsedDate = config.parseDate(date, format);\n            }\n            else if (/Z$/.test(datestr) ||\n                /GMT$/.test(datestr)) {\n                parsedDate = new Date(date);\n            }\n            else {\n                var matched = void 0, ops = [];\n                for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                    var token = format[i];\n                    var isBackSlash = token === \"\\\\\";\n                    var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                    if (tokenRegex[token] && !escaped) {\n                        regexStr += tokenRegex[token];\n                        var match = new RegExp(regexStr).exec(date);\n                        if (match && (matched = true)) {\n                            ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                                fn: revFormat[token],\n                                val: match[++matchIndex],\n                            });\n                        }\n                    }\n                    else if (!isBackSlash)\n                        regexStr += \".\";\n                }\n                parsedDate =\n                    !config || !config.noCalendar\n                        ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                        : new Date(new Date().setHours(0, 0, 0, 0));\n                ops.forEach(function (_a) {\n                    var fn = _a.fn, val = _a.val;\n                    return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\n                });\n                parsedDate = matched ? parsedDate : undefined;\n            }\n        }\n        if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n            config.errorHandler(new Error(\"Invalid date provided: \" + dateOrig));\n            return undefined;\n        }\n        if (timeless === true)\n            parsedDate.setHours(0, 0, 0, 0);\n        return parsedDate;\n    };\n};\nexport function compareDates(date1, date2, timeless) {\n    if (timeless === void 0) { timeless = true; }\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nexport function compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nexport var isBetween = function (ts, ts1, ts2) {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nexport var calculateSecondsSinceMidnight = function (hours, minutes, seconds) {\n    return hours * 3600 + minutes * 60 + seconds;\n};\nexport var parseSeconds = function (secondsSinceMidnight) {\n    var hours = Math.floor(secondsSinceMidnight / 3600), minutes = (secondsSinceMidnight - hours * 3600) / 60;\n    return [hours, minutes, secondsSinceMidnight - hours * 3600 - minutes * 60];\n};\nexport var duration = {\n    DAY: 86400000,\n};\nexport function getDefaultHours(config) {\n    var hours = config.defaultHour;\n    var minutes = config.defaultMinute;\n    var seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        var minHour = config.minDate.getHours();\n        var minMinutes = config.minDate.getMinutes();\n        var minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        var maxHr = config.maxDate.getHours();\n        var maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours: hours, minutes: minutes, seconds: seconds };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { defaults as defaultOptions, HOOKS, } from \"./types/options\";\nimport English from \"./l10n/default\";\nimport { arrayify, debounce, int, pad } from \"./utils\";\nimport { clearNode, createElement, createNumberInput, findParent, toggleClass, getEventTarget, } from \"./utils/dom\";\nimport { compareDates, createDateParser, createDateFormatter, duration, isBetween, getDefaultHours, calculateSecondsSinceMidnight, parseSeconds, } from \"./utils/dates\";\nimport { tokenRegex, monthToStr } from \"./utils/formatting\";\nimport \"./utils/polyfills\";\nvar DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    var self = {\n        config: __assign(__assign({}, defaultOptions), flatpickr.defaultConfig),\n        l10n: English,\n    };\n    self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self.onMouseOver = onMouseOver;\n    self._createElement = createElement;\n    self.createDay = createDay;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.updateValue = updateValue;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth: function (month, yr) {\n                if (month === void 0) { month = self.currentMonth; }\n                if (yr === void 0) { yr = self.currentYear; }\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function getClosestActiveElement() {\n        var _a;\n        return (((_a = self.calendarContainer) === null || _a === void 0 ? void 0 : _a.getRootNode())\n            .activeElement || document.activeElement);\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        var config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            var defaultDate = self.config.minDate === undefined ||\n                compareDates(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            var defaults = getDefaultHours(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        var prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * int(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        var limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        var limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                compareDates(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (self.config.maxTime !== undefined &&\n            self.config.minTime !== undefined &&\n            self.config.minTime > self.config.maxTime) {\n            var minBound = calculateSecondsSinceMidnight(self.config.minTime.getHours(), self.config.minTime.getMinutes(), self.config.minTime.getSeconds());\n            var maxBound = calculateSecondsSinceMidnight(self.config.maxTime.getHours(), self.config.maxTime.getMinutes(), self.config.maxTime.getSeconds());\n            var currentTime = calculateSecondsSinceMidnight(hours, minutes, seconds);\n            if (currentTime > maxBound && currentTime < minBound) {\n                var result = parseSeconds(minBound);\n                hours = result[0];\n                minutes = result[1];\n                seconds = result[2];\n            }\n        }\n        else {\n            if (limitMaxHours) {\n                var maxTime = self.config.maxTime !== undefined\n                    ? self.config.maxTime\n                    : self.config.maxDate;\n                hours = Math.min(hours, maxTime.getHours());\n                if (hours === maxTime.getHours())\n                    minutes = Math.min(minutes, maxTime.getMinutes());\n                if (minutes === maxTime.getMinutes())\n                    seconds = Math.min(seconds, maxTime.getSeconds());\n            }\n            if (limitMinHours) {\n                var minTime = self.config.minTime !== undefined\n                    ? self.config.minTime\n                    : self.config.minDate;\n                hours = Math.max(hours, minTime.getHours());\n                if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                    minutes = minTime.getMinutes();\n                if (minutes === minTime.getMinutes())\n                    seconds = Math.max(seconds, minTime.getSeconds());\n            }\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        var date = dateObj || self.latestSelectedDateObj;\n        if (date && date instanceof Date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = pad(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * int(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = pad(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[int(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = pad(seconds);\n    }\n    function onYearInput(event) {\n        var eventTarget = getEventTarget(event);\n        var year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach(function (ev) { return bind(element, ev, handler, options); });\n        if (element instanceof Array)\n            return element.forEach(function (el) { return bind(el, event, handler, options); });\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: function () { return element.removeEventListener(event, handler, options); },\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\n                Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\n                    return bind(el, \"click\", self[evt]);\n                });\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        var debouncedResize = debounce(onResize, 50);\n        self._debouncedChange = debounce(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", function (e) {\n                if (self.config.mode === \"range\")\n                    onMouseOver(getEventTarget(e));\n            });\n        bind(self._input, \"keydown\", onKeyDown);\n        if (self.calendarContainer !== undefined) {\n            bind(self.calendarContainer, \"keydown\", onKeyDown);\n        }\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            var selText = function (e) {\n                return getEventTarget(e).select();\n            };\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", function () { return self.secondElement && self.secondElement.select(); });\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", function (e) {\n                    updateTime(e);\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        var jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        var oldYear = self.currentYear;\n        var oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        var eventTarget = getEventTarget(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        var target = e && getEventTarget(e);\n        var input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        var event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        var fragment = window.document.createDocumentFragment();\n        self.calendarContainer = createElement(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = createElement(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = createElement(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = createElement(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        toggleClass(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        toggleClass(self.calendarContainer, \"animate\", self.config.animate === true);\n        toggleClass(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        var customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                var wrapper = createElement(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, _dayNumber, i) {\n        var dateIsEnabled = isEnabled(date, true), dayElement = createElement(\"span\", className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            compareDates(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    toggleClass(dayElement, \"startRange\", self.selectedDates[0] &&\n                        compareDates(date, self.selectedDates[0], true) === 0);\n                    toggleClass(dayElement, \"endRange\", self.selectedDates[1] &&\n                        compareDates(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            i % 7 === 6) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (var m = startMonth; m != endMonth; m += delta) {\n            var month = self.daysContainer.children[m];\n            var startIndex = delta > 0 ? 0 : month.children.length - 1;\n            var endIndex = delta > 0 ? month.children.length : -1;\n            for (var i = startIndex; i != endIndex; i += delta) {\n                var c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        var givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        var loopDelta = delta > 0 ? 1 : -1;\n        for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            var month = self.daysContainer.children[m];\n            var startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            var numMonthDays = month.children.length;\n            for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                var c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        var activeElement = getClosestActiveElement();\n        var dayFocused = isInView(activeElement || document.body);\n        var startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        var daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day \" + prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day \" + nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        var dayContainer = createElement(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        clearNode(self.daysContainer);\n        if (self.weekNumbers)\n            clearNode(self.weekNumbers);\n        var frag = document.createDocumentFragment();\n        for (var i = 0; i < self.config.showMonths; i++) {\n            var d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        var shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (var i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            var month = createElement(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = monthToStr(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        var container = createElement(\"div\", \"flatpickr-month\");\n        var monthNavFragment = window.document.createDocumentFragment();\n        var monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = createElement(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = createElement(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", function (e) {\n                var target = getEventTarget(e);\n                var selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        var yearInput = createNumberInput(\"cur-year\", { tabindex: \"-1\" });\n        var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        var currentMonth = createElement(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container: container,\n            yearElement: yearElement,\n            monthElement: monthElement,\n        };\n    }\n    function buildMonths() {\n        clearNode(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (var m = self.config.showMonths; m--;) {\n            var month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = createElement(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = createElement(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = createElement(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: function () { return self.__hidePrevMonthArrow; },\n            set: function (bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    toggleClass(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: function () { return self.__hideNextMonthArrow; },\n            set: function (bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    toggleClass(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        var defaults = getDefaultHours(self.config);\n        self.timeContainer = createElement(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        var separator = createElement(\"span\", \"flatpickr-time-separator\", \":\");\n        var hourInput = createNumberInput(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        var minuteInput = createNumberInput(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = pad(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            var secondInput = createNumberInput(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = pad(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild(createElement(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = createElement(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[int((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = createElement(\"div\", \"flatpickr-weekdays\");\n        else\n            clearNode(self.weekdayContainer);\n        for (var i = self.config.showMonths; i--;) {\n            var container = createElement(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\n        var weekdays = __spreadArrays(self.l10n.weekdays.shorthand);\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = __spreadArrays(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));\n        }\n        for (var i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = \"\\n      <span class='flatpickr-weekday'>\\n        \" + weekdays.join(\"</span><span class='flatpickr-weekday'>\") + \"\\n      </span>\\n      \";\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        var weekWrapper = createElement(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild(createElement(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        var weekNumbers = createElement(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper: weekWrapper,\n            weekNumbers: weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset) {\n        if (isOffset === void 0) { isOffset = true; }\n        var delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent, toInitial) {\n        if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\n        if (toInitial === void 0) { toInitial = true; }\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            var _a = getDefaultHours(self.config), hours = _a.hours, minutes = _a.minutes, seconds = _a.seconds;\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (var i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                var wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach(function (k) {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            var eventTarget_1 = getEventTarget(e);\n            var isCalendarElement = isCalendarElem(eventTarget_1);\n            var isInput = eventTarget_1 === self.input ||\n                eventTarget_1 === self.altInput ||\n                self.element.contains(eventTarget_1) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            var lostFocus = !isInput &&\n                !isCalendarElement &&\n                !isCalendarElem(e.relatedTarget);\n            var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {\n                return elem.contains(eventTarget_1);\n            });\n            if (lostFocus && isIgnored) {\n                if (self.config.allowInput) {\n                    self.setDate(self._input.value, false, self.config.altInput\n                        ? self.config.altFormat\n                        : self.config.dateFormat);\n                }\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1)\n                    self.clear(false);\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless) {\n        var _a;\n        if (timeless === void 0) { timeless = true; }\n        var dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            compareDates(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                compareDates(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        var bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (var i = 0, d = void 0; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                var parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        var isInput = e.target === self._input;\n        var valueChanged = self._input.value.trimEnd() !== getDateStr();\n        if (isInput &&\n            valueChanged &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        var eventTarget = getEventTarget(e);\n        var isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        var allowInput = self.config.allowInput;\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                self.close();\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            var isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        var activeElement = getClosestActiveElement();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (activeElement && isInView(activeElement)))) {\n                            var delta_1 = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta_1);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta_1);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    var delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        var elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter(function (x) { return x; });\n                        var i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            var target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem, cellClass) {\n        if (cellClass === void 0) { cellClass = \"flatpickr-day\"; }\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(cellClass) ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        var hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        var containsDisabled = false;\n        var minRange = 0, maxRange = 0;\n        for (var t = rangeStartDate; t < rangeEndDate; t += duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        var hoverableCells = Array.from(self.rContainer.querySelectorAll(\"*:nth-child(-n+\" + self.config.showMonths + \") > .\" + cellClass));\n        hoverableCells.forEach(function (dayElem) {\n            var date = dayElem.dateObj;\n            var timestamp = date.getTime();\n            var outOfRange = (minRange > 0 && timestamp < minRange) ||\n                (maxRange > 0 && timestamp > maxRange);\n            if (outOfRange) {\n                dayElem.classList.add(\"notAllowed\");\n                [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\n                    dayElem.classList.remove(c);\n                });\n                return;\n            }\n            else if (containsDisabled && !outOfRange)\n                return;\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\n                dayElem.classList.remove(c);\n            });\n            if (elem !== undefined) {\n                elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                    ? \"startRange\"\n                    : \"endRange\");\n                if (initialDate < hoverDate && timestamp === initialDate)\n                    dayElem.classList.add(\"startRange\");\n                else if (initialDate > hoverDate && timestamp === initialDate)\n                    dayElem.classList.add(\"endRange\");\n                if (timestamp >= minRange &&\n                    (maxRange === 0 || timestamp <= maxRange) &&\n                    isBetween(timestamp, initialDate, hoverDate))\n                    dayElem.classList.add(\"inRange\");\n            }\n        });\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement) {\n        if (positionElement === void 0) { positionElement = self._positionElement; }\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                var eventTarget = getEventTarget(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        var wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(function () { return self.hourElement.select(); }, 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return function (date) {\n            var dateObj = (self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat));\n            var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        var boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        var userConfig = __assign(__assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        var formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: function () { return self.config._enable; },\n            set: function (dates) {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: function () { return self.config._disable; },\n            set: function (dates) {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        var timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            var defaultDateFormat = flatpickr.defaultConfig.dateFormat || defaultOptions.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            var defaultAltFormat = flatpickr.defaultConfig.altFormat || defaultOptions.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: function () { return self.config._minDate; },\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: function () { return self.config._maxDate; },\n            set: minMaxDateSetter(\"max\"),\n        });\n        var minMaxTimeSetter = function (type) { return function (val) {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        }; };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: function () { return self.config._minTime; },\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: function () { return self.config._maxTime; },\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (var i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        HOOKS.filter(function (hook) { return self.config[hook] !== undefined; }).forEach(function (hook) {\n            self.config[hook] = arrayify(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (var i = 0; i < self.config.plugins.length; i++) {\n            var pluginConf = self.config.plugins[i](self) || {};\n            for (var key in pluginConf) {\n                if (HOOKS.indexOf(key) > -1) {\n                    self.config[key] = arrayify(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n        self.l10n = __assign(__assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        tokenRegex.D = \"(\" + self.l10n.weekdays.shorthand.join(\"|\") + \")\";\n        tokenRegex.l = \"(\" + self.l10n.weekdays.longhand.join(\"|\") + \")\";\n        tokenRegex.M = \"(\" + self.l10n.months.shorthand.join(\"|\") + \")\";\n        tokenRegex.F = \"(\" + self.l10n.months.longhand.join(\"|\") + \")\";\n        tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n        var userConfig = __assign(__assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = createDateFormatter(self);\n        self.parseDate = createDateParser({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        var positionElement = customPositionElement || self._positionElement;\n        var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (function (acc, child) { return acc + child.offsetHeight; }), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        var top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        toggleClass(self.calendarContainer, \"arrowTop\", !showOnTop);\n        toggleClass(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        var left = window.pageXOffset + inputBounds.left;\n        var isCenter = false;\n        var isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        toggleClass(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        toggleClass(self.calendarContainer, \"arrowCenter\", isCenter);\n        toggleClass(self.calendarContainer, \"arrowRight\", isRight);\n        var right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        var centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        toggleClass(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = top + \"px\";\n        if (!rightMost) {\n            self.calendarContainer.style.left = left + \"px\";\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = right + \"px\";\n        }\n        else {\n            var doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            var bodyWidth = window.document.body.offsetWidth;\n            var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            var centerBefore = \".flatpickr-calendar.centerMost:before\";\n            var centerAfter = \".flatpickr-calendar.centerMost:after\";\n            var centerIndex = doc.cssRules.length;\n            var centerStyle = \"{left:\" + inputBounds.left + \"px;right:auto;}\";\n            toggleClass(self.calendarContainer, \"rightMost\", false);\n            toggleClass(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(centerBefore + \",\" + centerAfter + centerStyle, centerIndex);\n            self.calendarContainer.style.left = centerLeft + \"px\";\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        var editableSheet = null;\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            var sheet = document.styleSheets[i];\n            if (!sheet.cssRules)\n                continue;\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        var style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var isSelectable = function (day) {\n            return day.classList &&\n                day.classList.contains(\"flatpickr-day\") &&\n                !day.classList.contains(\"flatpickr-disabled\") &&\n                !day.classList.contains(\"notAllowed\");\n        };\n        var t = findParent(getEventTarget(e), isSelectable);\n        if (t === undefined)\n            return;\n        var target = t;\n        var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            var selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if (compareDates(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            var isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            var single = self.config.mode === \"single\" && !self.config.enableTime;\n            var range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    var CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        positionElement: [updatePositionElement],\n        clickOpens: [\n            function () {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (var key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach(function (x) { return x(); });\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach(function (x) { return x(); });\n            else if (HOOKS.indexOf(option) > -1)\n                self.config[option] = arrayify(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        var dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map(function (d) { return self.parseDate(d, format); });\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map(function (date) { return self.parseDate(date, format); });\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map(function (date) { return self.parseDate(date, format); });\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); }));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n    }\n    function setDate(date, triggerChange, format) {\n        if (triggerChange === void 0) { triggerChange = false; }\n        if (format === void 0) { format = self.config.dateFormat; }\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map(function (rule) {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter(function (x) { return x; });\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        var preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = createElement(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        updatePositionElement();\n    }\n    function updatePositionElement() {\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        var inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = createElement(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", function (e) {\n            self.setDate(getEventTarget(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        var hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (var i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        var e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (var i = 0; i < self.selectedDates.length; i++) {\n            var selectedDate = self.selectedDates[i];\n            if (selectedDate instanceof Date &&\n                compareDates(selectedDate, date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return (compareDates(date, self.selectedDates[0]) >= 0 &&\n            compareDates(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach(function (yearElement, i) {\n            var d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    monthToStr(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(specificFormat) {\n        var format = specificFormat ||\n            (self.config.altInput ? self.config.altFormat : self.config.dateFormat);\n        return self.selectedDates\n            .map(function (dObj) { return self.formatDate(dObj, format); })\n            .filter(function (d, i, arr) {\n            return self.config.mode !== \"range\" ||\n                self.config.enableTime ||\n                arr.indexOf(d) === i;\n        })\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange) {\n        if (triggerChange === void 0) { triggerChange = true; }\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        var eventTarget = getEventTarget(e);\n        var isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        var isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        var isKeyDown = e.type === \"keydown\", eventTarget = getEventTarget(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        var min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        var newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        int(!isHourElem) +\n                        (int(isHourElem) && int(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - int(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[int(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = pad(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    var nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter(function (x) { return x instanceof HTMLElement; });\n    var instances = [];\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: __assign({}, English),\n    default: __assign({}, English),\n};\nflatpickr.localize = function (l10n) {\n    flatpickr.l10ns.default = __assign(__assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = function (config) {\n    flatpickr.defaultConfig = __assign(__assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = createDateParser({});\nflatpickr.formatDate = createDateFormatter({});\nflatpickr.compareDates = compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\nexport default flatpickr;\n","import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { Dropdown } from \"./Dropdown\";\r\nimport { StockIcons } from \"./StockIcons\";\r\nimport { StyleSheet } from \"../../../core/util/Utils\";\r\nimport flatpickr from \"flatpickr\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IDateRangeSelectorSettings extends IStockControlSettings {\r\n\r\n\t/**\r\n\t * Date format to use for date input fields.\r\n\t *\r\n\t * Will use global date format if not set.\r\n\t */\r\n\tdateFormat?: string;\r\n\r\n\t/**\r\n\t * If set to `false` the control will not load default CSS for Flatpickr\r\n\t * component. This would mean it would be unstyled, and would require\r\n\t * custom CSS present on the page.\r\n\t *\r\n\t * @default true\r\n\t * @since 5.2.4\r\n\t */\r\n\tuseDefaultCSS?: boolean;\r\n\r\n\t/**\r\n\t * Minimum date to allow for selection.\r\n\t *\r\n\t * Accepts either a `Date` object or `\"auto\"` (smallest date available in\r\n\t * chart).\r\n\t *\r\n\t * @default \"auto\"\r\n\t * @since 5.3.7\r\n\t */\r\n\tminDate?: Date | \"auto\" | null;\r\n\r\n\t/**\r\n\t * Maximum date to allow for selection.\r\n\t *\r\n\t * Accepts either a `Date` object or `\"auto\"` (latest date available in\r\n\t * chart).\r\n\t *\r\n\t * @default \"auto\"\r\n\t * @since 5.3.7\r\n\t */\r\n\tmaxDate?: Date | \"auto\" | null;\r\n\r\n}\r\n\r\nexport interface IDateRangeSelectorPrivate extends IStockControlPrivate {\r\n\tdropdown: Dropdown;\r\n\r\n\tfromField: HTMLInputElement;\r\n\tfromPicker: any;\r\n\tfromDate?: Date;\r\n\r\n\ttoField: HTMLInputElement;\r\n\ttoPicker: any;\r\n\ttoDate?: Date;\r\n}\r\n\r\nexport interface IDateRangeSelectorEvents extends IStockControlEvents {\r\n\t/**\r\n\t * Invoked when user selects certain date range via control.\r\n\t *\r\n\t * @from 5.8.5\r\n\t */\r\n\trangeselected: {\r\n\t\tfromDate: Date;\r\n\t\ttoDate: Date;\r\n\t}\r\n}\r\n\r\n/**\r\n * Date range selector control for [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/date-range-selector/} for more info\r\n */\r\nexport class DateRangeSelector extends StockControl {\r\n\tpublic static className: string = \"DateRangeSelector\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([DateRangeSelector.className]);\r\n\r\n\tdeclare public _settings: IDateRangeSelectorSettings;\r\n\tdeclare public _privateSettings: IDateRangeSelectorPrivate;\r\n\tdeclare public _events: IDateRangeSelectorEvents;\r\n\r\n\tprotected _afterNew() {\r\n\r\n\t\t// Do parent stuff\r\n\t\tsuper._afterNew();\r\n\r\n\t\t// Create list of tools\r\n\t\tconst dropdown = Dropdown.new(this._root, {\r\n\t\t\tcontrol: this,\r\n\t\t\tparent: this.getPrivate(\"button\")\r\n\t\t});\r\n\t\tthis.setPrivate(\"dropdown\", dropdown);\r\n\r\n\t\tdropdown.events.on(\"opened\", (_ev) => {\r\n\t\t\tthis.set(\"active\", true);\r\n\t\t\tthis._updateInputs();\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"closed\", (_ev) => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", (active) => {\r\n\t\t\tif (active) {\r\n\t\t\t\tthis.setTimeout(() => {\r\n\t\t\t\t\tdropdown.show();\r\n\t\t\t\t}, 10);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdropdown.hide();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-control-dropdown\";\r\n\r\n\t\tif (this.get(\"useDefaultCSS\", true)) {\r\n\t\t\tthis._loadDefaultCSS();\r\n\t\t}\r\n\t\tthis._initDropdown();\r\n\t}\r\n\r\n\tprotected _initDropdown(): void {\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\");\r\n\t\tconst container = dropdown.getPrivate(\"container\")!;\r\n\r\n\t\tconst content = document.createElement(\"div\")\r\n\t\tcontent.className = \"am5stock-row\";\r\n\t\tcontainer.appendChild(content);\r\n\r\n\t\t// From fields\r\n\t\tconst fromColumn = document.createElement(\"div\")\r\n\t\tfromColumn.className = \"am5stock-column\";\r\n\t\tcontent.appendChild(fromColumn);\r\n\r\n\t\tconst fromGroup = document.createElement(\"div\");\r\n\t\tfromGroup.className = \"am5stock-group\";\r\n\t\tfromColumn.appendChild(fromGroup);\r\n\r\n\t\tconst fromLabel = document.createElement(\"div\");\r\n\t\tfromLabel.className = \"am5stock-small\";\r\n\t\tfromLabel.innerHTML = this._root.language.translate(\"From %1\", undefined, \"\");\r\n\t\tfromGroup.appendChild(fromLabel);\r\n\r\n\t\tconst fromField = document.createElement(\"input\");\r\n\t\tfromField.type = \"text\";\r\n\t\tfromGroup.appendChild(fromField);\r\n\t\tthis.setPrivate(\"fromField\", fromField);\r\n\r\n\t\t// To fields\r\n\t\tconst toColumn = document.createElement(\"div\")\r\n\t\ttoColumn.className = \"am5stock-column\";\r\n\t\tcontent.appendChild(toColumn);\r\n\r\n\t\tconst toGroup = document.createElement(\"div\");\r\n\t\ttoGroup.className = \"am5stock-group\";\r\n\t\ttoColumn.appendChild(toGroup);\r\n\r\n\t\tconst toLabel = document.createElement(\"div\");\r\n\t\ttoLabel.className = \"am5stock-small\";\r\n\t\ttoLabel.innerHTML = this._root.language.translate(\"To %1\", undefined, \"\");\r\n\t\ttoGroup.appendChild(toLabel);\r\n\r\n\t\tconst toField = document.createElement(\"input\");\r\n\t\ttoField.type = \"text\";\r\n\t\ttoGroup.appendChild(toField);\r\n\t\tthis.setPrivate(\"toField\", toField);\r\n\r\n\t\t// Date pickers\r\n\t\tconst pickerLocale = this._getPickerLocale();\r\n\r\n\t\tconst fromPicker = flatpickr(fromField, {\r\n\t\t\tinline: true,\r\n\t\t\tappendTo: fromColumn,\r\n\t\t\tallowInput: true,\r\n\t\t\tlocale: pickerLocale,\r\n\t\t\tformatDate: (date) => {\r\n\t\t\t\treturn this._formatDate(date);\r\n\t\t\t},\r\n\t\t\tparseDate: (date) => {\r\n\t\t\t\treturn this._parseDate(date);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setPrivate(\"fromPicker\", fromPicker);\r\n\r\n\t\tconst toPicker = flatpickr(toField, {\r\n\t\t\tinline: true,\r\n\t\t\tappendTo: toColumn,\r\n\t\t\tallowInput: true,\r\n\t\t\tlocale: pickerLocale,\r\n\t\t\tformatDate: (date) => {\r\n\t\t\t\treturn this._formatDate(date);\r\n\t\t\t},\r\n\t\t\tparseDate: (date) => {\r\n\t\t\t\treturn this._parseDate(date);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tthis.setPrivate(\"toPicker\", toPicker);\r\n\r\n\r\n\t\t// Buttons\r\n\t\tconst buttons = document.createElement(\"div\")\r\n\t\tbuttons.className = \"am5stock-row\";\r\n\t\tcontainer.appendChild(buttons);\r\n\r\n\t\tconst buttonsColumn = document.createElement(\"div\")\r\n\t\tbuttonsColumn.className = \"am5stock-column\";\r\n\t\tcontainer.appendChild(buttonsColumn);\r\n\r\n\t\tconst saveButton = document.createElement(\"input\");\r\n\t\tsaveButton.type = \"button\";\r\n\t\tsaveButton.value = this._root.language.translateAny(\"Apply\");\r\n\t\tsaveButton.className = \"am5-modal-button am5-modal-primary\";\r\n\t\tbuttonsColumn.appendChild(saveButton);\r\n\r\n\t\tconst xAxis = this._getAxis();\r\n\r\n\t\txAxis.onPrivate(\"selectionMin\", () => {\r\n\t\t\tif (this.getPrivate(\"fromDate\")) {\r\n\t\t\t\tthis._updateInputs();\r\n\t\t\t\tthis._updateLabel();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\txAxis.onPrivate(\"selectionMax\", () => {\r\n\t\t\tif (this.getPrivate(\"toDate\")) {\r\n\t\t\t\tthis._updateInputs();\r\n\t\t\t\tthis._updateLabel();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\txAxis.onPrivate(\"minFinal\", () => {\r\n\t\t\tthis._updatePickers();\r\n\t\t});\r\n\r\n\t\txAxis.onPrivate(\"maxFinal\", () => {\r\n\t\t\tthis._updatePickers();\r\n\t\t});\r\n\r\n\t\tthis._disposers.push($utils.addEventListener(saveButton, \"click\", () => {\r\n\t\t\tconst from = this._parseDate(fromField.value);\r\n\t\t\tconst to = this._parseDate(toField.value);\r\n\t\t\tto.setHours(23, 59, 59);\r\n\t\t\tthis.setPrivate(\"fromDate\", from);\r\n\t\t\tthis.setPrivate(\"toDate\", to);\r\n\t\t\txAxis.zoomToDates(from, to);\r\n\t\t\tthis._updateLabel();\r\n\t\t\tthis.set(\"active\", false);\r\n\r\n\t\t\tconst type = \"rangeselected\";\r\n\t\t\tif (this.events.isEnabled(type)) {\r\n\t\t\t\tthis.events.dispatch(type, {\r\n\t\t\t\t\ttype: type,\r\n\t\t\t\t\ttarget: this,\r\n\t\t\t\t\tfromDate: from,\r\n\t\t\t\t\ttoDate: to\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t\tconst cancelButton = document.createElement(\"input\");\r\n\t\tcancelButton.type = \"button\";\r\n\t\tcancelButton.value = this._root.language.translateAny(\"Cancel\");\r\n\t\tcancelButton.className = \"am5-modal-button am5-modal-scondary\";\r\n\t\tbuttonsColumn.appendChild(cancelButton);\r\n\r\n\t\tthis._disposers.push($utils.addEventListener(cancelButton, \"click\", () => {\r\n\t\t\tthis.set(\"active\", false);\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Calendar\");\r\n\t}\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\t}\r\n\r\n\tprotected _updateInputs(): void {\r\n\t\tconst xAxis = this._getAxis();\r\n\t\tconst min = xAxis.getPrivate(\"selectionMin\", 0);\r\n\t\tconst max = xAxis.getPrivate(\"selectionMax\", 0);\r\n\r\n\t\tif (!min || !max) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst from = new Date(min + 1);\r\n\t\tconst to = new Date(max - 1);\r\n\r\n\t\tthis.setPrivate(\"fromDate\", from);\r\n\t\tthis.setPrivate(\"toDate\", to);\r\n\r\n\t\tthis.getPrivate(\"fromField\").value = this._formatDate(from);\r\n\t\tthis.getPrivate(\"toField\").value = this._formatDate(to);\r\n\r\n\t\tconst fromPicker = this.getPrivate(\"fromPicker\");\r\n\t\tconst minDate = fromPicker.config.minDate;\r\n\t\tif (!minDate || (minDate <= from)) {\r\n\t\t\tfromPicker.setDate(from);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfromPicker.setDate(minDate);\r\n\t\t}\r\n\r\n\t\tconst toPicker = this.getPrivate(\"toPicker\");\r\n\t\tconst maxDate = toPicker.config.maxDate;\r\n\t\tif (!maxDate || (maxDate >= to)) {\r\n\t\t\ttoPicker.setDate(to);\r\n\t\t}\r\n\t\telse {\r\n\t\t\ttoPicker.setDate(maxDate);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updatePickers(): void {\r\n\t\tconst xAxis = this._getAxis();\r\n\r\n\t\tconst minDate = this.get(\"minDate\");\r\n\t\tconst maxDate = this.get(\"maxDate\");\r\n\t\tconst toPicker = this.getPrivate(\"toPicker\");\r\n\t\tconst fromPicker = this.getPrivate(\"fromPicker\");\r\n\r\n\t\tif (minDate == \"auto\") {\r\n\t\t\tconst min = xAxis.getPrivate(\"minFinal\");\r\n\t\t\tif (min) {\r\n\t\t\t\tfromPicker.set(\"minDate\", new Date(min + 1));\r\n\t\t\t\ttoPicker.set(\"minDate\", new Date(min + 1));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (minDate instanceof Date) {\r\n\t\t\tfromPicker.set(\"minDate\", minDate);\r\n\t\t\ttoPicker.set(\"minDate\", minDate);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfromPicker.set(\"minDate\", undefined);\r\n\t\t\ttoPicker.set(\"minDate\", undefined);\r\n\t\t}\r\n\r\n\t\tif (maxDate == \"auto\") {\r\n\t\t\tconst max = xAxis.getPrivate(\"maxFinal\") - 1;\r\n\t\t\tif (max) {\r\n\t\t\t\tfromPicker.set(\"maxDate\", new Date(max));\r\n\t\t\t\ttoPicker.set(\"maxDate\", new Date(max));\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (maxDate instanceof Date) {\r\n\t\t\tfromPicker.set(\"maxDate\", maxDate);\r\n\t\t\ttoPicker.set(\"maxDate\", maxDate);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tfromPicker.set(\"maxDate\", undefined);\r\n\t\t\ttoPicker.set(\"maxDate\", undefined);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateLabel(): void {\r\n\t\tconst from = this.getPrivate(\"fromDate\");\r\n\t\tconst to = this.getPrivate(\"toDate\");\r\n\t\tlet label = \"\";\r\n\t\tif (from && to) {\r\n\t\t\tlabel = this._formatDate(from) + \" -- \" + this._formatDate(to);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlabel = this._root.language.translateAny(\"Date Range\");\r\n\t\t}\r\n\t\tthis.set(\"name\", label);\r\n\t}\r\n\r\n\tprotected _formatDate(date: Date): string {\r\n\t\treturn this._root.dateFormatter.format(date, this._getDateFormat(), true);\r\n\t}\r\n\r\n\tprotected _parseDate(date: string): Date {\r\n\t\treturn this._root.dateFormatter.parse(date, this._getDateFormat());\r\n\t}\r\n\r\n\tprotected _getDateFormat(): string {\r\n\t\tconst format = this.get(\"dateFormat\", this._root.dateFormatter.get(\"dateFormat\"));\r\n\t\treturn $type.isString(format) ? format : \"MM/dd/yyyy\";\r\n\t}\r\n\r\n\tprotected _getAxis(): any {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst chart = stockChart.panels.getIndex(0)!;\r\n\t\tconst xAxis: any = chart.xAxes.getIndex(0)!;\r\n\t\treturn xAxis;\r\n\t}\r\n\r\n\tprotected _getPickerLocale(): any {\r\n\t\tconst l = this._root.language;\r\n\t\treturn {\r\n\t\t\tweekdays: {\r\n\t\t\t\tshorthand: [\r\n\t\t\t\t\tl.translate(\"Sun\"),\r\n\t\t\t\t\tl.translate(\"Mon\"),\r\n\t\t\t\t\tl.translate(\"Tue\"),\r\n\t\t\t\t\tl.translate(\"Wed\"),\r\n\t\t\t\t\tl.translate(\"Thu\"),\r\n\t\t\t\t\tl.translate(\"Fri\"),\r\n\t\t\t\t\tl.translate(\"Sat\")\r\n\t\t\t\t],\r\n\t\t\t\tlonghand: [\r\n\t\t\t\t\tl.translate(\"Sunday\"),\r\n\t\t\t\t\tl.translate(\"Monday\"),\r\n\t\t\t\t\tl.translate(\"Tuesday\"),\r\n\t\t\t\t\tl.translate(\"Wednesday\"),\r\n\t\t\t\t\tl.translate(\"Thursday\"),\r\n\t\t\t\t\tl.translate(\"Friday\"),\r\n\t\t\t\t\tl.translate(\"Saturday\"),\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tmonths: {\r\n\t\t\t\tshorthand: [\r\n\t\t\t\t\tl.translate(\"Jan\"),\r\n\t\t\t\t\tl.translate(\"Feb\"),\r\n\t\t\t\t\tl.translate(\"Mar\"),\r\n\t\t\t\t\tl.translate(\"Apr\"),\r\n\t\t\t\t\tl.translate(\"May(short)\"),\r\n\t\t\t\t\tl.translate(\"Jun\"),\r\n\t\t\t\t\tl.translate(\"Jul\"),\r\n\t\t\t\t\tl.translate(\"Aug\"),\r\n\t\t\t\t\tl.translate(\"Sep\"),\r\n\t\t\t\t\tl.translate(\"Oct\"),\r\n\t\t\t\t\tl.translate(\"Nov\"),\r\n\t\t\t\t\tl.translate(\"Dec\"),\r\n\t\t\t\t],\r\n\t\t\t\tlonghand: [\r\n\t\t\t\t\tl.translate(\"January\"),\r\n\t\t\t\t\tl.translate(\"February\"),\r\n\t\t\t\t\tl.translate(\"March\"),\r\n\t\t\t\t\tl.translate(\"April\"),\r\n\t\t\t\t\tl.translate(\"May\"),\r\n\t\t\t\t\tl.translate(\"June\"),\r\n\t\t\t\t\tl.translate(\"July\"),\r\n\t\t\t\t\tl.translate(\"August\"),\r\n\t\t\t\t\tl.translate(\"September\"),\r\n\t\t\t\t\tl.translate(\"October\"),\r\n\t\t\t\t\tl.translate(\"November\"),\r\n\t\t\t\t\tl.translate(\"December\"),\r\n\t\t\t\t],\r\n\t\t\t},\r\n\t\t\tfirstDayOfWeek: l.translate(\"firstDayOfWeek\"),\r\n\t\t\tordinal: l.translateFunc(\"_dateOrd\"),\r\n\t\t\trangeSeparator: \" \" + l.translateAny(\"to\") + \" \",\r\n\t\t\tweekAbbreviation: l.translateAny(\"Wk\"),\r\n\t\t\tscrollTitle: l.translateAny(\"Scroll to increment\"),\r\n\t\t\ttoggleTitle: l.translateAny(\"Click to toggle\"),\r\n\t\t\tamPM: [l.translate(\"AM\"), l.translate(\"PM\")],\r\n\t\t\tyearAriaLabel: l.translateAny(\"Year\"),\r\n\t\t\tmonthAriaLabel: l.translateAny(\"Month\"),\r\n\t\t\thourAriaLabel: l.translateAny(\"Hour\"),\r\n\t\t\tminuteAriaLabel: l.translateAny(\"Minute\"),\r\n\t\t\ttime_24hr: true,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Loads the default CSS.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tprotected _loadDefaultCSS(): void {\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\t//const active = ic.get(\"secondaryButton\")!.toCSS();\r\n\t\tconst primary = ic.get(\"primaryButton\")!.toCSS();\r\n\t\tconst primary2 = ic.get(\"primaryButtonHover\")!.toCSS();\r\n\t\tconst text = ic.get(\"text\")!.toCSS();\r\n\t\tconst border = ic.get(\"secondaryButtonActive\")!.toCSS();\r\n\t\tconst bg = ic.get(\"background\")!.toCSS();\r\n\r\n\t\tthis._disposers.push(new StyleSheet(null, `\r\n.flatpickr-calendar {\r\n  background: transparent;\r\n  opacity: 0;\r\n  display: none;\r\n  text-align: center;\r\n  visibility: hidden;\r\n  padding: 0;\r\n  -webkit-animation: none;\r\n          animation: none;\r\n  direction: ltr;\r\n  border: 0;\r\n  font-size: 12px;\r\n  line-height: 24px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n  width: 200px;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  -ms-touch-action: manipulation;\r\n      touch-action: manipulation;\r\n  background: ${bg};\r\n  margin-top: 0.5em;\r\n}\r\n.flatpickr-calendar.open,\r\n.flatpickr-calendar.inline {\r\n  opacity: 1;\r\n  max-height: 640px;\r\n  visibility: visible;\r\n}\r\n.flatpickr-calendar.open {\r\n  display: inline-block;\r\n  z-index: 99999;\r\n}\r\n.flatpickr-calendar.animate.open {\r\n  -webkit-animation: fpFadeInDown 300ms cubic-bezier(0.23, 1, 0.32, 1);\r\n          animation: fpFadeInDown 300ms cubic-bezier(0.23, 1, 0.32, 1);\r\n}\r\n.flatpickr-calendar.inline {\r\n  display: block;\r\n  position: relative;\r\n  top: 2px;\r\n}\r\n.flatpickr-calendar.static {\r\n  position: absolute;\r\n  top: calc(100% + 2px);\r\n}\r\n.flatpickr-calendar.static.open {\r\n  z-index: 999;\r\n  display: block;\r\n}\r\n.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+1) .flatpickr-day.inRange:nth-child(7n+7) {\r\n  -webkit-box-shadow: none !important;\r\n          box-shadow: none !important;\r\n}\r\n.flatpickr-calendar.multiMonth .flatpickr-days .dayContainer:nth-child(n+2) .flatpickr-day.inRange:nth-child(7n+1) {\r\n  -webkit-box-shadow: -2px 0 0 #e6e6e6, 5px 0 0 #e6e6e6;\r\n          box-shadow: -2px 0 0 #e6e6e6, 5px 0 0 #e6e6e6;\r\n}\r\n.flatpickr-calendar .hasWeeks .dayContainer,\r\n.flatpickr-calendar .hasTime .dayContainer {\r\n  border-bottom: 0;\r\n  border-bottom-right-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n}\r\n.flatpickr-calendar .hasWeeks .dayContainer {\r\n  border-left: 0;\r\n}\r\n.flatpickr-calendar.hasTime .flatpickr-time {\r\n  height: 40px;\r\n  border-top: 1px solid ${border};\r\n}\r\n.flatpickr-calendar.noCalendar.hasTime .flatpickr-time {\r\n  height: auto;\r\n}\r\n.flatpickr-calendar:before,\r\n.flatpickr-calendar:after {\r\n  position: absolute;\r\n  display: block;\r\n  pointer-events: none;\r\n  border: solid transparent;\r\n  content: '';\r\n  height: 0;\r\n  width: 0;\r\n  left: 22px;\r\n}\r\n.flatpickr-calendar.rightMost:before,\r\n.flatpickr-calendar.arrowRight:before,\r\n.flatpickr-calendar.rightMost:after,\r\n.flatpickr-calendar.arrowRight:after {\r\n  left: auto;\r\n  right: 22px;\r\n}\r\n.flatpickr-calendar.arrowCenter:before,\r\n.flatpickr-calendar.arrowCenter:after {\r\n  left: 50%;\r\n  right: 50%;\r\n}\r\n.flatpickr-calendar:before {\r\n  border-width: 5px;\r\n  margin: 0 -5px;\r\n}\r\n.flatpickr-calendar:after {\r\n  border-width: 4px;\r\n  margin: 0 -4px;\r\n}\r\n.flatpickr-calendar.arrowTop:before,\r\n.flatpickr-calendar.arrowTop:after {\r\n  bottom: 100%;\r\n}\r\n.flatpickr-calendar.arrowTop:before {\r\n  border-bottom-color: ${border};\r\n}\r\n.flatpickr-calendar.arrowTop:after {\r\n  border-bottom-color: ${bg};\r\n}\r\n.flatpickr-calendar.arrowBottom:before,\r\n.flatpickr-calendar.arrowBottom:after {\r\n  top: 100%;\r\n}\r\n.flatpickr-calendar.arrowBottom:before {\r\n  border-top-color: ${border};\r\n}\r\n.flatpickr-calendar.arrowBottom:after {\r\n  border-top-color: ${bg};\r\n}\r\n.flatpickr-calendar:focus {\r\n  outline: 0;\r\n}\r\n.flatpickr-wrapper {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n.flatpickr-months {\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n}\r\n.flatpickr-months .flatpickr-month {\r\n  background: transparent;\r\n  color: ${text};\r\n  fill: ${text};\r\n  height: 34px;\r\n  line-height: 1;\r\n  text-align: center;\r\n  position: relative;\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n  overflow: hidden;\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1;\r\n      -ms-flex: 1;\r\n          flex: 1;\r\n}\r\n.flatpickr-months .flatpickr-prev-month,\r\n.flatpickr-months .flatpickr-next-month {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  height: 34px;\r\n  padding: 10px;\r\n  z-index: 3;\r\n  color: ${text};\r\n  fill: ${text};\r\n}\r\n.flatpickr-months .flatpickr-prev-month.flatpickr-disabled,\r\n.flatpickr-months .flatpickr-next-month.flatpickr-disabled {\r\n  display: none;\r\n}\r\n.flatpickr-months .flatpickr-prev-month i,\r\n.flatpickr-months .flatpickr-next-month i {\r\n  position: relative;\r\n}\r\n.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month,\r\n.flatpickr-months .flatpickr-next-month.flatpickr-prev-month {\r\n/*\r\n      /*rtl:begin:ignore*/\r\n/*\r\n      */\r\n  left: 0;\r\n/*\r\n      /*rtl:end:ignore*/\r\n/*\r\n      */\r\n}\r\n/*\r\n      /*rtl:begin:ignore*/\r\n/*\r\n      /*rtl:end:ignore*/\r\n.flatpickr-months .flatpickr-prev-month.flatpickr-next-month,\r\n.flatpickr-months .flatpickr-next-month.flatpickr-next-month {\r\n/*\r\n      /*rtl:begin:ignore*/\r\n/*\r\n      */\r\n  right: 0;\r\n/*\r\n      /*rtl:end:ignore*/\r\n/*\r\n      */\r\n}\r\n/*\r\n      /*rtl:begin:ignore*/\r\n/*\r\n      /*rtl:end:ignore*/\r\n.flatpickr-months .flatpickr-prev-month:hover,\r\n.flatpickr-months .flatpickr-next-month:hover {\r\n  color: ${primary2};\r\n}\r\n.flatpickr-months .flatpickr-prev-month:hover svg,\r\n.flatpickr-months .flatpickr-next-month:hover svg {\r\n  fill: ${primary2};\r\n}\r\n.flatpickr-months .flatpickr-prev-month svg,\r\n.flatpickr-months .flatpickr-next-month svg {\r\n  width: 14px;\r\n  height: 14px;\r\n}\r\n.flatpickr-months .flatpickr-prev-month svg path,\r\n.flatpickr-months .flatpickr-next-month svg path {\r\n  -webkit-transition: fill 0.1s;\r\n  transition: fill 0.1s;\r\n  fill: inherit;\r\n}\r\n.numInputWrapper {\r\n  position: relative;\r\n  height: auto;\r\n}\r\n.numInputWrapper input,\r\n.numInputWrapper span {\r\n  display: inline-block;\r\n}\r\n.numInputWrapper input {\r\n  width: 100%;\r\n}\r\n.numInputWrapper input::-ms-clear {\r\n  display: none;\r\n}\r\n.numInputWrapper input::-webkit-outer-spin-button,\r\n.numInputWrapper input::-webkit-inner-spin-button {\r\n  margin: 0;\r\n  -webkit-appearance: none;\r\n}\r\n.numInputWrapper span {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 14px;\r\n  padding: 0 4px 0 2px;\r\n  height: 50%;\r\n  line-height: 50%;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n  border: 1px solid rgba(64,72,72,0.15);\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n}\r\n.numInputWrapper span:hover {\r\n  background: rgba(0,0,0,0.1);\r\n}\r\n.numInputWrapper span:active {\r\n  background: rgba(0,0,0,0.2);\r\n}\r\n.numInputWrapper span:after {\r\n  display: block;\r\n  content: \"\";\r\n  position: absolute;\r\n}\r\n.numInputWrapper span.arrowUp {\r\n  top: 0;\r\n  border-bottom: 0;\r\n}\r\n.numInputWrapper span.arrowUp:after {\r\n  border-left: 4px solid transparent;\r\n  border-right: 4px solid transparent;\r\n  border-bottom: 4px solid rgba(64,72,72,0.6);\r\n  top: 26%;\r\n}\r\n.numInputWrapper span.arrowDown {\r\n  top: 50%;\r\n}\r\n.numInputWrapper span.arrowDown:after {\r\n  border-left: 4px solid transparent;\r\n  border-right: 4px solid transparent;\r\n  border-top: 4px solid rgba(64,72,72,0.6);\r\n  top: 40%;\r\n}\r\n.numInputWrapper span svg {\r\n  width: inherit;\r\n  height: auto;\r\n}\r\n.numInputWrapper span svg path {\r\n  fill: rgba(60,63,64,0.5);\r\n}\r\n.numInputWrapper:hover {\r\n  background: rgba(0,0,0,0.05);\r\n}\r\n.numInputWrapper:hover span {\r\n  opacity: 1;\r\n}\r\n.flatpickr-current-month {\r\n  margin-top: 1px;\r\n  font-size: 125%;\r\n  line-height: inherit;\r\n  font-weight: 300;\r\n  color: inherit;\r\n  position: absolute;\r\n  width: 75%;\r\n  left: 12.5%;\r\n  padding: 7.48px 0 0 0;\r\n  line-height: 1;\r\n  height: 34px;\r\n  display: inline-block;\r\n  text-align: center;\r\n  -webkit-transform: translate3d(0px, 0px, 0px);\r\n          transform: translate3d(0px, 0px, 0px);\r\n}\r\n.flatpickr-current-month span.cur-month {\r\n  font-family: inherit;\r\n  font-weight: 700;\r\n  color: inherit;\r\n  display: inline-block;\r\n  margin-left: 0.5ch;\r\n  padding: 0;\r\n}\r\n.flatpickr-current-month span.cur-month:hover {\r\n  background: rgba(0,0,0,0.05);\r\n}\r\n.flatpickr-current-month .numInputWrapper {\r\n  width: 6ch;\r\n  width: 7ch\\\\0;\r\n  display: inline-block;\r\n}\r\n.flatpickr-current-month .numInputWrapper span.arrowUp:after {\r\n  border-bottom-color: ${text};\r\n}\r\n.flatpickr-current-month .numInputWrapper span.arrowDown:after {\r\n  border-top-color: ${text};\r\n}\r\n.flatpickr-current-month input.cur-year {\r\n  background: transparent;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  color: inherit;\r\n  cursor: text;\r\n  padding: 0 0 0 0.5ch;\r\n  margin: 0;\r\n  display: inline-block;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  font-weight: 300;\r\n  line-height: inherit;\r\n  height: auto;\r\n  border: 0;\r\n  border-radius: 0;\r\n  vertical-align: initial;\r\n  -webkit-appearance: textfield;\r\n  -moz-appearance: textfield;\r\n  appearance: textfield;\r\n}\r\n.flatpickr-current-month input.cur-year:focus {\r\n  outline: 0;\r\n}\r\n.flatpickr-current-month input.cur-year[disabled],\r\n.flatpickr-current-month input.cur-year[disabled]:hover {\r\n  font-size: 100%;\r\n  color: rgba(60,63,64,0.5);\r\n  background: transparent;\r\n  pointer-events: none;\r\n}\r\n.flatpickr-current-month .flatpickr-monthDropdown-months {\r\n  appearance: menulist;\r\n  background: transparent;\r\n  border: none;\r\n  border-radius: 0;\r\n  box-sizing: border-box;\r\n  color: inherit;\r\n  cursor: pointer;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  font-weight: 300;\r\n  height: auto;\r\n  line-height: inherit;\r\n  margin: -1px 0 0 0;\r\n  outline: none;\r\n  padding: 0 0 0 0.5ch;\r\n  position: relative;\r\n  vertical-align: initial;\r\n  -webkit-box-sizing: border-box;\r\n  -webkit-appearance: menulist;\r\n  -moz-appearance: menulist;\r\n  width: auto;\r\n  max-width: 93px;\r\n}\r\n.flatpickr-current-month .flatpickr-monthDropdown-months:focus,\r\n.flatpickr-current-month .flatpickr-monthDropdown-months:active {\r\n  outline: none;\r\n}\r\n.flatpickr-current-month .flatpickr-monthDropdown-months:hover {\r\n  background: rgba(0,0,0,0.05);\r\n}\r\n.flatpickr-current-month .flatpickr-monthDropdown-months .flatpickr-monthDropdown-month {\r\n  background-color: ${bg};\r\n  outline: none;\r\n  padding: 0;\r\n}\r\n.flatpickr-weekdays {\r\n  background: transparent;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  width: 100%;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-align: center;\r\n  -webkit-align-items: center;\r\n      -ms-flex-align: center;\r\n          align-items: center;\r\n  height: 28px;\r\n}\r\n.flatpickr-weekdays .flatpickr-weekdaycontainer {\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1;\r\n      -ms-flex: 1;\r\n          flex: 1;\r\n}\r\nspan.flatpickr-weekday {\r\n  cursor: default;\r\n  font-size: 90%;\r\n  background: transparent;\r\n  color: ${text};\r\n  line-height: 1;\r\n  margin: 0;\r\n  text-align: center;\r\n  display: block;\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1;\r\n      -ms-flex: 1;\r\n          flex: 1;\r\n  font-weight: bolder;\r\n}\r\n.dayContainer,\r\n.flatpickr-weeks {\r\n  padding: 1px 0 0 0;\r\n}\r\n.flatpickr-days {\r\n  position: relative;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-align: start;\r\n  -webkit-align-items: flex-start;\r\n      -ms-flex-align: start;\r\n          align-items: flex-start;\r\n  width: 200px;\r\n}\r\n.flatpickr-days:focus {\r\n  outline: 0;\r\n}\r\n.dayContainer {\r\n  padding: 0;\r\n  outline: 0;\r\n  text-align: left;\r\n  width: 200px;\r\n  min-width: 200px;\r\n  max-width: 200px;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  display: inline-block;\r\n  display: -ms-flexbox;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n  -webkit-flex-wrap: wrap;\r\n          flex-wrap: wrap;\r\n  -ms-flex-wrap: wrap;\r\n  -ms-flex-pack: justify;\r\n  -webkit-justify-content: space-around;\r\n          justify-content: space-around;\r\n  -webkit-transform: translate3d(0px, 0px, 0px);\r\n          transform: translate3d(0px, 0px, 0px);\r\n  opacity: 1;\r\n}\r\n.dayContainer + .dayContainer {\r\n  -webkit-box-shadow: -1px 0 0 ${border};\r\n          box-shadow: -1px 0 0 ${border};\r\n}\r\n.flatpickr-day {\r\n  background: none;\r\n  border: 1px solid transparent;\r\n  border-radius: 150px;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  color: ${text};\r\n  cursor: pointer;\r\n  font-weight: 400;\r\n  width: 14.2857143%;\r\n  -webkit-flex-basis: 14.2857143%;\r\n      -ms-flex-preferred-size: 14.2857143%;\r\n          flex-basis: 14.2857143%;\r\n  max-width: 32px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  margin: 0;\r\n  display: inline-block;\r\n  position: relative;\r\n  -webkit-box-pack: center;\r\n  -webkit-justify-content: center;\r\n      -ms-flex-pack: center;\r\n          justify-content: center;\r\n  text-align: center;\r\n}\r\n.flatpickr-day.inRange,\r\n.flatpickr-day.prevMonthDay.inRange,\r\n.flatpickr-day.nextMonthDay.inRange,\r\n.flatpickr-day.today.inRange,\r\n.flatpickr-day.prevMonthDay.today.inRange,\r\n.flatpickr-day.nextMonthDay.today.inRange,\r\n.flatpickr-day:hover,\r\n.flatpickr-day.prevMonthDay:hover,\r\n.flatpickr-day.nextMonthDay:hover,\r\n.flatpickr-day:focus,\r\n.flatpickr-day.prevMonthDay:focus,\r\n.flatpickr-day.nextMonthDay:focus {\r\n  cursor: pointer;\r\n  outline: 0;\r\n  background: ${primary2};\r\n  border-color: ${primary2};\r\n}\r\n.flatpickr-day.today {\r\n  border-color: ${primary2};\r\n}\r\n.flatpickr-day.today:hover,\r\n.flatpickr-day.today:focus {\r\n  border-color: ${primary2};\r\n  background: ${primary2};\r\n  color: ${bg};\r\n}\r\n.flatpickr-day.selected,\r\n.flatpickr-day.startRange,\r\n.flatpickr-day.endRange,\r\n.flatpickr-day.selected.inRange,\r\n.flatpickr-day.startRange.inRange,\r\n.flatpickr-day.endRange.inRange,\r\n.flatpickr-day.selected:focus,\r\n.flatpickr-day.startRange:focus,\r\n.flatpickr-day.endRange:focus,\r\n.flatpickr-day.selected:hover,\r\n.flatpickr-day.startRange:hover,\r\n.flatpickr-day.endRange:hover,\r\n.flatpickr-day.selected.prevMonthDay,\r\n.flatpickr-day.startRange.prevMonthDay,\r\n.flatpickr-day.endRange.prevMonthDay,\r\n.flatpickr-day.selected.nextMonthDay,\r\n.flatpickr-day.startRange.nextMonthDay,\r\n.flatpickr-day.endRange.nextMonthDay {\r\n  background: ${primary};\r\n  -webkit-box-shadow: none;\r\n          box-shadow: none;\r\n  color: ${bg};\r\n  border-color: ${primary};\r\n}\r\n.flatpickr-day.selected.startRange,\r\n.flatpickr-day.startRange.startRange,\r\n.flatpickr-day.endRange.startRange {\r\n  border-radius: 50px 0 0 50px;\r\n}\r\n.flatpickr-day.selected.endRange,\r\n.flatpickr-day.startRange.endRange,\r\n.flatpickr-day.endRange.endRange {\r\n  border-radius: 0 50px 50px 0;\r\n}\r\n.flatpickr-day.selected.startRange + .endRange:not(:nth-child(7n+1)),\r\n.flatpickr-day.startRange.startRange + .endRange:not(:nth-child(7n+1)),\r\n.flatpickr-day.endRange.startRange + .endRange:not(:nth-child(7n+1)) {\r\n  -webkit-box-shadow: -10px 0 0 ${primary};\r\n          box-shadow: -10px 0 0 ${primary};\r\n}\r\n.flatpickr-day.selected.startRange.endRange,\r\n.flatpickr-day.startRange.startRange.endRange,\r\n.flatpickr-day.endRange.startRange.endRange {\r\n  border-radius: 50px;\r\n}\r\n.flatpickr-day.inRange {\r\n  border-radius: 0;\r\n  -webkit-box-shadow: -5px 0 0 ${primary2}, 5px 0 0 ${primary2};\r\n          box-shadow: -5px 0 0 ${primary2}, 5px 0 0 ${primary2};\r\n}\r\n.flatpickr-day.flatpickr-disabled,\r\n.flatpickr-day.flatpickr-disabled:hover,\r\n.flatpickr-day.prevMonthDay,\r\n.flatpickr-day.nextMonthDay,\r\n.flatpickr-day.notAllowed,\r\n.flatpickr-day.notAllowed.prevMonthDay,\r\n.flatpickr-day.notAllowed.nextMonthDay {\r\n  color: rgba(64,72,72,0.3);\r\n  background: transparent;\r\n  cursor: default;\r\n}\r\n.flatpickr-day.flatpickr-disabled,\r\n.flatpickr-day.flatpickr-disabled:hover {\r\n  cursor: not-allowed;\r\n  color: rgba(64,72,72,0.1);\r\n}\r\n.flatpickr-day.week.selected {\r\n  border-radius: 0;\r\n  -webkit-box-shadow: -5px 0 0 ${primary}, 5px 0 0 ${primary};\r\n          box-shadow: -5px 0 0 ${primary}, 5px 0 0 ${primary};\r\n}\r\n.flatpickr-day.hidden {\r\n  visibility: hidden;\r\n}\r\n.rangeMode .flatpickr-day {\r\n  margin-top: 1px;\r\n}\r\n.flatpickr-weekwrapper {\r\n  float: left;\r\n}\r\n.flatpickr-weekwrapper .flatpickr-weeks {\r\n  padding: 0 12px;\r\n  -webkit-box-shadow: 1px 0 0 ${border};\r\n          box-shadow: 1px 0 0 ${border};\r\n}\r\n.flatpickr-weekwrapper .flatpickr-weekday {\r\n  float: none;\r\n  width: 100%;\r\n  line-height: 28px;\r\n}\r\n.flatpickr-weekwrapper span.flatpickr-day,\r\n.flatpickr-weekwrapper span.flatpickr-day:hover {\r\n  display: block;\r\n  width: 100%;\r\n  max-width: none;\r\n  color: rgba(64,72,72,0.3);\r\n  background: transparent;\r\n  cursor: default;\r\n  border: none;\r\n}\r\n.flatpickr-innerContainer {\r\n  display: block;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  overflow: hidden;\r\n}\r\n.flatpickr-rContainer {\r\n  display: inline-block;\r\n  padding: 0;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n}\r\n.flatpickr-time {\r\n  text-align: center;\r\n  outline: 0;\r\n  display: block;\r\n  height: 0;\r\n  line-height: 40px;\r\n  max-height: 40px;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n}\r\n.flatpickr-time:after {\r\n  content: \"\";\r\n  display: table;\r\n  clear: both;\r\n}\r\n.flatpickr-time .numInputWrapper {\r\n  -webkit-box-flex: 1;\r\n  -webkit-flex: 1;\r\n      -ms-flex: 1;\r\n          flex: 1;\r\n  width: 40%;\r\n  height: 40px;\r\n  float: left;\r\n}\r\n.flatpickr-time .numInputWrapper span.arrowUp:after {\r\n  border-bottom-color: ${text};\r\n}\r\n.flatpickr-time .numInputWrapper span.arrowDown:after {\r\n  border-top-color: ${text};\r\n}\r\n.flatpickr-time.hasSeconds .numInputWrapper {\r\n  width: 26%;\r\n}\r\n.flatpickr-time.time24hr .numInputWrapper {\r\n  width: 49%;\r\n}\r\n.flatpickr-time input {\r\n  background: transparent;\r\n  -webkit-box-shadow: none;\r\n          box-shadow: none;\r\n  border: 0;\r\n  border-radius: 0;\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 0;\r\n  height: inherit;\r\n  line-height: inherit;\r\n  color: ${text};\r\n  font-size: 14px;\r\n  position: relative;\r\n  -webkit-box-sizing: border-box;\r\n          box-sizing: border-box;\r\n  -webkit-appearance: textfield;\r\n  -moz-appearance: textfield;\r\n  appearance: textfield;\r\n}\r\n.flatpickr-time input.flatpickr-hour {\r\n  font-weight: bold;\r\n}\r\n.flatpickr-time input.flatpickr-minute,\r\n.flatpickr-time input.flatpickr-second {\r\n  font-weight: 400;\r\n}\r\n.flatpickr-time input:focus {\r\n  outline: 0;\r\n  border: 0;\r\n}\r\n.flatpickr-time .flatpickr-time-separator,\r\n.flatpickr-time .flatpickr-am-pm {\r\n  height: inherit;\r\n  float: left;\r\n  line-height: inherit;\r\n  color: ${text};\r\n  font-weight: bold;\r\n  width: 2%;\r\n  -webkit-user-select: none;\r\n     -moz-user-select: none;\r\n      -ms-user-select: none;\r\n          user-select: none;\r\n  -webkit-align-self: center;\r\n      -ms-flex-item-align: center;\r\n          align-self: center;\r\n}\r\n.flatpickr-time .flatpickr-am-pm {\r\n  outline: 0;\r\n  width: 18%;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  font-weight: 400;\r\n}\r\n.flatpickr-time input:hover,\r\n.flatpickr-time .flatpickr-am-pm:hover,\r\n.flatpickr-time input:focus,\r\n.flatpickr-time .flatpickr-am-pm:focus {\r\n  background: #f1f1f1;\r\n}\r\n.flatpickr-input[readonly] {\r\n  cursor: pointer;\r\n}\r\n@-webkit-keyframes fpFadeInDown {\r\n  from {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(0, -20px, 0);\r\n            transform: translate3d(0, -20px, 0);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    -webkit-transform: translate3d(0, 0, 0);\r\n            transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n@keyframes fpFadeInDown {\r\n  from {\r\n    opacity: 0;\r\n    -webkit-transform: translate3d(0, -20px, 0);\r\n            transform: translate3d(0, -20px, 0);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    -webkit-transform: translate3d(0, 0, 0);\r\n            transform: translate3d(0, 0, 0);\r\n  }\r\n}\r\n.flatpickr-calendar {\r\n  width: 200px;\r\n}\r\n.dayContainer {\r\n  padding: 0;\r\n  border-right: 0;\r\n}\r\nspan.flatpickr-day,\r\nspan.flatpickr-day.prevMonthDay,\r\nspan.flatpickr-day.nextMonthDay {\r\n  border-radius: 0 !important;\r\n  border: 1px solid ${primary2};\r\n  max-width: none;\r\n  border-right-color: transparent;\r\n}\r\nspan.flatpickr-day:nth-child(n+8),\r\nspan.flatpickr-day.prevMonthDay:nth-child(n+8),\r\nspan.flatpickr-day.nextMonthDay:nth-child(n+8) {\r\n  border-top-color: transparent;\r\n}\r\nspan.flatpickr-day:nth-child(7n-6),\r\nspan.flatpickr-day.prevMonthDay:nth-child(7n-6),\r\nspan.flatpickr-day.nextMonthDay:nth-child(7n-6) {\r\n  border-left: 0;\r\n}\r\nspan.flatpickr-day:nth-child(n+36),\r\nspan.flatpickr-day.prevMonthDay:nth-child(n+36),\r\nspan.flatpickr-day.nextMonthDay:nth-child(n+36) {\r\n  border-bottom: 0;\r\n}\r\nspan.flatpickr-day:nth-child(-n+7),\r\nspan.flatpickr-day.prevMonthDay:nth-child(-n+7),\r\nspan.flatpickr-day.nextMonthDay:nth-child(-n+7) {\r\n  margin-top: 0;\r\n}\r\nspan.flatpickr-day.today:not(.selected),\r\nspan.flatpickr-day.prevMonthDay.today:not(.selected),\r\nspan.flatpickr-day.nextMonthDay.today:not(.selected) {\r\n  border-color: ${primary2};\r\n  border-right-color: transparent;\r\n  border-top-color: transparent;\r\n  border-bottom-color: ${primary2};\r\n}\r\nspan.flatpickr-day.today:not(.selected):hover,\r\nspan.flatpickr-day.prevMonthDay.today:not(.selected):hover,\r\nspan.flatpickr-day.nextMonthDay.today:not(.selected):hover {\r\n  border: 1px solid ${primary2};\r\n}\r\nspan.flatpickr-day.startRange,\r\nspan.flatpickr-day.prevMonthDay.startRange,\r\nspan.flatpickr-day.nextMonthDay.startRange,\r\nspan.flatpickr-day.endRange,\r\nspan.flatpickr-day.prevMonthDay.endRange,\r\nspan.flatpickr-day.nextMonthDay.endRange {\r\n  border-color: ${primary};\r\n}\r\nspan.flatpickr-day.today,\r\nspan.flatpickr-day.prevMonthDay.today,\r\nspan.flatpickr-day.nextMonthDay.today,\r\nspan.flatpickr-day.selected,\r\nspan.flatpickr-day.prevMonthDay.selected,\r\nspan.flatpickr-day.nextMonthDay.selected {\r\n  z-index: 2;\r\n}\r\n.rangeMode .flatpickr-day {\r\n  margin-top: -1px;\r\n}\r\n.flatpickr-weekwrapper .flatpickr-weeks {\r\n  -webkit-box-shadow: none;\r\n          box-shadow: none;\r\n}\r\n.flatpickr-weekwrapper span.flatpickr-day {\r\n  border: 0;\r\n  margin: -1px 0 0 -1px;\r\n}\r\n.hasWeeks .flatpickr-days {\r\n  border-right: 0;\r\n}\r\n\r\n\t@media screen and (min-width:0\\\\0) and (min-resolution: +72dpi) {\r\n\t\tspan.flatpickr-day {\r\n\t\t\tdisplay: block;\r\n\t\t\t-webkit-box-flex: 1;\r\n\t\t\t-webkit-flex: 1 0 auto;\r\n\t\t\t    -ms-flex: 1 0 auto;\r\n\t\t\t        flex: 1 0 auto;\r\n\t\t}\r\n\t}\r\n\t\t`, this._root.nonce));\r\n\t}\r\n\r\n}","import type { TimeUnit } from \"../../../core/util/Time\"\r\nimport type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { AxisRenderer } from \"../../xy/axes/AxisRenderer\";\r\n\r\nimport { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { MultiDisposer, IDisposer } from \"../../../core/util/Disposer\";\r\n\r\nimport * as $utils from \"../../../core/util/Utils\";\r\nimport * as $time from \"../../../core/util/Time\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IPeriod {\r\n\ttimeUnit: TimeUnit | \"ytd\" | \"max\" | \"custom\";\r\n\tcount?: number;\r\n\tname?: string;\r\n\tstart?: Date;\r\n\tend?: Date;\r\n}\r\n\r\nexport interface IPeriodSelectorSettings extends IStockControlSettings {\r\n\r\n\t/**\r\n\t * A list periods to choose from.\r\n\t */\r\n\tperiods?: IPeriod[];\r\n\r\n\t/**\r\n\t * Hide periods that are longer than the actual data.\r\n\t *\r\n\t * @default false\r\n\t * @since 5.3.9\r\n\t */\r\n\thideLongPeriods?: boolean;\r\n\r\n\t/**\r\n\t * Indicates whether to select periods from the start or end of the axis\r\n\t * scale.\r\n\t *\r\n\t * @default \"end\"\r\n\t * @since 5.5.0\r\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/period-selector/#Zoom_anchor_point} for more info\r\n\t */\r\n\tzoomTo?: \"end\" | \"start\";\r\n\r\n}\r\n\r\nexport interface IPeriodSelectorPrivate extends IStockControlPrivate {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\taxis?: DateAxis<AxisRenderer>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tdeferReset?: boolean;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tdeferTimeout?: IDisposer;\r\n\r\n}\r\n\r\nexport interface IPeriodSelectorEvents extends IStockControlEvents {\r\n\t/**\r\n\t * Invoked when user selects certain period via control.\r\n\t *\r\n\t * @from 5.8.5\r\n\t */\r\n\tperiodselected: {\r\n\t\tperiod: IPeriod;\r\n\t}\r\n}\r\n\r\n/**\r\n * A pre-defined period selector control for [[StockToolback]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/period-selector/} for more info\r\n */\r\nexport class PeriodSelector extends StockControl {\r\n\tpublic static className: string = \"PeriodSelector\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([PeriodSelector.className]);\r\n\r\n\tdeclare public _settings: IPeriodSelectorSettings;\r\n\tdeclare public _privateSettings: IPeriodSelectorPrivate;\r\n\tdeclare public _events: IPeriodSelectorEvents;\r\n\r\n\tprotected _groupChangedDp: IDisposer | undefined;\r\n\tprotected _groupChangedTo: IDisposer | undefined;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tbutton.className = button.className + \" am5stock-no-hover\";\r\n\r\n\t\tthis._initPeriodButtons();\r\n\t}\r\n\r\n\tprotected _initPeriodButtons(): void {\r\n\t\tconst container = this.getPrivate(\"label\")!;\r\n\t\tcontainer.style.display = \"\";\r\n\r\n\t\tconst periods = this.get(\"periods\", []);\r\n\t\tconst axis = this._getAxis();\r\n\t\taxis.onPrivate(\"min\", () => this._setPeriodButtonStatus());\r\n\t\taxis.onPrivate(\"max\", () => this._setPeriodButtonStatus());\r\n\t\t$array.each(periods, (period) => {\r\n\t\t\tconst button = document.createElement(\"a\");\r\n\t\t\tbutton.innerHTML = period.name || (period.timeUnit.toUpperCase() + period.count || \"1\");\r\n\t\t\tbutton.className = \"am5stock-link\";\r\n\t\t\tbutton.setAttribute(\"data-period\", period.timeUnit + (period.count || \"\"));\r\n\t\t\tcontainer.appendChild(button);\r\n\r\n\t\t\tthis._disposers.push($utils.addEventListener(button, \"click\", (_ev) => {\r\n\t\t\t\tthis.setPrivate(\"deferReset\", false);\r\n\t\t\t\tthis._resetActiveButtons();\r\n\t\t\t\tthis.selectPeriod(period);\r\n\t\t\t\tthis.setPrivate(\"deferReset\", true);\r\n\t\t\t\t$utils.addClass(button, \"am5stock-active\");\r\n\t\t\t\tconst timeout = this.getPrivate(\"deferTimeout\");\r\n\t\t\t\tif (timeout) {\r\n\t\t\t\t\ttimeout.dispose();\r\n\t\t\t\t}\r\n\t\t\t\tthis.setPrivate(\"deferTimeout\", this.setTimeout(() => this.setPrivate(\"deferReset\", false), axis.get(\"interpolationDuration\", 1000) + 200));\r\n\t\t\t}));\r\n\t\t});\r\n\r\n\t\tif ($utils.supports(\"keyboardevents\")) {\r\n\t\t\tthis._disposers.push($utils.addEventListener(document, \"keydown\", (ev: KeyboardEvent) => {\r\n\t\t\t\tif (this.isAccessible()) {\r\n\t\t\t\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\t\t\t\tif (document.activeElement && (document.activeElement === button || $utils.contains(button, document.activeElement))) {\r\n\t\t\t\t\t\tif ([37, 38, 39, 40].indexOf(ev.keyCode) !== -1) {\r\n\t\t\t\t\t\t\tconst dir = ev.keyCode == 37 || ev.keyCode == 38 ? -1 : 1;\r\n\t\t\t\t\t\t\tconst items = this._getPeriodButtons();\r\n\t\t\t\t\t\t\tconst selected = container.querySelectorAll(\".am5stock-link:focus\");\r\n\t\t\t\t\t\t\tlet index: number = -1;\r\n\t\t\t\t\t\t\tif (selected.length > 0) {\r\n\t\t\t\t\t\t\t\t//index = items.entries().indexOf(selected.item(0));\r\n\t\t\t\t\t\t\t\titems.forEach((item, key) => {\r\n\t\t\t\t\t\t\t\t\tif (item === selected.item(0)) {\r\n\t\t\t\t\t\t\t\t\t\tindex = key;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tindex += dir;\r\n\t\t\t\t\t\t\tif (index < 0) {\r\n\t\t\t\t\t\t\t\tindex = items.length - 1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (index >= items.length) {\r\n\t\t\t\t\t\t\t\tindex = 0;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$utils.focus(items.item(index) as HTMLElement);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (ev.keyCode == 13) {\r\n\t\t\t\t\t\t\t// ENTER\r\n\t\t\t\t\t\t\t(document.activeElement as HTMLElement).click();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tthis._maybeMakeAccessible();\r\n\r\n\t}\r\n\r\n\tprotected _resetActiveButtons(): void {\r\n\t\tif (this.getPrivate(\"deferReset\") !== true) {\r\n\t\t\tconst container = this.getPrivate(\"label\")!;\r\n\t\t\tconst buttons = container.getElementsByClassName(\"am5stock-active\");\r\n\t\t\t$array.each(buttons, (b) => {\r\n\t\t\t\t$utils.removeClass(<HTMLElement>b, \"am5stock-active\");\r\n\t\t\t});\r\n\r\n\t\t\tlet axis = this.getPrivate(\"axis\");\r\n\t\t\tif (!axis) {\r\n\t\t\t\taxis = this._getAxis();\r\n\t\t\t\tthis.setPrivate(\"axis\", axis);\r\n\t\t\t\tthis._disposers.push(new MultiDisposer([\r\n\t\t\t\t\taxis!.on(\"start\", () => this._resetActiveButtons()),\r\n\t\t\t\t\taxis!.on(\"end\", () => this._resetActiveButtons())\r\n\t\t\t\t]));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setPeriodButtonStatus(): void {\r\n\t\tif (this.get(\"hideLongPeriods\")) {\r\n\t\t\tlet axis = this.getPrivate(\"axis\");\r\n\t\t\tconst container = this.getPrivate(\"label\")!;\r\n\t\t\tconst buttons = container.getElementsByTagName(\"a\");\r\n\t\t\tif (!axis) {\r\n\t\t\t\taxis = this._getAxis();\r\n\t\t\t\tconst min = axis!.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = axis!.getPrivate(\"max\", 0);\r\n\t\t\t\tif (min && max) {\r\n\t\t\t\t\tconst diff = max - min;\r\n\t\t\t\t\tconst periods = this.get(\"periods\", []);\r\n\t\t\t\t\t$array.each(periods, (period) => {\r\n\t\t\t\t\t\tif (period.timeUnit !== \"ytd\" && period.timeUnit !== \"max\") {\r\n\t\t\t\t\t\t\tconst plen = $time.getDuration(period.timeUnit as TimeUnit, period.count || 1);\r\n\t\t\t\t\t\t\tconst id = period.timeUnit + (period.count || \"\");\r\n\t\t\t\t\t\t\tfor (let i = 0; i < buttons.length; i++) {\r\n\t\t\t\t\t\t\t\tconst button = buttons[i];\r\n\t\t\t\t\t\t\t\tif (button.getAttribute(\"data-period\") == id) {\r\n\t\t\t\t\t\t\t\t\tif (plen > diff) {\r\n\t\t\t\t\t\t\t\t\t\t$utils.addClass(button, \"am5stock-hidden\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t$utils.removeClass(button, \"am5stock-hidden\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// protected _getDefaultIcon(): SVGElement {\r\n\t// \treturn StockIcons.getIcon(\"Period\");\r\n\t// }\r\n\r\n\tpublic _afterChanged() {\r\n\t\tsuper._afterChanged();\r\n\t\tif (this.isPrivateDirty(\"toolbar\")) {\r\n\t\t\tthis._maybeMakeAccessible();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getChart(): any {\r\n\t\treturn this.get(\"stockChart\").panels.getIndex(0)!;\r\n\t}\r\n\r\n\tprotected _getAxis(): any {\r\n\t\treturn this._getChart().xAxes.getIndex(0)!;\r\n\t}\r\n\r\n\tprotected _getMaxOrMax(which: \"min\" | \"max\"): Date {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst series = stockChart.get(\"stockSeries\");\r\n\t\tconst axis = this._getAxis();\r\n\t\tlet val = axis.getPrivate(which);\r\n\t\tif (series && (series.dataItems.length > 0)) {\r\n\t\t\t// Get last data item\r\n\t\t\tlet baseInterval = axis.get(\"baseInterval\");\r\n\t\t\tlet mainDataSetId: string = baseInterval.timeUnit + baseInterval.count;\r\n\t\t\tconst dataSet = series._dataSets[mainDataSetId] || series.dataItems;\r\n\t\t\tconst dataItem = dataSet[which == \"min\" ? 0 : dataSet.length - 1];\r\n\t\t\tif (which == \"min\" && dataItem.open !== undefined && dataItem.open[\"valueX\"] !== undefined) {\r\n\t\t\t\tval = dataItem.open[\"valueX\"];\r\n\t\t\t}\r\n\t\t\telse if (which == \"max\" && dataItem.close !== undefined && dataItem.close[\"valueX\"] !== undefined) {\r\n\t\t\t\tval = dataItem.close[\"valueX\"] - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Date(val);\r\n\t}\r\n\r\n\r\n\tprotected _getMax(): Date {\r\n\t\treturn this._getMaxOrMax(\"max\");\r\n\t}\r\n\r\n\tprotected _getMin(): Date {\r\n\t\treturn this._getMaxOrMax(\"min\");\r\n\t}\r\n\r\n\tpublic selectPeriod(period: IPeriod): void {\r\n\t\tconst type = \"periodselected\";\r\n\t\tif (this.events.isEnabled(type)) {\r\n\t\t\tthis.events.dispatch(type, {\r\n\t\t\t\ttype: type,\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tperiod: period\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst fromStart = this.get(\"zoomTo\", \"end\") == \"start\";\r\n\t\tthis._highlightPeriod(period);\r\n\t\tif (period.timeUnit == \"max\") {\r\n\t\t\tthis._getChart().zoomOut();\r\n\t\t}\r\n\t\telse if (period.timeUnit == \"custom\") {\r\n\t\t\tconst axis = this._getAxis();\r\n\t\t\tlet start = period.start || this._getMin();\r\n\t\t\tlet end = period.end || this._getMax();\r\n\t\t\taxis.zoomToDates(start, end);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tconst axis = this._getAxis();\r\n\t\t\tlet end = this._getMax();\r\n\t\t\tlet start: Date;\r\n\t\t\tif (period.timeUnit == \"ytd\") {\r\n\t\t\t\tstart = new Date(end.getFullYear(), 0, 1, 0, 0, 0, 0);\r\n\t\t\t\t//end = new Date(axis.getIntervalMax(axis.get(\"baseInterval\")));\r\n\t\t\t\tend = this._getMax();\r\n\t\t\t\tif (axis.get(\"groupData\")) {\r\n\t\t\t\t\taxis.zoomToDates(start, end, 0);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\taxis.zoomToDates(start, end, 0);\r\n\t\t\t\t\t}, 10);\r\n\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tconst timeUnit = period.timeUnit as TimeUnit;\r\n\t\t\t\t// some adjustments in case data is grouped\r\n\t\t\t\tif (axis.get(\"groupData\")) {\r\n\t\t\t\t\t// find interval which will be used after zoom\r\n\t\t\t\t\tconst interval = axis.getGroupInterval($time.getDuration(timeUnit, period.count))\r\n\t\t\t\t\tif (interval) {\r\n\r\n\t\t\t\t\t\tconst firstDay = this._root.locale.firstDayOfWeek;\r\n\t\t\t\t\t\tconst timezone = this._root.timezone;\r\n\t\t\t\t\t\tconst utc = this._root.utc;\r\n\r\n\t\t\t\t\t\tif (fromStart) {\r\n\t\t\t\t\t\t\tstart = this._getMin();\r\n\t\t\t\t\t\t\t//let startTime = axis.getIntervalMin(axis.get(\"baseInterval\"));\r\n\t\t\t\t\t\t\tlet startTime = start.getTime();\r\n\r\n\t\t\t\t\t\t\tif (startTime != null) {\r\n\t\t\t\t\t\t\t\t// round to the previuous interval\r\n\t\t\t\t\t\t\t\tstart = $time.round(new Date(startTime), interval.timeUnit, interval.count, firstDay, utc, undefined, timezone);\r\n\t\t\t\t\t\t\t\tstart.setTime(start.getTime() + $time.getDuration(interval.timeUnit, interval.count * .95));\r\n\t\t\t\t\t\t\t\tstart = $time.round(start, interval.timeUnit, interval.count, firstDay, utc, undefined, timezone);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tend = $time.add(new Date(start), timeUnit, (period.count || 1));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t// find max of the base interval\r\n\t\t\t\t\t\t\t//let endTime = axis.getIntervalMax(axis.get(\"baseInterval\"));\r\n\t\t\t\t\t\t\tlet endTime = this._getMax().getTime();\r\n\r\n\t\t\t\t\t\t\tif (endTime != null) {\r\n\t\t\t\t\t\t\t\t// round to the future interval\r\n\t\t\t\t\t\t\t\tend = $time.round(new Date(endTime), interval.timeUnit, interval.count, firstDay, utc, undefined, timezone);\r\n\t\t\t\t\t\t\t\tend.setTime(end.getTime() + $time.getDuration(interval.timeUnit, interval.count * 1.05));\r\n\t\t\t\t\t\t\t\tend = $time.round(end, interval.timeUnit, interval.count, firstDay, utc, undefined, timezone);\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tstart = $time.add(new Date(end), timeUnit, (period.count || 1) * -1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._groupChangedDp) {\r\n\t\t\t\t\t\t\tthis._groupChangedDp.dispose();\r\n\t\t\t\t\t\t\tthis._groupChangedDp = undefined;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._groupChangedTo) {\r\n\t\t\t\t\t\t\tthis._groupChangedTo.dispose();\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis._groupChangedDp = axis.events.once(\"groupintervalchanged\", () => {\r\n\t\t\t\t\t\t\taxis.zoomToDates(start, end, 0);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\taxis.zoomToDates(start, end, 0);\r\n\r\n\t\t\t\t\t\tthis._groupChangedTo = this.setTimeout(() => {\r\n\t\t\t\t\t\t\tif (this._groupChangedDp) {\r\n\t\t\t\t\t\t\t\tthis._groupChangedDp.dispose();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._groupChangedTo = undefined;\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (fromStart) {\r\n\t\t\t\t\tstart = this._getMin();\r\n\t\t\t\t\tend = $time.add(new Date(start), timeUnit, (period.count || 1));\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstart = $time.add(new Date(end), timeUnit, (period.count || 1) * -1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\taxis.zoomToDates(start, end);\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _highlightPeriod(period: IPeriod): void {\r\n\t\tconst id = period.timeUnit + (period.count || \"\");\r\n\t\tconst container = this.getPrivate(\"label\")!;\r\n\t\tconst buttons = container.getElementsByTagName(\"a\");\r\n\t\tfor (let i = 0; i < buttons.length; i++) {\r\n\t\t\tconst button = buttons[i];\r\n\t\t\tif (button.getAttribute(\"data-period\") == id && id != \"custom\") {\r\n\t\t\t\t$utils.addClass(button, \"am5stock-active\");\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t$utils.removeClass(button, \"am5stock-active\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _maybeMakeAccessible(): void {\r\n\t\tsuper._maybeMakeAccessible();\r\n\t\tif (this.isAccessible()) {\r\n\t\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\t\tbutton.setAttribute(\"aria-label\", button.getAttribute(\"title\") + \"; \" + this._t(\"Press ENTER or use arrow keys to navigate\"));\r\n\t\t\tconst items = this._getPeriodButtons();\r\n\t\t\titems.forEach((item) => {\r\n\t\t\t\t(item as HTMLElement).setAttribute(\"tabindex\", \"-1\");\r\n\t\t\t\t(item as HTMLElement).setAttribute(\"aria-label\", (item as HTMLElement).getAttribute(\"title\") || \"\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getPeriodButtons(): NodeList {\r\n\t\treturn this.getPrivate(\"label\")!.querySelectorAll(\".am5stock-link\");\r\n\t}\r\n\r\n}","import { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\n\r\nexport interface ISeriesTypeControlSettings extends IDropdownListControlSettings {\r\n}\r\n\r\nexport interface ISeriesTypeControlPrivate extends IDropdownListControlPrivate {\r\n}\r\n\r\nexport interface ISeriesTypeControlEvents extends IDropdownListControlEvents {\r\n}\r\n\r\n/**\r\n * A control that is used to change type of the main series of the [[StockChart]].\r\n */\r\nexport class SeriesTypeControl extends DropdownListControl {\r\n\tpublic static className: string = \"SeriesTypeControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([SeriesTypeControl.className]);\r\n\r\n\tdeclare public _settings: ISeriesTypeControlSettings;\r\n\tdeclare public _privateSettings: ISeriesTypeControlPrivate;\r\n\tdeclare public _events: ISeriesTypeControlEvents;\r\n\r\n}","import type { IDropdownListItem } from \"./DropdownList\";\r\nimport type { TimeUnit } from \"../../../core/util/Time\";\r\n\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nexport interface IIntervalControlItem extends IDropdownListItem {\r\n\tinterval: {\r\n\t\ttimeUnit: TimeUnit,\r\n\t\tcount?: number\r\n\t};\r\n}\r\n\r\nexport interface IIntervalControlSettings extends IDropdownListControlSettings {\r\n\tcurrentItem?: string | IIntervalControlItem;\r\n\titems?: Array<string | IIntervalControlItem>;\r\n}\r\n\r\nexport interface IIntervalControlPrivate extends IDropdownListControlPrivate {\r\n}\r\n\r\nexport interface IIntervalControlEvents extends IDropdownListControlEvents {\r\n}\r\n\r\n/**\r\n * A control that is used to change type of the main series of the [[StockChart]].\r\n */\r\nexport class IntervalControl extends DropdownListControl {\r\n\tpublic static className: string = \"IntervalControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([IntervalControl.className]);\r\n\r\n\tdeclare public _settings: IIntervalControlSettings;\r\n\tdeclare public _privateSettings: IIntervalControlPrivate;\r\n\tdeclare public _events: IIntervalControlEvents;\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Interval\");\r\n\t}\r\n\r\n}","import { StockControl, IStockControlSettings, IStockControlPrivate, IStockControlEvents } from \"./StockControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nexport interface IResetControlSettings extends IStockControlSettings {\r\n}\r\n\r\nexport interface IResetControlPrivate extends IStockControlPrivate {\r\n}\r\n\r\nexport interface IResetControlEvents extends IStockControlEvents {\r\n}\r\n\r\n/**\r\n * Reset control.\r\n *\r\n * Removes all drawings and indicators when clicked.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/reset-control/} for more info\r\n */\r\nexport class ResetControl extends StockControl {\r\n\tpublic static className: string = \"ResetControl\";\r\n\tpublic static classNames: Array<string> = StockControl.classNames.concat([ResetControl.className]);\r\n\r\n\tdeclare public _settings: IResetControlSettings;\r\n\tdeclare public _privateSettings: IResetControlPrivate;\r\n\tdeclare public _events: IResetControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.events.on(\"click\", () => {\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tstockChart.panels.each((panel) => {\r\n\t\t\t\tpanel.drawings.each((drawing) => {\r\n\t\t\t\t\tdrawing.data.clear();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tstockChart.indicators.clear();\r\n\t\t});\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Reset\");\r\n\t}\r\n\r\n}","import type { IDropdownListItem } from \"./DropdownList\";\r\n\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport { DrawingControl } from \"./DrawingControl\";\r\nimport { IndicatorControl } from \"./IndicatorControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IDataSaveControlItem extends IDropdownListItem {\r\n}\r\n\r\nexport interface IDataSaveControlSettings extends IDropdownListControlSettings {\r\n\t/**\r\n\t * If set to `true`, all changes to chart's drawings and indicators will be\r\n\t * automatically saved to browser local storage and restored on next load.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tautoSave?: boolean;\r\n\r\n\t/**\r\n\t * A unique indentifier for local storage.\r\n\t *\r\n\t * Will try to use chart's container ID if not set.\r\n\t *\r\n\t * Consider setting it if you have multipl [[StockChart]] on the same page.\r\n\t */\r\n\tstorageId?: string;\r\n}\r\n\r\nexport interface IDataSaveControlPrivate extends IDropdownListControlPrivate {\r\n\tdrawingControl?: DrawingControl;\r\n\tindicatorControl?: IndicatorControl;\r\n\tstorageId?: string;\r\n}\r\n\r\nexport interface IDataSaveControlEvents extends IDropdownListControlEvents {\r\n\r\n\t/**\r\n\t * Invoked when drawing/indicator data is serialized and saved to local\r\n\t * storage.\r\n\t */\r\n\tsaved: {\r\n\t\tdrawings: string;\r\n\t\tindicators: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when drawing/indicator data is loaded from local storage and\r\n\t * restored on chart.\r\n\t */\r\n\trestored: {\r\n\t\tdrawings: string;\r\n\t\tindicators: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when local storage is cleared.\r\n\t */\r\n\tcleared: {};\r\n\r\n}\r\n\r\n/**\r\n * A control that can be used to serialize indicators and drawings, save them\r\n * to local storage, and restore as needed.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/data-save-control/} for more info\r\n * @since 5.7.0\r\n */\r\nexport class DataSaveControl extends DropdownListControl {\r\n\tpublic static className: string = \"DataSaveControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([DataSaveControl.className]);\r\n\r\n\tdeclare public _settings: IDataSaveControlSettings;\r\n\tdeclare public _privateSettings: IDataSaveControlPrivate;\r\n\tdeclare public _events: IDataSaveControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.setPrivate(\"storageId\", window.location.href + \"-\" + this.root.dom.id);\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\")!;\r\n\r\n\t\t// Load local storage\r\n\t\tif (localStorage && localStorage.getItem(this._getStorageId(\"autosave\")) == \"1\") {\r\n\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\tthis.restoreData();\r\n\t\t\t\tthis.set(\"autoSave\", true);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdropdown.events.on(\"changed\", (ev) => {\r\n\t\t\tif (ev.item.id == \"autosave\") {\r\n\t\t\t\tconst autoSave = !ev.item.checked;\r\n\t\t\t\tthis.set(\"autoSave\", autoSave);\r\n\t\t\t\tif (autoSave) {\r\n\t\t\t\t\tthis.saveData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"invoked\", (ev) => {\r\n\t\t\tif (ev.item.id == \"save\") {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t\telse if (ev.item.id == \"restore\") {\r\n\t\t\t\tthis.restoreData();\r\n\t\t\t}\r\n\t\t\telse if (ev.item.id == \"clear\") {\r\n\t\t\t\tthis.clearData();\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", () => {\r\n\t\t\tthis._populateInputs();\r\n\t\t});\r\n\r\n\t\tstockChart.events.on(\"drawingsupdated\", (_ev) => {\r\n\t\t\tif (this.get(\"autoSave\")) {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tstockChart.events.on(\"indicatorsupdated\", (_ev) => {\r\n\t\t\tif (this.get(\"autoSave\")) {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"autoSave\") && localStorage) {\r\n\t\t\tconst autoSave = this.get(\"autoSave\", false);\r\n\t\t\tif (autoSave) {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"autosave\"), \"1\");\r\n\t\t\t\t//this.saveData();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"autosave\"));\r\n\t\t\t\t//this.clearData();\r\n\t\t\t}\r\n\t\t\tthis._populateInputs();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic saveData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tconst drawingControl = this._getDrawingControl();\r\n\t\t\tconst indicatorControl = this._getIndicatorControl();\r\n\t\t\tconst drawings = drawingControl.serializeDrawings(\"string\", \"  \") as string;\r\n\t\t\tconst indicators = indicatorControl.serializeIndicators(\"string\", \"  \") as string;\r\n\t\t\tif (drawings == \"[]\") {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"drawings\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"drawings\"), drawings);\r\n\t\t\t}\r\n\t\t\tif (indicators == \"[]\") {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"indicators\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"indicators\"), indicators);\r\n\t\t\t}\r\n\t\t\tthis.events.dispatch(\"saved\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"saved\",\r\n\t\t\t\tdrawings: drawings,\r\n\t\t\t\tindicators: indicators\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic restoreData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tstockChart.panels.each((panel) => {\r\n\t\t\t\tpanel.drawings.each((drawing) => {\r\n\t\t\t\t\tdrawing.data.clear();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tstockChart.indicators.clear();\r\n\r\n\t\t\tconst drawingControl = this._getDrawingControl();\r\n\t\t\tconst indicatorControl = this._getIndicatorControl();\r\n\t\t\tconst drawings = localStorage.getItem(this._getStorageId(\"drawings\")) || \"[]\";\r\n\t\t\tconst indicators = localStorage.getItem(this._getStorageId(\"indicators\")) || \"[]\";\r\n\r\n\t\t\tdrawingControl.unserializeDrawings(drawings);\r\n\t\t\tindicatorControl.unserializeIndicators(indicators);\r\n\t\t\tthis.events.dispatch(\"restored\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"restored\",\r\n\t\t\t\tdrawings: drawings,\r\n\t\t\t\tindicators: indicators\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clearData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tlocalStorage.removeItem(this._getStorageId(\"drawings\"));\r\n\t\t\tlocalStorage.removeItem(this._getStorageId(\"indicators\"));\r\n\t\t\tthis.events.dispatch(\"cleared\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"cleared\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Save\");\r\n\t}\r\n\r\n\tprotected _populateInputs(): void {\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\")!;\r\n\t\tconst items = dropdown.get(\"items\", []);\r\n\t\tconst autoSave = this.get(\"autoSave\", false);\r\n\t\tconst isSavedData = localStorage && (localStorage.getItem(this._getStorageId(\"drawings\")) !== null || localStorage.getItem(this._getStorageId(\"indicators\")) !== null);\r\n\t\t$array.each(items, (item) => {\r\n\t\t\tif (!localStorage) {\r\n\t\t\t\titem.disabled = true;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"restore\") {\r\n\t\t\t\titem.disabled = autoSave || !isSavedData;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"clear\") {\r\n\t\t\t\titem.disabled = !isSavedData;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"save\") {\r\n\t\t\t\titem.disabled = autoSave;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"autosave\") {\r\n\t\t\t\titem.checked = autoSave;\r\n\t\t\t}\r\n\t\t})\r\n\t\tdropdown.rebuildList();\r\n\t}\r\n\r\n\tprotected _getStorageId(bucket: string): string {\r\n\t\treturn \"am5-stock-\" + this.get(\"storageId\", this.getPrivate(\"storageId\", \"\")) + \"-\" + bucket;\r\n\t}\r\n\r\n\tprotected _getDrawingControl(): DrawingControl {\r\n\r\n\t\tlet drawingControl: DrawingControl | undefined = this.getPrivate(\"drawingControl\");\r\n\t\tif (drawingControl) {\r\n\t\t\treturn drawingControl;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tdrawingControl = stockChart.getControl(\"DrawingControl\") as DrawingControl;\r\n\t\tif (!drawingControl) {\r\n\t\t\tdrawingControl = DrawingControl.new(this.root, {\r\n\t\t\t\tstockChart: stockChart\r\n\t\t\t});\r\n\t\t\tthis.setPrivate(\"drawingControl\", drawingControl);\r\n\t\t}\r\n\t\treturn drawingControl;\r\n\t}\r\n\r\n\tprotected _getIndicatorControl(): IndicatorControl {\r\n\r\n\t\tlet indicatorControl: IndicatorControl | undefined = this.getPrivate(\"indicatorControl\");\r\n\t\tif (indicatorControl) {\r\n\t\t\treturn indicatorControl;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tindicatorControl = stockChart.getControl(\"IndicatorControl\") as IndicatorControl;\r\n\t\tif (!indicatorControl) {\r\n\t\t\tindicatorControl = IndicatorControl.new(this.root, {\r\n\t\t\t\tstockChart: stockChart\r\n\t\t\t});\r\n\t\t\tthis.setPrivate(\"indicatorControl\", indicatorControl);\r\n\t\t}\r\n\t\treturn indicatorControl;\r\n\t}\r\n\r\n}","import type { IDropdownListItem } from \"./DropdownList\";\r\n\r\nimport { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\nimport { DataSaveControl } from \"./DataSaveControl\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface ISettingsControlItem extends IDropdownListItem {\r\n}\r\n\r\nexport interface ISettingsControlSettings extends IDropdownListControlSettings {\r\n\t/**\r\n\t * If set to `true`, all changes to chart's drawings and indicators will be\r\n\t * automatically saved to browser local storage and restored on next load.\r\n\t *\r\n\t * @default false\r\n\t *\r\n\t * @since 5.4.3\r\n\t */\r\n\tautoSave?: boolean;\r\n\r\n\t/**\r\n\t * A unique indentifier for local storage.\r\n\t *\r\n\t * Will try to use chart's container ID if not set.\r\n\t *\r\n\t * Consider setting it if you have multipl [[StockChart]] on the same page.\r\n\t *\r\n\t * @since 5.4.3\r\n\t */\r\n\tstorageId?: string;\r\n}\r\n\r\nexport interface ISettingsControlPrivate extends IDropdownListControlPrivate {\r\n\tdataSaveControl?: DataSaveControl;\r\n}\r\n\r\nexport interface ISettingsControlEvents extends IDropdownListControlEvents {\r\n}\r\n\r\n/**\r\n * A control that is used to change type of the main series of the [[StockChart]].\r\n */\r\nexport class SettingsControl extends DropdownListControl {\r\n\tpublic static className: string = \"SettingsControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([SettingsControl.className]);\r\n\r\n\tdeclare public _settings: ISettingsControlSettings;\r\n\tdeclare public _privateSettings: ISettingsControlPrivate;\r\n\tdeclare public _events: ISettingsControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\")!;\r\n\t\tdropdown.events.on(\"changed\", (ev) => {\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tconst stockSeries = stockChart.get(\"stockSeries\");\r\n\t\t\tif (stockSeries) {\r\n\t\t\t\tif (ev.item.id == \"y-scale\") {\r\n\t\t\t\t\tif (ev.item.value == \"percent\") {\r\n\t\t\t\t\t\tstockChart.setPercentScale(true);\r\n\t\t\t\t\t\tthis._setLogarithmic(false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tstockChart.setPercentScale(false);\r\n\t\t\t\t\t\tthis._setLogarithmic(ev.item.value == \"logarithmic\");\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (ev.item.id == \"fills\") {\r\n\t\t\t\t\tthis._setFills((<any>ev).checked)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (ev.item.id == \"autosave\") {\r\n\t\t\t\tconst autoSave = (<any>ev).checked;\r\n\t\t\t\tlet dataSaveControl = this.getPrivate(\"dataSaveControl\")!;\r\n\t\t\t\tdataSaveControl.set(\"autoSave\", autoSave);\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", () => {\r\n\t\t\tthis._populateInputs();\r\n\t\t});\r\n\r\n\t\tthis._disposers.push(this.root.events.on(\"frameended\", () => {\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tconst serializableTools = (stockChart.getControl(\"IndicatorControl\") || stockChart.getControl(\"DrawingControl\")) ? true : false;\r\n\t\t\tlet dataSaveControl = stockChart.getControl(\"DataSaveControl\");\r\n\r\n\t\t\tif (!serializableTools) {\r\n\t\t\t\tconst exclude: any = dropdown.get(\"exclude\", []);\r\n\t\t\t\texclude.push(\"save\");\r\n\t\t\t\texclude.push(\"autosave\");\r\n\t\t\t\tdropdown.set(\"exclude\", [\"save\", \"autosave\"]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!dataSaveControl) {\r\n\t\t\t\t\tdataSaveControl = DataSaveControl.new(this.root, {\r\n\t\t\t\t\t\tstockChart: stockChart,\r\n\t\t\t\t\t\tautoSave: this.get(\"autoSave\", false),\r\n\t\t\t\t\t\tstorageId: this.get(\"storageId\")\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis.setPrivate(\"dataSaveControl\", dataSaveControl as DataSaveControl);\r\n\t\t\t\tthis.set(\"autoSave\", (dataSaveControl as DataSaveControl).get(\"autoSave\"));\r\n\t\t\t\tthis._populateInputs();\r\n\t\t\t}\r\n\t\t}));\r\n\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Settings\");\r\n\t}\r\n\r\n\tprotected _populateInputs(): void {\r\n\r\n\t\t// Axes-related stuff\r\n\t\tconst button = this.getPrivate(\"button\")!;\r\n\t\tconst inputs = button.getElementsByTagName(\"input\");\r\n\t\tconst currentScale = this._getYScale();\r\n\t\tfor (let i = 0; i < inputs.length; i++) {\r\n\t\t\tconst input = inputs[i];\r\n\t\t\tswitch (input.id) {\r\n\t\t\t\tcase \"am5stock-list-autosave\":\r\n\t\t\t\t\tinput.checked = this.get(\"autoSave\", this.getPrivate(\"dataSaveControl\")!.get(\"autoSave\", false));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"am5stock-list-fills\":\r\n\t\t\t\t\tinput.checked = this._getFillEnabled()\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"am5stock-list-y-scale-percent\":\r\n\t\t\t\tcase \"am5stock-list-y-scale-regular\":\r\n\t\t\t\tcase \"am5stock-list-y-scale-logarithmic\":\r\n\t\t\t\t\tinput.checked = input.value == currentScale;\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tprotected _getFillEnabled(): boolean {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\");\r\n\t\tif (stockSeries) {\r\n\t\t\tconst xAxis = stockSeries.get(\"xAxis\");\r\n\t\t\tconst fills = xAxis.get(\"renderer\").axisFills.values;\r\n\t\t\treturn (fills.length > 0) && fills[0].get(\"visible\", false);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tprotected _getYScale(): \"percent\" | \"regular\" | \"logarithmic\" {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\");\r\n\t\tif (stockSeries) {\r\n\t\t\tconst yAxis = stockSeries.get(\"yAxis\");\r\n\t\t\tif (yAxis instanceof ValueAxis) {\r\n\t\t\t\tif (stockSeries.get(\"valueYShow\") == \"valueYChangeSelectionPercent\") {\r\n\t\t\t\t\treturn \"percent\";\r\n\t\t\t\t}\r\n\t\t\t\tif (yAxis.get(\"logarithmic\")) {\r\n\t\t\t\t\treturn \"logarithmic\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"regular\";\r\n\t}\r\n\r\n\tprotected _setLogarithmic(value: boolean): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst stockSeries = stockChart.get(\"stockSeries\");\r\n\t\tif (stockSeries) {\r\n\t\t\tconst yAxis = stockSeries.get(\"yAxis\");\r\n\t\t\tif (yAxis instanceof ValueAxis) {\r\n\r\n\t\t\t\t$array.each(yAxis.series, (series) => {\r\n\t\t\t\t\tseries.resetExtremes();\r\n\t\t\t\t\tseries.markDirtyValues();\r\n\t\t\t\t})\r\n\r\n\t\t\t\tyAxis.set(\"logarithmic\", value);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setFills(enabled: boolean): void {\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tstockChart.panels.each((panel) => {\r\n\t\t\tpanel.xAxes.each((xAxis) => {\r\n\t\t\t\txAxis.get(\"renderer\").axisFills.template.set(\"visible\", enabled);\r\n\t\t\t\txAxis.get(\"renderer\").grid.template.set(\"forceHidden\", enabled);\r\n\t\t\t})\r\n\t\t});\r\n\t}\r\n\r\n}","import type { IDropdownListItem } from \"./DropdownList\";\r\n\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nexport interface IComparisonControlSettings extends IDropdownListControlSettings {\r\n\titems?: Array<string | IDropdownListItem>;\r\n}\r\n\r\nexport interface IComparisonControlPrivate extends IDropdownListControlPrivate {\r\n}\r\n\r\nexport interface IComparisonControlEvents extends IDropdownListControlEvents {\r\n}\r\n\r\n/**\r\n * A control that is used to change type of the main series of the [[StockChart]].\r\n */\r\nexport class ComparisonControl extends DropdownListControl {\r\n\tpublic static className: string = \"ComparisonControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([ComparisonControl.className]);\r\n\r\n\tdeclare public _settings: IComparisonControlSettings;\r\n\tdeclare public _privateSettings: IComparisonControlPrivate;\r\n\tdeclare public _events: IComparisonControlEvents;\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Comparison\");\r\n\t}\r\n\r\n}","import { Entity, IEntityEvents, IEntitySettings, IEntityPrivate } from \"../../core/util/Entity\";\nimport { Component } from \"../../core/render/Component\";\nimport { Color } from \"../../core/util/Color\";\nimport { Percent } from \"../../core/util/Percent\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListData } from \"../../core/util/Data\";\n\nimport * as $type from \"../../core/util/Type\";\nimport * as $array from \"../../core/util/Array\";\nimport * as $object from \"../../core/util/Object\";\n\n\nexport interface ISerializerSettings extends IEntitySettings {\n\n\t/**\n\t * An array of settings to not include in the serialized data.\n\t */\n\texcludeSettings?: Array<string>;\n\n\t/**\n\t * An array of settings to include in the serialized data.\n\t */\n\tincludeSettings?: Array<string>;\n\n\t/**\n\t * Include full values of these settings.\n\t *\n\t * @since 6.4.3\n\t */\n\tfullSettings?: Array<string>;\n\n\t/**\n\t * An array of properties to not include in the serialized data.\n\t *\n\t * @since 5.3.2\n\t */\n\texcludeProperties?: Array<string>;\n\n\t/**\n\t * An array of properties to include in the serialized data.\n\t *\n\t * @ignore\n\t * @todo implement\n\t */\n\tincludeProperties?: Array<string>;\n\n\t/**\n\t * Maximum depth of recursion when traversing target object.\n\t *\n\t * @default 2\n\t */\n\tmaxDepth?: number;\n\n}\n\nexport interface ISerializerPrivate extends IEntityPrivate {\n}\n\nexport interface ISerializerEvents extends IEntityEvents {\n}\n\n\n/**\n * Provides functionality to serialize charts or individual elements into simple\n * objects or JSON.\n *\n * @see {@link https://www.amcharts.com/docs/v5/concepts/serializing/} for more info\n * @since 5.3.0\n */\nexport class Serializer extends Entity {\n\n\tpublic static className: string = \"Serializer\";\n\tpublic static classNames: Array<string> = Entity.classNames.concat([Serializer.className]);\n\n\tdeclare public _settings: ISerializerSettings;\n\tdeclare public _privateSettings: ISerializerPrivate;\n\tdeclare public _events: ISerializerEvents;\n\n\tprotected _refs: { [index: string]: any } = {};\n\n\t/**\n\t * Serializes target object into a simple object or JSON string.\n\t *\n\t * @param   source  Target object\n\t * @param   depth   Current depth\n\t * @param   full    Serialize object in full (ignoring maxDepth)\n\t * @return          Serialized data\n\t */\n\tpublic serialize(source: unknown, depth: number = 0, full: boolean = false): unknown {\n\t\tif (depth > this.get(\"maxDepth\", 2)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (source === false || source === true) {\n\t\t\treturn source;\n\t\t}\n\n\t\tif ($type.isArray(source)) {\n\t\t\tconst res: any[] = [];\n\t\t\t$array.each(source, (arrval) => {\n\t\t\t\tres.push(this.serialize(arrval, depth, full));\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t\telse if (source instanceof ListData) {\n\t\t\tconst res: any[] = [];\n\t\t\t$array.each(source.values, (arrval) => {\n\t\t\t\tres.push(this.serialize(arrval, depth, full));\n\t\t\t});\n\t\t\treturn res;\n\t\t}\n\t\tconst res: any = {};\n\n\t\tconst am5object = source instanceof Entity || source instanceof Template || source instanceof Color || source instanceof Percent ? true : false;\n\n\t\t// Process settings\n\t\tconst fullSettings: any = this.get(\"fullSettings\", []);\n\t\tif (source instanceof Entity) {\n\t\t\tres.type = source.className;\n\n\t\t\tlet settings: Array<string> = $object.keys(source._settings);\n\t\t\tconst includeSettings: Array<string> = this.get(\"includeSettings\", []);\n\t\t\tconst excludeSettings: Array<string> = this.get(\"excludeSettings\", []);\n\t\t\tif (includeSettings.length) {\n\t\t\t\tsettings = includeSettings;\n\t\t\t}\n\t\t\telse if (excludeSettings.length) {\n\t\t\t\tsettings = settings.filter((value) => {\n\t\t\t\t\treturn excludeSettings.indexOf(value) === -1;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Include only user settings\n\t\t\tsettings = settings.filter((value) => {\n\t\t\t\treturn source.isUserSetting(value as any);\n\t\t\t});\n\n\t\t\tif (settings.length) {\n\t\t\t\tres.settings = {};\n\t\t\t\t$array.each(settings, (setting) => {\n\t\t\t\t\tconst settingValue = (<any>source).get(setting);\n\t\t\t\t\tif (settingValue !== undefined) {\n\t\t\t\t\t\tres.settings[setting] = this.serialize(settingValue, depth + 1, full || fullSettings.indexOf(setting) !== -1);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (source instanceof Template) {\n\t\t\tres.type = \"Template\";\n\t\t\tlet settings: Array<string> = $object.keys(source._settings);\n\t\t\tif (settings.length) {\n\t\t\t\tres.settings = {};\n\t\t\t\t$array.each(settings, (setting) => {\n\t\t\t\t\tres.settings[setting] = this.serialize((<any>source).get(setting), depth + 1, fullSettings.indexOf(setting) !== -1);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn res;\n\t\t}\n\n\t\t// Data\n\t\tif (source instanceof Component) {\n\t\t\tif (source.data.length) {\n\t\t\t\tres.properties = {\n\t\t\t\t\tdata: this.serialize(source.data.values, 1, true)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\t// Process the rest\n\t\tif (source instanceof Color) {\n\t\t\treturn {\n\t\t\t\ttype: \"Color\",\n\t\t\t\tvalue: source.toCSSHex()\n\t\t\t};\n\t\t}\n\t\telse if (source instanceof Percent) {\n\t\t\treturn {\n\t\t\t\ttype: \"Percent\",\n\t\t\t\tvalue: source.percent\n\t\t\t};\n\t\t}\n\t\telse if ($type.isString(source) || $type.isNumber(source)) {\n\t\t\treturn source;\n\t\t}\n\t\telse if ($type.isObject(source)) {\n\t\t\t// TODO\n\t\t\tif (full && !am5object) {\n\t\t\t\tconst excludeProperties: Array<string> = this.get(\"excludeProperties\", []);\n\t\t\t\t$object.each(source, (key, value) => {\n\t\t\t\t\tif (excludeProperties.indexOf(key) === -1 && value !== undefined) {\n\t\t\t\t\t\tres[key] = this.serialize(value, depth + 1, full);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (depth == 0 && $object.keys(this._refs).length) {\n\t\t\tres.refs = this._refs;\n\t\t}\n\n\t\treturn res;\n\t}\n}","\"use strict\";\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        var _loop_1 = function (source) {\n            if (source) {\n                Object.keys(source).forEach(function (key) { return (target[key] = source[key]); });\n            }\n        };\n        for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n            var source = args_1[_a];\n            _loop_1(source);\n        }\n        return target;\n    };\n}\n"],"sourceRoot":""}