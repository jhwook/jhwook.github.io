{"version":3,"sources":["../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/descending.js","../../../../../src/.internal/core/render/MonotoneYTension.ts","../../../../../src/.internal/core/render/MonotoneXTension.ts","../../../../../src/.internal/charts/flow/FlowDefaultTheme.ts","../../../../../src/.internal/charts/flow/Flow.ts","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3-zoom/src/zoom.js","../../../../../src/.internal/charts/flow/FlowNode.ts","../../../../../src/.internal/charts/flow/FlowNodes.ts","../../../../../src/.internal/charts/flow/ChordNodes.ts","../../../../../src/.internal/charts/flow/FlowLink.ts","../../../../../src/.internal/charts/flow/ChordLink.ts","../../../../../src/.internal/charts/flow/Chord.ts","../../../../../src/.internal/charts/flow/ChordLinkDirected.ts","../../../../../src/.internal/charts/flow/ChordDirected.ts","../../../../../src/.internal/charts/flow/ChordNonRibbon.ts","../../../../../src/.internal/charts/flow/SankeyNodes.ts","../../../../../src/.internal/charts/flow/SankeyLink.ts","../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","../node_modules/d3-sankey/node_modules/d3-array/src/max.js","../node_modules/d3-sankey/node_modules/d3-array/src/min.js","../node_modules/d3-sankey/src/align.js","../node_modules/d3-sankey/src/constant.js","../node_modules/d3-sankey/src/sankey.js","../node_modules/d3-sankey/node_modules/d3-path/src/path.js","../node_modules/d3-sankey/node_modules/d3-shape/src/array.js","../../../../../src/.internal/charts/flow/Sankey.ts","../../../../../src/.internal/charts/flow/ArcDiagramNodes.ts","../../../../../src/.internal/charts/flow/ArcDiagramLink.ts","../../../../../src/.internal/charts/flow/ArcDiagram.ts"],"names":["ascending","a","b","NaN","descending","MonotoneYTension","constructor","context","tension","Object","defineProperty","this","_context","_tension","areaStart","_line","areaEnd","lineStart","_x0","_x1","_y0","_y1","_t0","_point","lineEnd","lineTo","point","slope2","closePath","x","y","t1","moveTo","slope3","curveMonotoneYTension","monotoneYTension","sign","that","x2","y2","h0","h1","s0","s1","p","Math","min","abs","t","h","t0","x0","y0","x1","y1","dx","bezierCurveTo","MonotoneXTension","curveMonotoneXTension","FlowDefaultTheme","Theme","setupDefaultRules","super","ic","_root","interfaceColors","r","rule","bind","setAll","width","p100","height","paddingLeft","paddingRight","paddingTop","paddingBottom","hiddenSize","minSize","minHiddenValue","colors","ColorSet","new","legendLabelText","legendValueText","setStateOnChildren","cursorOverStyle","toggleKey","states","create","draggable","opacity","fill","get","text","populateText","fillStyle","strokeStyle","events","on","e","dataItem","target","outgoing","$array","linkDataItem","link","hover","hideTooltip","incoming","rectangle","showTooltip","unhover","orientation","nodeAlign","linkTension","nodePadding","nodeWidth","cornerRadiusTL","cornerRadiusBL","cornerRadiusTR","cornerRadiusBR","controlPointDistance","fillOpacity","strokeOpacity","interactive","tooltipText","setColor","p50","centerY","centerX","radius","percent","padAngle","startAngle","sort","linkHeadRadius","sourceRadius","targetRadius","cornerRadius","textType","headRadius","linkType","strokeWidth","minRadius","radiusKey","animationEasing","$ease","isMeasured","rotation","Flow","Series","children","push","Container","_afterNew","_defaultThemes","fields","nodes","flow","bulletsContainer","processDataItem","unknown","sourceId","sourceDataItem","getDataItemById","_index","data","id","set","targetId","targetDataItem","addOutgoingLink","addincomingLink","makeLink","sourceIndex","dataItems","indexOf","targetIndex","_linksByIndex","_updateLinkColor","_onDataClear","_userDataSet","_prepareChildren","valueLow","Infinity","valueHigh","valueSum","_valuesDirty","_nodesData","d3SankeyNode","sumIncoming","sumIncomingWorking","value","workingValue","sumOutgoing","sumOutgoingWorking","updateLegendValue","_linksData","$type","valueWorking","d3SankeyLink","source","setRaw","setPrivateRaw","sourceFill","targetFill","remove","_applyTemplates","gradient","_fillGradient","LinearGradient","sourceStop","color","targetStop","undefined","_strokeGradient","disposeDataItem","links","removeValue","dispose","hideDataItem","duration","promises","_super","call","hiddenState","stateAnimationDuration","stateAnimationEasing","easing","animate","key","to","max","waitForStop","hide","Promise","all","showDataItem","show","_positionBullet","bullet","sprite","getPoint","_getBulletLocation","angle","classNames","concat","className","cos","sin","pi","PI","halfPi","tau","epsilon","range","i","j","Array","from","length","_","k","chord","directed","transpose","sortGroups","sortSubgroups","sortChords","matrix","n","groupSums","groupIndex","chords","groups","Float64Array","subgroupIndex","filter","index","endAngle","values","arguments","compare","slice","prototype","defaultSource","d","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","defaultPadAngle","defaultArrowheadRadius","ribbon","buffer","s","apply","ap","argv","sr","sa0","sa1","tr","ta0","ta1","path","arc","tr2","ta2","quadraticCurveTo","constant","ribbonArrow","number1","number2","map","type","cosh","exp","zoomRho","rho","rho2","rho4","zoom","p0","p1","S","ux0","uy0","w0","ux1","uy1","w1","dy","d2","log","d1","sqrt","b0","b1","r0","r1","coshr0","u","sinh","SQRT2","_1","_2","Transform","scale","translate","applyX","applyY","invert","location","invertX","invertY","rescaleX","copy","domain","rescaleY","toString","FlowNode","FlowNodes","addDisposer","ListTemplate","Template","Label","_new","themeTags","labels","template","reset","patterns","name","next","node","makeNode","disabledField","dataContext","root","once","disableDataItem","themeTag","make","addTag","_setDataItem","series","isHidden","enableDataItem","_updateNodeColor","_dataItem","label","ChordNodes","RadialLabel","Slice","slices","insertIndex","_setSoft","toLocal","$math","_dAngle","locationX","locationY","innerRadius","bulletRadius","FlowLink","Graphics","_changed","isDirty","_getTooltipPoint","tooltipY","position","Percent","ChordLink","_p0","_p1","_type","Chord","_settings","$utils","linksContainer","_fixRibbon","_makeMatrix","group","outgoingLink","getPrivate","_ribbon","chordChanged","_sizeDirty","_d3chord","_chordLayout","innerWidth","innerHeight","chordStartAngle","chordGroup","labelAngle","setPrivate","linkRadius","_getLinkPoints","_updateLink","chordLayoutItem","startAngle0","angle0","startAngle1","angle1","display","ChordLinkDirected","ChordDirected","_markDirtyKey","ChordNonRibbon","_linkRadius","_chordLayoutItem","sourceSlice","targetSlice","SankeyNodes","RoundedRectangle","rectangles","updateSankey","SankeyLink","document","createElementNS","_beforeChanged","sourceNode","_disposers","markDirty","targetNode","isPrivateDirty","_clear","xt0","yt0","xt1","yt1","xb0","xb1","yb0","yb1","xm0","xm1","ym0","ym1","w","cpd","kxt0","kyt0","kxt1","kyt1","kxm0","kym0","kxm1","kym1","kxb0","kyb0","kxb1","kyb1","segment","_fillGenerator","middleSegment","_strokeGenerator","_svgPath","setAttribute","_totalLength","getTotalLength","_positionBullets","getAttribute","getPointAtLength","toGlobal","sum","valueof","targetDepth","depth","left","right","justify","sourceLinks","center","targetLinks","ascendingSourceBreadth","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","defaultLinks","find","nodeById","Error","computeLinkBreadths","_ref","Sankey","py","linkSort","align","iterations","sankey","_ref2","entries","Map","computeNodeLinks","_ref3","fixedValue","computeNodeValues","_ref4","current","Set","size","add","computeNodeDepths","_ref5","computeNodeHeights","columns","_ref6","kx","floor","layer","column","computeNodeLayers","c","ky","reorderLinks","initializeNodeBreadths","alpha","pow","beta","relaxRightToLeft","relaxLeftToRight","computeNodeBreadths","v","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","_ref7","update","nodeId","nodeSort","extent","tauEpsilon","Path","arcTo","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","l","tan","acos","t01","t21","a0","a1","ccw","cw","da","rect","d3sankey","area","line","d3Graph","_d3Graph","_d3Sankey","fillGradient","strokeGradient","vertical","curve","d3Sankey","ArcDiagramNodes","Circle","circles","circle","ArcDiagramLink","_draw","_display","_radius","ArcDiagram","moveValue","low","count","prevCoord","animationDuration"],"mappings":"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","file":"static/js/11.55c13c6b.chunk.js","sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","/**\n * @ignore\n */\nexport class MonotoneYTension {\n\n  constructor(context: any, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n\n    [x, y] = [y, x]\n\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(y, x) : this._context.moveTo(y, x); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneYTension(tension: number) {\n\n  function monotoneYTension(context: any) {\n    return new MonotoneYTension(context, tension);\n  }\n\n  monotoneYTension.tension = function(tension: number) {\n    return curveMonotoneYTension(+tension);\n  };\n\n  return monotoneYTension;\n}\n\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneYTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneYTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneYTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(y0 + dx * t0, x0 + dx, y1 - dx * t1, x1 - dx, y1, x1);\n}","/**\n * @ignore\n */\nexport class MonotoneXTension {\n\n  constructor(context: CanvasRenderingContext2D, tension: number) {\n    this._context = context;\n    this._tension = tension;\n  }\n\n  public _line = 0;\n  public _point = 0;\n  public _context: any;\n  public _x0 = 0;\n  public _x1 = 0;\n  public _y0 = 0;\n  public _y1 = 0;\n  public _t0 = 0;\n\n  public _tension: number = 0;\n\n  public areaStart() {\n    this._line = 0;\n  }\n\n  public areaEnd() {\n    this._line = NaN;\n  }\n\n  public lineStart() {\n    this._x0 = this._x1 =\n      this._y0 = this._y1 =\n      this._t0 = NaN;\n    this._point = 0;\n  }\n\n  public lineEnd() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n\n  public point(x: number, y: number) {\n    let t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\n/**\n * @ignore\n */\nexport function curveMonotoneXTension(tension: number) {\n\n  function monotoneXTension(context: any) {\n    return new MonotoneXTension(context, tension);\n  }\n\n  return monotoneXTension;\n}\n\n/**\n * @ignore\n */\nfunction sign(x: number) {\n  return x < 0 ? -1 : 1;\n}\n\n/**\n * @ignore\n */\nfunction slope3(that: MonotoneXTension, x2: number, y2: number) {\n  let h0 = (that._x1 - that._x0) as any;\n  let h1 = (x2 - that._x1) as any;\n  let s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0);\n  let s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0);\n  let p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n/**\n * @ignore\n */\nfunction slope2(that: MonotoneXTension, t: number) {\n  let h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n/**\n * @ignore\n */\nfunction point(that: MonotoneXTension, t0: number, t1: number) {\n  let x0 = that._x0,\n    y0 = that._y0,\n    x1 = that._x1,\n    y1 = that._y1,\n    dx = (x1 - x0) / 1.5 * (1 - that._tension);\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { IFlowNodesDataItem } from \"../../charts/flow/FlowNodes\";\r\n\r\nimport { Theme } from \"../../core/Theme\";\r\nimport { percent, p100, p50 } from \"../../core/util/Percent\";\r\nimport { ColorSet } from \"../../core/util/ColorSet\";\r\nimport { setColor } from \"../../themes/DefaultTheme\";\r\n\r\nimport * as $array from \"../../core/util/Array\";\r\nimport * as $ease from \"../../core/util/Ease\";\r\n\r\n\r\n/**\r\n * @ignore\r\n */\r\nexport class FlowDefaultTheme extends Theme {\r\n\tprotected setupDefaultRules() {\r\n\t\tsuper.setupDefaultRules();\r\n\r\n\t\tconst ic = this._root.interfaceColors;\r\n\t\tconst r = this.rule.bind(this);\r\n\t\t/**\r\n\t\t * ========================================================================\r\n\t\t * charts/flow\r\n\t\t * ========================================================================\r\n\t\t */\r\n\r\n\t\tr(\"Flow\").setAll({\r\n\t\t\twidth: p100,\r\n\t\t\theight: p100,\r\n\t\t\tpaddingLeft: 10,\r\n\t\t\tpaddingRight: 10,\r\n\t\t\tpaddingTop: 10,\r\n\t\t\tpaddingBottom: 10,\r\n\t\t\thiddenSize: 0.05,\r\n\t\t\tminSize: 0,\r\n\t\t\tminHiddenValue: 0\r\n\t\t});\r\n\r\n\t\tr(\"FlowNodes\").setAll({\r\n\t\t\tcolors: ColorSet.new(this._root, {}),\r\n\t\t\tlegendLabelText: \"{name}\",\r\n\t\t\tlegendValueText: \"{sumOutgoing.formatNumber('#.#')}\"\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").setAll({\r\n\t\t\tsetStateOnChildren: true,\r\n\t\t\tcursorOverStyle: \"pointer\",\r\n\t\t\ttoggleKey: \"disabled\"\r\n\t\t})\r\n\r\n\r\n\t\tr(\"FlowNode\").states.create(\"disabled\", {}); // do not remove\r\n\r\n\t\tr(\"FlowNode\", [\"unknown\"]).setAll({\r\n\t\t\tdraggable: false,\r\n\t\t\topacity: 0\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"flow\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"flow\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\").setAll({\r\n\t\t\tfillStyle: \"gradient\",\r\n\t\t\tstrokeStyle: \"gradient\"\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"source\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\t\tr(\"FlowLink\", [\"target\", \"unknown\"]).setAll({\r\n\t\t});\r\n\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerover\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\tconst link = (linkDataItem as any).get(\"link\");\r\n\t\t\t\t\t\tlink.hover();\r\n\t\t\t\t\t\tlink.hideTooltip();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet rectangle = (<any>dataItem).get(\"slice\") || (<any>dataItem).get(\"rectangle\");\r\n\t\t\tif (rectangle && rectangle.get(\"tooltipText\")) {\r\n\t\t\t\trectangle.showTooltip();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\").events.on(\"pointerout\", (e) => {\r\n\t\t\tconst dataItem = e.target.dataItem as DataItem<IFlowNodesDataItem>;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\r\n\t\t\t\tif (outgoing) {\r\n\t\t\t\t\t$array.each(outgoing, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\r\n\t\t\t\tif (incoming) {\r\n\t\t\t\t\t$array.each(incoming, (linkDataItem) => {\r\n\t\t\t\t\t\t(linkDataItem as any).get(\"link\").unhover();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Sankey\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Sankey\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodeAlign: \"justify\",\r\n\t\t\tlinkTension: 0.5,\r\n\t\t\tnodePadding: 10,\r\n\t\t\tnodeWidth: 10\r\n\t\t});\r\n\r\n\t\t// Class: RoundedRectangle\r\n\t\tr(\"RoundedRectangle\", [\"sankey\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadiusTL: 0,\r\n\t\t\tcornerRadiusBL: 0,\r\n\t\t\tcornerRadiusTR: 0,\r\n\t\t\tcornerRadiusBR: 0\r\n\t\t});\r\n\r\n\t\tr(\"RoundedRectangle\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"SankeyLink\").setAll({\r\n\t\t\tcontrolPointDistance: 0.2\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"sankey\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"sankey\", \"link\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true,\r\n\t\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"sankey\", \"link\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"horizontal\"]).setAll({\r\n\t\t\ty: p50,\r\n\t\t\tcenterY: p50,\r\n\t\t\tpaddingLeft: 15\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"sankey\", \"vertical\"]).setAll({\r\n\t\t\tx: p50,\r\n\t\t\tcenterX: p50,\r\n\t\t\tpaddingTop: 15\r\n\t\t});\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: Chord\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"Chord\").setAll({\r\n\t\t\tradius: percent(90),\r\n\t\t\tnodeWidth: 10,\r\n\t\t\tpadAngle: 1,\r\n\t\t\tstartAngle: 0,\r\n\t\t\tsort:\"none\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordDirected\").setAll({\r\n\t\t\tlinkHeadRadius: 10\r\n\t\t});\r\n\r\n\t\tr(\"ChordNodes\").setAll({\r\n\t\t\tx: p50,\r\n\t\t\ty: p50\r\n\t\t});\r\n\r\n\t\tr(\"FlowNode\", [\"chord\"]).setAll({\r\n\t\t\tdraggable: true\r\n\t\t});\r\n\r\n\t\tr(\"ChordLink\").setAll({\r\n\t\t\tsourceRadius: p100,\r\n\t\t\ttargetRadius: p100,\r\n\t\t\tfillStyle: \"solid\",\r\n\t\t\tstrokeStyle: \"solid\",\r\n\t\t\ttooltipText: \"{sourceId} - {targetId}: {value}\"\r\n\t\t});\r\n\r\n\t\tr(\"Slice\", [\"chord\", \"node\", \"shape\"]).setAll({\r\n\t\t\tcornerRadius: 0\r\n\t\t})\r\n\r\n\t\tr(\"Slice\", [\"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\tr(\"RadialLabel\", [\"chord\", \"node\"]).setAll({\r\n\t\t\tradius: 5,\r\n\t\t\ttextType: \"circular\"\r\n\t\t});\r\n\r\n\t\tr(\"ChordLinkDirected\").setAll({\r\n\t\t\theadRadius: 10\r\n\t\t});\r\n\r\n\t\t// Class: Graphics\r\n\t\t{\r\n\t\t\tconst rule = r(\"Graphics\", [\"chord\", \"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tfillOpacity: 0.2,\r\n\t\t\t\tstrokeOpacity: 0,\r\n\t\t\t\tinteractive: true\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"fill\", ic, \"grid\");\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\"]).states.create(\"hover\", { fillOpacity: 0.5 });\r\n\r\n\t\tr(\"ChordNonRibbon\").setAll({\r\n\t\t\tlinkType: \"curve\" // \"line\" | \"curve\"\r\n\t\t})\r\n\r\n\t\tr(\"ChordLink\", [\"basic\"]).setAll({\r\n\t\t\tfillStyle: \"none\",\r\n\t\t\tstrokeStyle: \"source\"\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).setAll({\r\n\t\t\tstrokeOpacity: 0.4\r\n\t\t});\r\n\r\n\t\tr(\"Graphics\", [\"chord\", \"link\", \"shape\", \"basic\"]).states.create(\"hover\", { strokeWidth: 2, strokeOpacity: 1 });\r\n\r\n\r\n\t\t/**\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t * charts/flow: ArcDiagram\r\n\t\t * ------------------------------------------------------------------------\r\n\t\t */\r\n\r\n\t\tr(\"ArcDiagram\").setAll({\r\n\t\t\torientation: \"horizontal\",\r\n\t\t\tnodePadding: 5,\r\n\t\t\tminRadius: 5,\r\n\t\t\tradiusKey: \"sum\",\r\n\t\t\tanimationEasing: $ease.out($ease.cubic)\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"horizontal\"]).setAll({\r\n\t\t\ty: p100,\r\n\t\t\tcenterY: p100\r\n\t\t});\r\n\r\n\t\tr(\"ArcDiagramNodes\", [\"vertical\"]).setAll({\r\n\t\t\tcenterX: 0\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).setAll({\r\n\t\t\ttooltipText: \"{name}: {sum}\"\r\n\t\t});\r\n\r\n\t\tr(\"Circle\", [\"arcdiagram\", \"node\", \"shape\"]).states.create(\"disabled\", {\r\n\t\t\tfill: ic.get(\"disabled\")\r\n\t\t})\r\n\r\n\t\t{\r\n\t\t\tconst rule = r(\"ArcDiagramLink\", [\"link\", \"shape\"]);\r\n\r\n\t\t\trule.setAll({\r\n\t\t\t\tstrokeOpacity: 0.15,\r\n\t\t\t\tstrokeStyle: \"solid\",\r\n\t\t\t\tfillStyle: \"none\",\r\n\t\t\t\tisMeasured: false\r\n\t\t\t});\r\n\r\n\t\t\tsetColor(rule, \"stroke\", ic, \"grid\");\r\n\t\t}\r\n\r\n\t\tr(\"ArcDiagramLink\", [\"link\", \"shape\"]).states.create(\"hover\", {\r\n\t\t\tstrokeOpacity: 1\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"node\"]).setAll({\r\n\t\t\ttext: \"{name}\",\r\n\t\t\tpopulateText: true\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"horizontal\"]).setAll({\r\n\t\t\ty: 0,\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\trotation: -90\r\n\t\t});\r\n\r\n\t\tr(\"Label\", [\"arcdiagram\", \"vertical\"]).setAll({\r\n\t\t\tcenterY: p50,\r\n\t\t\tcenterX: p100,\r\n\t\t\tpaddingRight: 15\r\n\t\t});\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { FlowLink } from \"./FlowLink\";\nimport type { FlowNodes, IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { ListTemplate } from \"../../core/util/List\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { FlowDefaultTheme } from \"./FlowDefaultTheme\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Container } from \"../../core/render/Container\";\nimport { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\n\nexport interface IFlowDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Link value.\n\t */\n\tvalue: number;\n\n\t/**\n\t * @ignore\n\t */\n\tvalueWorking: number;\n\n\t/**\n\t * Associated link element.\n\t */\n\tlink: FlowLink;\n\n\t/**\n\t * Link's color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyLink: d3sankey.SankeyLink<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * An ID of the target node.\n\t */\n\ttargetId: string;\n\n\t/**\n\t * An ID of the source node.\n\t */\n\tsourceId: string;\n\n\t/**\n\t * A data item of the source node.\n\t */\n\tsource: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * A data item of the target node.\n\t */\n\ttarget: DataItem<IFlowNodesDataItem>;\n\n}\n\nexport interface IFlowSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data which holds source node ID.\n\t */\n\tsourceIdField?: string;\n\n\t/**\n\t * A field in data which holds target node ID.\n\t */\n\ttargetIdField?: string;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Minimum gap between adjacent nodes.\n\t *\n\t * @default 10\n\t */\n\tnodePadding?: number;\n\n\t/**\n\t * Minimum size of the link.\n\t * \n\t * It's a relative value to the sum of all values in the series. If set,\n\t * this relative value will be used for small value nodes when calculating\n\t * their size. For example, if it's set to `0.01`, small nodes will be\n\t * sized like their value is 1% of the total sum of all values in series.\n\t * \n\t * @default 0\n\t * @since 5.1.5\n\t */\n\tminSize?: number;\n\n\t/**\n\t * Relative size of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * This allows hidden node to remain visible so that user could click on it\n\t * again to show it and its links.\n\t * \n\t * @default 0.05\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\thiddenSize?: number;\n\n\t/**\n\t * Minimum value of hidden links.\n\t * \n\t * Links are hidden when user clicks on nodes (if `toggleKey` on nodes is set\n\t * to `\"disabled\"`).\n\t * \n\t * @default 0\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/#Node_toggling} for more info\n\t * @since 5.4.1\n\t */\n\tminHiddenValue?: number;\n}\n\nexport interface IFlowPrivate extends ISeriesPrivate {\n\tvalueSum?: number;\n\tvalueLow?: number;\n\tvalueHigh?: number;\n}\n\nexport interface IFlowEvents extends ISeriesEvents {\n}\n\n/**\n * A base class for all flow type series: [[Sankey]] and [[Chord]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more info\n */\nexport abstract class Flow extends Series {\n\tpublic static className: string = \"Flow\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([Flow.className]);\n\n\tdeclare public _settings: IFlowSettings;\n\tdeclare public _privateSettings: IFlowPrivate;\n\tdeclare public _dataItemSettings: IFlowDataItem;\n\tdeclare public _events: IFlowEvents;\n\n\t/**\n\t * @ignore\n\t */\n\tdeclare public readonly nodes: FlowNodes;\n\n\t/**\n\t * Container series will place their links in.\n\t *\n\t * @default Container.new()\n\t */\n\tpublic readonly linksContainer = this.children.push(Container.new(this._root, {}));\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract readonly links: ListTemplate<FlowLink>;\n\n\tprotected _nodesData: d3sankey.SankeyNodeMinimal<{}, {}>[] = [];\n\tprotected _linksData: { source: d3sankey.SankeyNodeMinimal<{}, {}>, target: d3sankey.SankeyNodeMinimal<{}, {}>, value: number }[] = [];\n\tprotected _index = 0;\n\tprotected _nodesDataSet: boolean = false;\n\n\tprotected _linksByIndex: { [index: string]: any } = {};\n\tprotected _afterNew() {\n\t\tthis._defaultThemes.push(FlowDefaultTheme.new(this._root));\n\n\t\tthis.fields.push(\"disabled\", \"sourceId\", \"targetId\");\n\n\t\tif (this.nodes) {\n\t\t\tthis.nodes.flow = this;\n\t\t}\n\n\t\tsuper._afterNew();\n\n\t\tthis.children.push(this.bulletsContainer);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic abstract makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowLink;\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\n\t\tconst nodes = this.nodes;\n\t\tif (nodes) {\n\t\t\tlet unknown = false;\n\t\t\tlet sourceId = dataItem.get(\"sourceId\");\n\t\t\tlet sourceDataItem = nodes.getDataItemById(sourceId);\n\n\t\t\tif (!sourceDataItem) {\n\t\t\t\tif (sourceId == null) {\n\t\t\t\t\tsourceId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\t\t\t\tnodes.data.push({ id: sourceId, unknown: unknown });\n\t\t\t\tsourceDataItem = nodes.getDataItemById(sourceId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\tsourceDataItem.set(\"name\", sourceId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tunknown = false;\n\t\t\tlet targetId = dataItem.get(\"targetId\");\n\n\t\t\tlet targetDataItem = nodes.getDataItemById(targetId);\n\t\t\tif (!targetDataItem) {\n\t\t\t\tif (targetId == null) {\n\t\t\t\t\ttargetId = \"undefined\" + this._index;\n\t\t\t\t\tthis._index++;\n\t\t\t\t\tunknown = true;\n\t\t\t\t}\n\n\t\t\t\tnodes.data.push({ id: targetId, unknown: unknown });\n\t\t\t\ttargetDataItem = nodes.getDataItemById(targetId)!;\n\t\t\t\tif (!unknown) {\n\t\t\t\t\ttargetDataItem.set(\"name\", targetId);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (sourceDataItem) {\n\t\t\t\tdataItem.set(\"source\", sourceDataItem);\n\t\t\t\tnodes.addOutgoingLink(sourceDataItem, dataItem);\n\t\t\t}\n\n\t\t\tif (targetDataItem) {\n\t\t\t\tdataItem.set(\"target\", targetDataItem);\n\t\t\t\tnodes.addincomingLink(targetDataItem, dataItem);\n\t\t\t}\n\n\t\t\tdataItem.set(\"link\", this.makeLink(dataItem));\n\n\t\t\tconst sourceIndex = this.nodes.dataItems.indexOf(sourceDataItem);\n\t\t\tconst targetIndex = this.nodes.dataItems.indexOf(targetDataItem);\n\n\t\t\tthis._linksByIndex[sourceIndex + \"_\" + targetIndex] = dataItem;\n\n\t\t\tif (sourceDataItem.get(\"unknown\")) {\n\t\t\t\tif (targetDataItem) {\n\t\t\t\t\tsourceDataItem.set(\"fill\", targetDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\n\t\t\tif (targetDataItem.get(\"unknown\")) {\n\t\t\t\tif (sourceDataItem) {\n\t\t\t\t\ttargetDataItem.set(\"fill\", sourceDataItem.get(\"fill\"));\n\t\t\t\t}\n\n\t\t\t\tdataItem.get(\"link\").set(\"fillStyle\", \"gradient\");\n\t\t\t}\n\n\t\t\tthis._updateLinkColor(dataItem);\n\t\t}\n\t}\n\n\tprotected _onDataClear() {\n\t\tif (!this.nodes._userDataSet) {\n\t\t\tthis.nodes.data.setAll([]);\n\t\t\tthis.nodes._userDataSet = false;\n\t\t}\n\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tlet valueLow = Infinity;\n\t\tlet valueHigh = -Infinity;\n\t\tlet valueSum = 0;\n\n\t\tif (this._valuesDirty) {\n\t\t\tthis._nodesData = [];\n\t\t\tconst nodes = this.nodes;\n\t\t\tif (nodes) {\n\t\t\t\t$array.each(nodes.dataItems, (dataItem) => {\n\t\t\t\t\tconst d3SankeyNode = dataItem.get(\"d3SankeyNode\");\n\t\t\t\t\tthis._nodesData.push(d3SankeyNode);\n\n\t\t\t\t\tconst incoming = dataItem.get(\"incomingLinks\")\n\n\t\t\t\t\tlet sumIncoming = 0;\n\t\t\t\t\tlet sumIncomingWorking = 0;\n\t\t\t\t\tif (incoming) {\n\t\t\t\t\t\t$array.each(incoming, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumIncoming += value;\n\t\t\t\t\t\t\tsumIncomingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumIncoming\", sumIncoming);\n\t\t\t\t\tdataItem.set(\"sumIncomingWorking\", sumIncomingWorking);\n\n\t\t\t\t\tconst outgoing = dataItem.get(\"outgoingLinks\")\n\t\t\t\t\tlet sumOutgoing = 0;\n\t\t\t\t\tlet sumOutgoingWorking = 0;\n\t\t\t\t\tif (outgoing) {\n\t\t\t\t\t\t$array.each(outgoing, (link) => {\n\t\t\t\t\t\t\tconst value = link.get(\"value\");\n\t\t\t\t\t\t\tconst workingValue = link.get(\"valueWorking\");\n\t\t\t\t\t\t\tsumOutgoing += value;\n\t\t\t\t\t\t\tsumOutgoingWorking += workingValue;\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tdataItem.set(\"sumOutgoing\", sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumOutgoingWorking\", sumOutgoingWorking);\n\n\t\t\t\t\tdataItem.set(\"sum\", sumIncoming + sumOutgoing);\n\t\t\t\t\tdataItem.set(\"sumWorking\", sumIncomingWorking + sumOutgoingWorking);\n\n\t\t\t\t\tnodes.updateLegendValue(dataItem);\n\t\t\t\t})\n\t\t\t}\n\t\t\tthis._linksData = [];\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tif (value < valueLow) {\n\t\t\t\t\t\tvalueLow = value;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (value > valueHigh) {\n\t\t\t\t\t\tvalueHigh = value;\n\t\t\t\t\t}\n\t\t\t\t\tvalueSum += value;\n\t\t\t\t}\n\t\t\t})\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tlet value = dataItem.get(\"value\");\n\t\t\t\tif ($type.isNumber(value)) {\n\t\t\t\t\tlet valueWorking = dataItem.get(\"valueWorking\");\n\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\tif (minSize > 0) {\n\t\t\t\t\t\tif (valueWorking < minSize * valueSum) {\n\t\t\t\t\t\t\tvalueWorking = minSize * valueSum;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet d3SankeyLink = { source: dataItem.get(\"source\").get(\"d3SankeyNode\"), target: dataItem.get(\"target\").get(\"d3SankeyNode\"), value: valueWorking };\n\t\t\t\t\tdataItem.setRaw(\"d3SankeyLink\", d3SankeyLink);\n\t\t\t\t\tthis._linksData.push(d3SankeyLink);\n\t\t\t\t\tthis.updateLegendValue(dataItem);\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tthis.setPrivateRaw(\"valueHigh\", valueHigh);\n\t\t\tthis.setPrivateRaw(\"valueLow\", valueLow);\n\t\t\tthis.setPrivateRaw(\"valueSum\", valueSum);\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tconst link = dataItem.get(\"link\");\n\n\t\tconst fillStyle = link.get(\"fillStyle\");\n\t\tconst strokeStyle = link.get(\"strokeStyle\");\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\t\tconst sourceFill = source.get(\"fill\");\n\t\tconst targetFill = target.get(\"fill\");\n\t\tlink.remove(\"fillGradient\");\n\t\tlink.remove(\"strokeGradient\");\n\n\t\tswitch (fillStyle) {\n\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"fill\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"fill\", targetFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._fillGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t}\n\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t}\n\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t}\n\n\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\tlink._fillGradient = gradient;\n\n\t\t\t\tlink.set(\"fillGradient\", gradient);\n\t\t\t\tbreak;\n\t\t\tcase \"none\":\n\t\t\t\tlink.set(\"fill\", undefined); // do not use remove!\n\t\t\t\tbreak;\n\t\t}\n\n\t\tswitch (strokeStyle) {\n\t\t\tcase \"solid\":\n\t\t\t\tlink._applyTemplates();\n\t\t\t\tbreak;\n\n\t\t\tcase \"source\":\n\t\t\t\tlink.set(\"stroke\", sourceFill);\n\t\t\t\tbreak;\n\n\t\t\tcase \"target\":\n\t\t\t\tlink.set(\"stroke\", targetFill);\n\t\t\t\tbreak;\n\t\t\tcase \"gradient\":\n\t\t\t\tlet gradient = link._strokeGradient;\n\t\t\t\tif (!gradient) {\n\t\t\t\t\tgradient = LinearGradient.new(this._root, {});\n\t\t\t\t\tconst sourceStop: any = { color: sourceFill }\n\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\tsourceStop.opacity = 0;\n\t\t\t\t\t}\n\t\t\t\t\tconst targetStop: any = { color: targetFill };\n\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\ttargetStop.opacity = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tgradient.set(\"stops\", [sourceStop, targetStop]);\n\t\t\t\t\tlink._strokeGradient = gradient;\n\t\t\t\t}\n\t\t\t\tlink.set(\"strokeGradient\", gradient);\n\t\t\t\tbreak;\n\n\t\t\tcase \"none\":\n\t\t\t\tlink.remove(\"stroke\");\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet link = dataItem.get(\"link\");\n\t\tif (link) {\n\t\t\tthis.links.removeValue(link);\n\t\t\tlink.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\t\tconst hiddenState = this.states.create(\"hidden\", {})\n\n\t\tconst stateAnimationDuration = \"stateAnimationDuration\";\n\t\tconst stateAnimationEasing = \"stateAnimationEasing\";\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = hiddenState.get(stateAnimationDuration, this.get(stateAnimationDuration, 0));\n\t\t}\n\n\t\tconst easing = hiddenState.get(stateAnimationEasing, this.get(stateAnimationEasing));\n\n\t\tpromises.push(dataItem.animate({\n\t\t\tkey: \"valueWorking\" as any,\n\t\t\tto: Math.max(this.get(\"minHiddenValue\", 0), this.get(\"hiddenSize\", 0) * dataItem.get(\"value\")),\n\t\t\tduration: duration,\n\t\t\teasing: easing\n\t\t}).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.hide();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\t/**\n\t * Shows diagram's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\n\t\tif (!$type.isNumber(duration)) {\n\t\t\tduration = this.get(\"stateAnimationDuration\", 0);\n\t\t}\n\n\t\tconst easing = this.get(\"stateAnimationEasing\");\n\n\t\tpromises.push(dataItem.animate({ key: \"valueWorking\" as any, to: dataItem.get(\"value\"), duration: duration, easing: easing }).waitForStop());\n\n\t\tconst linkGraphics = dataItem.get(\"link\");\n\t\tlinkGraphics.show();\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst point = link.getPoint(this._getBulletLocation(bullet));\n\t\t\t\t\tsprite.setAll({ x: point.x, y: point.y });\n\n\t\t\t\t\tif (bullet.get(\"autoRotate\")) {\n\t\t\t\t\t\tsprite.set(\"rotation\", point.angle + bullet.get(\"autoRotateAngle\", 0));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\treturn bullet.get(\"locationY\", 0);\n\t}\n}\n","export var abs = Math.abs;\nexport var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\nexport var epsilon = 1e-12;\n","import {max, tau} from \"./math.js\";\n\nfunction range(i, j) {\n  return Array.from({length: j - i}, (_, k) => i + k);\n}\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  return chord(false, false);\n}\n\nexport function chordTranspose() {\n  return chord(false, true);\n}\n\nexport function chordDirected() {\n  return chord(true, false);\n}\n\nfunction chord(directed, transpose) {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = new Array(n),\n        groupIndex = range(0, n),\n        chords = new Array(n * n),\n        groups = new Array(n),\n        k = 0, dx;\n\n    matrix = Float64Array.from({length: n * n}, transpose\n        ? (_, i) => matrix[i % n][i / n | 0]\n        : (_, i) => matrix[i / n | 0][i % n]);\n\n    // Compute the scaling factor from value to angle in [0, 2pi].\n    for (let i = 0; i < n; ++i) {\n      let x = 0;\n      for (let j = 0; j < n; ++j) x += matrix[i * n + j] + directed * matrix[j * n + i];\n      k += groupSums[i] = x;\n    }\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the angles for each group and constituent chord.\n    {\n      let x = 0;\n      if (sortGroups) groupIndex.sort((a, b) => sortGroups(groupSums[a], groupSums[b]));\n      for (const i of groupIndex) {\n        const x0 = x;\n        if (directed) {\n          const subgroupIndex = range(~n + 1, n).filter(j => j < 0 ? matrix[~j * n + i] : matrix[i * n + j]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(a < 0 ? -matrix[~a * n + i] : matrix[i * n + a], b < 0 ? -matrix[~b * n + i] : matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            if (j < 0) {\n              const chord = chords[~j * n + i] || (chords[~j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[~j * n + i] * k, value: matrix[~j * n + i]};\n            } else {\n              const chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        } else {\n          const subgroupIndex = range(0, n).filter(j => matrix[i * n + j] || matrix[j * n + i]);\n          if (sortSubgroups) subgroupIndex.sort((a, b) => sortSubgroups(matrix[i * n + a], matrix[i * n + b]));\n          for (const j of subgroupIndex) {\n            let chord;\n            if (i < j) {\n              chord = chords[i * n + j] || (chords[i * n + j] = {source: null, target: null});\n              chord.source = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n            } else {\n              chord = chords[j * n + i] || (chords[j * n + i] = {source: null, target: null});\n              chord.target = {index: i, startAngle: x, endAngle: x += matrix[i * n + j] * k, value: matrix[i * n + j]};\n              if (i === j) chord.source = chord.target;\n            }\n            if (chord.source && chord.target && chord.source.value < chord.target.value) {\n              const source = chord.source;\n              chord.source = chord.target;\n              chord.target = source;\n            }\n          }\n          groups[i] = {index: i, startAngle: x0, endAngle: x, value: groupSums[i]};\n        }\n        x += dx;\n      }\n    }\n\n    // Remove empty chords.\n    chords = Object.values(chords);\n    chords.groups = groups;\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {path} from \"d3-path\";\nimport {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {abs, cos, epsilon, halfPi, sin} from \"./math.js\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction defaultPadAngle() {\n  return 0;\n}\n\nfunction defaultArrowheadRadius() {\n  return 10;\n}\n\nfunction ribbon(headRadius) {\n  var source = defaultSource,\n      target = defaultTarget,\n      sourceRadius = defaultRadius,\n      targetRadius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      padAngle = defaultPadAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        s = source.apply(this, arguments),\n        t = target.apply(this, arguments),\n        ap = padAngle.apply(this, arguments) / 2,\n        argv = slice.call(arguments),\n        sr = +sourceRadius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        tr = +targetRadius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    if (ap > epsilon) {\n      if (abs(sa1 - sa0) > ap * 2 + epsilon) sa1 > sa0 ? (sa0 += ap, sa1 -= ap) : (sa0 -= ap, sa1 += ap);\n      else sa0 = sa1 = (sa0 + sa1) / 2;\n      if (abs(ta1 - ta0) > ap * 2 + epsilon) ta1 > ta0 ? (ta0 += ap, ta1 -= ap) : (ta0 -= ap, ta1 += ap);\n      else ta0 = ta1 = (ta0 + ta1) / 2;\n    }\n\n    context.moveTo(sr * cos(sa0), sr * sin(sa0));\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) {\n      if (headRadius) {\n        var hr = +headRadius.apply(this, arguments), tr2 = tr - hr, ta2 = (ta0 + ta1) / 2;\n        context.quadraticCurveTo(0, 0, tr2 * cos(ta0), tr2 * sin(ta0));\n        context.lineTo(tr * cos(ta2), tr * sin(ta2));\n        context.lineTo(tr2 * cos(ta1), tr2 * sin(ta1));\n      } else {\n        context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n        context.arc(0, 0, tr, ta0, ta1);\n      }\n    }\n    context.quadraticCurveTo(0, 0, sr * cos(sa0), sr * sin(sa0));\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  if (headRadius) ribbon.headRadius = function(_) {\n    return arguments.length ? (headRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : headRadius;\n  };\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (sourceRadius = targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.sourceRadius = function(_) {\n    return arguments.length ? (sourceRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : sourceRadius;\n  };\n\n  ribbon.targetRadius = function(_) {\n    return arguments.length ? (targetRadius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : targetRadius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : padAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n\nexport default function() {\n  return ribbon();\n}\n\nexport function ribbonArrow() {\n  return ribbon(defaultArrowheadRadius);\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {pointer, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport BrushEvent from \"./event.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nconst {abs, max, min} = Math;\n\nfunction number1(e) {\n  return [+e[0], +e[1]];\n}\n\nfunction number2(e) {\n  return [number1(e[0]), number1(e[1])];\n}\n\nvar X = {\n  name: \"x\",\n  handles: [\"w\", \"e\"].map(type),\n  input: function(x, e) { return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"w\", \"e\", \"s\", \"nw\", \"ne\", \"sw\", \"se\"].map(type),\n  input: function(xy) { return xy == null ? null : number2(xy); },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter(event) {\n  return !event.ctrlKey && !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  if (svg.hasAttribute(\"viewBox\")) {\n    svg = svg.viewBox.baseVal;\n    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];\n  }\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      touchable = defaultTouchable,\n      keys = true,\n      listeners = dispatch(\"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .on(\"mousedown.brush\", started)\n      .filter(touchable)\n        .on(\"touchstart.brush\", started)\n        .on(\"touchmove.brush\", touchmoved)\n        .on(\"touchend.brush touchcancel.brush\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  brush.move = function(group, selection, event) {\n    if (group.tween) {\n      group\n          .on(\"start.brush\", function(event) { emitter(this, arguments).beforestart().start(event); })\n          .on(\"interrupt.brush end.brush\", function(event) { emitter(this, arguments).end(event); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && selection1 === null ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 !== null && selection1 !== null ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 === null ? null : selection1;\n            redraw.call(that);\n            emit.start(event).brush(event).end(event);\n          });\n    }\n  };\n\n  brush.clear = function(group, event) {\n    brush.move(group, null, event);\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args, clean) {\n    var emit = that.__brush.emitter;\n    return emit && (!clean || !emit.clean) ? emit : new Emitter(that, args, clean);\n  }\n\n  function Emitter(that, args, clean) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n    this.clean = clean;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function(event, mode) {\n      if (this.starting) this.starting = false, this.emit(\"start\", event, mode);\n      else this.emit(\"brush\", event);\n      return this;\n    },\n    brush: function(event, mode) {\n      this.emit(\"brush\", event, mode);\n      return this;\n    },\n    end: function(event, mode) {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\", event, mode);\n      return this;\n    },\n    emit: function(type, event, mode) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new BrushEvent(type, {\n          sourceEvent: event,\n          target: brush,\n          selection: dim.output(this.state.selection),\n          mode,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function started(event) {\n    if (touchending && !event.touches) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (keys && event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (keys && event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx = 0,\n        dy = 0,\n        moving,\n        shifting = signX && signY && keys && event.shiftKey,\n        lockX,\n        lockY,\n        points = Array.from(event.touches || [event], t => {\n          const i = t.identifier;\n          t = pointer(t, that);\n          t.point0 = t.slice();\n          t.identifier = i;\n          return t;\n        });\n\n    interrupt(that);\n    var emit = emitter(that, arguments, true).beforestart();\n\n    if (type === \"overlay\") {\n      if (selection) moving = true;\n      const pts = [points[0], points[1] || points[0]];\n      state.selection = selection = [[\n          w0 = dim === Y ? W : min(pts[0][0], pts[1][0]),\n          n0 = dim === X ? N : min(pts[0][1], pts[1][1])\n        ], [\n          e0 = dim === Y ? E : max(pts[0][0], pts[1][0]),\n          s0 = dim === X ? S : max(pts[0][1], pts[1][1])\n        ]];\n      if (points.length > 1) move(event);\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      emit.moved = moved;\n      emit.ended = ended;\n    } else {\n      var view = select(event.view)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n      if (keys) view\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n\n      dragDisable(event.view);\n    }\n\n    redraw.call(that);\n    emit.start(event, mode.name);\n\n    function moved(event) {\n      for (const p of event.changedTouches || [event]) {\n        for (const d of points)\n          if (d.identifier === p.identifier) d.cur = pointer(p, that);\n      }\n      if (shifting && !lockX && !lockY && points.length === 1) {\n        const point = points[0];\n        if (abs(point.cur[0] - point[0]) > abs(point.cur[1] - point[1]))\n          lockY = true;\n        else\n          lockX = true;\n      }\n      for (const point of points)\n        if (point.cur) point[0] = point.cur[0], point[1] = point.cur[1];\n      moving = true;\n      noevent(event);\n      move(event);\n    }\n\n    function move(event) {\n      const point = points[0], point0 = point.point0;\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = max(W - w0, min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = max(N - n0, min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (points[1]) {\n            if (signX) w1 = max(W, min(E, points[0][0])), e1 = max(W, min(E, points[1][0])), signX = 1;\n            if (signY) n1 = max(N, min(S, points[0][1])), s1 = max(N, min(S, points[1][1])), signY = 1;\n          } else {\n            if (signX < 0) dx = max(W - w0, min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n            else if (signX > 0) dx = max(W - e0, min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n            if (signY < 0) dy = max(N - n0, min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n            else if (signY > 0) dy = max(N - s0, min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          }\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = max(W, min(E, w0 - dx * signX)), e1 = max(W, min(E, e0 + dx * signX));\n          if (signY) n1 = max(N, min(S, n0 - dy * signY)), s1 = max(N, min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush(event, mode.name);\n      }\n    }\n\n    function ended(event) {\n      nopropagation(event);\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end(event, mode.name);\n    }\n\n    function keydowned(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n\n    function keyupped(event) {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move(event);\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move(event);\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move(event);\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent(event);\n    }\n  }\n\n  function touchmoved(event) {\n    emitter(this, arguments).moved(event);\n  }\n\n  function touchended(event) {\n    emitter(this, arguments).ended(event);\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = number2(extent.apply(this, arguments));\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant(number2(_)), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), brush) : touchable;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.keyModifiers = function(_) {\n    return arguments.length ? (keys = !!_, brush) : keys;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { IFlowNodesDataItem, FlowNodes } from \"./FlowNodes\";\n\nimport { Container, IContainerPrivate, IContainerSettings } from \"../../core/render/Container\";\n\nexport interface IFlowNodeSettings extends IContainerSettings {\n}\n\nexport interface IFlowNodePrivate extends IContainerPrivate {\n}\n\n/**\n * Base class for flow chart nodes.\n */\nexport class FlowNode extends Container {\n\n\t/**\n\t * Related series.\n\t */\n\tpublic series: FlowNodes | undefined;\n\n\tdeclare public _settings: IFlowNodeSettings;\n\tdeclare public _privateSettings: IFlowNodePrivate;\n\n\tpublic static className: string = \"FlowNode\";\n\tpublic static classNames: Array<string> = Container.classNames.concat([FlowNode.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowNodesDataItem> | undefined;\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { Color } from \"../../core/util/Color\";\nimport type { Time } from \"../../core/util/Animation\";\nimport type { Flow, IFlowDataItem } from \"./Flow\";\nimport type { ColorSet } from \"../../core/util/ColorSet\";\nimport type { PatternSet } from \"../../core/util/PatternSet\";\nimport type { Pattern } from \"../../core/render/patterns/Pattern\";\n\nimport type * as d3sankey from \"d3-sankey\";\n\nimport { Label } from \"../../core/render/Label\";\nimport { Series, ISeriesSettings, ISeriesDataItem, ISeriesPrivate, ISeriesEvents } from \"../../core/render/Series\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNode } from \"./FlowNode\";\n\nimport * as $array from \"../../core/util/Array\";\n\nexport interface IFlowNodesDataItem extends ISeriesDataItem {\n\n\t/**\n\t * Node name.\n\t */\n\tname: string;\n\n\t/**\n\t * An associated node instance.\n\t */\n\tnode: FlowNode;\n\n\t/**\n\t * Node label.\n\t */\n\tlabel: Label;\n\n\t/**\n\t * Node color.\n\t */\n\tfill: Color;\n\n\t/**\n\t * Node pattern.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/} for more info\n\t * @since 5.10.0\n\t */\n\tfillPattern: Pattern;\n\n\t/**\n\t * Indicates \"unknown\" node.\n\t */\n\tunknown: boolean;\n\n\t/**\n\t * @ignore\n\t */\n\td3SankeyNode: d3sankey.SankeyNode<d3sankey.SankeyExtraProperties, d3sankey.SankeyExtraProperties>;\n\n\t/**\n\t * Sum of values of all incoming links.\n\t */\n\tsumIncoming: number;\n\n\t/**\n\t * Sum of values of all outgoing links.\n\t */\n\tsumOutgoing: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumIncomingWorking: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumOutgoingWorking: number;\n\n\t/**\n\t * Sum of values of all links: incoming and outgoing.\n\t */\n\tsum: number;\n\n\t/**\n\t * @ignore\n\t */\n\tsumWorking: number;\n\n\t/**\n\t * A list of incoming link data items.\n\t */\n\tincomingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * A list of outgoing link data items.\n\t */\n\toutgoingLinks: Array<DataItem<IFlowDataItem>>;\n\n\t/**\n\t * Depth of the node.\n\t */\n\tdepth: number;\n\n}\n\nexport interface IFlowNodesSettings extends ISeriesSettings {\n\n\t/**\n\t * A field in data boolean setting if the node is \"unknown\".\n\t *\n\t * @default \"unknown\"\n\t */\n\tunknownField?: string;\n\n\t/**\n\t * A field in data that holds name for the node.\n\t *\n\t * @default \"id\"\n\t */\n\tnameField?: string;\n\n\t/**\n\t * A field in data that holds boolean value indicating if node is\n\t * disabled (collapsed).\n\t *\n\t * @since 5.4.2\n\t */\n\tdisabledField?: string;\n\n\t/**\n\t * A field in data that holds color used for fills nodes.\n\t *\n\t * @default \"fill\"\n\t */\n\tfillField?: string;\n\n\t/**\n\t * A [[ColorSet]] that series will use to apply to its nodes.\n\t */\n\tcolors?: ColorSet;\n\n\t/**\n\t * A [[PatternSet]] that series will use to apply to its nodes.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/concepts/colors-gradients-and-patterns/patterns/#Pattern_sets} for more info\n\t * @since 5.10.0\n\t */\n\tpatterns?: PatternSet;\n\n\t/**\n\t * Animation duration in ms.\n\t */\n\tanimationDuration?: number;\n\n\t/**\n\t * Easing function to use for node animations.\n\t */\n\tanimationEasing?: (t: Time) => Time;\n}\n\nexport interface IFlowNodesPrivate extends ISeriesPrivate {\n}\n\nexport interface IFlowNodesEvents extends ISeriesEvents {\n}\n\n\n/**\n * Holds instances of nodes for a [[Flow]] series.\n */\nexport abstract class FlowNodes extends Series {\n\tpublic static className: string = \"FlowNodes\";\n\tpublic static classNames: Array<string> = Series.classNames.concat([FlowNodes.className]);\n\n\tdeclare public _settings: IFlowNodesSettings;\n\tdeclare public _privateSettings: IFlowNodesPrivate;\n\tdeclare public _dataItemSettings: IFlowNodesDataItem;\n\tdeclare public _events: IFlowNodesEvents;\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<Label>\n\t */\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Label._new(this._root, { themeTags: [\"flow\"] }, [this.labels.template])\n\t));\n\n\t/**\n\t * List of node elements.\n\t *\n\t * @default new ListTemplate<FlowNode>\n\t */\n\tpublic readonly nodes: ListTemplate<FlowNode> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => FlowNode._new(this._root, { themeTags: [\"node\"] }, [this.nodes.template])\n\t));\n\n\t/**\n\t * Related [[Flow]] series.\n\t */\n\tpublic abstract flow: Flow | undefined;\n\n\tpublic _userDataSet = false;\n\n\tprotected _afterNew() {\n\t\tthis.fields.push(\"unknown\", \"name\", \"fill\");\n\n\t\tthis.set(\"idField\", \"id\");\n\t\tthis.set(\"nameField\", \"id\");\n\t\tthis.set(\"fillField\", \"fill\");\n\t\tthis.set(\"unknownField\", \"unknown\");\n\n\t\tthis.children.push(this.bulletsContainer);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _onDataClear() {\n\t\tconst colors = this.get(\"colors\");\n\t\tif (colors) {\n\t\t\tcolors.reset();\n\t\t}\n\n\t\tconst patterns = this.get(\"patterns\");\n\t\tif (patterns) {\n\t\t\tpatterns.reset();\n\t\t}\n\n\t\tthis._userDataSet = true;\n\t}\n\n\tprotected processDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.processDataItem(dataItem);\n\t\tdataItem.setRaw(\"d3SankeyNode\", { name: dataItem.get(\"id\"), dataItem: dataItem });\n\n\t\tif (dataItem.get(\"fill\") == null) {\n\t\t\tlet colors = this.get(\"colors\");\n\t\t\tif (colors) {\n\t\t\t\tdataItem.setRaw(\"fill\", colors.next());\n\t\t\t}\n\t\t}\n\n\t\tif (dataItem.get(\"fillPattern\") == null) {\n\t\t\tlet patterns = this.get(\"patterns\");\n\t\t\tif (patterns) {\n\t\t\t\tdataItem.setRaw(\"fillPattern\", patterns.next());\n\t\t\t}\n\t\t}\n\n\t\tconst node = this.makeNode(dataItem);\n\t\tdataItem.setRaw(\"node\", node);\n\n\t\tconst disabledField = this.get(\"disabledField\");\n\n\t\tif (disabledField) {\n\t\t\tconst dataContext = dataItem.dataContext as any;\n\t\t\tif (dataContext) {\n\t\t\t\tif (dataContext[disabledField]) {\n\t\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\t\tthis.disableDataItem(dataItem, 0);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>, themeTag?: string): FlowNode {\n\n\t\tconst node = this.nodes.make();\n\n\t\tthis.nodes.push(node);\n\n\t\tif (themeTag) {\n\t\t\tnode.addTag(themeTag);\n\t\t}\n\n\t\tif (dataItem.get(\"unknown\")) {\n\t\t\tnode.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.children.push(node);\n\t\tnode._setDataItem(dataItem);\n\t\tnode.series = this;\n\n\t\tnode.events.on(\"click\", (e) => {\n\t\t\tconst node = e.target;\n\t\t\tif (node.get(\"toggleKey\") == \"disabled\") {\n\t\t\t\tconst dataItem = node.dataItem as DataItem<IFlowNodesDataItem>;\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tif (dataItem.isHidden()) {\n\t\t\t\t\t\tthis.enableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.disableDataItem(dataItem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tdataItem.on(\"fill\", () => {\n\t\t\tthis._updateNodeColor(dataItem);\n\t\t})\n\n\t\tdataItem.on(\"fillPattern\", () => {\n\t\t\tthis._updateNodeColor(dataItem);\n\t\t})\n\n\n\t\tdataItem.set(\"node\", node);\n\t\treturn node;\n\t}\n\n\tpublic _updateNodeColor(_dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet node = dataItem.get(\"node\");\n\t\tif (node) {\n\t\t\tthis.nodes.removeValue(node);\n\t\t\tnode.dispose();\n\t\t}\n\t\tlet label = dataItem.get(\"label\");\n\t\tif (label) {\n\t\t\tthis.labels.removeValue(label);\n\t\t\tlabel.dispose();\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addincomingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet incoming = dataItem.get(\"incomingLinks\");\n\t\tif (!incoming) {\n\t\t\tincoming = [];\n\t\t\tdataItem.set(\"incomingLinks\", incoming)\n\t\t}\n\t\tincoming.push(link);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic addOutgoingLink(dataItem: DataItem<this[\"_dataItemSettings\"]>, link: DataItem<IFlowDataItem>) {\n\t\tlet outgoing = dataItem.get(\"outgoingLinks\");\n\t\tif (!outgoing) {\n\t\t\toutgoing = [];\n\t\t\tdataItem.set(\"outgoingLinks\", outgoing)\n\t\t}\n\t\toutgoing.push(link);\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async showDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.show();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.show(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async hideDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tnode.hide();\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.hide(duration);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Shows node's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async enableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.showDataItem(dataItem, duration)];\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", false);\n\t\t\t\t})\n\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", false);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.showDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tawait promises;\n\t}\n\n\t/**\n\t * Hides series's data item.\n\t *\n\t * @param   dataItem  Data item\n\t * @param   duration  Animation duration in milliseconds\n\t * @return            Promise\n\t */\n\tpublic async disableDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>, duration?: number): Promise<void> {\n\t\tconst promises = [super.hideDataItem(dataItem, duration)];\n\n\t\tconst flow = this.flow;\n\n\t\tif (flow) {\n\n\t\t\tconst node = dataItem.get(\"node\");\n\t\t\tif (node) {\n\t\t\t\tthis.root.events.once(\"frameended\", () => {\n\t\t\t\t\tnode.set(\"disabled\", true);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlet label = dataItem.get(\"label\");\n\n\t\t\tif (label) {\n\t\t\t\tlabel.set(\"disabled\", true);\n\t\t\t}\n\n\t\t\tlet links = dataItem.get(\"outgoingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tlinks = dataItem.get(\"incomingLinks\");\n\n\t\t\tif (links) {\n\t\t\t\t$array.each(links, (link) => {\n\t\t\t\t\tflow.hideDataItem(link, duration);\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t\tawait promises;\n\t}\n\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Chord } from \"./Chord\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { Slice } from \"../../core/render/Slice\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { RadialLabel } from \"../../core/render/RadialLabel\";\n\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordNodesDataItem extends IFlowNodesDataItem {\n\n\t/**\n\t * Node [[Slice]] element.\n\t */\n\tslice: Slice;\n\n\t/**\n\t * Node label element.\n\t */\n\tlabel: RadialLabel;\n\n}\n\nexport interface IChordNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface IChordNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface IChordNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Chord]] series.\n */\nexport class ChordNodes extends FlowNodes {\n\tpublic static className: string = \"ChordNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ChordNodes.className]);\n\n\t/**\n\t * List of label elements.\n\t *\n\t * @default new ListTemplate<RadialLabel>\n\t */\n\tpublic readonly labels: ListTemplate<RadialLabel> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RadialLabel._new(this._root, {}, [this.labels.template])\n\t));\n\n\tdeclare public _settings: IChordNodesSettings;\n\tdeclare public _privateSettings: IChordNodesPrivate;\n\tdeclare public _dataItemSettings: IChordNodesDataItem;\n\tdeclare public _events: IChordNodesEvents;\n\n\t/**\n\t * Related [[Chord]] series.\n\t */\n\tpublic flow: Chord | undefined;\n\n\tprotected _dAngle: number = 0;\n\n\t/**\n\t * List of slice elements.\n\t *\n\t * @default new ListTemplate<Slice>\n\t */\n\tpublic readonly slices: ListTemplate<Slice> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Slice._new(this._root, { themeTags: [\"shape\"] }, [this.slices.template])\n\t));\n\n\t/**\n\t * @ignore\n\t * added to solve old naming bug\n\t */\n\tpublic readonly rectangles = this.slices;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst node = super.makeNode(dataItem, \"chord\");\n\n\t\tconst slice = node.children.insertIndex(0, this.slices.make());\n\t\tdataItem.set(\"slice\", slice);\n\t\tslice._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\tslice._setSoft(\"fillPattern\", dataItem.get(\"fillPattern\"));\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\t\tlabel.addTag(\"flow\");\n\t\tlabel.addTag(\"chord\");\n\t\tlabel.addTag(\"node\");\n\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tnode.events.on(\"dragstart\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\t\t\tif (this.flow) {\n\t\t\t\tthis._dAngle = this.flow.get(\"startAngle\", 0) - angle;\n\t\t\t}\n\t\t})\n\n\t\tnode.events.on(\"dragged\", (e) => {\n\t\t\tlet point = this.toLocal(e.point);\n\t\t\tconst angle = $math.getAngle({ x: 0, y: 0 }, point);\n\n\t\t\tnode.setAll({ x: 0, y: 0 });\n\t\t\tif (this.flow) {\n\t\t\t\tthis.flow.set(\"startAngle\", angle + this._dAngle);\n\t\t\t}\n\t\t})\n\n\t\tlabel._setDataItem(dataItem);\n\t\tslice._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (slice) {\n\t\t\t\t\t\tconst radius = slice.get(\"radius\", 0);\n\t\t\t\t\t\tconst innerRadius = slice.get(\"innerRadius\", 0);\n\t\t\t\t\t\tconst bulletRadius = innerRadius + (radius - innerRadius) * locationY;\n\t\t\t\t\t\tconst angle = slice.get(\"startAngle\", 0) + slice.get(\"arc\", 0) * locationX;\n\t\t\t\t\t\tsprite.setAll({ x: bulletRadius * $math.cos(angle), y: bulletRadius * $math.sin(angle) });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst slice = dataItem.get(\"slice\");\n\t\tif(slice){\n\t\t\tslice.set(\"fill\", dataItem.get(\"fill\"));\n\t\t\tslice.set(\"fillPattern\", dataItem.get(\"fillPattern\"));\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet slice = dataItem.get(\"slice\");\n\t\tif (slice) {\n\t\t\tthis.slices.removeValue(slice);\n\t\t\tslice.dispose();\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport { Graphics, IGraphicsSettings, IGraphicsPrivate } from \"../../core/render/Graphics\";\nimport type { IFlowNodesDataItem } from \"./FlowNodes\";\nimport type { IFlowDataItem, Flow } from \"./Flow\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport type { LinearGradient } from \"../../core/render/gradients/LinearGradient\";\nimport { Percent } from \"../../core/util/Percent\";\n\nexport interface IFlowLinkSettings extends IGraphicsSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<IFlowNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t */\n\tfillStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n\t/**\n\t * Type of outline to use for links.\n\t */\n\tstrokeStyle?: \"solid\" | \"source\" | \"target\" | \"gradient\" | \"none\";\n\n}\n\nexport interface IFlowLinkPrivate extends IGraphicsPrivate {\n}\n\n/**\n * A base class for a flow link.\n */\nexport abstract class FlowLink extends Graphics {\n\n\tpublic series: Flow | undefined;\n\n\tdeclare public _settings: IFlowLinkSettings;\n\tdeclare public _privateSettings: IFlowLinkPrivate;\n\n\tpublic static className: string = \"FlowLink\";\n\tpublic static classNames: Array<string> = Graphics.classNames.concat([FlowLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IFlowDataItem> | undefined;\n\n\tpublic _fillGradient: LinearGradient | undefined;\n\tpublic _strokeGradient: LinearGradient | undefined;\n\n\tpublic _changed() {\n\t\tsuper._changed();\n\t\tif (this.isDirty(\"fillStyle\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<IFlowDataItem>;\n\t\t\tif (series && dataItem) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic abstract getPoint(location: number): IOrientationPoint;\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\tlet tooltipY = this.get(\"tooltipY\");\n\t\tlet position = 0.5;\n\t\tif (tooltipY instanceof Percent) {\n\t\t\tposition = tooltipY.value;\n\t\t}\n\n\t\treturn this.getPoint(position);\n\t}\n}\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { DataItem } from \"../../core/render/Component\";\nimport type { IChordNodesDataItem } from \"./ChordNodes\";\nimport type { Percent } from \"../../core/util/Percent\";\nimport type { Chord, IChordDataItem } from \"./Chord\";\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\nexport interface IChordLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source data item.\n\t */\n\tsource?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * target data item.\n\t */\n\ttarget?: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Radius of the link at the source.\n\t */\n\tsourceRadius?: number | Percent;\n\n\t/**\n\t * Radius of the link at the end (target).\n\t */\n\ttargetRadius?: number | Percent;\n\n}\n\nexport interface IChordLinkPrivate extends IFlowLinkPrivate {\n}\n\n/**\n * A link element used in [[Chord]] chart.\n */\nexport class ChordLink extends FlowLink {\n\n\tpublic _p0: IPoint | undefined;\n\tpublic _p1: IPoint | undefined;\n\n\tpublic _type: \"line\" | \"curve\" | undefined;\n\n\tdeclare public _settings: IChordLinkSettings;\n\tdeclare public _privateSettings: IChordLinkPrivate;\n\n\tpublic static className: string = \"ChordLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ChordLink.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDataItem> | undefined;\n\n\tdeclare public series: Chord | undefined;\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._p0 && this._p1) {\n\t\t\tif (this._type === \"line\") {\n\t\t\t\tlet p = $math.getPointOnLine(this._p0, this._p1, location);\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(this._p0, this._p1) };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet p0 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.max(0, location - 0.01));\n\t\t\t\tlet p1 = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, Math.min(1, location + 0.01));\n\t\t\t\tlet p = $math.getPointOnQuadraticCurve(this._p0, this._p1, { x: 0, y: 0 }, location);\n\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 };\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { chord, ribbon, RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\nimport { ascending, descending } from \"d3\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { ChordNodes, IChordNodesDataItem } from \"./ChordNodes\";\nimport { ChordLink } from \"./ChordLink\";\nimport { Percent, p100, p50 } from \"../../core/util/Percent\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface IChordDataItem extends IFlowDataItem {\n\n\t/**\n\t * A link element.\n\t */\n\tlink: ChordLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<IChordNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<IChordNodesDataItem>;\n\n}\n\nexport interface IChordSettings extends IFlowSettings {\n\n\t/**\n\t * Angle of a gap between each node, in degrees.\n\t *\n\t * @default 1\n\t */\n\tpadAngle?: number;\n\n\t/**\n\t * Radius of the diagram in percent or pixels.\n\t *\n\t * If set in percent, it will be relative to the whole area available for\n\t * the series.\n\t *\n\t * @default 90%\n\t */\n\tradius?: number | Percent;\n\n\t/**\n\t * The thickness of node strip in pixels.\n\t *\n\t * @default 10\n\t */\n\tnodeWidth?: number;\n\n\t/**\n\t * Starting angle in degrees.\n\t *\n\t * @default 0\n\t */\n\tstartAngle?: number;\n\n\t/**\n\t * How to sort nodes by their value.\n\t *\n\t * @default \"descending\"\n\t */\n\tsort?: \"ascending\" | \"descending\" | \"none\"\n\n}\n\nexport interface IChordPrivate extends IFlowPrivate {\n}\n\nexport interface IChordEvents extends IFlowEvents {\n}\n\n/**\n * Regular chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Chord extends Flow {\n\n\tpublic static className: string = \"Chord\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Chord.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLink>\n\t */\n\tpublic readonly links: ListTemplate<ChordLink> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t));\n\n\t/**\n\t * A series for all chord nodes.\n\t *\n\t * @default ChordNodes.new()\n\t */\n\tpublic readonly nodes: ChordNodes = this.children.push(ChordNodes.new(this._root, {}));\n\n\tdeclare public _settings: IChordSettings;\n\tdeclare public _privateSettings: IChordPrivate;\n\tdeclare public _dataItemSettings: IChordDataItem;\n\tdeclare public _events: IChordEvents;\n\n\tpublic _d3chord = chord();\n\tpublic _chordLayout: { source: { index: number, startAngle: number, endAngle: number, value: number }, target: { index: number, startAngle: number, endAngle: number, value: number } }[] = [];\n\tpublic _ribbon = ribbon();\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\"]);\n\t\tthis.linksContainer.setAll({ x: p50, y: p50 })\n\t\tthis.bulletsContainer.setAll({ x: p50, y: p50 });\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _fixRibbon(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>) {\n\t\tribbon.startAngle((d) => {\n\t\t\treturn d.startAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\n\t\tribbon.endAngle((d) => {\n\t\t\treturn d.endAngle + this.get(\"startAngle\", 0) * $math.RADIANS + Math.PI / 2;\n\t\t})\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLink {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tthis.links.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\t\tlink.series = this;\n\t\treturn link;\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\t\t\tlet outgoing = sourceDataItem.get(\"outgoingLinks\");\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 0;\n\t\t\t\tif (outgoing) {\n\t\t\t\t\t$array.each(outgoing, (outgoingLink) => {\n\t\t\t\t\t\tif (outgoingLink.get(\"target\") === targetDataItem) {\n\t\t\t\t\t\t\tvalue = outgoingLink.get(\"valueWorking\");\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet valueSum = this.getPrivate(\"valueSum\", 0);\n\t\t\t\t\t\tlet minSize = this.get(\"minSize\", 0);\n\t\t\t\t\t\tif(value > 0 && minSize > 0){\n\t\t\t\t\t\t\tif(value < valueSum * minSize){\n\t\t\t\t\t\t\t\tvalue = valueSum * minSize;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\n\t\tthis._fixRibbon(this._ribbon);\n\n\t\tlet chordChanged = false;\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"padAngle\") || this.isDirty(\"startAngle\")) {\n\n\t\t\tconst matrix = this._makeMatrix();\n\n\t\t\tthis._d3chord.padAngle(this.get(\"padAngle\", 0) * $math.RADIANS);\n\t\t\tconst sort = this.get(\"sort\");\n\n\t\t\tif (sort === \"ascending\") {\n\t\t\t\tthis._d3chord.sortGroups(ascending);\n\t\t\t}\n\t\t\telse if (sort === \"descending\") {\n\t\t\t\tthis._d3chord.sortGroups(descending);\n\t\t\t}\n/*\n\t\t\tthis._d3chord.sortSubgroups((a, b)=>{\n\t\t\t\tif (a != Math.round(a)) return false\n\t\t\t\tif (b != Math.round(b)) return true\n\t\t\t\treturn b < a ? -1 : b > a ? 1 : 0;\n\t\t\t})\n*/\n\t\t\tthis._chordLayout = this._d3chord(matrix);\n\n\t\t\tchordChanged = true;\n\t\t}\n\n\t\tif (chordChanged || this.isDirty(\"radius\") || this.isDirty(\"nodeWidth\")) {\n\t\t\tlet radius = $utils.relativeToValue(this.get(\"radius\", 0), Math.min(this.innerWidth(), this.innerHeight())) / 2;\n\n\t\t\tlet i = 0;\n\n\t\t\tconst chordStartAngle = this.get(\"startAngle\", 0);\n\t\t\tconst nodeWidth = this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\n\t\t\t\tconst slice = dataItem.get(\"slice\");\n\t\t\t\tconst chordGroup = (this._chordLayout as any).groups[i];\n\t\t\t\tconst startAngle = chordGroup.startAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tconst endAngle = chordGroup.endAngle * $math.DEGREES + chordStartAngle;\n\t\t\t\tslice.setAll({ radius: radius, innerRadius: radius - nodeWidth, startAngle: startAngle as number, arc: endAngle - startAngle })\n\n\t\t\t\tconst label = dataItem.get(\"label\");\n\t\t\t\tlabel.setAll({ labelAngle: startAngle + (endAngle - startAngle) / 2 });\n\t\t\t\tlabel.setPrivate(\"radius\", radius);\n\t\t\t\tlabel.setPrivate(\"innerRadius\", 0.1);\n\t\t\t\ti++;\n\t\t\t})\n\n\t\t\tconst linkRadius = radius - this.get(\"nodeWidth\", 0);\n\n\t\t\t$array.each(this._chordLayout, (chord) => {\n\n\t\t\t\tlet dataItem = this._linksByIndex[chord.source.index + \"_\" + chord.target.index];\n\n\t\t\t\tif (!dataItem) {\n\t\t\t\t\tdataItem = this._linksByIndex[chord.target.index + \"_\" + chord.source.index];\n\t\t\t\t}\n\n\t\t\t\tif (dataItem) {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tthis._getLinkPoints(link, linkRadius, chord);\n\t\t\t\t\tthis._updateLink(this._ribbon, link, linkRadius, chord);\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tconst source = chordLayoutItem.source;\n\t\tconst target = chordLayoutItem.target;\n\n\t\tconst chordStartAngle = this.get(\"startAngle\", 0) * $math.RADIANS;\n\n\t\tif (source && target) {\n\t\t\tconst startAngle0 = source.startAngle;\n\t\t\tconst endAngle0 = source.endAngle\n\t\t\tconst angle0 = startAngle0 + (endAngle0 - startAngle0) / 2 + chordStartAngle;\n\n\t\t\tconst startAngle1 = target.startAngle;\n\t\t\tconst endAngle1 = target.endAngle\n\t\t\tconst angle1 = startAngle1 + (endAngle1 - startAngle1) / 2 + chordStartAngle;\n\n\t\t\tlink._p0 = { x: linkRadius * Math.cos(angle0), y: linkRadius * Math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * Math.cos(angle1), y: linkRadius * Math.sin(angle1) };\n\t\t}\n\t}\n\n\tprotected _updateLink(ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, linkRadius: number, chordLayoutItem: any) {\n\t\tif (chordLayoutItem) {\n\t\t\tribbon.sourceRadius($utils.relativeToValue(link.get(\"sourceRadius\", p100), linkRadius));\n\t\t\tribbon.targetRadius($utils.relativeToValue(link.get(\"targetRadius\", p100), linkRadius));\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tribbon.context(display as any);\n\t\t\t\tribbon(chordLayoutItem);\n\t\t\t})\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { ChordDirected, IChordDirectedDataItem } from \"./ChordDirected\";\n\nimport { ChordLink, IChordLinkPrivate, IChordLinkSettings } from \"./ChordLink\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface IChordLinkDirectedSettings extends IChordLinkSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * @default 10\n\t */\n\theadRadius?: number;\n\n}\n\nexport interface IChordLinkDirectedPrivate extends IChordLinkPrivate {\n}\n\n/**\n * A link element used in [[ChordDirected]] chart.\n */\nexport class ChordLinkDirected extends ChordLink {\n\tdeclare public _settings: IChordLinkDirectedSettings;\n\tdeclare public _privateSettings: IChordLinkDirectedPrivate;\n\n\tpublic static className: string = \"ChordLinkDirected\";\n\tpublic static classNames: Array<string> = ChordLink.classNames.concat([ChordLinkDirected.className]);\n\n\tdeclare protected _dataItem: DataItem<IChordDirectedDataItem> | undefined;\n\n\tdeclare public series: ChordDirected | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"link\", \"directed\"]);\n\n\t\tsuper._afterNew();\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\nimport { ChordLinkDirected } from \"./ChordLinkDirected\";\nimport { chordDirected, ribbonArrow, ribbon, RibbonArrowGenerator, Ribbon, RibbonSubgroup } from \"d3-chord\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordDirectedDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordDirectedSettings extends IChordSettings {\n\n\t/**\n\t * Length of the link arrow in pixels.\n\t *\n\t * Set to `null` to disable arrowheads.\n\t *\n\t * @default 10\n\t */\n\tlinkHeadRadius?: number | undefined;\n\n}\n\nexport interface IChordDirectedPrivate extends IChordPrivate {\n}\n\nexport interface IChordDirectedEvents extends IChordEvents {\n}\n\n/**\n * Directed chord series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordDirected extends Chord {\n\n\tpublic static className: string = \"ChordDirected\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordDirected.className]);\n\n\tdeclare public _settings: IChordDirectedSettings;\n\tdeclare public _privateSettings: IChordDirectedPrivate;\n\tdeclare public _dataItemSettings: IChordDirectedDataItem;\n\tdeclare public _events: IChordDirectedEvents;\n\n\tpublic _d3chord = chordDirected();\n\tpublic _ribbonArrow: RibbonArrowGenerator<any, Ribbon, RibbonSubgroup> = ribbonArrow();\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<ChordLinkDirected>\n\t */\n\tpublic readonly links: ListTemplate<ChordLinkDirected> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => ChordLinkDirected._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t));\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ChordLinkDirected {\n\t\tconst link = this.linksContainer.children.push(this.links.make());\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\n\n\t\tlink.series = this;\n\n\t\treturn link;\n\t}\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"directed\"]);\n\t\tsuper._afterNew();\n\t\tthis._markDirtyKey(\"linkHeadRadius\");\n\t}\n\n\tpublic _prepareChildren() {\n\t\tconst linkHeadRadius = \"linkHeadRadius\";\n\t\tif (this.isDirty(linkHeadRadius)) {\n\t\t\tconst headRadius = this.get(linkHeadRadius);\n\t\t\tif (headRadius == null) {\n\t\t\t\tthis._ribbon = ribbon();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet ribbon = ribbonArrow();\n\t\t\t\tribbon.headRadius(headRadius);\n\t\t\t\tthis._ribbon = ribbon;\n\t\t\t}\n\t\t}\n\n\t\tsuper._prepareChildren();\n\t}\n}\n","import type { ChordLink } from \"./ChordLink\";\nimport type { RibbonGenerator, RibbonSubgroup, Ribbon } from \"d3-chord\";\n\nimport { Chord, IChordSettings, IChordDataItem, IChordPrivate, IChordEvents } from \"./Chord\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\nexport interface IChordNonRibbonDataItem extends IChordDataItem {\n\n}\n\nexport interface IChordNonRibbonSettings extends IChordSettings {\n\n\t/**\n\t * Type of the link:\n\t *\n\t * `\"curve\"` (default) will display link as a curved line.\n\t * `\"line\"` will display link as a straight line.\n\t *\n\t * @default \"curve\"\n\t */\n\tlinkType?: \"curve\" | \"line\"\n\n}\n\nexport interface IChordNonRibbonPrivate extends IChordPrivate {\n}\n\nexport interface IChordNonRibbonEvents extends IChordEvents {\n}\n\n/**\n * Chord series with think line links.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class ChordNonRibbon extends Chord {\n\n\tpublic static className: string = \"ChordNonRibbon\";\n\tpublic static classNames: Array<string> = Chord.classNames.concat([ChordNonRibbon.className]);\n\n\tdeclare public _settings: IChordNonRibbonSettings;\n\tdeclare public _privateSettings: IChordNonRibbonPrivate;\n\tdeclare public _dataItemSettings: IChordNonRibbonDataItem;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"chord\", \"basic\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _makeMatrix(): number[][] {\n\t\tconst matrix: number[][] = [];\n\t\t$array.each(this.nodes.dataItems, (sourceDataItem) => {\n\t\t\tconst group: number[] = [];\n\t\t\tmatrix.push(group);\n\n\t\t\t$array.each(this.nodes.dataItems, (targetDataItem) => {\n\t\t\t\tlet value = 1;\n\n\t\t\t\tif (sourceDataItem === targetDataItem) {\n\t\t\t\t\tvalue = 0;\n\t\t\t\t}\n\n\t\t\t\tgroup.push(value);\n\t\t\t})\n\t\t})\n\t\treturn matrix;\n\t}\n\n\tprotected _updateLink(_ribbon: RibbonGenerator<any, Ribbon, RibbonSubgroup>, link: ChordLink, _linkRadius: number, chordLayoutItem: any) {\n\t\tlink._type = this.get(\"linkType\");\n\t\tif (chordLayoutItem) {\n\t\t\tconst linkType = this.get(\"linkType\");\n\n\t\t\tlink.set(\"draw\", (display) => {\n\t\t\t\tlet p0 = link._p0;\n\t\t\t\tlet p1 = link._p1;\n\t\t\t\tif (p0 && p1) {\n\t\t\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\t\t\tif (linkType == \"line\") {\n\t\t\t\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdisplay.quadraticCurveTo(0, 0, p1.x, p1.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tprotected _getLinkPoints(link: ChordLink, linkRadius: number, _chordLayoutItem: any) {\n\t\tconst source = link.get(\"source\");\n\t\tconst target = link.get(\"target\");\n\n\t\tif (source && target) {\n\n\t\t\tconst sourceSlice = source.get(\"slice\");\n\t\t\tconst targetSlice = target.get(\"slice\");\n\n\t\t\tconst startAngle0 = sourceSlice.get(\"startAngle\", 0);\n\t\t\tconst arc0 = sourceSlice.get(\"arc\", 0)\n\t\t\tconst angle0 = startAngle0 + arc0 / 2;\n\n\t\t\tconst startAngle1 = targetSlice.get(\"startAngle\", 0);\n\t\t\tconst arc1 = targetSlice.get(\"arc\", 0)\n\t\t\tconst angle1 = startAngle1 + arc1 / 2;\n\n\t\t\tlink._p0 = { x: linkRadius * $math.cos(angle0), y: linkRadius * $math.sin(angle0) };\n\t\t\tlink._p1 = { x: linkRadius * $math.cos(angle1), y: linkRadius * $math.sin(angle1) };\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey } from \"./Sankey\";\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\nimport { RoundedRectangle } from \"../../core/render/RoundedRectangle\";\n\nexport interface ISankeyNodesDataItem extends IFlowNodesDataItem {\n\trectangle: RoundedRectangle;\n}\n\nexport interface ISankeyNodesSettings extends IFlowNodesSettings {\n}\n\nexport interface ISankeyNodesPrivate extends IFlowNodesPrivate {\n}\n\nexport interface ISankeyNodesEvents extends IFlowNodesEvents {\n}\n\n/**\n * Holds instances of nodes for a [[Sankey]] series.\n */\nexport class SankeyNodes extends FlowNodes {\n\tpublic static className: string = \"SankeyNodes\";\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([SankeyNodes.className]);\n\n\tdeclare public _settings: ISankeyNodesSettings;\n\tdeclare public _privateSettings: ISankeyNodesPrivate;\n\tdeclare public _dataItemSettings: ISankeyNodesDataItem;\n\tdeclare public _events: ISankeyNodesEvents;\n\n\t/**\n\t * List of rectangle elements.\n\t *\n\t * @default new ListTemplate<RoundedRectangle>\n\t */\n\tpublic readonly rectangles: ListTemplate<RoundedRectangle> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => RoundedRectangle._new(this._root, { themeTags: [\"shape\"] }, [this.rectangles.template])\n\t));\n\n\t/**\n\t * Related [[Sankey]] series.\n\t */\n\tpublic flow: Sankey | undefined;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\n\t\tconst flow = this.flow;\n\n\t\tconst node = super.makeNode(dataItem, \"sankey\");\n\n\t\tconst rectangle = node.children.insertIndex(0, this.rectangles.make());\n\t\tthis.rectangles.push(rectangle);\n\t\trectangle._setSoft(\"fill\", dataItem.get(\"fill\"));\n\t\trectangle._setSoft(\"fillPattern\", dataItem.get(\"fillPattern\"));\n\n\t\tdataItem.set(\"rectangle\", rectangle);\n\n\t\tnode.events.on(\"dragged\", () => {\n\t\t\tconst d3SankeyNode = (node.dataItem as DataItem<ISankeyNodesDataItem>).get(\"d3SankeyNode\");\n\t\t\tif (d3SankeyNode) {\n\t\t\t\tif (flow) {\n\t\t\t\t\tif (flow.get(\"orientation\") == \"horizontal\") {\n\t\t\t\t\t\td3SankeyNode.x0 = node.x();\n\t\t\t\t\t\td3SankeyNode.y0 = node.y();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\td3SankeyNode.x0 = node.y();\n\t\t\t\t\t\td3SankeyNode.y0 = node.x();\n\t\t\t\t\t}\n\n\t\t\t\t\tflow.updateSankey();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\tconst label = this.labels.make();\n\t\tthis.labels.push(label);\n\n\t\tif (flow) {\n\t\t\tlabel.addTag(flow.get(\"orientation\", \"\"));\n\t\t}\n\t\tnode.children.push(label);\n\t\tdataItem.set(\"label\", label);\n\n\t\tlabel._setDataItem(dataItem);\n\t\trectangle._setDataItem(dataItem);\n\n\t\treturn node;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\t\tconst sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as DataItem<this[\"_dataItemSettings\"]>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst sprite = bullet.get(\"sprite\");\n\t\t\t\tif (sprite) {\n\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\tconst node = dataItem.get(\"node\");\n\t\t\t\t\tconst locationX = bullet.get(\"locationX\", 0.5);\n\t\t\t\t\tconst locationY = bullet.get(\"locationY\", 0.5);\n\t\t\t\t\tif (rectangle) {\n\t\t\t\t\t\tsprite.setAll({ x: node.x() + rectangle.width() * locationX, y: node.y() + rectangle.height() * locationY });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper.disposeDataItem(dataItem);\n\t\tlet rectangle = dataItem.get(\"rectangle\");\n\t\tif (rectangle) {\n\t\t\tthis.rectangles.removeValue(rectangle);\n\t\t\trectangle.dispose();\n\t\t}\n\t}\n\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>){\n\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\tif(rectangle){\n\t\t\trectangle.set(\"fill\", dataItem.get(\"fill\"));\n\t\t\trectangle.set(\"fillPattern\", dataItem.get(\"fillPattern\"));\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\nimport type { FlowNode } from \"./FlowNode\";\nimport type { Sankey, ISankeyDataItem } from \"./Sankey\";\nimport type { ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport type { IOrientationPoint } from \"../../core/util/IPoint\";\n\nimport { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport * as $math from \"../../core/util/Math\";\n\n\nexport interface ISankeyLinkSettings extends IFlowLinkSettings {\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Source node data item.\n\t */\n\ttarget?: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Type of fill to use for links.\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Color_mode} for more info\n\t * @default \"gradient\"\n\t */\n\tfillStyle?: \"solid\" | \"gradient\" | \"source\" | \"target\";\n\n\t/**\n\t * A relative distance from node for link \"elbow\" (bend point).\n\t *\n\t * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/sankey-diagram/#Bend_point} for more info\n\t * @default 0.2\n\t */\n\tcontrolPointDistance?: number;\n\n}\n\nexport interface ISankeyLinkPrivate extends IFlowLinkPrivate {\n\n\t/**\n\t * Link orientation.\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n}\n\nexport class SankeyLink extends FlowLink {\n\tdeclare public _settings: ISankeyLinkSettings;\n\tdeclare public _privateSettings: ISankeyLinkPrivate;\n\n\tpublic static className: string = \"SankeyLink\";\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([SankeyLink.className]);\n\n\tdeclare protected _dataItem: DataItem<ISankeyDataItem> | undefined;\n\n\tdeclare public series: Sankey | undefined;\n\n\tprotected _svgPath: SVGPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n\tprotected _totalLength: number = 0;\n\n\n\tpublic _beforeChanged() {\n\t\tsuper._beforeChanged();\n\n\t\tif (this.isDirty(\"source\")) {\n\t\t\tconst source = this.get(\"source\");\n\t\t\tif (source) {\n\t\t\t\tconst sourceNode = source.get(\"node\");\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\t\tif (this.isDirty(\"target\")) {\n\t\t\tconst target = this.get(\"target\");\n\t\t\tif (target) {\n\t\t\t\tconst targetNode = target.get(\"node\");\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\n\t\t\t\t\tthis.markDirty();\n\t\t\t\t}))\n\t\t\t}\n\t\t}\n\n\t\tif (this.isPrivateDirty(\"orientation\")) {\n\t\t\tconst series = this.series;\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem && series) {\n\t\t\t\tseries._updateLinkColor(dataItem);\n\t\t\t}\n\t\t}\n\n\t\tconst target = this.get(\"target\");\n\t\tconst source = this.get(\"source\");\n\n\t\tlet sourceNode: FlowNode | undefined;\n\t\tlet targetNode: FlowNode | undefined;\n\n\t\tif (source && target) {\n\t\t\tthis._clear = true;\n\t\t\tsourceNode = source.get(\"node\");\n\t\t\ttargetNode = target.get(\"node\");\n\n\t\t\tlet x0 = 0;\n\t\t\tlet x1 = 0;\n\t\t\tlet y0 = 0;\n\t\t\tlet y1 = 0;\n\n\t\t\tlet xt0 = 0;\n\t\t\tlet yt0 = 0;\n\n\t\t\tlet xt1 = 0;\n\t\t\tlet yt1 = 0;\n\n\t\t\tlet xb0 = 0;\n\t\t\tlet xb1 = 0;\n\n\t\t\tlet yb0 = 0;\n\t\t\tlet yb1 = 0;\n\n\t\t\tlet xm0 = 0;\n\t\t\tlet xm1 = 0;\n\n\t\t\tlet ym0 = 0;\n\t\t\tlet ym1 = 0;\n\n\t\t\tlet angle0 = 0;\n\t\t\tlet angle1 = 0;\n\n\n\t\t\tconst dataItem = this.dataItem as DataItem<ISankeyDataItem>;\n\t\t\tif (dataItem) {\n\t\t\t\tconst d3SankeyLink = dataItem.get(\"d3SankeyLink\");\n\t\t\t\tif (d3SankeyLink) {\n\n\t\t\t\t\tlet w = d3SankeyLink.width || 0;\n\n\t\t\t\t\tlet orientation = this.getPrivate(\"orientation\");\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\ty0 = sourceNode.y() + sourceNode.get(\"dy\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\ty1 = targetNode.y() + targetNode.get(\"dy\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tangle0 = 90;\n\t\t\t\t\t\tangle1 = 90;\n\n\t\t\t\t\t\tx0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\tx1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\tx0 += sourceNode.get(\"dx\", 0);\n\t\t\t\t\t\tx1 += targetNode.get(\"dx\", 0);\n\n\t\t\t\t\t\tif (y1 < y0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\tx0 = x1;\n\t\t\t\t\t\t\ty0 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\tx1 = x0;\n\t\t\t\t\t\t\ty1 = y0 + (y1 - y0) / 2;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\txt0 = x0 - w / 2;\n\t\t\t\t\t\tyt0 = y0;\n\n\t\t\t\t\t\txt1 = x1 - w / 2;\n\t\t\t\t\t\tyt1 = y1;\n\n\t\t\t\t\t\txb0 = x0 + w / 2;\n\t\t\t\t\t\txb1 = x1 + w / 2;\n\n\t\t\t\t\t\tyb0 = y0;\n\t\t\t\t\t\tyb1 = y1;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (sourceNode) {\n\t\t\t\t\t\t\tx0 = sourceNode.x() + sourceNode.get(\"dx\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (targetNode) {\n\t\t\t\t\t\t\tx1 = targetNode.x() + targetNode.get(\"dx\", 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ty0 = d3SankeyLink.y0 || 0;\n\t\t\t\t\t\ty1 = d3SankeyLink.y1 || 0;\n\n\t\t\t\t\t\ty0 += sourceNode.get(\"dy\", 0);\n\t\t\t\t\t\ty1 += targetNode.get(\"dy\", 0);\n\n\t\t\t\t\t\tif (x1 < x0) {\n\t\t\t\t\t\t\t[x0, x1] = [x1, x0];\n\t\t\t\t\t\t\t[y0, y1] = [y1, y0];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (source.get(\"unknown\")) {\n\t\t\t\t\t\t\ty0 = y1;\n\t\t\t\t\t\t\tx0 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (target.get(\"unknown\")) {\n\t\t\t\t\t\t\ty1 = y0;\n\t\t\t\t\t\t\tx1 = x0 + (x1 - x0) / 2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\txt0 = x0;\n\t\t\t\t\t\tyt0 = y0 - w / 2;\n\n\t\t\t\t\t\txt1 = x1;\n\t\t\t\t\t\tyt1 = y1 - w / 2;\n\n\t\t\t\t\t\txb0 = x0;\n\t\t\t\t\t\txb1 = x1;\n\n\t\t\t\t\t\tyb0 = y0 + w / 2;\n\t\t\t\t\t\tyb1 = y1 + w / 2;\n\n\t\t\t\t\t\txm0 = x0;\n\t\t\t\t\t\txm1 = x1;\n\n\t\t\t\t\t\tym0 = y0;\n\t\t\t\t\t\tym1 = y1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xt0, 3) == $math.round(xt1, 3)) {\n\t\t\t\t\t\txt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yt0, 3) == $math.round(yt1, 3)) {\n\t\t\t\t\t\tyt1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(xb0, 3) == $math.round(xb1, 3)) {\n\t\t\t\t\t\txb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ($math.round(yb0, 3) == $math.round(yb1, 3)) {\n\t\t\t\t\t\tyb1 += 0.01;\n\t\t\t\t\t}\n\n\t\t\t\t\tlet cpd = this.get(\"controlPointDistance\", 0.2);\n\t\t\t\t\tcpd = Math.min(0.4999, cpd);\n\n\t\t\t\t\tlet kxt0 = xt0 + (xt1 - xt0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyt0 = yt0 + (yt1 - yt0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxt1 = xt1 - (xt1 - xt0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyt1 = yt1 - (yt1 - yt0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet kxm0 = xm0 + (xm1 - xm0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kym0 = ym0 + (ym1 - ym0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxm1 = xm1 - (xm1 - xm0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kym1 = ym1 - (ym1 - ym0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tlet angle = $math.getAngle({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });\n\n\t\t\t\t\tlet dx = (w / $math.cos(angle) - w) / $math.tan(angle) * $math.cos(angle0);\n\t\t\t\t\tlet dy = (w / $math.sin(angle) - w) * $math.tan(angle) * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * $math.cos(angle0);\n\t\t\t\t\tlet kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * $math.sin(angle0);\n\n\t\t\t\t\tlet kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * $math.cos(angle1);\n\t\t\t\t\tlet kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * $math.sin(angle1);\n\n\t\t\t\t\tkxt0 += dx / 2;\n\t\t\t\t\tkyt0 += dy / 2;\n\n\t\t\t\t\tkxt1 += dx / 2;\n\t\t\t\t\tkyt1 += dy / 2;\n\n\t\t\t\t\tif (orientation == \"vertical\") {\n\t\t\t\t\t\tkyt0 = Math.min(yt1, Math.max(yt0 + 1, kyt0));\n\t\t\t\t\t\tkyb0 = Math.min(yb1, Math.max(yb0 + 1, kyb0));\n\n\t\t\t\t\t\tkyt1 = Math.max(yt0, Math.min(yt1 - 1, kyt1));\n\t\t\t\t\t\tkyb1 = Math.max(yb0, Math.min(yb1 - 1, kyb1));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tkxt0 = Math.min(xt1, Math.max(xt0 + 1, kxt0));\n\t\t\t\t\t\tkxb0 = Math.min(xb1, Math.max(xb0 + 1, kxb0));\n\n\t\t\t\t\t\tkxt1 = Math.max(xt0, Math.min(xt1 - 1, kxt1));\n\t\t\t\t\t\tkxb1 = Math.max(xb0, Math.min(xb1 - 1, kxb1));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet segment = [[xt0, yt0, xb0, yb0], [kxt0, kyt0, kxb0, kyb0], [kxt1, kyt1, kxb1, kyb1], [xt1, yt1, xb1, yb1]];\n\n\t\t\t\t\tthis.set(\"draw\", (display) => {\n\t\t\t\t\t\tconst series = this.series!;\n\t\t\t\t\t\tseries._fillGenerator.context(display as any);\n\t\t\t\t\t\tseries._fillGenerator(segment as [number, number][]);\n\t\t\t\t\t})\n\n\t\t\t\t\tlet middleSegment = [[xm0, ym0], [kxm0, kym0], [kxm1, kym1], [xm1, ym1]];\n\n\t\t\t\t\tconst path = this.series!._strokeGenerator(middleSegment as [number, number][]);\n\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tthis._svgPath.setAttribute(\"d\", path);\n\t\t\t\t\t\tthis._totalLength = this._svgPath.getTotalLength();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (this.series && this.dataItem) {\n\t\t\tthis.series._positionBullets(this.dataItem as any);\n\t\t}\n\t}\n\n\tpublic getPoint(location: number): IOrientationPoint {\n\t\tif (this._svgPath) {\n\t\t\tif (this._svgPath.getAttribute(\"d\")) {\n\t\t\t\tlet p0 = this._svgPath.getPointAtLength(location * this._totalLength - 0.1);\n\t\t\t\tlet p1 = this._svgPath.getPointAtLength(location * this._totalLength + 0.1);\n\t\t\t\tlet p = this.toGlobal(this._svgPath.getPointAtLength(location * this._totalLength));\n\t\t\t\treturn { x: p.x, y: p.y, angle: $math.getAngle(p0, p1) };\n\t\t\t}\n\t\t}\n\t\treturn { x: 0, y: 0, angle: 0 }\n\t}\n\n\tpublic _getTooltipPoint(): IPoint {\n\t\treturn this.toLocal(super._getTooltipPoint());\n\t}\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export var slice = Array.prototype.slice;\n","import type { DataItem } from \"../../core/render/Component\";\n\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\nimport { SankeyNodes, ISankeyNodesDataItem } from \"./SankeyNodes\";\nimport { SankeyLink } from \"./SankeyLink\";\nimport { area, line } from \"d3-shape\";\nimport { curveMonotoneXTension } from \"../../core/render/MonotoneXTension\";\nimport { curveMonotoneYTension } from \"../../core/render/MonotoneYTension\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\n\nimport * as $array from \"../../core/util/Array\";\nimport * as $type from \"../../core/util/Type\";\nimport * as $utils from \"../../core/util/Utils\";\nimport * as d3sankey from \"d3-sankey\";\n\nimport type { Bullet } from \"../../core/render/Bullet\";\n\nexport interface ISankeyDataItem extends IFlowDataItem {\n\n\t/**\n\t * Link element.\n\t */\n\tlink: SankeyLink;\n\n\t/**\n\t * Source node data item.\n\t */\n\tsource: DataItem<ISankeyNodesDataItem>;\n\n\t/**\n\t * Target node data item.\n\t */\n\ttarget: DataItem<ISankeyNodesDataItem>;\n\n}\n\nexport interface ISankeySettings extends IFlowSettings {\n\n\t/**\n\t * Orientation of the series.\n\t *\n\t * @default \"horizontal\"\n\t */\n\torientation?: \"horizontal\" | \"vertical\";\n\n\t/**\n\t * Alignment of nodes.\n\t *\n\t * @default \"left\"\n\t */\n\tnodeAlign?: \"left\" | \"right\" | \"justify\" | \"center\"\n\n\t/**\n\t * Tension setting of the link curve.\n\t *\n\t * Accepts values from `0` to `1`.\n\t *\n\t * `1` will result in perfectly straight lines.\n\t *\n\t * @default 0.5\n\t */\n\tlinkTension?: number;\n\n\t/**\n\t * A custom function to use when sorting nodes.\n\t *\n\t * @todo test\n\t * @ignore\n\t */\n\tnodeSort?: (a: d3sankey.SankeyNodeMinimal<{}, {}>, b: d3sankey.SankeyNodeMinimal<{}, {}>) => number | null;\n\n\t/**\n\t * A custom function to use when sorting links.\n\t *\n\t * Use `null` to sort links exactly the way they are presented in data.\n\t *\n\t * @since 5.4.4\n\t */\n\tlinkSort?: null | ((a: d3sankey.SankeyLinkMinimal<{}, {}>, b: d3sankey.SankeyLinkMinimal<{}, {}>) => number | null);\n\n}\n\nexport interface ISankeyPrivate extends IFlowPrivate {\n}\n\nexport interface ISankeyEvents extends IFlowEvents {\n}\n\n/**\n * Sankey series.\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\n * @important\n */\nexport class Sankey extends Flow {\n\n\tpublic static className: string = \"Sankey\";\n\tpublic static classNames: Array<string> = Flow.classNames.concat([Sankey.className]);\n\n\t/**\n\t * List of link elements.\n\t *\n\t * @default new ListTemplate<SankeyLink>\n\t */\n\tpublic readonly links: ListTemplate<SankeyLink> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => SankeyLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\n\t));\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"sankey\", this._settings.orientation || \"horizontal\"]);\n\n\t\tthis._fillGenerator.y0(function(p: number[]) {\n\t\t\treturn p[3];\n\t\t});\n\n\t\tthis._fillGenerator.x0(function(p: number[]) {\n\t\t\treturn p[2];\n\t\t});\n\n\t\tthis._fillGenerator.y1(function(p: number[]) {\n\t\t\treturn p[1];\n\t\t});\n\n\t\tthis._fillGenerator.x1(function(p: number[]) {\n\t\t\treturn p[0];\n\t\t});\n\n\t\tsuper._afterNew();\n\t}\n\n\t/**\n\t * A series representing sankey nodes.\n\t *\n\t * @default SankeyNodes.new()\n\t */\n\tpublic readonly nodes: SankeyNodes = this.children.push(SankeyNodes.new(this._root, {}));\n\n\tdeclare public _settings: ISankeySettings;\n\tdeclare public _privateSettings: ISankeyPrivate;\n\tdeclare public _dataItemSettings: ISankeyDataItem;\n\tdeclare public _events: ISankeyEvents;\n\n\tpublic _d3Sankey = d3sankey.sankey();\n\tpublic _d3Graph: d3sankey.SankeyGraph<{}, {}> | undefined;\n\n\tpublic _fillGenerator = area();\n\tpublic _strokeGenerator = line();\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): SankeyLink {\n\t\tconst source = dataItem.get(\"source\");\n\t\tconst target = dataItem.get(\"target\");\n\n\t\tconst link = this.links.make();\n\n\t\tif (source.get(\"unknown\")) {\n\t\t\tlink.addTag(\"source\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tif (target.get(\"unknown\")) {\n\t\t\tlink.addTag(\"target\");\n\t\t\tlink.addTag(\"unknown\");\n\t\t}\n\n\t\tthis.linksContainer.children.push(link);\n\t\tlink._setDataItem(dataItem);\n\t\tlink.set(\"source\", source);\n\t\tlink.set(\"target\", target);\n\t\tlink.series = this;\n\n\t\tthis.links.push(link);\n\n\t\treturn link;\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateSankey() {\n\t\tconst d3Graph = this._d3Graph;\n\t\tif (d3Graph) {\n\t\t\tthis._d3Sankey.update(d3Graph);\n\n\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\tlink.markDirty();\n\t\t\t})\n\t\t}\n\t}\n\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\n\t\tsuper._updateLinkColor(dataItem);\n\t\tconst orientation = this.get(\"orientation\");\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\n\n\t\tif (orientation == \"vertical\") {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (fillGradient) {\n\t\t\t\tfillGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t\tif (strokeGradient) {\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprotected _getBulletLocation(bullet: Bullet): number {\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\treturn bullet.get(\"locationY\", 0);\n\t\t}\n\t\telse {\n\t\t\treturn bullet.get(\"locationX\", 0);\n\t\t}\n\t}\n\n\tpublic _prepareChildren() {\n\t\tsuper._prepareChildren();\n\t\tlet vertical = false;\n\t\tif (this.get(\"orientation\") == \"vertical\") {\n\t\t\tvertical = true;\n\t\t}\n\n\t\tif (this.isDirty(\"orientation\") || this.isDirty(\"linkTension\")) {\n\t\t\tconst linkTension = this.get(\"linkTension\", 0.5);\n\t\t\tif (vertical) {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneYTension(linkTension));\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis._fillGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t\tthis._strokeGenerator.curve(curveMonotoneXTension(linkTension));\n\t\t\t}\n\t\t}\n\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"nodePadding\") || this.isDirty(\"nodeWidth\") || this.isDirty(\"nodeAlign\") || this.isDirty(\"nodeSort\") || this.isDirty(\"orientation\") || this.isDirty(\"linkTension\") || this.isDirty(\"linkSort\")) {\n\t\t\tif (this._nodesData.length > 0) {\n\t\t\t\tconst d3Sankey = this._d3Sankey;\n\t\t\t\tlet w = this.innerWidth();\n\t\t\t\tlet h = this.innerHeight();\n\n\t\t\t\tif (vertical) {\n\t\t\t\t\t[w, h] = [h, w];\n\t\t\t\t}\n\n\t\t\t\td3Sankey.size([w, h]);\n\t\t\t\td3Sankey.nodePadding(this.get(\"nodePadding\", 10));\n\t\t\t\td3Sankey.nodeWidth(this.get(\"nodeWidth\", 10));\n\t\t\t\td3Sankey.nodeSort(this.get(\"nodeSort\", null) as any);\n\t\t\t\t(d3Sankey as any).linkSort(this.get(\"linkSort\") as any);\n\n\t\t\t\tswitch (this.get(\"nodeAlign\")) {\n\t\t\t\t\tcase \"right\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyRight);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"justify\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyJustify);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"center\":\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyCenter);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\td3Sankey.nodeAlign(d3sankey.sankeyLeft);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tthis._d3Graph = d3Sankey({ nodes: this._nodesData, links: this._linksData });\n\n\t\t\t\t$array.each(this.dataItems, (dataItem) => {\n\t\t\t\t\tconst link = dataItem.get(\"link\");\n\t\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\n\t\t\t\t\tlink.markDirty();\n\t\t\t\t})\n\n\t\t\t\tconst d3Graph = this._d3Graph;\n\n\t\t\t\tif (d3Graph) {\n\t\t\t\t\tconst nodes = d3Graph.nodes;\n\n\t\t\t\t\t$array.each(nodes, (d3SankeyNode) => {\n\t\t\t\t\t\tconst dataItem = (d3SankeyNode as any).dataItem as DataItem<ISankeyNodesDataItem>;\n\t\t\t\t\t\tconst node = dataItem.get(\"node\");\n\n\t\t\t\t\t\tlet x0: number | undefined;\n\t\t\t\t\t\tlet x1: number | undefined;\n\t\t\t\t\t\tlet y0: number | undefined;\n\t\t\t\t\t\tlet y1: number | undefined;\n\n\t\t\t\t\t\tif (vertical) {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.y1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.x1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tx0 = d3SankeyNode.x0;\n\t\t\t\t\t\t\tx1 = d3SankeyNode.x1;\n\t\t\t\t\t\t\ty0 = d3SankeyNode.y0;\n\t\t\t\t\t\t\ty1 = d3SankeyNode.y1;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ($type.isNumber(x0) && $type.isNumber(x1) && $type.isNumber(y0) && $type.isNumber(y1)) {\n\t\t\t\t\t\t\tnode.setAll({ x: x0, y: y0, width: x1 - x0, height: y1 - y0 });\n\n\t\t\t\t\t\t\tconst rectangle = dataItem.get(\"rectangle\");\n\t\t\t\t\t\t\trectangle.setAll({ width: x1 - x0, height: y1 - y0 });\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","import type { DataItem } from \"../../core/render/Component\";\r\nimport type { FlowNode } from \"./FlowNode\";\r\nimport type { ArcDiagram } from \"./ArcDiagram\";\r\n\r\nimport { FlowNodes, IFlowNodesSettings, IFlowNodesDataItem, IFlowNodesPrivate, IFlowNodesEvents } from \"./FlowNodes\";\r\nimport { Circle } from \"../../core/render/Circle\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { Label } from \"../../core/render/Label\";\r\n\r\nexport interface IArcDiagramNodesDataItem extends IFlowNodesDataItem {\r\n\r\n\t/**\r\n\t * Node [[Circle]] element.\r\n\t */\r\n\tcircle: Circle;\r\n\r\n\t/**\r\n\t * Node label element.\r\n\t */\r\n\tlabel: Label;\r\n}\r\n\r\nexport interface IArcDiagramNodesSettings extends IFlowNodesSettings { };\r\n\r\nexport interface IArcDiagramNodesPrivate extends IFlowNodesPrivate { };\r\n\r\nexport interface IArcDiagramNodesEvents extends IFlowNodesEvents { };\r\n\r\n/**\r\n * Holds instances of nodes for a [[ArcDiagram]] series.\r\n */\r\nexport class ArcDiagramNodes extends FlowNodes {\r\n\tpublic static className: string = \"ArcDiagramNodes\";\r\n\tpublic static classNames: Array<string> = FlowNodes.classNames.concat([ArcDiagramNodes.className]);\r\n\r\n\t/**\r\n\t * List of label elements.\r\n\t *\r\n\t * @default new ListTemplate<Label>\r\n\t */\r\n\tpublic readonly labels: ListTemplate<Label> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Label._new(this._root, {}, [this.labels.template])\r\n\t));\r\n\r\n\tdeclare public _settings: IArcDiagramNodesSettings;\r\n\tdeclare public _privateSettings: IArcDiagramNodesPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramNodesDataItem;\r\n\tdeclare public _events: IArcDiagramNodesEvents;\r\n\r\n\t/**\r\n\t * Related [[ArcDiagram]] series.\r\n\t */\r\n\tpublic flow: ArcDiagram | undefined;\r\n\r\n\tprotected _dAngle: number = 0;\r\n\r\n\t/**\r\n\t * List of slice elements.\r\n\t *\r\n\t * @default new ListTemplate<Slice>\r\n\t */\r\n\tpublic readonly circles: ListTemplate<Circle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Circle._new(this._root, { themeTags: [\"shape\"] }, [this.circles.template])\r\n\t));\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeNode(dataItem: DataItem<this[\"_dataItemSettings\"]>): FlowNode {\r\n\t\tconst node = super.makeNode(dataItem, \"ArcDiagram\");\r\n\r\n\t\tconst circle = node.children.insertIndex(0, this.circles.make());\r\n\t\tdataItem.set(\"circle\", circle);\r\n\t\tcircle._setSoft(\"fill\", dataItem.get(\"fill\"));\r\n\t\tcircle._setSoft(\"fillPattern\", dataItem.get(\"fillPattern\"));\r\n\r\n\t\tconst label = this.labels.make();\r\n\t\tthis.labels.push(label);\r\n\t\tlabel.addTag(\"flow\");\r\n\t\tlabel.addTag(\"arcdiagram\");\r\n\t\tlabel.addTag(\"node\");\r\n\r\n\t\tnode.children.push(label);\r\n\t\tdataItem.set(\"label\", label);\r\n\r\n\t\tlabel._setDataItem(dataItem);\r\n\t\tcircle._setDataItem(dataItem);\r\n\r\n\t\treturn node;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic disposeDataItem(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper.disposeDataItem(dataItem);\r\n\t\tlet circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tthis.circles.removeValue(circle);\r\n\t\t\tcircle.dispose();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateNodeColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tconst circle = dataItem.get(\"circle\");\r\n\t\tif (circle) {\r\n\t\t\tcircle.set(\"fill\", dataItem.get(\"fill\"));\r\n\t\t\tcircle.set(\"fillPattern\", dataItem.get(\"fillPattern\"));\r\n\t\t}\r\n\t}\r\n}\r\n","import { FlowLink, IFlowLinkPrivate, IFlowLinkSettings } from \"./FlowLink\";\r\nimport type { DataItem } from \"../../core/render/Component\";\r\nimport type { IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport type { ArcDiagram, IArcDiagramDataItem } from \"./ArcDiagram\";\r\nimport type { IOrientationPoint, IPoint } from \"../../core/util/IPoint\";\r\nimport * as $math from \"../../core/util/Math\";\r\n\r\n\r\nexport interface IArcDiagramLinkSettings extends IFlowLinkSettings {\r\n\r\n\t/**\r\n\t * Source data item.\r\n\t */\r\n\tsource?: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * target data item.\r\n\t */\r\n\ttarget?: DataItem<IArcDiagramNodesDataItem>;\r\n}\r\n\r\nexport interface IArcDiagramLinkPrivate extends IFlowLinkPrivate {\r\n\t/**\r\n\t * Link orientation.\r\n\t */\r\n\torientation?: \"horizontal\" | \"vertical\";\r\n}\r\n\r\n/**\r\n * A link element used in [[ArcDiagram]] chart.\r\n */\r\nexport class ArcDiagramLink extends FlowLink {\r\n\r\n\tpublic _p0: IPoint | undefined;\r\n\tpublic _p1: IPoint | undefined;\r\n\tpublic _radius: number = 0;\r\n\r\n\tdeclare public _settings: IArcDiagramLinkSettings;\r\n\tdeclare public _privateSettings: IArcDiagramLinkPrivate;\r\n\r\n\tpublic static className: string = \"ArcDiagramLink\";\r\n\tpublic static classNames: Array<string> = FlowLink.classNames.concat([ArcDiagramLink.className]);\r\n\r\n\tdeclare protected _dataItem: DataItem<IArcDiagramDataItem> | undefined;\r\n\r\n\tdeclare public series: ArcDiagram | undefined;\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"source\")) {\r\n\t\t\tconst source = this.get(\"source\");\r\n\t\t\tif (source) {\r\n\t\t\t\tconst sourceNode = source.get(\"node\");\r\n\t\t\t\tthis._disposers.push(sourceNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.isDirty(\"target\")) {\r\n\t\t\tconst target = this.get(\"target\");\r\n\t\t\tif (target) {\r\n\t\t\t\tconst targetNode = target.get(\"node\");\r\n\t\t\t\tthis._disposers.push(targetNode.events.on(\"positionchanged\", () => {\r\n\t\t\t\t\tthis._markDirtyKey(\"stroke\");\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.isPrivateDirty(\"orientation\")) {\r\n\t\t\tconst series = this.series;\r\n\t\t\tconst dataItem = this.dataItem as DataItem<IArcDiagramDataItem>;\r\n\t\t\tif (dataItem && series) {\r\n\t\t\t\tseries._updateLinkColor(dataItem);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.series && this.dataItem) {\r\n\t\t\tthis.series._positionBullets(this.dataItem as any);\r\n\t\t}\r\n\r\n\t\tif (this.get(\"strokeStyle\") == \"gradient\") {\r\n\t\t\tthis.set(\"isMeasured\", true);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis.set(\"isMeasured\", false);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\r\n\t\tif (this._clear) {\r\n\t\t\tthis._draw();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _draw() {\r\n\t\tconst target = this.get(\"target\");\r\n\t\tconst source = this.get(\"source\");\r\n\r\n\t\tif (source && target) {\r\n\t\t\tlet sourceNode = source.get(\"node\");\r\n\t\t\tlet targetNode = target.get(\"node\");\r\n\r\n\t\t\tconst x0 = sourceNode.x();\r\n\t\t\tconst y0 = sourceNode.y();\r\n\r\n\t\t\tconst x1 = targetNode.x();\r\n\t\t\tconst y1 = targetNode.y();\r\n\r\n\t\t\tthis._p0 = { x: x0, y: y0 };\r\n\t\t\tthis._p1 = { x: x1, y: y1 };\r\n\r\n\t\t\tlet radius = 0;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tradius = (y1 - y0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (y0 > y1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._display.arc(x0, y0 + radius, radius * d, -Math.PI / 2, Math.PI / 2);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tradius = (x1 - x0) / 2;\r\n\t\t\t\tlet d = 1;\r\n\t\t\t\tif (x0 > x1) {\r\n\t\t\t\t\td = -1;\r\n\t\t\t\t}\r\n\t\t\t\tthis._display.arc(x0 + radius, y0, radius * d, -Math.PI, 0);\r\n\t\t\t}\r\n\t\t\tthis._radius = radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tpublic getPoint(location: number): IOrientationPoint {\r\n\t\tif (this._p0 && this._p1) {\r\n\t\t\tconst radius = this._radius;\r\n\r\n\t\t\tif (this.getPrivate(\"orientation\") == \"vertical\") {\r\n\t\t\t\tlet angle = -90 + 180 * location;\r\n\t\t\t\treturn { y: this._p0.y + radius + radius * $math.sin(angle), x: radius * $math.cos(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlet angle = 180 + 180 * location;\r\n\t\t\t\treturn { x: this._p0.x + radius + radius * $math.cos(angle), y: radius * $math.sin(angle), angle: angle + 90 };\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn { x: 0, y: 0, angle: 0 };\r\n\t}\r\n}\r\n","import type { DataItem } from \"../../core/render/Component\";\r\n\r\nimport { Flow, IFlowSettings, IFlowDataItem, IFlowPrivate, IFlowEvents } from \"./Flow\";\r\nimport { Template } from \"../../core/util/Template\";\r\nimport { ListTemplate } from \"../../core/util/List\";\r\nimport { ArcDiagramNodes, IArcDiagramNodesDataItem } from \"./ArcDiagramNodes\";\r\nimport { ArcDiagramLink } from \"./ArcDiagramLink\";\r\nimport type { Easing } from \"../../core/util/Ease\";\r\n\r\nimport * as $utils from \"../../core/util/Utils\";\r\nimport * as $array from \"../../core/util/Array\";\r\n\r\n\r\n\r\nexport interface IArcDiagramDataItem extends IFlowDataItem {\r\n\r\n\t/**\r\n\t * A link element.\r\n\t */\r\n\tlink: ArcDiagramLink;\r\n\r\n\t/**\r\n\t * Source node data item.\r\n\t */\r\n\tsource: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n\t/**\r\n\t * Target node data item.\r\n\t */\r\n\ttarget: DataItem<IArcDiagramNodesDataItem>;\r\n\r\n}\r\n\r\nexport interface IArcDiagramSettings extends IFlowSettings {\r\n\t/**\r\n\t * Orientation of the series. This setting can not be changed after the chart is initialized.\r\n\t *\r\n\t * @default \"horizontal\"\r\n\t */\r\n\torientation: \"horizontal\" | \"vertical\";\r\n\r\n\t/**\r\n\t * Minimum radius of a nodes circle.\r\n\t * Maximum radius is computed based on available space\r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number;\r\n\r\n\t/**\r\n\t * Defines Which value should be used when calculating circle radius. Use \"none\" if you want all circles to be the same.\r\n\t * @martynas: gal cia reik naudot radiusField, biski no idea.\r\n\t * @default \"sum\"\r\n\t */\r\n\tradiusKey?: \"sum\" | \"sumIncoming\" | \"sumOutgoing\" | \"none\";\r\n\r\n\t/**\r\n\t * Duration for all drill animations in milliseconds.\r\n\t */\r\n\tanimationDuration?: number;\r\n\r\n\t/**\r\n\t * An easing function to use for drill animations.\r\n\t */\r\n\tanimationEasing?: Easing;\r\n}\r\n\r\nexport interface IArcDiagramPrivate extends IFlowPrivate {\r\n}\r\n\r\nexport interface IArcDiagramEvents extends IFlowEvents {\r\n}\r\n\r\n/**\r\n * Regular ArcDiagram series.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/flow-charts/} for more information\r\n * @important\r\n */\r\nexport class ArcDiagram extends Flow {\r\n\r\n\tpublic static className: string = \"ArcDiagram\";\r\n\tpublic static classNames: Array<string> = Flow.classNames.concat([ArcDiagram.className]);\r\n\r\n\t/**\r\n\t * List of link elements.\r\n\t *\r\n\t * @default new ListTemplate<ArcDiagramLink>\r\n\t */\r\n\tpublic readonly links: ListTemplate<ArcDiagramLink> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => ArcDiagramLink._new(this._root, { themeTags: [\"link\", \"shape\"] }, [this.links.template])\r\n\t));\r\n\r\n\t/**\r\n\t * A series for all ArcDiagram nodes.\r\n\t *\r\n\t * @default ArcDiagramNodes.new()\r\n\t */\r\n\tpublic readonly nodes: ArcDiagramNodes = this.children.push(ArcDiagramNodes.new(this._root, {}));\r\n\r\n\tdeclare public _settings: IArcDiagramSettings;\r\n\tdeclare public _privateSettings: IArcDiagramPrivate;\r\n\tdeclare public _dataItemSettings: IArcDiagramDataItem;\r\n\tdeclare public _events: IArcDiagramEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"arcdiagram\", this._settings.orientation || \"horizontal\"]);\r\n\r\n\t\tsuper._afterNew();\r\n\t\tthis.nodes.children.push(this.bulletsContainer);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeLink(dataItem: DataItem<this[\"_dataItemSettings\"]>): ArcDiagramLink {\r\n\t\tconst link = this.nodes.children.moveValue(this.links.make(), 0);\r\n\t\tthis.links.push(link);\r\n\t\tlink._setDataItem(dataItem);\r\n\t\tlink.set(\"source\", dataItem.get(\"source\"));\r\n\t\tlink.set(\"target\", dataItem.get(\"target\"));\r\n\t\tlink.series = this;\r\n\t\treturn link;\r\n\t}\r\n\r\n\tpublic _prepareChildren() {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tif (this._valuesDirty || this._sizeDirty || this.isDirty(\"orientation\")) {\r\n\t\t\tlet width = 1;\r\n\t\t\tconst orientation = this.get(\"orientation\");\r\n\r\n\t\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\t\tconst link = dataItem.get(\"link\");\r\n\t\t\t\tlink.setPrivate(\"orientation\", this.get(\"orientation\"));\r\n\t\t\t})\r\n\r\n\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\twidth = this.innerHeight();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twidth = this.innerWidth();\r\n\t\t\t}\r\n\r\n\t\t\tlet sum = 0;\r\n\t\t\tlet low = Infinity;\r\n\t\t\tlet radiusKey = this.get(\"radiusKey\");\r\n\r\n\t\t\tif (radiusKey != \"none\") {\r\n\t\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\t\t\t\t\tsum += value;\r\n\t\t\t\t\tlow = Math.min(low, value);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tconst count = this.nodes.dataItems.length;\r\n\t\t\tconst nodePadding = this.get(\"nodePadding\", 10);\r\n\t\t\tconst minRadius = this.get(\"minRadius\", 5);\r\n\r\n\t\t\twidth = width - count * (nodePadding + minRadius * 2);\r\n\r\n\t\t\tif (width <= 0) {\r\n\t\t\t\twidth = 0;\r\n\t\t\t}\r\n\r\n\t\t\tlet sumNoLow = sum - count * low;\r\n\t\t\tlet c = width / sumNoLow;\r\n\r\n\t\t\tlet prevCoord = 0;\r\n\t\t\tconst animationDuration = this.get(\"animationDuration\", 0);\r\n\t\t\tconst animationEasing = this.get(\"animationEasing\");\r\n\r\n\t\t\t$array.each(this.nodes.dataItems, (dataItem) => {\r\n\t\t\t\tlet value = dataItem.get(radiusKey + \"Working\" as any);\r\n\r\n\t\t\t\tconst node = dataItem.get(\"node\");\r\n\t\t\t\tlet radius = minRadius + c * (value - low) / 2;\r\n\r\n\t\t\t\tif (radiusKey == \"none\") {\r\n\t\t\t\t\tradius = minRadius + width / count / 2;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (orientation == \"vertical\") {\r\n\t\t\t\t\tnode.set(\"x\", 0);\r\n\r\n\t\t\t\t\tconst y = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.y() == 0) {\r\n\t\t\t\t\t\tnode.set(\"y\", y);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"y\", to: y, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.set(\"y\", 0);\r\n\t\t\t\t\tconst x = prevCoord + nodePadding + radius;\r\n\t\t\t\t\tif (node.x() == 0) {\r\n\t\t\t\t\t\tnode.set(\"x\", x);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tnode.animate({ key: \"x\", to: x, duration: animationDuration, easing: animationEasing });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tprevCoord = prevCoord + nodePadding + radius * 2;\r\n\t\t\t\tdataItem.get(\"circle\").set(\"radius\", radius);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _updateLinkColor(dataItem: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tsuper._updateLinkColor(dataItem);\r\n\t\tconst orientation = this.get(\"orientation\");\r\n\t\tconst fillGradient = dataItem.get(\"link\")._fillGradient;\r\n\t\tconst strokeGradient = dataItem.get(\"link\")._strokeGradient;\r\n\r\n\t\tif (orientation == \"vertical\") {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 90);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (fillGradient) {\r\n\t\t\t\tfillGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t\tif (strokeGradient) {\r\n\t\t\t\tstrokeGradient.set(\"rotation\", 0);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}